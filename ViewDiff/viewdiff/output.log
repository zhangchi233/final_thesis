The following values were not passed to `accelerate launch` and had defaults used instead:
	`--num_processes` was set to a value of `1`
	`--num_machines` was set to a value of `1`
	`--mixed_precision` was set to a value of `'no'`
	`--dynamo_backend` was set to a value of `'no'`
To avoid this warning pass in values for each of the problematic parameters or run `accelerate config`.
/root/autodl-tmp/instructpix2pix/lib/python3.8/site-packages/tyro/_resolver.py:305: UserWarning: <class 'float'> does not match any type in Union: [<class 'int'>, <class 'NoneType'>]
  warnings.warn(
/root/autodl-tmp/instructpix2pix/lib/python3.8/site-packages/tyro/_fields.py:826: UserWarning: Mutable type <class 'io_util.SaveConfig'> is used as a default value for `save`. This is dangerous! Consider using `dataclasses.field(default_factory=...)` or marking <class 'io_util.SaveConfig'> as frozen.
  warnings.warn(
04/12/2024 10:09:31 - INFO - __main__ - Distributed environment: NO
Num processes: 1
Process index: 0
Local process index: 0
Device: cuda

Mixed precision type: bf16

{'variance_type', 'timestep_spacing', 'clip_sample_range'} was not found in config. Values will be initialized to default values.
{'scaling_factor', 'force_upcast'} was not found in config. Values will be initialized to default values.
{'attention_type', 'time_embedding_dim', 'class_embeddings_concat', 'transformer_layers_per_block', 'encoder_hid_dim', 'time_embedding_act_fn', 'time_embedding_type', 'addition_embed_type_num_heads', 'mid_block_only_cross_attention', 'time_cond_proj_dim', 'dropout', 'conv_in_kernel', 'timestep_post_act', 'resnet_out_scale_factor', 'conv_out_kernel', 'projection_class_embeddings_input_dim', 'num_attention_heads', 'addition_time_embed_dim', 'resnet_skip_time_act', 'cross_attention_norm', 'addition_embed_type', 'encoder_hid_dim_type'} was not found in config. Values will be initialized to default values.
04/12/2024 10:09:33 - INFO - __main__ - Initializing the StableDiffusion3D UNet from the pretrained UNet.
04/12/2024 10:09:55 - INFO - __main__ - ***** Running training *****
04/12/2024 10:09:55 - INFO - __main__ -   Num examples = 2027
04/12/2024 10:09:55 - INFO - __main__ -   Num Epochs = 50
04/12/2024 10:09:55 - INFO - __main__ -   Instantaneous batch size per device = 4
04/12/2024 10:09:55 - INFO - __main__ -   Total train batch size (w. parallel, distributed & accumulation) = 4
04/12/2024 10:09:55 - INFO - __main__ -   Gradient Accumulation steps = 1
04/12/2024 10:09:55 - INFO - __main__ -   Total optimization steps = 25350
04/12/2024 10:09:55 - INFO - accelerate.accelerator - Loading states from /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-500/
Some weights of the model checkpoint were not used when initializing UNet2DConditionCrossFrameInExistingAttnModel: 
 ['down_blocks.0.attentions.0.transformer_blocks.0.attn1.processor.temb_proj.0.bias, down_blocks.0.attentions.0.transformer_blocks.0.attn1.processor.temb_proj.0.weight, down_blocks.0.attentions.0.transformer_blocks.0.attn1.processor.temb_proj.2.bias, down_blocks.0.attentions.0.transformer_blocks.0.attn1.processor.temb_proj.2.weight, down_blocks.0.attentions.0.transformer_blocks.0.attn1.processor.to_k_lora.down.weight, down_blocks.0.attentions.0.transformer_blocks.0.attn1.processor.to_k_lora.up.weight, down_blocks.0.attentions.0.transformer_blocks.0.attn1.processor.to_out_lora.down.weight, down_blocks.0.attentions.0.transformer_blocks.0.attn1.processor.to_out_lora.up.weight, down_blocks.0.attentions.0.transformer_blocks.0.attn1.processor.to_q_lora.down.weight, down_blocks.0.attentions.0.transformer_blocks.0.attn1.processor.to_q_lora.up.weight, down_blocks.0.attentions.0.transformer_blocks.0.attn1.processor.to_v_lora.down.weight, down_blocks.0.attentions.0.transformer_blocks.0.attn1.processor.to_v_lora.up.weight, down_blocks.0.attentions.0.transformer_blocks.0.attn2.processor.to_k_lora.down.weight, down_blocks.0.attentions.0.transformer_blocks.0.attn2.processor.to_k_lora.up.weight, down_blocks.0.attentions.0.transformer_blocks.0.attn2.processor.to_out_lora.down.weight, down_blocks.0.attentions.0.transformer_blocks.0.attn2.processor.to_out_lora.up.weight, down_blocks.0.attentions.0.transformer_blocks.0.attn2.processor.to_q_lora.down.weight, down_blocks.0.attentions.0.transformer_blocks.0.attn2.processor.to_q_lora.up.weight, down_blocks.0.attentions.0.transformer_blocks.0.attn2.processor.to_v_lora.down.weight, down_blocks.0.attentions.0.transformer_blocks.0.attn2.processor.to_v_lora.up.weight, down_blocks.0.attentions.1.transformer_blocks.0.attn1.processor.temb_proj.0.bias, down_blocks.0.attentions.1.transformer_blocks.0.attn1.processor.temb_proj.0.weight, down_blocks.0.attentions.1.transformer_blocks.0.attn1.processor.temb_proj.2.bias, down_blocks.0.attentions.1.transformer_blocks.0.attn1.processor.temb_proj.2.weight, down_blocks.0.attentions.1.transformer_blocks.0.attn1.processor.to_k_lora.down.weight, down_blocks.0.attentions.1.transformer_blocks.0.attn1.processor.to_k_lora.up.weight, down_blocks.0.attentions.1.transformer_blocks.0.attn1.processor.to_out_lora.down.weight, down_blocks.0.attentions.1.transformer_blocks.0.attn1.processor.to_out_lora.up.weight, down_blocks.0.attentions.1.transformer_blocks.0.attn1.processor.to_q_lora.down.weight, down_blocks.0.attentions.1.transformer_blocks.0.attn1.processor.to_q_lora.up.weight, down_blocks.0.attentions.1.transformer_blocks.0.attn1.processor.to_v_lora.down.weight, down_blocks.0.attentions.1.transformer_blocks.0.attn1.processor.to_v_lora.up.weight, down_blocks.0.attentions.1.transformer_blocks.0.attn2.processor.to_k_lora.down.weight, down_blocks.0.attentions.1.transformer_blocks.0.attn2.processor.to_k_lora.up.weight, down_blocks.0.attentions.1.transformer_blocks.0.attn2.processor.to_out_lora.down.weight, down_blocks.0.attentions.1.transformer_blocks.0.attn2.processor.to_out_lora.up.weight, down_blocks.0.attentions.1.transformer_blocks.0.attn2.processor.to_q_lora.down.weight, down_blocks.0.attentions.1.transformer_blocks.0.attn2.processor.to_q_lora.up.weight, down_blocks.0.attentions.1.transformer_blocks.0.attn2.processor.to_v_lora.down.weight, down_blocks.0.attentions.1.transformer_blocks.0.attn2.processor.to_v_lora.up.weight, down_blocks.1.attentions.0.transformer_blocks.0.attn1.processor.temb_proj.0.bias, down_blocks.1.attentions.0.transformer_blocks.0.attn1.processor.temb_proj.0.weight, down_blocks.1.attentions.0.transformer_blocks.0.attn1.processor.temb_proj.2.bias, down_blocks.1.attentions.0.transformer_blocks.0.attn1.processor.temb_proj.2.weight, down_blocks.1.attentions.0.transformer_blocks.0.attn1.processor.to_k_lora.down.weight, down_blocks.1.attentions.0.transformer_blocks.0.attn1.processor.to_k_lora.up.weight, down_blocks.1.attentions.0.transformer_blocks.0.attn1.processor.to_out_lora.down.weight, down_blocks.1.attentions.0.transformer_blocks.0.attn1.processor.to_out_lora.up.weight, down_blocks.1.attentions.0.transformer_blocks.0.attn1.processor.to_q_lora.down.weight, down_blocks.1.attentions.0.transformer_blocks.0.attn1.processor.to_q_lora.up.weight, down_blocks.1.attentions.0.transformer_blocks.0.attn1.processor.to_v_lora.down.weight, down_blocks.1.attentions.0.transformer_blocks.0.attn1.processor.to_v_lora.up.weight, down_blocks.1.attentions.0.transformer_blocks.0.attn2.processor.to_k_lora.down.weight, down_blocks.1.attentions.0.transformer_blocks.0.attn2.processor.to_k_lora.up.weight, down_blocks.1.attentions.0.transformer_blocks.0.attn2.processor.to_out_lora.down.weight, down_blocks.1.attentions.0.transformer_blocks.0.attn2.processor.to_out_lora.up.weight, down_blocks.1.attentions.0.transformer_blocks.0.attn2.processor.to_q_lora.down.weight, down_blocks.1.attentions.0.transformer_blocks.0.attn2.processor.to_q_lora.up.weight, down_blocks.1.attentions.0.transformer_blocks.0.attn2.processor.to_v_lora.down.weight, down_blocks.1.attentions.0.transformer_blocks.0.attn2.processor.to_v_lora.up.weight, down_blocks.1.attentions.1.transformer_blocks.0.attn1.processor.temb_proj.0.bias, down_blocks.1.attentions.1.transformer_blocks.0.attn1.processor.temb_proj.0.weight, down_blocks.1.attentions.1.transformer_blocks.0.attn1.processor.temb_proj.2.bias, down_blocks.1.attentions.1.transformer_blocks.0.attn1.processor.temb_proj.2.weight, down_blocks.1.attentions.1.transformer_blocks.0.attn1.processor.to_k_lora.down.weight, down_blocks.1.attentions.1.transformer_blocks.0.attn1.processor.to_k_lora.up.weight, down_blocks.1.attentions.1.transformer_blocks.0.attn1.processor.to_out_lora.down.weight, down_blocks.1.attentions.1.transformer_blocks.0.attn1.processor.to_out_lora.up.weight, down_blocks.1.attentions.1.transformer_blocks.0.attn1.processor.to_q_lora.down.weight, down_blocks.1.attentions.1.transformer_blocks.0.attn1.processor.to_q_lora.up.weight, down_blocks.1.attentions.1.transformer_blocks.0.attn1.processor.to_v_lora.down.weight, down_blocks.1.attentions.1.transformer_blocks.0.attn1.processor.to_v_lora.up.weight, down_blocks.1.attentions.1.transformer_blocks.0.attn2.processor.to_k_lora.down.weight, down_blocks.1.attentions.1.transformer_blocks.0.attn2.processor.to_k_lora.up.weight, down_blocks.1.attentions.1.transformer_blocks.0.attn2.processor.to_out_lora.down.weight, down_blocks.1.attentions.1.transformer_blocks.0.attn2.processor.to_out_lora.up.weight, down_blocks.1.attentions.1.transformer_blocks.0.attn2.processor.to_q_lora.down.weight, down_blocks.1.attentions.1.transformer_blocks.0.attn2.processor.to_q_lora.up.weight, down_blocks.1.attentions.1.transformer_blocks.0.attn2.processor.to_v_lora.down.weight, down_blocks.1.attentions.1.transformer_blocks.0.attn2.processor.to_v_lora.up.weight, down_blocks.2.attentions.0.transformer_blocks.0.attn1.processor.temb_proj.0.bias, down_blocks.2.attentions.0.transformer_blocks.0.attn1.processor.temb_proj.0.weight, down_blocks.2.attentions.0.transformer_blocks.0.attn1.processor.temb_proj.2.bias, down_blocks.2.attentions.0.transformer_blocks.0.attn1.processor.temb_proj.2.weight, down_blocks.2.attentions.0.transformer_blocks.0.attn1.processor.to_k_lora.down.weight, down_blocks.2.attentions.0.transformer_blocks.0.attn1.processor.to_k_lora.up.weight, down_blocks.2.attentions.0.transformer_blocks.0.attn1.processor.to_out_lora.down.weight, down_blocks.2.attentions.0.transformer_blocks.0.attn1.processor.to_out_lora.up.weight, down_blocks.2.attentions.0.transformer_blocks.0.attn1.processor.to_q_lora.down.weight, down_blocks.2.attentions.0.transformer_blocks.0.attn1.processor.to_q_lora.up.weight, down_blocks.2.attentions.0.transformer_blocks.0.attn1.processor.to_v_lora.down.weight, down_blocks.2.attentions.0.transformer_blocks.0.attn1.processor.to_v_lora.up.weight, down_blocks.2.attentions.0.transformer_blocks.0.attn2.processor.to_k_lora.down.weight, down_blocks.2.attentions.0.transformer_blocks.0.attn2.processor.to_k_lora.up.weight, down_blocks.2.attentions.0.transformer_blocks.0.attn2.processor.to_out_lora.down.weight, down_blocks.2.attentions.0.transformer_blocks.0.attn2.processor.to_out_lora.up.weight, down_blocks.2.attentions.0.transformer_blocks.0.attn2.processor.to_q_lora.down.weight, down_blocks.2.attentions.0.transformer_blocks.0.attn2.processor.to_q_lora.up.weight, down_blocks.2.attentions.0.transformer_blocks.0.attn2.processor.to_v_lora.down.weight, down_blocks.2.attentions.0.transformer_blocks.0.attn2.processor.to_v_lora.up.weight, down_blocks.2.attentions.1.transformer_blocks.0.attn1.processor.temb_proj.0.bias, down_blocks.2.attentions.1.transformer_blocks.0.attn1.processor.temb_proj.0.weight, down_blocks.2.attentions.1.transformer_blocks.0.attn1.processor.temb_proj.2.bias, down_blocks.2.attentions.1.transformer_blocks.0.attn1.processor.temb_proj.2.weight, down_blocks.2.attentions.1.transformer_blocks.0.attn1.processor.to_k_lora.down.weight, down_blocks.2.attentions.1.transformer_blocks.0.attn1.processor.to_k_lora.up.weight, down_blocks.2.attentions.1.transformer_blocks.0.attn1.processor.to_out_lora.down.weight, down_blocks.2.attentions.1.transformer_blocks.0.attn1.processor.to_out_lora.up.weight, down_blocks.2.attentions.1.transformer_blocks.0.attn1.processor.to_q_lora.down.weight, down_blocks.2.attentions.1.transformer_blocks.0.attn1.processor.to_q_lora.up.weight, down_blocks.2.attentions.1.transformer_blocks.0.attn1.processor.to_v_lora.down.weight, down_blocks.2.attentions.1.transformer_blocks.0.attn1.processor.to_v_lora.up.weight, down_blocks.2.attentions.1.transformer_blocks.0.attn2.processor.to_k_lora.down.weight, down_blocks.2.attentions.1.transformer_blocks.0.attn2.processor.to_k_lora.up.weight, down_blocks.2.attentions.1.transformer_blocks.0.attn2.processor.to_out_lora.down.weight, down_blocks.2.attentions.1.transformer_blocks.0.attn2.processor.to_out_lora.up.weight, down_blocks.2.attentions.1.transformer_blocks.0.attn2.processor.to_q_lora.down.weight, down_blocks.2.attentions.1.transformer_blocks.0.attn2.processor.to_q_lora.up.weight, down_blocks.2.attentions.1.transformer_blocks.0.attn2.processor.to_v_lora.down.weight, down_blocks.2.attentions.1.transformer_blocks.0.attn2.processor.to_v_lora.up.weight, mid_block.attentions.0.transformer_blocks.0.attn1.processor.temb_proj.0.bias, mid_block.attentions.0.transformer_blocks.0.attn1.processor.temb_proj.0.weight, mid_block.attentions.0.transformer_blocks.0.attn1.processor.temb_proj.2.bias, mid_block.attentions.0.transformer_blocks.0.attn1.processor.temb_proj.2.weight, mid_block.attentions.0.transformer_blocks.0.attn1.processor.to_k_lora.down.weight, mid_block.attentions.0.transformer_blocks.0.attn1.processor.to_k_lora.up.weight, mid_block.attentions.0.transformer_blocks.0.attn1.processor.to_out_lora.down.weight, mid_block.attentions.0.transformer_blocks.0.attn1.processor.to_out_lora.up.weight, mid_block.attentions.0.transformer_blocks.0.attn1.processor.to_q_lora.down.weight, mid_block.attentions.0.transformer_blocks.0.attn1.processor.to_q_lora.up.weight, mid_block.attentions.0.transformer_blocks.0.attn1.processor.to_v_lora.down.weight, mid_block.attentions.0.transformer_blocks.0.attn1.processor.to_v_lora.up.weight, mid_block.attentions.0.transformer_blocks.0.attn2.processor.to_k_lora.down.weight, mid_block.attentions.0.transformer_blocks.0.attn2.processor.to_k_lora.up.weight, mid_block.attentions.0.transformer_blocks.0.attn2.processor.to_out_lora.down.weight, mid_block.attentions.0.transformer_blocks.0.attn2.processor.to_out_lora.up.weight, mid_block.attentions.0.transformer_blocks.0.attn2.processor.to_q_lora.down.weight, mid_block.attentions.0.transformer_blocks.0.attn2.processor.to_q_lora.up.weight, mid_block.attentions.0.transformer_blocks.0.attn2.processor.to_v_lora.down.weight, mid_block.attentions.0.transformer_blocks.0.attn2.processor.to_v_lora.up.weight, up_blocks.1.attentions.0.transformer_blocks.0.attn1.processor.temb_proj.0.bias, up_blocks.1.attentions.0.transformer_blocks.0.attn1.processor.temb_proj.0.weight, up_blocks.1.attentions.0.transformer_blocks.0.attn1.processor.temb_proj.2.bias, up_blocks.1.attentions.0.transformer_blocks.0.attn1.processor.temb_proj.2.weight, up_blocks.1.attentions.0.transformer_blocks.0.attn1.processor.to_k_lora.down.weight, up_blocks.1.attentions.0.transformer_blocks.0.attn1.processor.to_k_lora.up.weight, up_blocks.1.attentions.0.transformer_blocks.0.attn1.processor.to_out_lora.down.weight, up_blocks.1.attentions.0.transformer_blocks.0.attn1.processor.to_out_lora.up.weight, up_blocks.1.attentions.0.transformer_blocks.0.attn1.processor.to_q_lora.down.weight, up_blocks.1.attentions.0.transformer_blocks.0.attn1.processor.to_q_lora.up.weight, up_blocks.1.attentions.0.transformer_blocks.0.attn1.processor.to_v_lora.down.weight, up_blocks.1.attentions.0.transformer_blocks.0.attn1.processor.to_v_lora.up.weight, up_blocks.1.attentions.0.transformer_blocks.0.attn2.processor.to_k_lora.down.weight, up_blocks.1.attentions.0.transformer_blocks.0.attn2.processor.to_k_lora.up.weight, up_blocks.1.attentions.0.transformer_blocks.0.attn2.processor.to_out_lora.down.weight, up_blocks.1.attentions.0.transformer_blocks.0.attn2.processor.to_out_lora.up.weight, up_blocks.1.attentions.0.transformer_blocks.0.attn2.processor.to_q_lora.down.weight, up_blocks.1.attentions.0.transformer_blocks.0.attn2.processor.to_q_lora.up.weight, up_blocks.1.attentions.0.transformer_blocks.0.attn2.processor.to_v_lora.down.weight, up_blocks.1.attentions.0.transformer_blocks.0.attn2.processor.to_v_lora.up.weight, up_blocks.1.attentions.1.transformer_blocks.0.attn1.processor.temb_proj.0.bias, up_blocks.1.attentions.1.transformer_blocks.0.attn1.processor.temb_proj.0.weight, up_blocks.1.attentions.1.transformer_blocks.0.attn1.processor.temb_proj.2.bias, up_blocks.1.attentions.1.transformer_blocks.0.attn1.processor.temb_proj.2.weight, up_blocks.1.attentions.1.transformer_blocks.0.attn1.processor.to_k_lora.down.weight, up_blocks.1.attentions.1.transformer_blocks.0.attn1.processor.to_k_lora.up.weight, up_blocks.1.attentions.1.transformer_blocks.0.attn1.processor.to_out_lora.down.weight, up_blocks.1.attentions.1.transformer_blocks.0.attn1.processor.to_out_lora.up.weight, up_blocks.1.attentions.1.transformer_blocks.0.attn1.processor.to_q_lora.down.weight, up_blocks.1.attentions.1.transformer_blocks.0.attn1.processor.to_q_lora.up.weight, up_blocks.1.attentions.1.transformer_blocks.0.attn1.processor.to_v_lora.down.weight, up_blocks.1.attentions.1.transformer_blocks.0.attn1.processor.to_v_lora.up.weight, up_blocks.1.attentions.1.transformer_blocks.0.attn2.processor.to_k_lora.down.weight, up_blocks.1.attentions.1.transformer_blocks.0.attn2.processor.to_k_lora.up.weight, up_blocks.1.attentions.1.transformer_blocks.0.attn2.processor.to_out_lora.down.weight, up_blocks.1.attentions.1.transformer_blocks.0.attn2.processor.to_out_lora.up.weight, up_blocks.1.attentions.1.transformer_blocks.0.attn2.processor.to_q_lora.down.weight, up_blocks.1.attentions.1.transformer_blocks.0.attn2.processor.to_q_lora.up.weight, up_blocks.1.attentions.1.transformer_blocks.0.attn2.processor.to_v_lora.down.weight, up_blocks.1.attentions.1.transformer_blocks.0.attn2.processor.to_v_lora.up.weight, up_blocks.1.attentions.2.transformer_blocks.0.attn1.processor.temb_proj.0.bias, up_blocks.1.attentions.2.transformer_blocks.0.attn1.processor.temb_proj.0.weight, up_blocks.1.attentions.2.transformer_blocks.0.attn1.processor.temb_proj.2.bias, up_blocks.1.attentions.2.transformer_blocks.0.attn1.processor.temb_proj.2.weight, up_blocks.1.attentions.2.transformer_blocks.0.attn1.processor.to_k_lora.down.weight, up_blocks.1.attentions.2.transformer_blocks.0.attn1.processor.to_k_lora.up.weight, up_blocks.1.attentions.2.transformer_blocks.0.attn1.processor.to_out_lora.down.weight, up_blocks.1.attentions.2.transformer_blocks.0.attn1.processor.to_out_lora.up.weight, up_blocks.1.attentions.2.transformer_blocks.0.attn1.processor.to_q_lora.down.weight, up_blocks.1.attentions.2.transformer_blocks.0.attn1.processor.to_q_lora.up.weight, up_blocks.1.attentions.2.transformer_blocks.0.attn1.processor.to_v_lora.down.weight, up_blocks.1.attentions.2.transformer_blocks.0.attn1.processor.to_v_lora.up.weight, up_blocks.1.attentions.2.transformer_blocks.0.attn2.processor.to_k_lora.down.weight, up_blocks.1.attentions.2.transformer_blocks.0.attn2.processor.to_k_lora.up.weight, up_blocks.1.attentions.2.transformer_blocks.0.attn2.processor.to_out_lora.down.weight, up_blocks.1.attentions.2.transformer_blocks.0.attn2.processor.to_out_lora.up.weight, up_blocks.1.attentions.2.transformer_blocks.0.attn2.processor.to_q_lora.down.weight, up_blocks.1.attentions.2.transformer_blocks.0.attn2.processor.to_q_lora.up.weight, up_blocks.1.attentions.2.transformer_blocks.0.attn2.processor.to_v_lora.down.weight, up_blocks.1.attentions.2.transformer_blocks.0.attn2.processor.to_v_lora.up.weight, up_blocks.2.attentions.0.transformer_blocks.0.attn1.processor.temb_proj.0.bias, up_blocks.2.attentions.0.transformer_blocks.0.attn1.processor.temb_proj.0.weight, up_blocks.2.attentions.0.transformer_blocks.0.attn1.processor.temb_proj.2.bias, up_blocks.2.attentions.0.transformer_blocks.0.attn1.processor.temb_proj.2.weight, up_blocks.2.attentions.0.transformer_blocks.0.attn1.processor.to_k_lora.down.weight, up_blocks.2.attentions.0.transformer_blocks.0.attn1.processor.to_k_lora.up.weight, up_blocks.2.attentions.0.transformer_blocks.0.attn1.processor.to_out_lora.down.weight, up_blocks.2.attentions.0.transformer_blocks.0.attn1.processor.to_out_lora.up.weight, up_blocks.2.attentions.0.transformer_blocks.0.attn1.processor.to_q_lora.down.weight, up_blocks.2.attentions.0.transformer_blocks.0.attn1.processor.to_q_lora.up.weight, up_blocks.2.attentions.0.transformer_blocks.0.attn1.processor.to_v_lora.down.weight, up_blocks.2.attentions.0.transformer_blocks.0.attn1.processor.to_v_lora.up.weight, up_blocks.2.attentions.0.transformer_blocks.0.attn2.processor.to_k_lora.down.weight, up_blocks.2.attentions.0.transformer_blocks.0.attn2.processor.to_k_lora.up.weight, up_blocks.2.attentions.0.transformer_blocks.0.attn2.processor.to_out_lora.down.weight, up_blocks.2.attentions.0.transformer_blocks.0.attn2.processor.to_out_lora.up.weight, up_blocks.2.attentions.0.transformer_blocks.0.attn2.processor.to_q_lora.down.weight, up_blocks.2.attentions.0.transformer_blocks.0.attn2.processor.to_q_lora.up.weight, up_blocks.2.attentions.0.transformer_blocks.0.attn2.processor.to_v_lora.down.weight, up_blocks.2.attentions.0.transformer_blocks.0.attn2.processor.to_v_lora.up.weight, up_blocks.2.attentions.1.transformer_blocks.0.attn1.processor.temb_proj.0.bias, up_blocks.2.attentions.1.transformer_blocks.0.attn1.processor.temb_proj.0.weight, up_blocks.2.attentions.1.transformer_blocks.0.attn1.processor.temb_proj.2.bias, up_blocks.2.attentions.1.transformer_blocks.0.attn1.processor.temb_proj.2.weight, up_blocks.2.attentions.1.transformer_blocks.0.attn1.processor.to_k_lora.down.weight, up_blocks.2.attentions.1.transformer_blocks.0.attn1.processor.to_k_lora.up.weight, up_blocks.2.attentions.1.transformer_blocks.0.attn1.processor.to_out_lora.down.weight, up_blocks.2.attentions.1.transformer_blocks.0.attn1.processor.to_out_lora.up.weight, up_blocks.2.attentions.1.transformer_blocks.0.attn1.processor.to_q_lora.down.weight, up_blocks.2.attentions.1.transformer_blocks.0.attn1.processor.to_q_lora.up.weight, up_blocks.2.attentions.1.transformer_blocks.0.attn1.processor.to_v_lora.down.weight, up_blocks.2.attentions.1.transformer_blocks.0.attn1.processor.to_v_lora.up.weight, up_blocks.2.attentions.1.transformer_blocks.0.attn2.processor.to_k_lora.down.weight, up_blocks.2.attentions.1.transformer_blocks.0.attn2.processor.to_k_lora.up.weight, up_blocks.2.attentions.1.transformer_blocks.0.attn2.processor.to_out_lora.down.weight, up_blocks.2.attentions.1.transformer_blocks.0.attn2.processor.to_out_lora.up.weight, up_blocks.2.attentions.1.transformer_blocks.0.attn2.processor.to_q_lora.down.weight, up_blocks.2.attentions.1.transformer_blocks.0.attn2.processor.to_q_lora.up.weight, up_blocks.2.attentions.1.transformer_blocks.0.attn2.processor.to_v_lora.down.weight, up_blocks.2.attentions.1.transformer_blocks.0.attn2.processor.to_v_lora.up.weight, up_blocks.2.attentions.2.transformer_blocks.0.attn1.processor.temb_proj.0.bias, up_blocks.2.attentions.2.transformer_blocks.0.attn1.processor.temb_proj.0.weight, up_blocks.2.attentions.2.transformer_blocks.0.attn1.processor.temb_proj.2.bias, up_blocks.2.attentions.2.transformer_blocks.0.attn1.processor.temb_proj.2.weight, up_blocks.2.attentions.2.transformer_blocks.0.attn1.processor.to_k_lora.down.weight, up_blocks.2.attentions.2.transformer_blocks.0.attn1.processor.to_k_lora.up.weight, up_blocks.2.attentions.2.transformer_blocks.0.attn1.processor.to_out_lora.down.weight, up_blocks.2.attentions.2.transformer_blocks.0.attn1.processor.to_out_lora.up.weight, up_blocks.2.attentions.2.transformer_blocks.0.attn1.processor.to_q_lora.down.weight, up_blocks.2.attentions.2.transformer_blocks.0.attn1.processor.to_q_lora.up.weight, up_blocks.2.attentions.2.transformer_blocks.0.attn1.processor.to_v_lora.down.weight, up_blocks.2.attentions.2.transformer_blocks.0.attn1.processor.to_v_lora.up.weight, up_blocks.2.attentions.2.transformer_blocks.0.attn2.processor.to_k_lora.down.weight, up_blocks.2.attentions.2.transformer_blocks.0.attn2.processor.to_k_lora.up.weight, up_blocks.2.attentions.2.transformer_blocks.0.attn2.processor.to_out_lora.down.weight, up_blocks.2.attentions.2.transformer_blocks.0.attn2.processor.to_out_lora.up.weight, up_blocks.2.attentions.2.transformer_blocks.0.attn2.processor.to_q_lora.down.weight, up_blocks.2.attentions.2.transformer_blocks.0.attn2.processor.to_q_lora.up.weight, up_blocks.2.attentions.2.transformer_blocks.0.attn2.processor.to_v_lora.down.weight, up_blocks.2.attentions.2.transformer_blocks.0.attn2.processor.to_v_lora.up.weight, up_blocks.3.attentions.0.transformer_blocks.0.attn1.processor.temb_proj.0.bias, up_blocks.3.attentions.0.transformer_blocks.0.attn1.processor.temb_proj.0.weight, up_blocks.3.attentions.0.transformer_blocks.0.attn1.processor.temb_proj.2.bias, up_blocks.3.attentions.0.transformer_blocks.0.attn1.processor.temb_proj.2.weight, up_blocks.3.attentions.0.transformer_blocks.0.attn1.processor.to_k_lora.down.weight, up_blocks.3.attentions.0.transformer_blocks.0.attn1.processor.to_k_lora.up.weight, up_blocks.3.attentions.0.transformer_blocks.0.attn1.processor.to_out_lora.down.weight, up_blocks.3.attentions.0.transformer_blocks.0.attn1.processor.to_out_lora.up.weight, up_blocks.3.attentions.0.transformer_blocks.0.attn1.processor.to_q_lora.down.weight, up_blocks.3.attentions.0.transformer_blocks.0.attn1.processor.to_q_lora.up.weight, up_blocks.3.attentions.0.transformer_blocks.0.attn1.processor.to_v_lora.down.weight, up_blocks.3.attentions.0.transformer_blocks.0.attn1.processor.to_v_lora.up.weight, up_blocks.3.attentions.0.transformer_blocks.0.attn2.processor.to_k_lora.down.weight, up_blocks.3.attentions.0.transformer_blocks.0.attn2.processor.to_k_lora.up.weight, up_blocks.3.attentions.0.transformer_blocks.0.attn2.processor.to_out_lora.down.weight, up_blocks.3.attentions.0.transformer_blocks.0.attn2.processor.to_out_lora.up.weight, up_blocks.3.attentions.0.transformer_blocks.0.attn2.processor.to_q_lora.down.weight, up_blocks.3.attentions.0.transformer_blocks.0.attn2.processor.to_q_lora.up.weight, up_blocks.3.attentions.0.transformer_blocks.0.attn2.processor.to_v_lora.down.weight, up_blocks.3.attentions.0.transformer_blocks.0.attn2.processor.to_v_lora.up.weight, up_blocks.3.attentions.1.transformer_blocks.0.attn1.processor.temb_proj.0.bias, up_blocks.3.attentions.1.transformer_blocks.0.attn1.processor.temb_proj.0.weight, up_blocks.3.attentions.1.transformer_blocks.0.attn1.processor.temb_proj.2.bias, up_blocks.3.attentions.1.transformer_blocks.0.attn1.processor.temb_proj.2.weight, up_blocks.3.attentions.1.transformer_blocks.0.attn1.processor.to_k_lora.down.weight, up_blocks.3.attentions.1.transformer_blocks.0.attn1.processor.to_k_lora.up.weight, up_blocks.3.attentions.1.transformer_blocks.0.attn1.processor.to_out_lora.down.weight, up_blocks.3.attentions.1.transformer_blocks.0.attn1.processor.to_out_lora.up.weight, up_blocks.3.attentions.1.transformer_blocks.0.attn1.processor.to_q_lora.down.weight, up_blocks.3.attentions.1.transformer_blocks.0.attn1.processor.to_q_lora.up.weight, up_blocks.3.attentions.1.transformer_blocks.0.attn1.processor.to_v_lora.down.weight, up_blocks.3.attentions.1.transformer_blocks.0.attn1.processor.to_v_lora.up.weight, up_blocks.3.attentions.1.transformer_blocks.0.attn2.processor.to_k_lora.down.weight, up_blocks.3.attentions.1.transformer_blocks.0.attn2.processor.to_k_lora.up.weight, up_blocks.3.attentions.1.transformer_blocks.0.attn2.processor.to_out_lora.down.weight, up_blocks.3.attentions.1.transformer_blocks.0.attn2.processor.to_out_lora.up.weight, up_blocks.3.attentions.1.transformer_blocks.0.attn2.processor.to_q_lora.down.weight, up_blocks.3.attentions.1.transformer_blocks.0.attn2.processor.to_q_lora.up.weight, up_blocks.3.attentions.1.transformer_blocks.0.attn2.processor.to_v_lora.down.weight, up_blocks.3.attentions.1.transformer_blocks.0.attn2.processor.to_v_lora.up.weight, up_blocks.3.attentions.2.transformer_blocks.0.attn1.processor.temb_proj.0.bias, up_blocks.3.attentions.2.transformer_blocks.0.attn1.processor.temb_proj.0.weight, up_blocks.3.attentions.2.transformer_blocks.0.attn1.processor.temb_proj.2.bias, up_blocks.3.attentions.2.transformer_blocks.0.attn1.processor.temb_proj.2.weight, up_blocks.3.attentions.2.transformer_blocks.0.attn1.processor.to_k_lora.down.weight, up_blocks.3.attentions.2.transformer_blocks.0.attn1.processor.to_k_lora.up.weight, up_blocks.3.attentions.2.transformer_blocks.0.attn1.processor.to_out_lora.down.weight, up_blocks.3.attentions.2.transformer_blocks.0.attn1.processor.to_out_lora.up.weight, up_blocks.3.attentions.2.transformer_blocks.0.attn1.processor.to_q_lora.down.weight, up_blocks.3.attentions.2.transformer_blocks.0.attn1.processor.to_q_lora.up.weight, up_blocks.3.attentions.2.transformer_blocks.0.attn1.processor.to_v_lora.down.weight, up_blocks.3.attentions.2.transformer_blocks.0.attn1.processor.to_v_lora.up.weight, up_blocks.3.attentions.2.transformer_blocks.0.attn2.processor.to_k_lora.down.weight, up_blocks.3.attentions.2.transformer_blocks.0.attn2.processor.to_k_lora.up.weight, up_blocks.3.attentions.2.transformer_blocks.0.attn2.processor.to_out_lora.down.weight, up_blocks.3.attentions.2.transformer_blocks.0.attn2.processor.to_out_lora.up.weight, up_blocks.3.attentions.2.transformer_blocks.0.attn2.processor.to_q_lora.down.weight, up_blocks.3.attentions.2.transformer_blocks.0.attn2.processor.to_q_lora.up.weight, up_blocks.3.attentions.2.transformer_blocks.0.attn2.processor.to_v_lora.down.weight, up_blocks.3.attentions.2.transformer_blocks.0.attn2.processor.to_v_lora.up.weight']
04/12/2024 10:09:58 - INFO - __main__ - Loaded lora parameters into model
04/12/2024 10:09:58 - INFO - accelerate.checkpointing - All model weights loaded successfully
04/12/2024 10:10:08 - INFO - accelerate.checkpointing - All optimizer states loaded successfully
04/12/2024 10:10:08 - INFO - accelerate.checkpointing - All scheduler states loaded successfully
04/12/2024 10:10:08 - INFO - accelerate.checkpointing - All random states loaded successfully
04/12/2024 10:10:08 - INFO - accelerate.accelerator - Loading in 0 custom states
/root/autodl-tmp/ViewDiff/viewdiff
/root/autodl-tmp/ViewDiff/viewdiff
load from path: /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-500
Resuming from checkpoint /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-500
  0%|          | 0/24850 [00:00<?, ?it/s]Steps:   0%|          | 0/24850 [00:00<?, ?it/s]04/12/2024 10:10:08 - INFO - __main__ - Will skip the first 500 steps in dataloader.
04/12/2024 10:10:08 - INFO - __main__ - Running validation...

Loading pipeline components...:   0%|          | 0/7 [00:00<?, ?it/s][A`text_config_dict` is provided which will be used to initialize `CLIPTextConfig`. The value `text_config["id2label"]` will be overriden.
`text_config_dict` is provided which will be used to initialize `CLIPTextConfig`. The value `text_config["bos_token_id"]` will be overriden.
`text_config_dict` is provided which will be used to initialize `CLIPTextConfig`. The value `text_config["eos_token_id"]` will be overriden.
Loaded safety_checker as StableDiffusionSafetyChecker from `safety_checker` subfolder of timbrooks/instruct-pix2pix.

Loading pipeline components...:  14%|█▍        | 1/7 [00:01<00:09,  1.66s/it][ALoaded feature_extractor as CLIPImageProcessor from `feature_extractor` subfolder of timbrooks/instruct-pix2pix.
{'timestep_spacing'} was not found in config. Values will be initialized to default values.
Loaded scheduler as EulerAncestralDiscreteScheduler from `scheduler` subfolder of timbrooks/instruct-pix2pix.
Loaded tokenizer as CLIPTokenizer from `tokenizer` subfolder of timbrooks/instruct-pix2pix.

Loading pipeline components...:  86%|████████▌ | 6/7 [00:01<00:00,  4.50it/s][ALoading pipeline components...: 100%|██████████| 7/7 [00:01<00:00,  3.96it/s]
{'timestep_spacing'} was not found in config. Values will be initialized to default values.
conduct do_classifier_free_guidance, text_guidance: 16,image_guidance: 1

  0%|          | 0/50 [00:00<?, ?it/s][A
  2%|▏         | 1/50 [00:00<00:37,  1.29it/s][A
  4%|▍         | 2/50 [00:01<00:26,  1.80it/s][A
  6%|▌         | 3/50 [00:01<00:22,  2.05it/s][A
  8%|▊         | 4/50 [00:01<00:20,  2.20it/s][A
 10%|█         | 5/50 [00:02<00:19,  2.28it/s][A
 12%|█▏        | 6/50 [00:02<00:18,  2.34it/s][A
 14%|█▍        | 7/50 [00:03<00:18,  2.39it/s][A
 16%|█▌        | 8/50 [00:03<00:17,  2.42it/s][A
 18%|█▊        | 9/50 [00:04<00:16,  2.43it/s][A
 20%|██        | 10/50 [00:04<00:16,  2.44it/s][A
 22%|██▏       | 11/50 [00:04<00:15,  2.46it/s][A
 24%|██▍       | 12/50 [00:05<00:15,  2.46it/s][A
 26%|██▌       | 13/50 [00:05<00:14,  2.47it/s][A
 28%|██▊       | 14/50 [00:06<00:14,  2.46it/s][A
 30%|███       | 15/50 [00:06<00:14,  2.47it/s][A
 32%|███▏      | 16/50 [00:06<00:13,  2.47it/s][A
 34%|███▍      | 17/50 [00:07<00:13,  2.46it/s][A
 36%|███▌      | 18/50 [00:07<00:13,  2.46it/s][A
 38%|███▊      | 19/50 [00:08<00:12,  2.46it/s][A
 40%|████      | 20/50 [00:08<00:12,  2.46it/s][A
 42%|████▏     | 21/50 [00:08<00:11,  2.46it/s][A
 44%|████▍     | 22/50 [00:09<00:11,  2.47it/s][A
 46%|████▌     | 23/50 [00:09<00:10,  2.47it/s][A
 48%|████▊     | 24/50 [00:10<00:10,  2.47it/s][A
 50%|█████     | 25/50 [00:10<00:10,  2.46it/s][A
 52%|█████▏    | 26/50 [00:10<00:09,  2.45it/s][A
 54%|█████▍    | 27/50 [00:11<00:09,  2.45it/s][A
 56%|█████▌    | 28/50 [00:11<00:08,  2.45it/s][A
 58%|█████▊    | 29/50 [00:12<00:08,  2.46it/s][A
 60%|██████    | 30/50 [00:12<00:08,  2.45it/s][A
 62%|██████▏   | 31/50 [00:12<00:07,  2.44it/s][A
 64%|██████▍   | 32/50 [00:13<00:07,  2.42it/s][A
 66%|██████▌   | 33/50 [00:13<00:07,  2.43it/s][A(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) 
 68%|██████▊   | 34/50 [00:14<00:06,  2.43it/s][A
 70%|███████   | 35/50 [00:14<00:06,  2.45it/s][A
 72%|███████▏  | 36/50 [00:15<00:05,  2.45it/s][A
 74%|███████▍  | 37/50 [00:15<00:05,  2.46it/s][A
 76%|███████▌  | 38/50 [00:15<00:04,  2.45it/s][A
 78%|███████▊  | 39/50 [00:16<00:04,  2.45it/s][A
 80%|████████  | 40/50 [00:16<00:04,  2.45it/s][A
 82%|████████▏ | 41/50 [00:17<00:03,  2.45it/s][A
 84%|████████▍ | 42/50 [00:17<00:03,  2.46it/s][A
 86%|████████▌ | 43/50 [00:17<00:02,  2.46it/s][A
 88%|████████▊ | 44/50 [00:18<00:02,  2.46it/s][A
 90%|█████████ | 45/50 [00:18<00:02,  2.45it/s][A
 92%|█████████▏| 46/50 [00:19<00:01,  2.45it/s][A
 94%|█████████▍| 47/50 [00:19<00:01,  2.45it/s][A
 96%|█████████▌| 48/50 [00:19<00:00,  2.46it/s][A
 98%|█████████▊| 49/50 [00:20<00:00,  2.46it/s][A
100%|██████████| 50/50 [00:20<00:00,  2.46it/s][A100%|██████████| 50/50 [00:20<00:00,  2.41it/s]
04/12/2024 10:10:35 - INFO - __main__ - Running training...
torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
save img to : /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/images/modify the images for task ['flare']_val_step_0500_0.png modify the images for task ['flare']
writing inference outputs failed [Errno 2] No such file or directory: '/usr/bin/ffmpeg'
Steps:   2%|▏         | 501/24850 [00:36<29:22, 13.81it/s]Steps:   2%|▏         | 501/24850 [00:36<29:22, 13.81it/s, lr=7e-5, step_loss=0.196]Steps:   2%|▏         | 502/24850 [00:37<29:22, 13.81it/s, lr=7e-5, step_loss=0.0294]Steps:   2%|▏         | 503/24850 [00:39<32:29, 12.49it/s, lr=7e-5, step_loss=0.0294]Steps:   2%|▏         | 503/24850 [00:39<32:29, 12.49it/s, lr=7e-5, step_loss=0.00535]Steps:   2%|▏         | 504/24850 [00:40<34:41, 11.69it/s, lr=7e-5, step_loss=0.00535]Steps:   2%|▏         | 504/24850 [00:40<34:41, 11.69it/s, lr=7e-5, step_loss=0.0668] Steps:   2%|▏         | 505/24850 [00:41<37:49, 10.73it/s, lr=7e-5, step_loss=0.0668]Steps:   2%|▏         | 505/24850 [00:41<37:49, 10.73it/s, lr=7e-5, step_loss=0.0157]Steps:   2%|▏         | 506/24850 [00:43<42:17,  9.59it/s, lr=7e-5, step_loss=0.0157]Steps:   2%|▏         | 506/24850 [00:43<42:17,  9.59it/s, lr=7e-5, step_loss=0.158] Steps:   2%|▏         | 507/24850 [00:45<49:58,  8.12it/s, lr=7e-5, step_loss=0.158]Steps:   2%|▏         | 507/24850 [00:45<49:58,  8.12it/s, lr=7e-5, step_loss=0.0377]04/12/2024 10:10:53 - INFO - __main__ - Running validation...
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([9, 4, 64, 64])

Loading pipeline components...:   0%|          | 0/7 [00:00<?, ?it/s][A`text_config_dict` is provided which will be used to initialize `CLIPTextConfig`. The value `text_config["id2label"]` will be overriden.
`text_config_dict` is provided which will be used to initialize `CLIPTextConfig`. The value `text_config["bos_token_id"]` will be overriden.
`text_config_dict` is provided which will be used to initialize `CLIPTextConfig`. The value `text_config["eos_token_id"]` will be overriden.
Loaded safety_checker as StableDiffusionSafetyChecker from `safety_checker` subfolder of timbrooks/instruct-pix2pix.

Loading pipeline components...:  14%|█▍        | 1/7 [00:01<00:06,  1.09s/it][ALoaded feature_extractor as CLIPImageProcessor from `feature_extractor` subfolder of timbrooks/instruct-pix2pix.
{'timestep_spacing'} was not found in config. Values will be initialized to default values.
Loaded scheduler as EulerAncestralDiscreteScheduler from `scheduler` subfolder of timbrooks/instruct-pix2pix.
Loaded tokenizer as CLIPTokenizer from `tokenizer` subfolder of timbrooks/instruct-pix2pix.
Loading pipeline components...: 100%|██████████| 7/7 [00:01<00:00,  5.86it/s]
{'timestep_spacing'} was not found in config. Values will be initialized to default values.
conduct do_classifier_free_guidance, text_guidance: 16,image_guidance: 1

  0%|          | 0/50 [00:00<?, ?it/s][A
  2%|▏         | 1/50 [00:00<00:21,  2.30it/s][A
  4%|▍         | 2/50 [00:00<00:19,  2.40it/s][A
  6%|▌         | 3/50 [00:01<00:19,  2.40it/s][A
  8%|▊         | 4/50 [00:01<00:19,  2.41it/s][A
 10%|█         | 5/50 [00:02<00:18,  2.42it/s][A
 12%|█▏        | 6/50 [00:02<00:18,  2.43it/s][A
 14%|█▍        | 7/50 [00:02<00:17,  2.45it/s][A
 16%|█▌        | 8/50 [00:03<00:17,  2.45it/s][A
 18%|█▊        | 9/50 [00:03<00:16,  2.46it/s][A
 20%|██        | 10/50 [00:04<00:16,  2.46it/s][A
 22%|██▏       | 11/50 [00:04<00:15,  2.46it/s][A
 24%|██▍       | 12/50 [00:04<00:15,  2.46it/s][A
 26%|██▌       | 13/50 [00:05<00:15,  2.45it/s][A
 28%|██▊       | 14/50 [00:05<00:14,  2.45it/s][A
 30%|███       | 15/50 [00:06<00:14,  2.41it/s][A
 32%|███▏      | 16/50 [00:06<00:13,  2.43it/s][A
 34%|███▍      | 17/50 [00:06<00:13,  2.44it/s][A
 36%|███▌      | 18/50 [00:07<00:13,  2.45it/s][A
 38%|███▊      | 19/50 [00:07<00:12,  2.45it/s][A
 40%|████      | 20/50 [00:08<00:12,  2.46it/s][A
 42%|████▏     | 21/50 [00:08<00:11,  2.46it/s][A
 44%|████▍     | 22/50 [00:09<00:11,  2.44it/s][A
 46%|████▌     | 23/50 [00:09<00:11,  2.45it/s][A
 48%|████▊     | 24/50 [00:09<00:10,  2.46it/s][A
 50%|█████     | 25/50 [00:10<00:10,  2.46it/s][A
 52%|█████▏    | 26/50 [00:10<00:09,  2.44it/s][A
 54%|█████▍    | 27/50 [00:11<00:09,  2.45it/s][A
 56%|█████▌    | 28/50 [00:11<00:08,  2.45it/s][A
 58%|█████▊    | 29/50 [00:11<00:08,  2.46it/s][A
 60%|██████    | 30/50 [00:12<00:08,  2.46it/s][A
 62%|██████▏   | 31/50 [00:12<00:07,  2.46it/s][A
 64%|██████▍   | 32/50 [00:13<00:07,  2.47it/s][A
 66%|██████▌   | 33/50 [00:13<00:06,  2.46it/s][A(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) 
 68%|██████▊   | 34/50 [00:13<00:06,  2.46it/s][A
 70%|███████   | 35/50 [00:14<00:06,  2.46it/s][A
 72%|███████▏  | 36/50 [00:14<00:05,  2.45it/s][A
 74%|███████▍  | 37/50 [00:15<00:05,  2.46it/s][A
 76%|███████▌  | 38/50 [00:15<00:04,  2.45it/s][A
 78%|███████▊  | 39/50 [00:15<00:04,  2.45it/s][A
 80%|████████  | 40/50 [00:16<00:04,  2.45it/s][A
 82%|████████▏ | 41/50 [00:16<00:03,  2.46it/s][A
 84%|████████▍ | 42/50 [00:17<00:03,  2.46it/s][A
 86%|████████▌ | 43/50 [00:17<00:02,  2.46it/s][A
 88%|████████▊ | 44/50 [00:17<00:02,  2.46it/s][A
 90%|█████████ | 45/50 [00:18<00:02,  2.46it/s][A
 92%|█████████▏| 46/50 [00:18<00:01,  2.46it/s][A
 94%|█████████▍| 47/50 [00:19<00:01,  2.46it/s][A
 96%|█████████▌| 48/50 [00:19<00:00,  2.47it/s][A
 98%|█████████▊| 49/50 [00:19<00:00,  2.47it/s][A
100%|██████████| 50/50 [00:20<00:00,  2.47it/s][A100%|██████████| 50/50 [00:20<00:00,  2.45it/s]
04/12/2024 10:11:17 - INFO - __main__ - Running training...
torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
save img to : /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/images/modify the images for task ['flare']_val_step_0508_0.png modify the images for task ['flare']
writing inference outputs failed [Errno 2] No such file or directory: '/usr/bin/ffmpeg'
Steps:   2%|▏         | 508/24850 [01:16<4:16:44,  1.58it/s, lr=7e-5, step_loss=0.0377]Steps:   2%|▏         | 508/24850 [01:16<4:16:44,  1.58it/s, lr=7e-5, step_loss=0.0213]Steps:   2%|▏         | 509/24850 [01:18<4:24:36,  1.53it/s, lr=7e-5, step_loss=0.0213]Steps:   2%|▏         | 509/24850 [01:18<4:24:36,  1.53it/s, lr=7e-5, step_loss=0.0145]Steps:   2%|▏         | 510/24850 [01:19<4:34:22,  1.48it/s, lr=7e-5, step_loss=0.0145]Steps:   2%|▏         | 510/24850 [01:19<4:34:22,  1.48it/s, lr=7e-5, step_loss=0.0341]Steps:   2%|▏         | 511/24850 [01:21<4:47:41,  1.41it/s, lr=7e-5, step_loss=0.0341]Steps:   2%|▏         | 511/24850 [01:21<4:47:41,  1.41it/s, lr=7e-5, step_loss=0.013] Steps:   2%|▏         | 512/24850 [01:22<5:05:26,  1.33it/s, lr=7e-5, step_loss=0.013]Steps:   2%|▏         | 512/24850 [01:22<5:05:26,  1.33it/s, lr=7e-5, step_loss=0.0391]Steps:   2%|▏         | 513/24850 [01:24<5:26:21,  1.24it/s, lr=7e-5, step_loss=0.0391]Steps:   2%|▏         | 513/24850 [01:24<5:26:21,  1.24it/s, lr=7e-5, step_loss=0.0733]Steps:   2%|▏         | 514/24850 [01:25<5:51:54,  1.15it/s, lr=7e-5, step_loss=0.0733]Steps:   2%|▏         | 514/24850 [01:25<5:51:54,  1.15it/s, lr=7e-5, step_loss=0.0268]Steps:   2%|▏         | 515/24850 [01:27<6:20:24,  1.07it/s, lr=7e-5, step_loss=0.0268]Steps:   2%|▏         | 515/24850 [01:27<6:20:24,  1.07it/s, lr=7e-5, step_loss=0.000752]Steps:   2%|▏         | 516/24850 [01:28<6:53:28,  1.02s/it, lr=7e-5, step_loss=0.000752]Steps:   2%|▏         | 516/24850 [01:28<6:53:28,  1.02s/it, lr=7e-5, step_loss=0.0149]  Steps:   2%|▏         | 517/24850 [01:30<7:22:11,  1.09s/it, lr=7e-5, step_loss=0.0149]Steps:   2%|▏         | 517/24850 [01:30<7:22:11,  1.09s/it, lr=7e-5, step_loss=0.0126]Steps:   2%|▏         | 518/24850 [01:31<7:50:22,  1.16s/it, lr=7e-5, step_loss=0.0126]Steps:   2%|▏         | 518/24850 [01:31<7:50:22,  1.16s/it, lr=7e-5, step_loss=0.0375]Steps:   2%|▏         | 519/24850 [01:32<8:16:25,  1.22s/it, lr=7e-5, step_loss=0.0375]Steps:   2%|▏         | 519/24850 [01:32<8:16:25,  1.22s/it, lr=7e-5, step_loss=0.0104]Steps:   2%|▏         | 520/24850 [01:34<8:35:50,  1.27s/it, lr=7e-5, step_loss=0.0104]Steps:   2%|▏         | 520/24850 [01:34<8:35:50,  1.27s/it, lr=7e-5, step_loss=0.0418]Steps:   2%|▏         | 521/24850 [01:35<8:54:16,  1.32s/it, lr=7e-5, step_loss=0.0418]Steps:   2%|▏         | 521/24850 [01:35<8:54:16,  1.32s/it, lr=7e-5, step_loss=0.0447]Steps:   2%|▏         | 522/24850 [01:37<9:09:17,  1.35s/it, lr=7e-5, step_loss=0.0447]Steps:   2%|▏         | 522/24850 [01:37<9:09:17,  1.35s/it, lr=7e-5, step_loss=0.0537]Steps:   2%|▏         | 523/24850 [01:38<9:18:36,  1.38s/it, lr=7e-5, step_loss=0.0537]Steps:   2%|▏         | 523/24850 [01:38<9:18:36,  1.38s/it, lr=7e-5, step_loss=0.026] Steps:   2%|▏         | 524/24850 [01:40<9:24:15,  1.39s/it, lr=7e-5, step_loss=0.026]Steps:   2%|▏         | 524/24850 [01:40<9:24:15,  1.39s/it, lr=7e-5, step_loss=0.0169]Steps:   2%|▏         | 525/24850 [01:41<9:30:37,  1.41s/it, lr=7e-5, step_loss=0.0169]Steps:   2%|▏         | 525/24850 [01:41<9:30:37,  1.41s/it, lr=7e-5, step_loss=0.0138]Steps:   2%|▏         | 526/24850 [01:43<9:41:51,  1.44s/it, lr=7e-5, step_loss=0.0138]Steps:   2%|▏         | 526/24850 [01:43<9:41:51,  1.44s/it, lr=7e-5, step_loss=0.0125]Steps:   2%|▏         | 527/24850 [01:44<9:44:18,  1.44s/it, lr=7e-5, step_loss=0.0125]Steps:   2%|▏         | 527/24850 [01:44<9:44:18,  1.44s/it, lr=7e-5, step_loss=0.171] Steps:   2%|▏         | 528/24850 [01:45<9:46:03,  1.45s/it, lr=7e-5, step_loss=0.171]Steps:   2%|▏         | 528/24850 [01:45<9:46:03,  1.45s/it, lr=7e-5, step_loss=0.0744]Steps:   2%|▏         | 529/24850 [01:47<9:47:42,  1.45s/it, lr=7e-5, step_loss=0.0744]Steps:   2%|▏         | 529/24850 [01:47<9:47:42,  1.45s/it, lr=7e-5, step_loss=0.0213]Steps:   2%|▏         | 530/24850 [01:48<9:46:58,  1.45s/it, lr=7e-5, step_loss=0.0213]Steps:   2%|▏         | 530/24850 [01:48<9:46:58,  1.45s/it, lr=7e-5, step_loss=0.045] Steps:   2%|▏         | 531/24850 [01:50<9:47:33,  1.45s/it, lr=7e-5, step_loss=0.045]Steps:   2%|▏         | 531/24850 [01:50<9:47:33,  1.45s/it, lr=7e-5, step_loss=0.0176]Steps:   2%|▏         | 532/24850 [01:51<9:48:01,  1.45s/it, lr=7e-5, step_loss=0.0176]Steps:   2%|▏         | 532/24850 [01:51<9:48:01,  1.45s/it, lr=7e-5, step_loss=0.0207]Steps:   2%|▏         | 533/24850 [01:53<9:48:06,  1.45s/it, lr=7e-5, step_loss=0.0207]Steps:   2%|▏         | 533/24850 [01:53<9:48:06,  1.45s/it, lr=7e-5, step_loss=0.0308]Steps:   2%|▏         | 534/24850 [01:54<9:48:25,  1.45s/it, lr=7e-5, step_loss=0.0308]Steps:   2%|▏         | 534/24850 [01:54<9:48:25,  1.45s/it, lr=7e-5, step_loss=0.00553](512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512)Steps:   2%|▏         | 535/24850 [01:56<9:47:22,  1.45s/it, lr=7e-5, step_loss=0.00553]Steps:   2%|▏         | 535/24850 [01:56<9:47:22,  1.45s/it, lr=7e-5, step_loss=0.00208]Steps:   2%|▏         | 536/24850 [01:57<9:48:49,  1.45s/it, lr=7e-5, step_loss=0.00208]Steps:   2%|▏         | 536/24850 [01:57<9:48:49,  1.45s/it, lr=7e-5, step_loss=0.0642] Steps:   2%|▏         | 537/24850 [01:59<9:47:51,  1.45s/it, lr=7e-5, step_loss=0.0642]Steps:   2%|▏         | 537/24850 [01:59<9:47:51,  1.45s/it, lr=7e-5, step_loss=0.0419]Steps:   2%|▏         | 538/24850 [02:00<9:49:33,  1.45s/it, lr=7e-5, step_loss=0.0419]Steps:   2%|▏         | 538/24850 [02:00<9:49:33,  1.45s/it, lr=7e-5, step_loss=0.0184]Steps:   2%|▏         | 539/24850 [02:01<9:50:13,  1.46s/it, lr=7e-5, step_loss=0.0184]Steps:   2%|▏         | 539/24850 [02:01<9:50:13,  1.46s/it, lr=7e-5, step_loss=0.0319]Steps:   2%|▏         | 540/24850 [02:03<9:50:47,  1.46s/it, lr=7e-5, step_loss=0.0319]Steps:   2%|▏         | 540/24850 [02:03<9:50:47,  1.46s/it, lr=7e-5, step_loss=0.0112]Steps:   2%|▏         | 541/24850 [02:04<9:51:01,  1.46s/it, lr=7e-5, step_loss=0.0112]Steps:   2%|▏         | 541/24850 [02:04<9:51:01,  1.46s/it, lr=7e-5, step_loss=0.0547]Steps:   2%|▏         | 542/24850 [02:06<9:49:38,  1.46s/it, lr=7e-5, step_loss=0.0547]Steps:   2%|▏         | 542/24850 [02:06<9:49:38,  1.46s/it, lr=7e-5, step_loss=0.0549]Steps:   2%|▏         | 543/24850 [02:07<9:49:03,  1.45s/it, lr=7e-5, step_loss=0.0549]Steps:   2%|▏         | 543/24850 [02:07<9:49:03,  1.45s/it, lr=7e-5, step_loss=0.00641]Steps:   2%|▏         | 544/24850 [02:09<9:48:57,  1.45s/it, lr=7e-5, step_loss=0.00641]Steps:   2%|▏         | 544/24850 [02:09<9:48:57,  1.45s/it, lr=7e-5, step_loss=0.0405] Steps:   2%|▏         | 545/24850 [02:10<9:48:49,  1.45s/it, lr=7e-5, step_loss=0.0405]Steps:   2%|▏         | 545/24850 [02:10<9:48:49,  1.45s/it, lr=7e-5, step_loss=0.125] Steps:   2%|▏         | 546/24850 [02:12<9:51:09,  1.46s/it, lr=7e-5, step_loss=0.125]Steps:   2%|▏         | 546/24850 [02:12<9:51:09,  1.46s/it, lr=7e-5, step_loss=0.0622]Steps:   2%|▏         | 547/24850 [02:13<9:50:01,  1.46s/it, lr=7e-5, step_loss=0.0622]Steps:   2%|▏         | 547/24850 [02:13<9:50:01,  1.46s/it, lr=7e-5, step_loss=0.0194]Steps:   2%|▏         | 548/24850 [02:15<9:48:35,  1.45s/it, lr=7e-5, step_loss=0.0194]Steps:   2%|▏         | 548/24850 [02:15<9:48:35,  1.45s/it, lr=7e-5, step_loss=0.0116]Steps:   2%|▏         | 549/24850 [02:17<11:53:17,  1.76s/it, lr=7e-5, step_loss=0.0116]Steps:   2%|▏         | 549/24850 [02:17<11:53:17,  1.76s/it, lr=7e-5, step_loss=0.289] Steps:   2%|▏         | 550/24850 [02:18<11:15:28,  1.67s/it, lr=7e-5, step_loss=0.289]Steps:   2%|▏         | 550/24850 [02:18<11:15:28,  1.67s/it, lr=7e-5, step_loss=0.134]Steps:   2%|▏         | 551/24850 [02:20<10:51:09,  1.61s/it, lr=7e-5, step_loss=0.134]Steps:   2%|▏         | 551/24850 [02:20<10:51:09,  1.61s/it, lr=7e-5, step_loss=0.00815]Steps:   2%|▏         | 552/24850 [02:21<10:32:10,  1.56s/it, lr=7e-5, step_loss=0.00815]Steps:   2%|▏         | 552/24850 [02:21<10:32:10,  1.56s/it, lr=7e-5, step_loss=0.0404] Steps:   2%|▏         | 553/24850 [02:23<10:17:49,  1.53s/it, lr=7e-5, step_loss=0.0404]Steps:   2%|▏         | 553/24850 [02:23<10:17:49,  1.53s/it, lr=7e-5, step_loss=0.0343]Steps:   2%|▏         | 554/24850 [02:24<10:10:39,  1.51s/it, lr=7e-5, step_loss=0.0343]Steps:   2%|▏         | 554/24850 [02:24<10:10:39,  1.51s/it, lr=7e-5, step_loss=0.121] Steps:   2%|▏         | 555/24850 [02:26<10:05:04,  1.49s/it, lr=7e-5, step_loss=0.121]Steps:   2%|▏         | 555/24850 [02:26<10:05:04,  1.49s/it, lr=7e-5, step_loss=0.0122]Steps:   2%|▏         | 556/24850 [02:27<9:59:18,  1.48s/it, lr=7e-5, step_loss=0.0122] Steps:   2%|▏         | 556/24850 [02:27<9:59:18,  1.48s/it, lr=7e-5, step_loss=0.0365]Steps:   2%|▏         | 557/24850 [02:29<9:58:06,  1.48s/it, lr=7e-5, step_loss=0.0365]Steps:   2%|▏         | 557/24850 [02:29<9:58:06,  1.48s/it, lr=7e-5, step_loss=0.0432]Steps:   2%|▏         | 558/24850 [02:30<9:56:18,  1.47s/it, lr=7e-5, step_loss=0.0432]Steps:   2%|▏         | 558/24850 [02:30<9:56:18,  1.47s/it, lr=7e-5, step_loss=0.0624]Steps:   2%|▏         | 559/24850 [02:32<9:54:18,  1.47s/it, lr=7e-5, step_loss=0.0624]Steps:   2%|▏         | 559/24850 [02:32<9:54:18,  1.47s/it, lr=7e-5, step_loss=0.043] Steps:   2%|▏         | 560/24850 [02:33<9:53:09,  1.47s/it, lr=7e-5, step_loss=0.043]Steps:   2%|▏         | 560/24850 [02:33<9:53:09,  1.47s/it, lr=7e-5, step_loss=0.0817]Steps:   2%|▏         | 561/24850 [02:35<9:50:36,  1.46s/it, lr=7e-5, step_loss=0.0817]Steps:   2%|▏         | 561/24850 [02:35<9:50:36,  1.46s/it, lr=7e-5, step_loss=0.0334] torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:   2%|▏         | 562/24850 [02:36<9:51:20,  1.46s/it, lr=7e-5, step_loss=0.0334]Steps:   2%|▏         | 562/24850 [02:36<9:51:20,  1.46s/it, lr=7e-5, step_loss=0.048] Steps:   2%|▏         | 563/24850 [02:37<9:52:59,  1.46s/it, lr=7e-5, step_loss=0.048]Steps:   2%|▏         | 563/24850 [02:37<9:52:59,  1.46s/it, lr=7e-5, step_loss=0.0111]Steps:   2%|▏         | 564/24850 [02:39<9:52:33,  1.46s/it, lr=7e-5, step_loss=0.0111]Steps:   2%|▏         | 564/24850 [02:39<9:52:33,  1.46s/it, lr=7e-5, step_loss=0.01]  Steps:   2%|▏         | 565/24850 [02:40<9:51:53,  1.46s/it, lr=7e-5, step_loss=0.01]Steps:   2%|▏         | 565/24850 [02:40<9:51:53,  1.46s/it, lr=7e-5, step_loss=0.0699]Steps:   2%|▏         | 566/24850 [02:42<10:48:40,  1.60s/it, lr=7e-5, step_loss=0.0699]Steps:   2%|▏         | 566/24850 [02:42<10:48:40,  1.60s/it, lr=7e-5, step_loss=0.0359]Steps:   2%|▏         | 567/24850 [02:44<11:07:33,  1.65s/it, lr=7e-5, step_loss=0.0359]Steps:   2%|▏         | 567/24850 [02:44<11:07:33,  1.65s/it, lr=7e-5, step_loss=0.0294]Steps:   2%|▏         | 568/24850 [02:46<11:32:34,  1.71s/it, lr=7e-5, step_loss=0.0294]Steps:   2%|▏         | 568/24850 [02:46<11:32:34,  1.71s/it, lr=7e-5, step_loss=0.0145]Steps:   2%|▏         | 569/24850 [02:47<11:02:26,  1.64s/it, lr=7e-5, step_loss=0.0145]Steps:   2%|▏         | 569/24850 [02:47<11:02:26,  1.64s/it, lr=7e-5, step_loss=0.0378]Steps:   2%|▏         | 570/24850 [02:49<10:43:28,  1.59s/it, lr=7e-5, step_loss=0.0378]Steps:   2%|▏         | 570/24850 [02:49<10:43:28,  1.59s/it, lr=7e-5, step_loss=0.01]  Steps:   2%|▏         | 571/24850 [02:50<10:27:03,  1.55s/it, lr=7e-5, step_loss=0.01]Steps:   2%|▏         | 571/24850 [02:50<10:27:03,  1.55s/it, lr=7e-5, step_loss=0.0267]Steps:   2%|▏         | 572/24850 [02:52<10:17:41,  1.53s/it, lr=7e-5, step_loss=0.0267]Steps:   2%|▏         | 572/24850 [02:52<10:17:41,  1.53s/it, lr=7e-5, step_loss=0.0587]Steps:   2%|▏         | 573/24850 [02:53<10:09:00,  1.51s/it, lr=7e-5, step_loss=0.0587]Steps:   2%|▏         | 573/24850 [02:53<10:09:00,  1.51s/it, lr=7e-5, step_loss=0.00641]Steps:   2%|▏         | 574/24850 [02:55<10:05:17,  1.50s/it, lr=7e-5, step_loss=0.00641]Steps:   2%|▏         | 574/24850 [02:55<10:05:17,  1.50s/it, lr=7e-5, step_loss=0.00796]Steps:   2%|▏         | 575/24850 [02:56<10:02:26,  1.49s/it, lr=7e-5, step_loss=0.00796]Steps:   2%|▏         | 575/24850 [02:56<10:02:26,  1.49s/it, lr=7e-5, step_loss=0.0062] Steps:   2%|▏         | 576/24850 [02:58<10:00:16,  1.48s/it, lr=7e-5, step_loss=0.0062]Steps:   2%|▏         | 576/24850 [02:58<10:00:16,  1.48s/it, lr=7e-5, step_loss=0.00297]Steps:   2%|▏         | 577/24850 [02:59<9:56:39,  1.47s/it, lr=7e-5, step_loss=0.00297] Steps:   2%|▏         | 577/24850 [02:59<9:56:39,  1.47s/it, lr=7e-5, step_loss=0.0114] Steps:   2%|▏         | 578/24850 [03:01<9:54:44,  1.47s/it, lr=7e-5, step_loss=0.0114]Steps:   2%|▏         | 578/24850 [03:01<9:54:44,  1.47s/it, lr=7e-5, step_loss=0.205] Steps:   2%|▏         | 579/24850 [03:02<9:55:08,  1.47s/it, lr=7e-5, step_loss=0.205]Steps:   2%|▏         | 579/24850 [03:02<9:55:08,  1.47s/it, lr=7e-5, step_loss=0.0661]Steps:   2%|▏         | 580/24850 [03:04<9:56:31,  1.47s/it, lr=7e-5, step_loss=0.0661]Steps:   2%|▏         | 580/24850 [03:04<9:56:31,  1.47s/it, lr=7e-5, step_loss=0.0691]Steps:   2%|▏         | 581/24850 [03:05<9:54:43,  1.47s/it, lr=7e-5, step_loss=0.0691]Steps:   2%|▏         | 581/24850 [03:05<9:54:43,  1.47s/it, lr=7e-5, step_loss=0.0576]Steps:   2%|▏         | 582/24850 [03:06<9:52:42,  1.47s/it, lr=7e-5, step_loss=0.0576]Steps:   2%|▏         | 582/24850 [03:06<9:52:42,  1.47s/it, lr=7e-5, step_loss=0.017] Steps:   2%|▏         | 583/24850 [03:08<9:56:16,  1.47s/it, lr=7e-5, step_loss=0.017]Steps:   2%|▏         | 583/24850 [03:08<9:56:16,  1.47s/it, lr=7e-5, step_loss=0.0211]Steps:   2%|▏         | 584/24850 [03:09<9:55:52,  1.47s/it, lr=7e-5, step_loss=0.0211]Steps:   2%|▏         | 584/24850 [03:09<9:55:52,  1.47s/it, lr=7e-5, step_loss=0.0286]Steps:   2%|▏         | 585/24850 [03:11<9:55:25,  1.47s/it, lr=7e-5, step_loss=0.0286]Steps:   2%|▏         | 585/24850 [03:11<9:55:25,  1.47s/it, lr=7e-5, step_loss=0.00683]Steps:   2%|▏         | 586/24850 [03:12<9:54:19,  1.47s/it, lr=7e-5, step_loss=0.00683]Steps:   2%|▏         | 586/24850 [03:12<9:54:19,  1.47s/it, lr=7e-5, step_loss=0.102]  Steps:   2%|▏         | 587/24850 [03:14<9:52:44,  1.47s/it, lr=7e-5, step_loss=0.102]Steps:   2%|▏         | 587/24850 [03:14<9:52:44,  1.47s/it, lr=7e-5, step_loss=0.0332]Steps:   2%|▏         | 588/24850 [03:15<9:52:10,  1.46s/it, lr=7e-5, step_loss=0.0332]Steps:   2%|▏         | 588/24850 [03:15<9:52:10,  1.46s/it, lr=7e-5, step_loss=0.0171]torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  Steps:   2%|▏         | 589/24850 [03:17<9:51:03,  1.46s/it, lr=7e-5, step_loss=0.0171]Steps:   2%|▏         | 589/24850 [03:17<9:51:03,  1.46s/it, lr=7e-5, step_loss=0.00427]Steps:   2%|▏         | 590/24850 [03:18<9:50:10,  1.46s/it, lr=7e-5, step_loss=0.00427]Steps:   2%|▏         | 590/24850 [03:18<9:50:10,  1.46s/it, lr=7e-5, step_loss=0.00894]Steps:   2%|▏         | 591/24850 [03:20<9:50:27,  1.46s/it, lr=7e-5, step_loss=0.00894]Steps:   2%|▏         | 591/24850 [03:20<9:50:27,  1.46s/it, lr=7e-5, step_loss=0.0183] Steps:   2%|▏         | 592/24850 [03:21<9:49:18,  1.46s/it, lr=7e-5, step_loss=0.0183]Steps:   2%|▏         | 592/24850 [03:21<9:49:18,  1.46s/it, lr=7e-5, step_loss=0.0187]Steps:   2%|▏         | 593/24850 [03:23<9:49:49,  1.46s/it, lr=7e-5, step_loss=0.0187]Steps:   2%|▏         | 593/24850 [03:23<9:49:49,  1.46s/it, lr=7e-5, step_loss=0.042] Steps:   2%|▏         | 594/24850 [03:24<9:49:20,  1.46s/it, lr=7e-5, step_loss=0.042]Steps:   2%|▏         | 594/24850 [03:24<9:49:20,  1.46s/it, lr=7e-5, step_loss=0.00229]Steps:   2%|▏         | 595/24850 [03:25<9:50:39,  1.46s/it, lr=7e-5, step_loss=0.00229]Steps:   2%|▏         | 595/24850 [03:25<9:50:39,  1.46s/it, lr=7e-5, step_loss=0.041]  Steps:   2%|▏         | 596/24850 [03:27<9:50:03,  1.46s/it, lr=7e-5, step_loss=0.041]Steps:   2%|▏         | 596/24850 [03:27<9:50:03,  1.46s/it, lr=7e-5, step_loss=0.0177]Steps:   2%|▏         | 597/24850 [03:28<9:49:40,  1.46s/it, lr=7e-5, step_loss=0.0177]Steps:   2%|▏         | 597/24850 [03:28<9:49:40,  1.46s/it, lr=7e-5, step_loss=0.000696]Steps:   2%|▏         | 598/24850 [03:30<9:50:20,  1.46s/it, lr=7e-5, step_loss=0.000696]Steps:   2%|▏         | 598/24850 [03:30<9:50:20,  1.46s/it, lr=7e-5, step_loss=0.0622]  Steps:   2%|▏         | 599/24850 [03:32<11:48:42,  1.75s/it, lr=7e-5, step_loss=0.0622]Steps:   2%|▏         | 599/24850 [03:32<11:48:42,  1.75s/it, lr=7e-5, step_loss=0.0235]Steps:   2%|▏         | 600/24850 [03:34<11:12:32,  1.66s/it, lr=7e-5, step_loss=0.0235]Steps:   2%|▏         | 600/24850 [03:34<11:12:32,  1.66s/it, lr=7e-5, step_loss=0.00278]Steps:   2%|▏         | 601/24850 [03:35<10:48:44,  1.61s/it, lr=7e-5, step_loss=0.00278]Steps:   2%|▏         | 601/24850 [03:35<10:48:44,  1.61s/it, lr=7e-5, step_loss=0.0365] Steps:   2%|▏         | 602/24850 [03:37<10:30:18,  1.56s/it, lr=7e-5, step_loss=0.0365]Steps:   2%|▏         | 602/24850 [03:37<10:30:18,  1.56s/it, lr=7e-5, step_loss=0.0255]Steps:   2%|▏         | 603/24850 [03:38<10:19:18,  1.53s/it, lr=7e-5, step_loss=0.0255]Steps:   2%|▏         | 603/24850 [03:38<10:19:18,  1.53s/it, lr=7e-5, step_loss=0.0923]Steps:   2%|▏         | 604/24850 [03:40<10:09:51,  1.51s/it, lr=7e-5, step_loss=0.0923]Steps:   2%|▏         | 604/24850 [03:40<10:09:51,  1.51s/it, lr=7e-5, step_loss=0.0277]Steps:   2%|▏         | 605/24850 [03:41<10:05:30,  1.50s/it, lr=7e-5, step_loss=0.0277]Steps:   2%|▏         | 605/24850 [03:41<10:05:30,  1.50s/it, lr=7e-5, step_loss=0.0774]Steps:   2%|▏         | 606/24850 [03:43<10:05:13,  1.50s/it, lr=7e-5, step_loss=0.0774]Steps:   2%|▏         | 606/24850 [03:43<10:05:13,  1.50s/it, lr=7e-5, step_loss=0.0252]Steps:   2%|▏         | 607/24850 [03:44<10:03:16,  1.49s/it, lr=7e-5, step_loss=0.0252]Steps:   2%|▏         | 607/24850 [03:44<10:03:16,  1.49s/it, lr=7e-5, step_loss=0.00992]Steps:   2%|▏         | 608/24850 [03:46<10:01:32,  1.49s/it, lr=7e-5, step_loss=0.00992]Steps:   2%|▏         | 608/24850 [03:46<10:01:32,  1.49s/it, lr=7e-5, step_loss=0.00386]Steps:   2%|▏         | 609/24850 [03:47<9:59:05,  1.48s/it, lr=7e-5, step_loss=0.00386] Steps:   2%|▏         | 609/24850 [03:47<9:59:05,  1.48s/it, lr=7e-5, step_loss=0.0184] Steps:   2%|▏         | 610/24850 [03:48<9:56:39,  1.48s/it, lr=7e-5, step_loss=0.0184]Steps:   2%|▏         | 610/24850 [03:48<9:56:39,  1.48s/it, lr=7e-5, step_loss=0.069] Steps:   2%|▏         | 611/24850 [03:50<9:54:01,  1.47s/it, lr=7e-5, step_loss=0.069]Steps:   2%|▏         | 611/24850 [03:50<9:54:01,  1.47s/it, lr=7e-5, step_loss=0.017]Steps:   2%|▏         | 612/24850 [03:51<9:54:36,  1.47s/it, lr=7e-5, step_loss=0.017]Steps:   2%|▏         | 612/24850 [03:51<9:54:36,  1.47s/it, lr=7e-5, step_loss=0.0182]Steps:   2%|▏         | 613/24850 [03:53<9:55:50,  1.48s/it, lr=7e-5, step_loss=0.0182]Steps:   2%|▏         | 613/24850 [03:53<9:55:50,  1.48s/it, lr=7e-5, step_loss=0.0386]Steps:   2%|▏         | 614/24850 [03:54<9:54:37,  1.47s/it, lr=7e-5, step_loss=0.0386]Steps:   2%|▏         | 614/24850 [03:54<9:54:37,  1.47s/it, lr=7e-5, step_loss=0.117] Steps:   2%|▏         | 615/24850 [03:56<9:55:55,  1.48s/it, lr=7e-5, step_loss=0.117]Steps:   2%|▏         | 615/24850 [03:56<9:55:55,  1.48s/it, lr=7e-5, step_loss=0.0847]Steps:   2%|▏         | 616/24850 [03:57<9:54:58,  1.47s/it, lr=7e-5, step_loss=0.0847]Steps:   2%|▏         | 616/24850 [03:57<9:54:58,  1.47s/it, lr=7e-5, step_loss=0.0701]mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:   2%|▏         | 617/24850 [03:59<9:51:55,  1.47s/it, lr=7e-5, step_loss=0.0701]Steps:   2%|▏         | 617/24850 [03:59<9:51:55,  1.47s/it, lr=7e-5, step_loss=0.000637]Steps:   2%|▏         | 618/24850 [04:00<9:51:25,  1.46s/it, lr=7e-5, step_loss=0.000637]Steps:   2%|▏         | 618/24850 [04:00<9:51:25,  1.46s/it, lr=7e-5, step_loss=0.0209]  Steps:   2%|▏         | 619/24850 [04:02<9:53:09,  1.47s/it, lr=7e-5, step_loss=0.0209]Steps:   2%|▏         | 619/24850 [04:02<9:53:09,  1.47s/it, lr=7e-5, step_loss=0.0523]Steps:   2%|▏         | 620/24850 [04:03<9:54:53,  1.47s/it, lr=7e-5, step_loss=0.0523]Steps:   2%|▏         | 620/24850 [04:03<9:54:53,  1.47s/it, lr=7e-5, step_loss=0.0342]Steps:   2%|▏         | 621/24850 [04:05<9:55:05,  1.47s/it, lr=7e-5, step_loss=0.0342]Steps:   2%|▏         | 621/24850 [04:05<9:55:05,  1.47s/it, lr=7e-5, step_loss=0.0331]Steps:   3%|▎         | 622/24850 [04:06<9:53:47,  1.47s/it, lr=7e-5, step_loss=0.0331]Steps:   3%|▎         | 622/24850 [04:06<9:53:47,  1.47s/it, lr=7e-5, step_loss=0.0112]Steps:   3%|▎         | 623/24850 [04:08<9:53:26,  1.47s/it, lr=7e-5, step_loss=0.0112]Steps:   3%|▎         | 623/24850 [04:08<9:53:26,  1.47s/it, lr=7e-5, step_loss=0.0644]Steps:   3%|▎         | 624/24850 [04:09<9:52:50,  1.47s/it, lr=7e-5, step_loss=0.0644]Steps:   3%|▎         | 624/24850 [04:09<9:52:50,  1.47s/it, lr=7e-5, step_loss=0.0093]Steps:   3%|▎         | 625/24850 [04:11<9:59:16,  1.48s/it, lr=7e-5, step_loss=0.0093]Steps:   3%|▎         | 625/24850 [04:11<9:59:16,  1.48s/it, lr=7e-5, step_loss=0.0109]Steps:   3%|▎         | 626/24850 [04:12<10:01:11,  1.49s/it, lr=7e-5, step_loss=0.0109]Steps:   3%|▎         | 626/24850 [04:12<10:01:11,  1.49s/it, lr=7e-5, step_loss=0.0371]Steps:   3%|▎         | 627/24850 [04:14<9:58:38,  1.48s/it, lr=7e-5, step_loss=0.0371] Steps:   3%|▎         | 627/24850 [04:14<9:58:38,  1.48s/it, lr=7e-5, step_loss=0.0162]Steps:   3%|▎         | 628/24850 [04:15<9:57:27,  1.48s/it, lr=7e-5, step_loss=0.0162]Steps:   3%|▎         | 628/24850 [04:15<9:57:27,  1.48s/it, lr=7e-5, step_loss=0.0115]Steps:   3%|▎         | 629/24850 [04:16<9:55:27,  1.48s/it, lr=7e-5, step_loss=0.0115]Steps:   3%|▎         | 629/24850 [04:16<9:55:27,  1.48s/it, lr=7e-5, step_loss=0.00281]Steps:   3%|▎         | 630/24850 [04:18<9:54:34,  1.47s/it, lr=7e-5, step_loss=0.00281]Steps:   3%|▎         | 630/24850 [04:18<9:54:34,  1.47s/it, lr=7e-5, step_loss=0.0657] Steps:   3%|▎         | 631/24850 [04:19<9:53:05,  1.47s/it, lr=7e-5, step_loss=0.0657]Steps:   3%|▎         | 631/24850 [04:19<9:53:05,  1.47s/it, lr=7e-5, step_loss=0.0725]Steps:   3%|▎         | 632/24850 [04:21<9:52:59,  1.47s/it, lr=7e-5, step_loss=0.0725]Steps:   3%|▎         | 632/24850 [04:21<9:52:59,  1.47s/it, lr=7e-5, step_loss=0.0312]Steps:   3%|▎         | 633/24850 [04:22<9:51:59,  1.47s/it, lr=7e-5, step_loss=0.0312]Steps:   3%|▎         | 633/24850 [04:22<9:51:59,  1.47s/it, lr=7e-5, step_loss=0.0203]Steps:   3%|▎         | 634/24850 [04:24<9:50:57,  1.46s/it, lr=7e-5, step_loss=0.0203]Steps:   3%|▎         | 634/24850 [04:24<9:50:57,  1.46s/it, lr=7e-5, step_loss=0.049] Steps:   3%|▎         | 635/24850 [04:25<9:49:55,  1.46s/it, lr=7e-5, step_loss=0.049]Steps:   3%|▎         | 635/24850 [04:25<9:49:55,  1.46s/it, lr=7e-5, step_loss=0.00691]Steps:   3%|▎         | 636/24850 [04:27<9:50:43,  1.46s/it, lr=7e-5, step_loss=0.00691]Steps:   3%|▎         | 636/24850 [04:27<9:50:43,  1.46s/it, lr=7e-5, step_loss=0.0128] Steps:   3%|▎         | 637/24850 [04:28<9:50:04,  1.46s/it, lr=7e-5, step_loss=0.0128]Steps:   3%|▎         | 637/24850 [04:28<9:50:04,  1.46s/it, lr=7e-5, step_loss=0.0254]Steps:   3%|▎         | 638/24850 [04:30<10:08:01,  1.51s/it, lr=7e-5, step_loss=0.0254]Steps:   3%|▎         | 638/24850 [04:30<10:08:01,  1.51s/it, lr=7e-5, step_loss=0.056] Steps:   3%|▎         | 639/24850 [04:31<10:03:30,  1.50s/it, lr=7e-5, step_loss=0.056]Steps:   3%|▎         | 639/24850 [04:31<10:03:30,  1.50s/it, lr=7e-5, step_loss=0.209]Steps:   3%|▎         | 640/24850 [04:33<9:59:20,  1.49s/it, lr=7e-5, step_loss=0.209] Steps:   3%|▎         | 640/24850 [04:33<9:59:20,  1.49s/it, lr=7e-5, step_loss=0.00923]Steps:   3%|▎         | 641/24850 [04:34<9:56:24,  1.48s/it, lr=7e-5, step_loss=0.00923]Steps:   3%|▎         | 641/24850 [04:34<9:56:24,  1.48s/it, lr=7e-5, step_loss=0.00222]Steps:   3%|▎         | 642/24850 [04:36<9:55:21,  1.48s/it, lr=7e-5, step_loss=0.00222]Steps:   3%|▎         | 642/24850 [04:36<9:55:21,  1.48s/it, lr=7e-5, step_loss=0.0413] Steps:   3%|▎         | 643/24850 [04:37<9:55:20,  1.48s/it, lr=7e-5, step_loss=0.0413]Steps:   3%|▎         | 643/24850 [04:37<9:55:20,  1.48s/it, lr=7e-5, step_loss=0.119] torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) Steps:   3%|▎         | 644/24850 [04:39<9:53:21,  1.47s/it, lr=7e-5, step_loss=0.119]Steps:   3%|▎         | 644/24850 [04:39<9:53:21,  1.47s/it, lr=7e-5, step_loss=0.224]Steps:   3%|▎         | 645/24850 [04:40<9:52:44,  1.47s/it, lr=7e-5, step_loss=0.224]Steps:   3%|▎         | 645/24850 [04:40<9:52:44,  1.47s/it, lr=7e-5, step_loss=0.0145]Steps:   3%|▎         | 646/24850 [04:41<9:53:05,  1.47s/it, lr=7e-5, step_loss=0.0145]Steps:   3%|▎         | 646/24850 [04:41<9:53:05,  1.47s/it, lr=7e-5, step_loss=0.07]  Steps:   3%|▎         | 647/24850 [04:43<9:53:31,  1.47s/it, lr=7e-5, step_loss=0.07]Steps:   3%|▎         | 647/24850 [04:43<9:53:31,  1.47s/it, lr=7e-5, step_loss=0.0143]Steps:   3%|▎         | 648/24850 [04:44<9:53:17,  1.47s/it, lr=7e-5, step_loss=0.0143]Steps:   3%|▎         | 648/24850 [04:44<9:53:17,  1.47s/it, lr=7e-5, step_loss=0.011] Steps:   3%|▎         | 649/24850 [04:47<11:44:39,  1.75s/it, lr=7e-5, step_loss=0.011]Steps:   3%|▎         | 649/24850 [04:47<11:44:39,  1.75s/it, lr=7e-5, step_loss=0.0209]Steps:   3%|▎         | 650/24850 [04:48<11:12:36,  1.67s/it, lr=7e-5, step_loss=0.0209]Steps:   3%|▎         | 650/24850 [04:48<11:12:36,  1.67s/it, lr=7e-5, step_loss=0.0259]Steps:   3%|▎         | 651/24850 [04:50<10:47:55,  1.61s/it, lr=7e-5, step_loss=0.0259]Steps:   3%|▎         | 651/24850 [04:50<10:47:55,  1.61s/it, lr=7e-5, step_loss=0.00233]Steps:   3%|▎         | 652/24850 [04:51<10:29:20,  1.56s/it, lr=7e-5, step_loss=0.00233]Steps:   3%|▎         | 652/24850 [04:51<10:29:20,  1.56s/it, lr=7e-5, step_loss=0.00104]Steps:   3%|▎         | 653/24850 [04:53<10:16:15,  1.53s/it, lr=7e-5, step_loss=0.00104]Steps:   3%|▎         | 653/24850 [04:53<10:16:15,  1.53s/it, lr=7e-5, step_loss=0.0184] Steps:   3%|▎         | 654/24850 [04:54<10:09:38,  1.51s/it, lr=7e-5, step_loss=0.0184]Steps:   3%|▎         | 654/24850 [04:54<10:09:38,  1.51s/it, lr=7e-5, step_loss=0.0084]Steps:   3%|▎         | 655/24850 [04:56<10:04:31,  1.50s/it, lr=7e-5, step_loss=0.0084]Steps:   3%|▎         | 655/24850 [04:56<10:04:31,  1.50s/it, lr=7e-5, step_loss=0.0617]Steps:   3%|▎         | 656/24850 [04:57<10:00:49,  1.49s/it, lr=7e-5, step_loss=0.0617]Steps:   3%|▎         | 656/24850 [04:57<10:00:49,  1.49s/it, lr=7e-5, step_loss=0.0038]Steps:   3%|▎         | 657/24850 [04:59<9:57:34,  1.48s/it, lr=7e-5, step_loss=0.0038] Steps:   3%|▎         | 657/24850 [04:59<9:57:34,  1.48s/it, lr=7e-5, step_loss=0.0784]Steps:   3%|▎         | 658/24850 [05:00<9:55:48,  1.48s/it, lr=7e-5, step_loss=0.0784]Steps:   3%|▎         | 658/24850 [05:00<9:55:48,  1.48s/it, lr=7e-5, step_loss=0.0332]Steps:   3%|▎         | 659/24850 [05:01<9:54:34,  1.47s/it, lr=7e-5, step_loss=0.0332]Steps:   3%|▎         | 659/24850 [05:01<9:54:34,  1.47s/it, lr=7e-5, step_loss=0.0137]Steps:   3%|▎         | 660/24850 [05:03<9:53:26,  1.47s/it, lr=7e-5, step_loss=0.0137]Steps:   3%|▎         | 660/24850 [05:03<9:53:26,  1.47s/it, lr=7e-5, step_loss=0.0432]Steps:   3%|▎         | 661/24850 [05:04<9:52:41,  1.47s/it, lr=7e-5, step_loss=0.0432]Steps:   3%|▎         | 661/24850 [05:04<9:52:41,  1.47s/it, lr=7e-5, step_loss=0.0163]Steps:   3%|▎         | 662/24850 [05:06<9:49:32,  1.46s/it, lr=7e-5, step_loss=0.0163]Steps:   3%|▎         | 662/24850 [05:06<9:49:32,  1.46s/it, lr=7e-5, step_loss=0.000716]Steps:   3%|▎         | 663/24850 [05:07<9:50:07,  1.46s/it, lr=7e-5, step_loss=0.000716]Steps:   3%|▎         | 663/24850 [05:07<9:50:07,  1.46s/it, lr=7e-5, step_loss=0.00727] Steps:   3%|▎         | 664/24850 [05:09<9:48:23,  1.46s/it, lr=7e-5, step_loss=0.00727]Steps:   3%|▎         | 664/24850 [05:09<9:48:23,  1.46s/it, lr=7e-5, step_loss=0.00837]Steps:   3%|▎         | 665/24850 [05:10<9:49:43,  1.46s/it, lr=7e-5, step_loss=0.00837]Steps:   3%|▎         | 665/24850 [05:10<9:49:43,  1.46s/it, lr=7e-5, step_loss=0.0555] Steps:   3%|▎         | 666/24850 [05:12<9:50:19,  1.46s/it, lr=7e-5, step_loss=0.0555]Steps:   3%|▎         | 666/24850 [05:12<9:50:19,  1.46s/it, lr=7e-5, step_loss=0.0411]Steps:   3%|▎         | 667/24850 [05:13<9:50:43,  1.47s/it, lr=7e-5, step_loss=0.0411]Steps:   3%|▎         | 667/24850 [05:13<9:50:43,  1.47s/it, lr=7e-5, step_loss=0.0817]Steps:   3%|▎         | 668/24850 [05:15<9:50:53,  1.47s/it, lr=7e-5, step_loss=0.0817]Steps:   3%|▎         | 668/24850 [05:15<9:50:53,  1.47s/it, lr=7e-5, step_loss=0.0678]Steps:   3%|▎         | 669/24850 [05:16<9:51:08,  1.47s/it, lr=7e-5, step_loss=0.0678]Steps:   3%|▎         | 669/24850 [05:16<9:51:08,  1.47s/it, lr=7e-5, step_loss=0.0117]Steps:   3%|▎         | 670/24850 [05:18<9:49:52,  1.46s/it, lr=7e-5, step_loss=0.0117]Steps:   3%|▎         | 670/24850 [05:18<9:49:52,  1.46s/it, lr=7e-5, step_loss=0.00193]torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:   3%|▎         | 671/24850 [05:19<9:50:43,  1.47s/it, lr=7e-5, step_loss=0.00193]Steps:   3%|▎         | 671/24850 [05:19<9:50:43,  1.47s/it, lr=7e-5, step_loss=0.0114] Steps:   3%|▎         | 672/24850 [05:21<9:52:25,  1.47s/it, lr=7e-5, step_loss=0.0114]Steps:   3%|▎         | 672/24850 [05:21<9:52:25,  1.47s/it, lr=7e-5, step_loss=0.0429]Steps:   3%|▎         | 673/24850 [05:22<9:52:31,  1.47s/it, lr=7e-5, step_loss=0.0429]Steps:   3%|▎         | 673/24850 [05:22<9:52:31,  1.47s/it, lr=7e-5, step_loss=0.00959]Steps:   3%|▎         | 674/24850 [05:23<9:51:54,  1.47s/it, lr=7e-5, step_loss=0.00959]Steps:   3%|▎         | 674/24850 [05:23<9:51:54,  1.47s/it, lr=7e-5, step_loss=0.0227] Steps:   3%|▎         | 675/24850 [05:25<9:51:16,  1.47s/it, lr=7e-5, step_loss=0.0227]Steps:   3%|▎         | 675/24850 [05:25<9:51:16,  1.47s/it, lr=7e-5, step_loss=0.026] Steps:   3%|▎         | 676/24850 [05:26<9:49:46,  1.46s/it, lr=7e-5, step_loss=0.026]Steps:   3%|▎         | 676/24850 [05:26<9:49:46,  1.46s/it, lr=7e-5, step_loss=0.056]Steps:   3%|▎         | 677/24850 [05:28<9:49:52,  1.46s/it, lr=7e-5, step_loss=0.056]Steps:   3%|▎         | 677/24850 [05:28<9:49:52,  1.46s/it, lr=7e-5, step_loss=0.0274]Steps:   3%|▎         | 678/24850 [05:29<9:49:47,  1.46s/it, lr=7e-5, step_loss=0.0274]Steps:   3%|▎         | 678/24850 [05:29<9:49:47,  1.46s/it, lr=7e-5, step_loss=0.0617]Steps:   3%|▎         | 679/24850 [05:31<9:48:52,  1.46s/it, lr=7e-5, step_loss=0.0617]Steps:   3%|▎         | 679/24850 [05:31<9:48:52,  1.46s/it, lr=7e-5, step_loss=0.0216]Steps:   3%|▎         | 680/24850 [05:32<9:48:22,  1.46s/it, lr=7e-5, step_loss=0.0216]Steps:   3%|▎         | 680/24850 [05:32<9:48:22,  1.46s/it, lr=7e-5, step_loss=0.025] Steps:   3%|▎         | 681/24850 [05:34<9:50:32,  1.47s/it, lr=7e-5, step_loss=0.025]Steps:   3%|▎         | 681/24850 [05:34<9:50:32,  1.47s/it, lr=7e-5, step_loss=0.0369]Steps:   3%|▎         | 682/24850 [05:35<9:50:26,  1.47s/it, lr=7e-5, step_loss=0.0369]Steps:   3%|▎         | 682/24850 [05:35<9:50:26,  1.47s/it, lr=7e-5, step_loss=0.00179]Steps:   3%|▎         | 683/24850 [05:37<9:50:22,  1.47s/it, lr=7e-5, step_loss=0.00179]Steps:   3%|▎         | 683/24850 [05:37<9:50:22,  1.47s/it, lr=7e-5, step_loss=0.0143] Steps:   3%|▎         | 684/24850 [05:38<9:50:33,  1.47s/it, lr=7e-5, step_loss=0.0143]Steps:   3%|▎         | 684/24850 [05:38<9:50:33,  1.47s/it, lr=7e-5, step_loss=0.0745]Steps:   3%|▎         | 685/24850 [05:40<9:49:20,  1.46s/it, lr=7e-5, step_loss=0.0745]Steps:   3%|▎         | 685/24850 [05:40<9:49:20,  1.46s/it, lr=7e-5, step_loss=0.00272]Steps:   3%|▎         | 686/24850 [05:41<9:47:37,  1.46s/it, lr=7e-5, step_loss=0.00272]Steps:   3%|▎         | 686/24850 [05:41<9:47:37,  1.46s/it, lr=7e-5, step_loss=0.0135] Steps:   3%|▎         | 687/24850 [05:43<9:52:14,  1.47s/it, lr=7e-5, step_loss=0.0135]Steps:   3%|▎         | 687/24850 [05:43<9:52:14,  1.47s/it, lr=7e-5, step_loss=0.0315]Steps:   3%|▎         | 688/24850 [05:44<9:53:32,  1.47s/it, lr=7e-5, step_loss=0.0315]Steps:   3%|▎         | 688/24850 [05:44<9:53:32,  1.47s/it, lr=7e-5, step_loss=0.0243]Steps:   3%|▎         | 689/24850 [05:45<9:52:50,  1.47s/it, lr=7e-5, step_loss=0.0243]Steps:   3%|▎         | 689/24850 [05:45<9:52:50,  1.47s/it, lr=7e-5, step_loss=0.0831]Steps:   3%|▎         | 690/24850 [05:47<9:55:34,  1.48s/it, lr=7e-5, step_loss=0.0831]Steps:   3%|▎         | 690/24850 [05:47<9:55:34,  1.48s/it, lr=7e-5, step_loss=0.023] Steps:   3%|▎         | 691/24850 [05:48<9:54:15,  1.48s/it, lr=7e-5, step_loss=0.023]Steps:   3%|▎         | 691/24850 [05:48<9:54:15,  1.48s/it, lr=7e-5, step_loss=0.0407]Steps:   3%|▎         | 692/24850 [05:50<9:52:15,  1.47s/it, lr=7e-5, step_loss=0.0407]Steps:   3%|▎         | 692/24850 [05:50<9:52:15,  1.47s/it, lr=7e-5, step_loss=0.0147]Steps:   3%|▎         | 693/24850 [05:51<9:51:55,  1.47s/it, lr=7e-5, step_loss=0.0147]Steps:   3%|▎         | 693/24850 [05:51<9:51:55,  1.47s/it, lr=7e-5, step_loss=0.0259]Steps:   3%|▎         | 694/24850 [05:53<9:51:30,  1.47s/it, lr=7e-5, step_loss=0.0259]Steps:   3%|▎         | 694/24850 [05:53<9:51:30,  1.47s/it, lr=7e-5, step_loss=0.0205]Steps:   3%|▎         | 695/24850 [05:54<9:51:34,  1.47s/it, lr=7e-5, step_loss=0.0205]Steps:   3%|▎         | 695/24850 [05:54<9:51:34,  1.47s/it, lr=7e-5, step_loss=0.0422]Steps:   3%|▎         | 696/24850 [05:56<9:52:14,  1.47s/it, lr=7e-5, step_loss=0.0422]Steps:   3%|▎         | 696/24850 [05:56<9:52:14,  1.47s/it, lr=7e-5, step_loss=0.0154]Steps:   3%|▎         | 697/24850 [05:57<9:54:55,  1.48s/it, lr=7e-5, step_loss=0.0154]Steps:   3%|▎         | 697/24850 [05:57<9:54:55,  1.48s/it, lr=7e-5, step_loss=0.0628]Steps:   3%|▎         | 698/24850 [05:59<9:53:00,  1.47s/it, lr=7e-5, step_loss=0.0628]Steps:   3%|▎         | 698/24850 [05:59<9:53:00,  1.47s/it, lr=7e-5, step_loss=0.0181]torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
Steps:   3%|▎         | 699/24850 [06:01<11:52:39,  1.77s/it, lr=7e-5, step_loss=0.0181]Steps:   3%|▎         | 699/24850 [06:01<11:52:39,  1.77s/it, lr=7e-5, step_loss=0.0369]Steps:   3%|▎         | 700/24850 [06:03<11:14:42,  1.68s/it, lr=7e-5, step_loss=0.0369]Steps:   3%|▎         | 700/24850 [06:03<11:14:42,  1.68s/it, lr=7e-5, step_loss=0.00453]Steps:   3%|▎         | 701/24850 [06:04<10:49:58,  1.61s/it, lr=7e-5, step_loss=0.00453]Steps:   3%|▎         | 701/24850 [06:04<10:49:58,  1.61s/it, lr=7e-5, step_loss=0.0529] Steps:   3%|▎         | 702/24850 [06:06<10:34:05,  1.58s/it, lr=7e-5, step_loss=0.0529]Steps:   3%|▎         | 702/24850 [06:06<10:34:05,  1.58s/it, lr=7e-5, step_loss=0.0222]Steps:   3%|▎         | 703/24850 [06:07<10:20:39,  1.54s/it, lr=7e-5, step_loss=0.0222]Steps:   3%|▎         | 703/24850 [06:07<10:20:39,  1.54s/it, lr=7e-5, step_loss=0.0185]Steps:   3%|▎         | 704/24850 [06:09<10:11:12,  1.52s/it, lr=7e-5, step_loss=0.0185]Steps:   3%|▎         | 704/24850 [06:09<10:11:12,  1.52s/it, lr=7e-5, step_loss=0.00169]Steps:   3%|▎         | 705/24850 [06:10<10:05:30,  1.50s/it, lr=7e-5, step_loss=0.00169]Steps:   3%|▎         | 705/24850 [06:10<10:05:30,  1.50s/it, lr=7e-5, step_loss=0.0455] Steps:   3%|▎         | 706/24850 [06:11<10:01:24,  1.49s/it, lr=7e-5, step_loss=0.0455]Steps:   3%|▎         | 706/24850 [06:11<10:01:24,  1.49s/it, lr=7e-5, step_loss=0.0433]Steps:   3%|▎         | 707/24850 [06:13<9:58:18,  1.49s/it, lr=7e-5, step_loss=0.0433] Steps:   3%|▎         | 707/24850 [06:13<9:58:18,  1.49s/it, lr=7e-5, step_loss=0.0389]Steps:   3%|▎         | 708/24850 [06:14<9:56:07,  1.48s/it, lr=7e-5, step_loss=0.0389]Steps:   3%|▎         | 708/24850 [06:14<9:56:07,  1.48s/it, lr=7e-5, step_loss=0.00929]Steps:   3%|▎         | 709/24850 [06:16<9:55:09,  1.48s/it, lr=7e-5, step_loss=0.00929]Steps:   3%|▎         | 709/24850 [06:16<9:55:09,  1.48s/it, lr=7e-5, step_loss=0.071]  Steps:   3%|▎         | 710/24850 [06:17<9:54:16,  1.48s/it, lr=7e-5, step_loss=0.071]Steps:   3%|▎         | 710/24850 [06:17<9:54:16,  1.48s/it, lr=7e-5, step_loss=0.0187]Steps:   3%|▎         | 711/24850 [06:19<9:53:03,  1.47s/it, lr=7e-5, step_loss=0.0187]Steps:   3%|▎         | 711/24850 [06:19<9:53:03,  1.47s/it, lr=7e-5, step_loss=0.00382]Steps:   3%|▎         | 712/24850 [06:20<9:52:17,  1.47s/it, lr=7e-5, step_loss=0.00382]Steps:   3%|▎         | 712/24850 [06:20<9:52:17,  1.47s/it, lr=7e-5, step_loss=0.0168] Steps:   3%|▎         | 713/24850 [06:22<9:53:06,  1.47s/it, lr=7e-5, step_loss=0.0168]Steps:   3%|▎         | 713/24850 [06:22<9:53:06,  1.47s/it, lr=7e-5, step_loss=0.0129]Steps:   3%|▎         | 714/24850 [06:23<9:51:39,  1.47s/it, lr=7e-5, step_loss=0.0129]Steps:   3%|▎         | 714/24850 [06:23<9:51:39,  1.47s/it, lr=7e-5, step_loss=0.0317]Steps:   3%|▎         | 715/24850 [06:25<9:53:18,  1.47s/it, lr=7e-5, step_loss=0.0317]Steps:   3%|▎         | 715/24850 [06:25<9:53:18,  1.47s/it, lr=7e-5, step_loss=0.0386]Steps:   3%|▎         | 716/24850 [06:26<9:52:26,  1.47s/it, lr=7e-5, step_loss=0.0386]Steps:   3%|▎         | 716/24850 [06:26<9:52:26,  1.47s/it, lr=7e-5, step_loss=0.0559]Steps:   3%|▎         | 717/24850 [06:28<9:51:47,  1.47s/it, lr=7e-5, step_loss=0.0559]Steps:   3%|▎         | 717/24850 [06:28<9:51:47,  1.47s/it, lr=7e-5, step_loss=0.0111]Steps:   3%|▎         | 718/24850 [06:29<9:52:01,  1.47s/it, lr=7e-5, step_loss=0.0111]Steps:   3%|▎         | 718/24850 [06:29<9:52:01,  1.47s/it, lr=7e-5, step_loss=0.0314]Steps:   3%|▎         | 719/24850 [06:31<9:51:36,  1.47s/it, lr=7e-5, step_loss=0.0314]Steps:   3%|▎         | 719/24850 [06:31<9:51:36,  1.47s/it, lr=7e-5, step_loss=0.126] Steps:   3%|▎         | 720/24850 [06:32<9:51:06,  1.47s/it, lr=7e-5, step_loss=0.126]Steps:   3%|▎         | 720/24850 [06:32<9:51:06,  1.47s/it, lr=7e-5, step_loss=0.00598]Steps:   3%|▎         | 721/24850 [06:34<9:49:15,  1.47s/it, lr=7e-5, step_loss=0.00598]Steps:   3%|▎         | 721/24850 [06:34<9:49:15,  1.47s/it, lr=7e-5, step_loss=0.0229] Steps:   3%|▎         | 722/24850 [06:35<9:50:25,  1.47s/it, lr=7e-5, step_loss=0.0229]Steps:   3%|▎         | 722/24850 [06:35<9:50:25,  1.47s/it, lr=7e-5, step_loss=0.0706]Steps:   3%|▎         | 723/24850 [06:36<9:54:21,  1.48s/it, lr=7e-5, step_loss=0.0706]Steps:   3%|▎         | 723/24850 [06:36<9:54:21,  1.48s/it, lr=7e-5, step_loss=0.0189]Steps:   3%|▎         | 724/24850 [06:38<9:56:26,  1.48s/it, lr=7e-5, step_loss=0.0189]Steps:   3%|▎         | 724/24850 [06:38<9:56:26,  1.48s/it, lr=7e-5, step_loss=0.033] Steps:   3%|▎         | 725/24850 [06:39<9:53:40,  1.48s/it, lr=7e-5, step_loss=0.033]Steps:   3%|▎         | 725/24850 [06:39<9:53:40,  1.48s/it, lr=7e-5, step_loss=0.00688](512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512)Steps:   3%|▎         | 726/24850 [06:41<9:51:37,  1.47s/it, lr=7e-5, step_loss=0.00688]Steps:   3%|▎         | 726/24850 [06:41<9:51:37,  1.47s/it, lr=7e-5, step_loss=0.0185] Steps:   3%|▎         | 727/24850 [06:42<9:54:56,  1.48s/it, lr=7e-5, step_loss=0.0185]Steps:   3%|▎         | 727/24850 [06:42<9:54:56,  1.48s/it, lr=7e-5, step_loss=0.00757]Steps:   3%|▎         | 728/24850 [06:44<9:55:44,  1.48s/it, lr=7e-5, step_loss=0.00757]Steps:   3%|▎         | 728/24850 [06:44<9:55:44,  1.48s/it, lr=7e-5, step_loss=0.0326] Steps:   3%|▎         | 729/24850 [06:45<9:56:05,  1.48s/it, lr=7e-5, step_loss=0.0326]Steps:   3%|▎         | 729/24850 [06:45<9:56:05,  1.48s/it, lr=7e-5, step_loss=0.00452]Steps:   3%|▎         | 730/24850 [06:47<9:54:11,  1.48s/it, lr=7e-5, step_loss=0.00452]Steps:   3%|▎         | 730/24850 [06:47<9:54:11,  1.48s/it, lr=7e-5, step_loss=0.00424]Steps:   3%|▎         | 731/24850 [06:48<9:54:45,  1.48s/it, lr=7e-5, step_loss=0.00424]Steps:   3%|▎         | 731/24850 [06:48<9:54:45,  1.48s/it, lr=7e-5, step_loss=0.0226] Steps:   3%|▎         | 732/24850 [06:50<9:53:17,  1.48s/it, lr=7e-5, step_loss=0.0226]Steps:   3%|▎         | 732/24850 [06:50<9:53:17,  1.48s/it, lr=7e-5, step_loss=0.0546]Steps:   3%|▎         | 733/24850 [06:51<9:53:37,  1.48s/it, lr=7e-5, step_loss=0.0546]Steps:   3%|▎         | 733/24850 [06:51<9:53:37,  1.48s/it, lr=7e-5, step_loss=0.0215]Steps:   3%|▎         | 734/24850 [06:53<9:52:39,  1.47s/it, lr=7e-5, step_loss=0.0215]Steps:   3%|▎         | 734/24850 [06:53<9:52:39,  1.47s/it, lr=7e-5, step_loss=0.0183]Steps:   3%|▎         | 735/24850 [06:54<9:51:41,  1.47s/it, lr=7e-5, step_loss=0.0183]Steps:   3%|▎         | 735/24850 [06:54<9:51:41,  1.47s/it, lr=7e-5, step_loss=0.102] Steps:   3%|▎         | 736/24850 [06:56<9:50:51,  1.47s/it, lr=7e-5, step_loss=0.102]Steps:   3%|▎         | 736/24850 [06:56<9:50:51,  1.47s/it, lr=7e-5, step_loss=0.0346]Steps:   3%|▎         | 737/24850 [06:57<9:50:41,  1.47s/it, lr=7e-5, step_loss=0.0346]Steps:   3%|▎         | 737/24850 [06:57<9:50:41,  1.47s/it, lr=7e-5, step_loss=0.054] Steps:   3%|▎         | 738/24850 [06:59<9:49:59,  1.47s/it, lr=7e-5, step_loss=0.054]Steps:   3%|▎         | 738/24850 [06:59<9:49:59,  1.47s/it, lr=7e-5, step_loss=0.0414]Steps:   3%|▎         | 739/24850 [07:00<9:50:04,  1.47s/it, lr=7e-5, step_loss=0.0414]Steps:   3%|▎         | 739/24850 [07:00<9:50:04,  1.47s/it, lr=7e-5, step_loss=0.0613]Steps:   3%|▎         | 740/24850 [07:02<9:51:26,  1.47s/it, lr=7e-5, step_loss=0.0613]Steps:   3%|▎         | 740/24850 [07:02<9:51:26,  1.47s/it, lr=7e-5, step_loss=0.0346]Steps:   3%|▎         | 741/24850 [07:03<9:53:15,  1.48s/it, lr=7e-5, step_loss=0.0346]Steps:   3%|▎         | 741/24850 [07:03<9:53:15,  1.48s/it, lr=7e-5, step_loss=0.0142]Steps:   3%|▎         | 742/24850 [07:05<9:52:19,  1.47s/it, lr=7e-5, step_loss=0.0142]Steps:   3%|▎         | 742/24850 [07:05<9:52:19,  1.47s/it, lr=7e-5, step_loss=0.247] Steps:   3%|▎         | 743/24850 [07:06<9:50:18,  1.47s/it, lr=7e-5, step_loss=0.247]Steps:   3%|▎         | 743/24850 [07:06<9:50:18,  1.47s/it, lr=7e-5, step_loss=0.0113]Steps:   3%|▎         | 744/24850 [07:07<9:50:31,  1.47s/it, lr=7e-5, step_loss=0.0113]Steps:   3%|▎         | 744/24850 [07:07<9:50:31,  1.47s/it, lr=7e-5, step_loss=0.028] Steps:   3%|▎         | 745/24850 [07:09<9:49:56,  1.47s/it, lr=7e-5, step_loss=0.028]Steps:   3%|▎         | 745/24850 [07:09<9:49:56,  1.47s/it, lr=7e-5, step_loss=0.0437]Steps:   3%|▎         | 746/24850 [07:10<9:50:04,  1.47s/it, lr=7e-5, step_loss=0.0437]Steps:   3%|▎         | 746/24850 [07:10<9:50:04,  1.47s/it, lr=7e-5, step_loss=0.0286]Steps:   3%|▎         | 747/24850 [07:12<9:49:21,  1.47s/it, lr=7e-5, step_loss=0.0286]Steps:   3%|▎         | 747/24850 [07:12<9:49:21,  1.47s/it, lr=7e-5, step_loss=0.00545]Steps:   3%|▎         | 748/24850 [07:13<9:47:57,  1.46s/it, lr=7e-5, step_loss=0.00545]Steps:   3%|▎         | 748/24850 [07:13<9:47:57,  1.46s/it, lr=7e-5, step_loss=0.0585] Steps:   3%|▎         | 749/24850 [07:16<11:47:07,  1.76s/it, lr=7e-5, step_loss=0.0585]Steps:   3%|▎         | 749/24850 [07:16<11:47:07,  1.76s/it, lr=7e-5, step_loss=0.0942]Steps:   3%|▎         | 750/24850 [07:17<11:09:36,  1.67s/it, lr=7e-5, step_loss=0.0942]Steps:   3%|▎         | 750/24850 [07:17<11:09:36,  1.67s/it, lr=7e-5, step_loss=0.0037]Steps:   3%|▎         | 751/24850 [07:19<10:44:53,  1.61s/it, lr=7e-5, step_loss=0.0037]Steps:   3%|▎         | 751/24850 [07:19<10:44:53,  1.61s/it, lr=7e-5, step_loss=0.00428]Steps:   3%|▎         | 752/24850 [07:20<10:28:00,  1.56s/it, lr=7e-5, step_loss=0.00428]Steps:   3%|▎         | 752/24850 [07:20<10:28:00,  1.56s/it, lr=7e-5, step_loss=0.183]   torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:   3%|▎         | 753/24850 [07:22<10:14:18,  1.53s/it, lr=7e-5, step_loss=0.183]Steps:   3%|▎         | 753/24850 [07:22<10:14:18,  1.53s/it, lr=7e-5, step_loss=0.0105]Steps:   3%|▎         | 754/24850 [07:23<10:05:48,  1.51s/it, lr=7e-5, step_loss=0.0105]Steps:   3%|▎         | 754/24850 [07:23<10:05:48,  1.51s/it, lr=7e-5, step_loss=0.00249]Steps:   3%|▎         | 755/24850 [07:24<9:59:50,  1.49s/it, lr=7e-5, step_loss=0.00249] Steps:   3%|▎         | 755/24850 [07:24<9:59:50,  1.49s/it, lr=7e-5, step_loss=0.0889] Steps:   3%|▎         | 756/24850 [07:26<9:56:36,  1.49s/it, lr=7e-5, step_loss=0.0889]Steps:   3%|▎         | 756/24850 [07:26<9:56:36,  1.49s/it, lr=7e-5, step_loss=0.0092]Steps:   3%|▎         | 757/24850 [07:27<9:53:49,  1.48s/it, lr=7e-5, step_loss=0.0092]Steps:   3%|▎         | 757/24850 [07:27<9:53:49,  1.48s/it, lr=7e-5, step_loss=0.00713]Steps:   3%|▎         | 758/24850 [07:29<9:51:50,  1.47s/it, lr=7e-5, step_loss=0.00713]Steps:   3%|▎         | 758/24850 [07:29<9:51:50,  1.47s/it, lr=7e-5, step_loss=0.139]  Steps:   3%|▎         | 759/24850 [07:30<9:49:13,  1.47s/it, lr=7e-5, step_loss=0.139]Steps:   3%|▎         | 759/24850 [07:30<9:49:13,  1.47s/it, lr=7e-5, step_loss=0.019]Steps:   3%|▎         | 760/24850 [07:32<9:51:32,  1.47s/it, lr=7e-5, step_loss=0.019]Steps:   3%|▎         | 760/24850 [07:32<9:51:32,  1.47s/it, lr=7e-5, step_loss=0.00461]Steps:   3%|▎         | 761/24850 [07:33<9:50:30,  1.47s/it, lr=7e-5, step_loss=0.00461]Steps:   3%|▎         | 761/24850 [07:33<9:50:30,  1.47s/it, lr=7e-5, step_loss=0.00376]Steps:   3%|▎         | 762/24850 [07:35<9:50:31,  1.47s/it, lr=7e-5, step_loss=0.00376]Steps:   3%|▎         | 762/24850 [07:35<9:50:31,  1.47s/it, lr=7e-5, step_loss=0.0159] Steps:   3%|▎         | 763/24850 [07:36<9:51:07,  1.47s/it, lr=7e-5, step_loss=0.0159]Steps:   3%|▎         | 763/24850 [07:36<9:51:07,  1.47s/it, lr=7e-5, step_loss=0.0215]Steps:   3%|▎         | 764/24850 [07:38<9:52:13,  1.48s/it, lr=7e-5, step_loss=0.0215]Steps:   3%|▎         | 764/24850 [07:38<9:52:13,  1.48s/it, lr=7e-5, step_loss=0.013] Steps:   3%|▎         | 765/24850 [07:39<9:51:25,  1.47s/it, lr=7e-5, step_loss=0.013]Steps:   3%|▎         | 765/24850 [07:39<9:51:25,  1.47s/it, lr=7e-5, step_loss=0.162]Steps:   3%|▎         | 766/24850 [07:41<9:49:59,  1.47s/it, lr=7e-5, step_loss=0.162]Steps:   3%|▎         | 766/24850 [07:41<9:49:59,  1.47s/it, lr=7e-5, step_loss=0.0162]Steps:   3%|▎         | 767/24850 [07:42<9:54:46,  1.48s/it, lr=7e-5, step_loss=0.0162]Steps:   3%|▎         | 767/24850 [07:42<9:54:46,  1.48s/it, lr=7e-5, step_loss=0.038] Steps:   3%|▎         | 768/24850 [07:44<9:54:28,  1.48s/it, lr=7e-5, step_loss=0.038]Steps:   3%|▎         | 768/24850 [07:44<9:54:28,  1.48s/it, lr=7e-5, step_loss=0.0955]Steps:   3%|▎         | 769/24850 [07:45<9:54:30,  1.48s/it, lr=7e-5, step_loss=0.0955]Steps:   3%|▎         | 769/24850 [07:45<9:54:30,  1.48s/it, lr=7e-5, step_loss=0.0146]Steps:   3%|▎         | 770/24850 [07:47<9:53:22,  1.48s/it, lr=7e-5, step_loss=0.0146]Steps:   3%|▎         | 770/24850 [07:47<9:53:22,  1.48s/it, lr=7e-5, step_loss=0.0186]Steps:   3%|▎         | 771/24850 [07:48<9:52:49,  1.48s/it, lr=7e-5, step_loss=0.0186]Steps:   3%|▎         | 771/24850 [07:48<9:52:49,  1.48s/it, lr=7e-5, step_loss=0.0066]Steps:   3%|▎         | 772/24850 [07:50<9:51:07,  1.47s/it, lr=7e-5, step_loss=0.0066]Steps:   3%|▎         | 772/24850 [07:50<9:51:07,  1.47s/it, lr=7e-5, step_loss=0.0791]Steps:   3%|▎         | 773/24850 [07:51<9:49:15,  1.47s/it, lr=7e-5, step_loss=0.0791]Steps:   3%|▎         | 773/24850 [07:51<9:49:15,  1.47s/it, lr=7e-5, step_loss=0.0164]Steps:   3%|▎         | 774/24850 [07:52<9:49:50,  1.47s/it, lr=7e-5, step_loss=0.0164]Steps:   3%|▎         | 774/24850 [07:52<9:49:50,  1.47s/it, lr=7e-5, step_loss=0.0607]Steps:   3%|▎         | 775/24850 [07:54<9:49:23,  1.47s/it, lr=7e-5, step_loss=0.0607]Steps:   3%|▎         | 775/24850 [07:54<9:49:23,  1.47s/it, lr=7e-5, step_loss=0.0521]Steps:   3%|▎         | 776/24850 [07:55<9:49:27,  1.47s/it, lr=7e-5, step_loss=0.0521]Steps:   3%|▎         | 776/24850 [07:55<9:49:27,  1.47s/it, lr=7e-5, step_loss=0.0356]Steps:   3%|▎         | 777/24850 [07:57<9:49:11,  1.47s/it, lr=7e-5, step_loss=0.0356]Steps:   3%|▎         | 777/24850 [07:57<9:49:11,  1.47s/it, lr=7e-5, step_loss=0.0372]Steps:   3%|▎         | 778/24850 [07:58<9:48:39,  1.47s/it, lr=7e-5, step_loss=0.0372]Steps:   3%|▎         | 778/24850 [07:58<9:48:39,  1.47s/it, lr=7e-5, step_loss=0.0916]Steps:   3%|▎         | 779/24850 [08:00<9:48:06,  1.47s/it, lr=7e-5, step_loss=0.0916]Steps:   3%|▎         | 779/24850 [08:00<9:48:06,  1.47s/it, lr=7e-5, step_loss=0.00604]torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  Steps:   3%|▎         | 780/24850 [08:01<9:47:17,  1.46s/it, lr=7e-5, step_loss=0.00604]Steps:   3%|▎         | 780/24850 [08:01<9:47:17,  1.46s/it, lr=7e-5, step_loss=0.0198] Steps:   3%|▎         | 781/24850 [08:03<9:46:53,  1.46s/it, lr=7e-5, step_loss=0.0198]Steps:   3%|▎         | 781/24850 [08:03<9:46:53,  1.46s/it, lr=7e-5, step_loss=0.0458]Steps:   3%|▎         | 782/24850 [08:04<9:46:00,  1.46s/it, lr=7e-5, step_loss=0.0458]Steps:   3%|▎         | 782/24850 [08:04<9:46:00,  1.46s/it, lr=7e-5, step_loss=0.0195]Steps:   3%|▎         | 783/24850 [08:06<9:44:55,  1.46s/it, lr=7e-5, step_loss=0.0195]Steps:   3%|▎         | 783/24850 [08:06<9:44:55,  1.46s/it, lr=7e-5, step_loss=0.00358]Steps:   3%|▎         | 784/24850 [08:07<9:46:18,  1.46s/it, lr=7e-5, step_loss=0.00358]Steps:   3%|▎         | 784/24850 [08:07<9:46:18,  1.46s/it, lr=7e-5, step_loss=0.00783]Steps:   3%|▎         | 785/24850 [08:09<9:44:42,  1.46s/it, lr=7e-5, step_loss=0.00783]Steps:   3%|▎         | 785/24850 [08:09<9:44:42,  1.46s/it, lr=7e-5, step_loss=0.0234] Steps:   3%|▎         | 786/24850 [08:10<9:44:11,  1.46s/it, lr=7e-5, step_loss=0.0234]Steps:   3%|▎         | 786/24850 [08:10<9:44:11,  1.46s/it, lr=7e-5, step_loss=0.0819]Steps:   3%|▎         | 787/24850 [08:11<9:44:44,  1.46s/it, lr=7e-5, step_loss=0.0819]Steps:   3%|▎         | 787/24850 [08:11<9:44:44,  1.46s/it, lr=7e-5, step_loss=0.0256]Steps:   3%|▎         | 788/24850 [08:13<9:45:22,  1.46s/it, lr=7e-5, step_loss=0.0256]Steps:   3%|▎         | 788/24850 [08:13<9:45:22,  1.46s/it, lr=7e-5, step_loss=0.185] Steps:   3%|▎         | 789/24850 [08:14<9:45:09,  1.46s/it, lr=7e-5, step_loss=0.185]Steps:   3%|▎         | 789/24850 [08:14<9:45:09,  1.46s/it, lr=7e-5, step_loss=0.0799]Steps:   3%|▎         | 790/24850 [08:16<9:45:27,  1.46s/it, lr=7e-5, step_loss=0.0799]Steps:   3%|▎         | 790/24850 [08:16<9:45:27,  1.46s/it, lr=7e-5, step_loss=0.0197]Steps:   3%|▎         | 791/24850 [08:17<9:45:06,  1.46s/it, lr=7e-5, step_loss=0.0197]Steps:   3%|▎         | 791/24850 [08:17<9:45:06,  1.46s/it, lr=7e-5, step_loss=0.0309]Steps:   3%|▎         | 792/24850 [08:19<9:45:09,  1.46s/it, lr=7e-5, step_loss=0.0309]Steps:   3%|▎         | 792/24850 [08:19<9:45:09,  1.46s/it, lr=7e-5, step_loss=0.00497]Steps:   3%|▎         | 793/24850 [08:20<9:45:37,  1.46s/it, lr=7e-5, step_loss=0.00497]Steps:   3%|▎         | 793/24850 [08:20<9:45:37,  1.46s/it, lr=7e-5, step_loss=0.0249] Steps:   3%|▎         | 794/24850 [08:22<10:02:05,  1.50s/it, lr=7e-5, step_loss=0.0249]Steps:   3%|▎         | 794/24850 [08:22<10:02:05,  1.50s/it, lr=7e-5, step_loss=0.00147]Steps:   3%|▎         | 795/24850 [08:23<9:57:31,  1.49s/it, lr=7e-5, step_loss=0.00147] Steps:   3%|▎         | 795/24850 [08:23<9:57:31,  1.49s/it, lr=7e-5, step_loss=0.0129] Steps:   3%|▎         | 796/24850 [08:25<9:54:45,  1.48s/it, lr=7e-5, step_loss=0.0129]Steps:   3%|▎         | 796/24850 [08:25<9:54:45,  1.48s/it, lr=7e-5, step_loss=0.0156]Steps:   3%|▎         | 797/24850 [08:26<9:53:00,  1.48s/it, lr=7e-5, step_loss=0.0156]Steps:   3%|▎         | 797/24850 [08:26<9:53:00,  1.48s/it, lr=7e-5, step_loss=0.00627]Steps:   3%|▎         | 798/24850 [08:28<9:53:55,  1.48s/it, lr=7e-5, step_loss=0.00627]Steps:   3%|▎         | 798/24850 [08:28<9:53:55,  1.48s/it, lr=7e-5, step_loss=0.106]  Steps:   3%|▎         | 799/24850 [08:30<11:37:18,  1.74s/it, lr=7e-5, step_loss=0.106]Steps:   3%|▎         | 799/24850 [08:30<11:37:18,  1.74s/it, lr=7e-5, step_loss=0.0104]Steps:   3%|▎         | 800/24850 [08:31<11:02:52,  1.65s/it, lr=7e-5, step_loss=0.0104]Steps:   3%|▎         | 800/24850 [08:32<11:02:52,  1.65s/it, lr=7e-5, step_loss=0.00492]Steps:   3%|▎         | 801/24850 [08:33<10:41:51,  1.60s/it, lr=7e-5, step_loss=0.00492]Steps:   3%|▎         | 801/24850 [08:33<10:41:51,  1.60s/it, lr=7e-5, step_loss=0.035]  Steps:   3%|▎         | 802/24850 [08:34<10:24:27,  1.56s/it, lr=7e-5, step_loss=0.035]Steps:   3%|▎         | 802/24850 [08:34<10:24:27,  1.56s/it, lr=7e-5, step_loss=0.0044]Steps:   3%|▎         | 803/24850 [08:36<10:12:35,  1.53s/it, lr=7e-5, step_loss=0.0044]Steps:   3%|▎         | 803/24850 [08:36<10:12:35,  1.53s/it, lr=7e-5, step_loss=0.00597]Steps:   3%|▎         | 804/24850 [08:37<10:05:38,  1.51s/it, lr=7e-5, step_loss=0.00597]Steps:   3%|▎         | 804/24850 [08:37<10:05:38,  1.51s/it, lr=7e-5, step_loss=0.0082] Steps:   3%|▎         | 805/24850 [08:39<10:01:42,  1.50s/it, lr=7e-5, step_loss=0.0082]Steps:   3%|▎         | 805/24850 [08:39<10:01:42,  1.50s/it, lr=7e-5, step_loss=0.0853]Steps:   3%|▎         | 806/24850 [08:40<9:57:48,  1.49s/it, lr=7e-5, step_loss=0.0853] Steps:   3%|▎         | 806/24850 [08:40<9:57:48,  1.49s/it, lr=7e-5, step_loss=0.00552]Steps:   3%|▎         | 807/24850 [08:42<9:54:33,  1.48s/it, lr=7e-5, step_loss=0.00552]Steps:   3%|▎         | 807/24850 [08:42<9:54:33,  1.48s/it, lr=7e-5, step_loss=0.0259] mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:   3%|▎         | 808/24850 [08:43<9:55:24,  1.49s/it, lr=7e-5, step_loss=0.0259]Steps:   3%|▎         | 808/24850 [08:43<9:55:24,  1.49s/it, lr=7e-5, step_loss=0.0747]Steps:   3%|▎         | 809/24850 [08:45<9:57:23,  1.49s/it, lr=7e-5, step_loss=0.0747]Steps:   3%|▎         | 809/24850 [08:45<9:57:23,  1.49s/it, lr=7e-5, step_loss=0.00431]Steps:   3%|▎         | 810/24850 [08:46<9:55:03,  1.49s/it, lr=7e-5, step_loss=0.00431]Steps:   3%|▎         | 810/24850 [08:46<9:55:03,  1.49s/it, lr=7e-5, step_loss=0.0568] Steps:   3%|▎         | 811/24850 [08:48<9:53:14,  1.48s/it, lr=7e-5, step_loss=0.0568]Steps:   3%|▎         | 811/24850 [08:48<9:53:14,  1.48s/it, lr=7e-5, step_loss=0.0317]Steps:   3%|▎         | 812/24850 [08:49<9:53:34,  1.48s/it, lr=7e-5, step_loss=0.0317]Steps:   3%|▎         | 812/24850 [08:49<9:53:34,  1.48s/it, lr=7e-5, step_loss=0.029] Steps:   3%|▎         | 813/24850 [08:51<9:50:05,  1.47s/it, lr=7e-5, step_loss=0.029]Steps:   3%|▎         | 813/24850 [08:51<9:50:05,  1.47s/it, lr=7e-5, step_loss=0.0404]Steps:   3%|▎         | 814/24850 [08:52<9:49:03,  1.47s/it, lr=7e-5, step_loss=0.0404]Steps:   3%|▎         | 814/24850 [08:52<9:49:03,  1.47s/it, lr=7e-5, step_loss=0.00463]Steps:   3%|▎         | 815/24850 [08:54<9:48:27,  1.47s/it, lr=7e-5, step_loss=0.00463]Steps:   3%|▎         | 815/24850 [08:54<9:48:27,  1.47s/it, lr=7e-5, step_loss=0.00944]Steps:   3%|▎         | 816/24850 [08:55<9:47:39,  1.47s/it, lr=7e-5, step_loss=0.00944]Steps:   3%|▎         | 816/24850 [08:55<9:47:39,  1.47s/it, lr=7e-5, step_loss=0.00393]Steps:   3%|▎         | 817/24850 [08:57<9:46:18,  1.46s/it, lr=7e-5, step_loss=0.00393]Steps:   3%|▎         | 817/24850 [08:57<9:46:18,  1.46s/it, lr=7e-5, step_loss=0.0385] Steps:   3%|▎         | 818/24850 [08:58<9:45:30,  1.46s/it, lr=7e-5, step_loss=0.0385]Steps:   3%|▎         | 818/24850 [08:58<9:45:30,  1.46s/it, lr=7e-5, step_loss=0.0217]Steps:   3%|▎         | 819/24850 [08:59<9:46:40,  1.46s/it, lr=7e-5, step_loss=0.0217]Steps:   3%|▎         | 819/24850 [08:59<9:46:40,  1.46s/it, lr=7e-5, step_loss=0.0262]Steps:   3%|▎         | 820/24850 [09:01<9:45:32,  1.46s/it, lr=7e-5, step_loss=0.0262]Steps:   3%|▎         | 820/24850 [09:01<9:45:32,  1.46s/it, lr=7e-5, step_loss=0.0374]Steps:   3%|▎         | 821/24850 [09:02<9:47:04,  1.47s/it, lr=7e-5, step_loss=0.0374]Steps:   3%|▎         | 821/24850 [09:02<9:47:04,  1.47s/it, lr=7e-5, step_loss=0.0724]Steps:   3%|▎         | 822/24850 [09:04<9:48:19,  1.47s/it, lr=7e-5, step_loss=0.0724]Steps:   3%|▎         | 822/24850 [09:04<9:48:19,  1.47s/it, lr=7e-5, step_loss=0.005] Steps:   3%|▎         | 823/24850 [09:05<9:47:48,  1.47s/it, lr=7e-5, step_loss=0.005]Steps:   3%|▎         | 823/24850 [09:05<9:47:48,  1.47s/it, lr=7e-5, step_loss=0.0174]Steps:   3%|▎         | 824/24850 [09:07<9:46:32,  1.46s/it, lr=7e-5, step_loss=0.0174]Steps:   3%|▎         | 824/24850 [09:07<9:46:32,  1.46s/it, lr=7e-5, step_loss=0.0438]Steps:   3%|▎         | 825/24850 [09:08<9:45:56,  1.46s/it, lr=7e-5, step_loss=0.0438]Steps:   3%|▎         | 825/24850 [09:08<9:45:56,  1.46s/it, lr=7e-5, step_loss=0.0127]Steps:   3%|▎         | 826/24850 [09:10<9:45:44,  1.46s/it, lr=7e-5, step_loss=0.0127]Steps:   3%|▎         | 826/24850 [09:10<9:45:44,  1.46s/it, lr=7e-5, step_loss=0.0575]Steps:   3%|▎         | 827/24850 [09:11<9:44:49,  1.46s/it, lr=7e-5, step_loss=0.0575]Steps:   3%|▎         | 827/24850 [09:11<9:44:49,  1.46s/it, lr=7e-5, step_loss=0.0445]Steps:   3%|▎         | 828/24850 [09:13<9:45:19,  1.46s/it, lr=7e-5, step_loss=0.0445]Steps:   3%|▎         | 828/24850 [09:13<9:45:19,  1.46s/it, lr=7e-5, step_loss=0.00201]Steps:   3%|▎         | 829/24850 [09:14<9:45:09,  1.46s/it, lr=7e-5, step_loss=0.00201]Steps:   3%|▎         | 829/24850 [09:14<9:45:09,  1.46s/it, lr=7e-5, step_loss=0.0195] Steps:   3%|▎         | 830/24850 [09:16<9:46:05,  1.46s/it, lr=7e-5, step_loss=0.0195]Steps:   3%|▎         | 830/24850 [09:16<9:46:05,  1.46s/it, lr=7e-5, step_loss=0.0672]Steps:   3%|▎         | 831/24850 [09:17<9:47:24,  1.47s/it, lr=7e-5, step_loss=0.0672]Steps:   3%|▎         | 831/24850 [09:17<9:47:24,  1.47s/it, lr=7e-5, step_loss=0.0339]Steps:   3%|▎         | 832/24850 [09:18<9:47:14,  1.47s/it, lr=7e-5, step_loss=0.0339]Steps:   3%|▎         | 832/24850 [09:18<9:47:14,  1.47s/it, lr=7e-5, step_loss=0.021] Steps:   3%|▎         | 833/24850 [09:20<9:46:08,  1.46s/it, lr=7e-5, step_loss=0.021]Steps:   3%|▎         | 833/24850 [09:20<9:46:08,  1.46s/it, lr=7e-5, step_loss=0.0512]Steps:   3%|▎         | 834/24850 [09:21<9:44:31,  1.46s/it, lr=7e-5, step_loss=0.0512]Steps:   3%|▎         | 834/24850 [09:21<9:44:31,  1.46s/it, lr=7e-5, step_loss=0.0202]torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) Steps:   3%|▎         | 835/24850 [09:23<9:45:50,  1.46s/it, lr=7e-5, step_loss=0.0202]Steps:   3%|▎         | 835/24850 [09:23<9:45:50,  1.46s/it, lr=7e-5, step_loss=0.0336]Steps:   3%|▎         | 836/24850 [09:24<9:46:00,  1.46s/it, lr=7e-5, step_loss=0.0336]Steps:   3%|▎         | 836/24850 [09:24<9:46:00,  1.46s/it, lr=7e-5, step_loss=0.224] Steps:   3%|▎         | 837/24850 [09:26<9:45:54,  1.46s/it, lr=7e-5, step_loss=0.224]Steps:   3%|▎         | 837/24850 [09:26<9:45:54,  1.46s/it, lr=7e-5, step_loss=0.0157]Steps:   3%|▎         | 838/24850 [09:27<9:50:40,  1.48s/it, lr=7e-5, step_loss=0.0157]Steps:   3%|▎         | 838/24850 [09:27<9:50:40,  1.48s/it, lr=7e-5, step_loss=0.022] Steps:   3%|▎         | 839/24850 [09:29<9:50:43,  1.48s/it, lr=7e-5, step_loss=0.022]Steps:   3%|▎         | 839/24850 [09:29<9:50:43,  1.48s/it, lr=7e-5, step_loss=0.0132]Steps:   3%|▎         | 840/24850 [09:30<9:49:01,  1.47s/it, lr=7e-5, step_loss=0.0132]Steps:   3%|▎         | 840/24850 [09:30<9:49:01,  1.47s/it, lr=7e-5, step_loss=0.0204]Steps:   3%|▎         | 841/24850 [09:32<9:50:16,  1.48s/it, lr=7e-5, step_loss=0.0204]Steps:   3%|▎         | 841/24850 [09:32<9:50:16,  1.48s/it, lr=7e-5, step_loss=0.00886]Steps:   3%|▎         | 842/24850 [09:33<9:49:15,  1.47s/it, lr=7e-5, step_loss=0.00886]Steps:   3%|▎         | 842/24850 [09:33<9:49:15,  1.47s/it, lr=7e-5, step_loss=0.211]  Steps:   3%|▎         | 843/24850 [09:35<9:49:35,  1.47s/it, lr=7e-5, step_loss=0.211]Steps:   3%|▎         | 843/24850 [09:35<9:49:35,  1.47s/it, lr=7e-5, step_loss=0.00362]Steps:   3%|▎         | 844/24850 [09:36<9:50:06,  1.47s/it, lr=7e-5, step_loss=0.00362]Steps:   3%|▎         | 844/24850 [09:36<9:50:06,  1.47s/it, lr=7e-5, step_loss=0.103]  Steps:   3%|▎         | 845/24850 [09:38<9:50:04,  1.47s/it, lr=7e-5, step_loss=0.103]Steps:   3%|▎         | 845/24850 [09:38<9:50:04,  1.47s/it, lr=7e-5, step_loss=0.0111]Steps:   3%|▎         | 846/24850 [09:39<9:48:50,  1.47s/it, lr=7e-5, step_loss=0.0111]Steps:   3%|▎         | 846/24850 [09:39<9:48:50,  1.47s/it, lr=7e-5, step_loss=0.00117]Steps:   3%|▎         | 847/24850 [09:41<9:47:48,  1.47s/it, lr=7e-5, step_loss=0.00117]Steps:   3%|▎         | 847/24850 [09:41<9:47:48,  1.47s/it, lr=7e-5, step_loss=0.0253] Steps:   3%|▎         | 848/24850 [09:42<9:54:07,  1.49s/it, lr=7e-5, step_loss=0.0253]Steps:   3%|▎         | 848/24850 [09:42<9:54:07,  1.49s/it, lr=7e-5, step_loss=0.0569]Steps:   3%|▎         | 849/24850 [09:45<11:55:31,  1.79s/it, lr=7e-5, step_loss=0.0569]Steps:   3%|▎         | 849/24850 [09:45<11:55:31,  1.79s/it, lr=7e-5, step_loss=0.0392]Steps:   3%|▎         | 850/24850 [09:46<11:18:51,  1.70s/it, lr=7e-5, step_loss=0.0392]Steps:   3%|▎         | 850/24850 [09:46<11:18:51,  1.70s/it, lr=7e-5, step_loss=0.00469]Steps:   3%|▎         | 851/24850 [09:48<10:51:45,  1.63s/it, lr=7e-5, step_loss=0.00469]Steps:   3%|▎         | 851/24850 [09:48<10:51:45,  1.63s/it, lr=7e-5, step_loss=0.0148] Steps:   3%|▎         | 852/24850 [09:49<10:33:00,  1.58s/it, lr=7e-5, step_loss=0.0148]Steps:   3%|▎         | 852/24850 [09:49<10:33:00,  1.58s/it, lr=7e-5, step_loss=0.0149]Steps:   3%|▎         | 853/24850 [09:50<10:18:32,  1.55s/it, lr=7e-5, step_loss=0.0149]Steps:   3%|▎         | 853/24850 [09:50<10:18:32,  1.55s/it, lr=7e-5, step_loss=0.0211]Steps:   3%|▎         | 854/24850 [09:52<10:09:58,  1.53s/it, lr=7e-5, step_loss=0.0211]Steps:   3%|▎         | 854/24850 [09:52<10:09:58,  1.53s/it, lr=7e-5, step_loss=0.0275]Steps:   3%|▎         | 855/24850 [09:53<10:03:58,  1.51s/it, lr=7e-5, step_loss=0.0275]Steps:   3%|▎         | 855/24850 [09:53<10:03:58,  1.51s/it, lr=7e-5, step_loss=0.063] Steps:   3%|▎         | 856/24850 [09:55<10:00:45,  1.50s/it, lr=7e-5, step_loss=0.063]Steps:   3%|▎         | 856/24850 [09:55<10:00:45,  1.50s/it, lr=7e-5, step_loss=0.0435]Steps:   3%|▎         | 857/24850 [09:56<9:58:36,  1.50s/it, lr=7e-5, step_loss=0.0435] Steps:   3%|▎         | 857/24850 [09:56<9:58:36,  1.50s/it, lr=7e-5, step_loss=0.0203]Steps:   3%|▎         | 858/24850 [09:58<9:55:25,  1.49s/it, lr=7e-5, step_loss=0.0203]Steps:   3%|▎         | 858/24850 [09:58<9:55:25,  1.49s/it, lr=7e-5, step_loss=0.021] Steps:   3%|▎         | 859/24850 [09:59<9:55:02,  1.49s/it, lr=7e-5, step_loss=0.021]Steps:   3%|▎         | 859/24850 [09:59<9:55:02,  1.49s/it, lr=7e-5, step_loss=0.0112]Steps:   3%|▎         | 860/24850 [10:01<9:53:11,  1.48s/it, lr=7e-5, step_loss=0.0112]Steps:   3%|▎         | 860/24850 [10:01<9:53:11,  1.48s/it, lr=7e-5, step_loss=0.0202]Steps:   3%|▎         | 861/24850 [10:02<9:51:08,  1.48s/it, lr=7e-5, step_loss=0.0202]Steps:   3%|▎         | 861/24850 [10:02<9:51:08,  1.48s/it, lr=7e-5, step_loss=0.0127]torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:   3%|▎         | 862/24850 [10:04<9:50:53,  1.48s/it, lr=7e-5, step_loss=0.0127]Steps:   3%|▎         | 862/24850 [10:04<9:50:53,  1.48s/it, lr=7e-5, step_loss=0.00135]Steps:   3%|▎         | 863/24850 [10:05<9:49:38,  1.47s/it, lr=7e-5, step_loss=0.00135]Steps:   3%|▎         | 863/24850 [10:05<9:49:38,  1.47s/it, lr=7e-5, step_loss=0.0314] Steps:   3%|▎         | 864/24850 [10:07<9:49:41,  1.48s/it, lr=7e-5, step_loss=0.0314]Steps:   3%|▎         | 864/24850 [10:07<9:49:41,  1.48s/it, lr=7e-5, step_loss=0.0896]Steps:   3%|▎         | 865/24850 [10:08<9:51:16,  1.48s/it, lr=7e-5, step_loss=0.0896]Steps:   3%|▎         | 865/24850 [10:08<9:51:16,  1.48s/it, lr=7e-5, step_loss=0.0243]Steps:   3%|▎         | 866/24850 [10:10<9:49:53,  1.48s/it, lr=7e-5, step_loss=0.0243]Steps:   3%|▎         | 866/24850 [10:10<9:49:53,  1.48s/it, lr=7e-5, step_loss=0.00262]Steps:   3%|▎         | 867/24850 [10:11<9:49:05,  1.47s/it, lr=7e-5, step_loss=0.00262]Steps:   3%|▎         | 867/24850 [10:11<9:49:05,  1.47s/it, lr=7e-5, step_loss=0.00339]Steps:   3%|▎         | 868/24850 [10:13<9:48:57,  1.47s/it, lr=7e-5, step_loss=0.00339]Steps:   3%|▎         | 868/24850 [10:13<9:48:57,  1.47s/it, lr=7e-5, step_loss=0.0405] Steps:   3%|▎         | 869/24850 [10:14<9:47:11,  1.47s/it, lr=7e-5, step_loss=0.0405]Steps:   3%|▎         | 869/24850 [10:14<9:47:11,  1.47s/it, lr=7e-5, step_loss=0.00193]Steps:   4%|▎         | 870/24850 [10:16<9:48:30,  1.47s/it, lr=7e-5, step_loss=0.00193]Steps:   4%|▎         | 870/24850 [10:16<9:48:30,  1.47s/it, lr=7e-5, step_loss=0.0105] Steps:   4%|▎         | 871/24850 [10:17<9:48:54,  1.47s/it, lr=7e-5, step_loss=0.0105]Steps:   4%|▎         | 871/24850 [10:17<9:48:54,  1.47s/it, lr=7e-5, step_loss=0.0361]Steps:   4%|▎         | 872/24850 [10:18<9:48:07,  1.47s/it, lr=7e-5, step_loss=0.0361]Steps:   4%|▎         | 872/24850 [10:18<9:48:07,  1.47s/it, lr=7e-5, step_loss=0.0211]Steps:   4%|▎         | 873/24850 [10:20<9:47:26,  1.47s/it, lr=7e-5, step_loss=0.0211]Steps:   4%|▎         | 873/24850 [10:20<9:47:26,  1.47s/it, lr=7e-5, step_loss=0.0784]Steps:   4%|▎         | 874/24850 [10:21<9:46:29,  1.47s/it, lr=7e-5, step_loss=0.0784]Steps:   4%|▎         | 874/24850 [10:21<9:46:29,  1.47s/it, lr=7e-5, step_loss=0.00522]Steps:   4%|▎         | 875/24850 [10:23<9:45:31,  1.47s/it, lr=7e-5, step_loss=0.00522]Steps:   4%|▎         | 875/24850 [10:23<9:45:31,  1.47s/it, lr=7e-5, step_loss=0.0284] Steps:   4%|▎         | 876/24850 [10:24<9:46:49,  1.47s/it, lr=7e-5, step_loss=0.0284]Steps:   4%|▎         | 876/24850 [10:24<9:46:49,  1.47s/it, lr=7e-5, step_loss=0.0194]Steps:   4%|▎         | 877/24850 [10:26<9:46:15,  1.47s/it, lr=7e-5, step_loss=0.0194]Steps:   4%|▎         | 877/24850 [10:26<9:46:15,  1.47s/it, lr=7e-5, step_loss=0.018] Steps:   4%|▎         | 878/24850 [10:27<9:47:07,  1.47s/it, lr=7e-5, step_loss=0.018]Steps:   4%|▎         | 878/24850 [10:27<9:47:07,  1.47s/it, lr=7e-5, step_loss=0.0323]Steps:   4%|▎         | 879/24850 [10:29<9:47:03,  1.47s/it, lr=7e-5, step_loss=0.0323]Steps:   4%|▎         | 879/24850 [10:29<9:47:03,  1.47s/it, lr=7e-5, step_loss=0.0354]Steps:   4%|▎         | 880/24850 [10:30<9:46:21,  1.47s/it, lr=7e-5, step_loss=0.0354]Steps:   4%|▎         | 880/24850 [10:30<9:46:21,  1.47s/it, lr=7e-5, step_loss=0.002] Steps:   4%|▎         | 881/24850 [10:32<10:05:48,  1.52s/it, lr=7e-5, step_loss=0.002]Steps:   4%|▎         | 881/24850 [10:32<10:05:48,  1.52s/it, lr=7e-5, step_loss=0.0185]Steps:   4%|▎         | 882/24850 [10:33<10:00:54,  1.50s/it, lr=7e-5, step_loss=0.0185]Steps:   4%|▎         | 882/24850 [10:33<10:00:54,  1.50s/it, lr=7e-5, step_loss=0.0113]Steps:   4%|▎         | 883/24850 [10:35<9:56:55,  1.49s/it, lr=7e-5, step_loss=0.0113] Steps:   4%|▎         | 883/24850 [10:35<9:56:55,  1.49s/it, lr=7e-5, step_loss=0.0152]Steps:   4%|▎         | 884/24850 [10:36<9:53:33,  1.49s/it, lr=7e-5, step_loss=0.0152]Steps:   4%|▎         | 884/24850 [10:36<9:53:33,  1.49s/it, lr=7e-5, step_loss=0.0629]Steps:   4%|▎         | 885/24850 [10:38<9:52:36,  1.48s/it, lr=7e-5, step_loss=0.0629]Steps:   4%|▎         | 885/24850 [10:38<9:52:36,  1.48s/it, lr=7e-5, step_loss=0.0455]Steps:   4%|▎         | 886/24850 [10:39<9:54:42,  1.49s/it, lr=7e-5, step_loss=0.0455]Steps:   4%|▎         | 886/24850 [10:39<9:54:42,  1.49s/it, lr=7e-5, step_loss=0.0464]Steps:   4%|▎         | 887/24850 [10:41<9:53:29,  1.49s/it, lr=7e-5, step_loss=0.0464]Steps:   4%|▎         | 887/24850 [10:41<9:53:29,  1.49s/it, lr=7e-5, step_loss=0.00696]Steps:   4%|▎         | 888/24850 [10:42<10:01:41,  1.51s/it, lr=7e-5, step_loss=0.00696]Steps:   4%|▎         | 888/24850 [10:42<10:01:41,  1.51s/it, lr=7e-5, step_loss=0.0966] Steps:   4%|▎         | 889/24850 [10:44<10:02:54,  1.51s/it, lr=7e-5, step_loss=0.0966]Steps:   4%|▎         | 889/24850 [10:44<10:02:54,  1.51s/it, lr=7e-5, step_loss=0.0034]torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
Steps:   4%|▎         | 890/24850 [10:45<9:58:18,  1.50s/it, lr=7e-5, step_loss=0.0034] Steps:   4%|▎         | 890/24850 [10:45<9:58:18,  1.50s/it, lr=7e-5, step_loss=0.00576]Steps:   4%|▎         | 891/24850 [10:47<9:55:46,  1.49s/it, lr=7e-5, step_loss=0.00576]Steps:   4%|▎         | 891/24850 [10:47<9:55:46,  1.49s/it, lr=7e-5, step_loss=0.0669] Steps:   4%|▎         | 892/24850 [10:48<9:54:21,  1.49s/it, lr=7e-5, step_loss=0.0669]Steps:   4%|▎         | 892/24850 [10:48<9:54:21,  1.49s/it, lr=7e-5, step_loss=0.00532]Steps:   4%|▎         | 893/24850 [10:50<9:54:36,  1.49s/it, lr=7e-5, step_loss=0.00532]Steps:   4%|▎         | 893/24850 [10:50<9:54:36,  1.49s/it, lr=7e-5, step_loss=0.024]  Steps:   4%|▎         | 894/24850 [10:51<9:52:15,  1.48s/it, lr=7e-5, step_loss=0.024]Steps:   4%|▎         | 894/24850 [10:51<9:52:15,  1.48s/it, lr=7e-5, step_loss=0.0223]Steps:   4%|▎         | 895/24850 [10:53<9:49:32,  1.48s/it, lr=7e-5, step_loss=0.0223]Steps:   4%|▎         | 895/24850 [10:53<9:49:32,  1.48s/it, lr=7e-5, step_loss=0.0254]Steps:   4%|▎         | 896/24850 [10:54<9:48:40,  1.47s/it, lr=7e-5, step_loss=0.0254]Steps:   4%|▎         | 896/24850 [10:54<9:48:40,  1.47s/it, lr=7e-5, step_loss=0.0342]Steps:   4%|▎         | 897/24850 [10:56<9:47:55,  1.47s/it, lr=7e-5, step_loss=0.0342]Steps:   4%|▎         | 897/24850 [10:56<9:47:55,  1.47s/it, lr=7e-5, step_loss=0.00855]Steps:   4%|▎         | 898/24850 [10:57<9:48:32,  1.47s/it, lr=7e-5, step_loss=0.00855]Steps:   4%|▎         | 898/24850 [10:57<9:48:32,  1.47s/it, lr=7e-5, step_loss=0.0363] Steps:   4%|▎         | 899/24850 [10:59<11:28:18,  1.72s/it, lr=7e-5, step_loss=0.0363]Steps:   4%|▎         | 899/24850 [10:59<11:28:18,  1.72s/it, lr=7e-5, step_loss=0.0252]Steps:   4%|▎         | 900/24850 [11:01<10:57:57,  1.65s/it, lr=7e-5, step_loss=0.0252]Steps:   4%|▎         | 900/24850 [11:01<10:57:57,  1.65s/it, lr=7e-5, step_loss=0.0189]Steps:   4%|▎         | 901/24850 [11:02<10:36:25,  1.59s/it, lr=7e-5, step_loss=0.0189]Steps:   4%|▎         | 901/24850 [11:02<10:36:25,  1.59s/it, lr=7e-5, step_loss=0.0171]Steps:   4%|▎         | 902/24850 [11:04<10:20:46,  1.56s/it, lr=7e-5, step_loss=0.0171]Steps:   4%|▎         | 902/24850 [11:04<10:20:46,  1.56s/it, lr=7e-5, step_loss=0.0291]Steps:   4%|▎         | 903/24850 [11:05<10:10:53,  1.53s/it, lr=7e-5, step_loss=0.0291]Steps:   4%|▎         | 903/24850 [11:05<10:10:53,  1.53s/it, lr=7e-5, step_loss=0.0147]Steps:   4%|▎         | 904/24850 [11:07<10:01:23,  1.51s/it, lr=7e-5, step_loss=0.0147]Steps:   4%|▎         | 904/24850 [11:07<10:01:23,  1.51s/it, lr=7e-5, step_loss=0.0692]Steps:   4%|▎         | 905/24850 [11:08<9:57:25,  1.50s/it, lr=7e-5, step_loss=0.0692] Steps:   4%|▎         | 905/24850 [11:08<9:57:25,  1.50s/it, lr=7e-5, step_loss=0.0297]Steps:   4%|▎         | 906/24850 [11:10<9:54:08,  1.49s/it, lr=7e-5, step_loss=0.0297]Steps:   4%|▎         | 906/24850 [11:10<9:54:08,  1.49s/it, lr=7e-5, step_loss=0.05]  Steps:   4%|▎         | 907/24850 [11:11<9:49:51,  1.48s/it, lr=7e-5, step_loss=0.05]Steps:   4%|▎         | 907/24850 [11:11<9:49:51,  1.48s/it, lr=7e-5, step_loss=0.0815]Steps:   4%|▎         | 908/24850 [11:13<9:48:06,  1.47s/it, lr=7e-5, step_loss=0.0815]Steps:   4%|▎         | 908/24850 [11:13<9:48:06,  1.47s/it, lr=7e-5, step_loss=0.0075]Steps:   4%|▎         | 909/24850 [11:14<9:46:43,  1.47s/it, lr=7e-5, step_loss=0.0075]Steps:   4%|▎         | 909/24850 [11:14<9:46:43,  1.47s/it, lr=7e-5, step_loss=0.0224]Steps:   4%|▎         | 910/24850 [11:15<9:47:36,  1.47s/it, lr=7e-5, step_loss=0.0224]Steps:   4%|▎         | 910/24850 [11:15<9:47:36,  1.47s/it, lr=7e-5, step_loss=0.0205]Steps:   4%|▎         | 911/24850 [11:17<9:46:59,  1.47s/it, lr=7e-5, step_loss=0.0205]Steps:   4%|▎         | 911/24850 [11:17<9:46:59,  1.47s/it, lr=7e-5, step_loss=0.0131]Steps:   4%|▎         | 912/24850 [11:18<9:45:49,  1.47s/it, lr=7e-5, step_loss=0.0131]Steps:   4%|▎         | 912/24850 [11:18<9:45:49,  1.47s/it, lr=7e-5, step_loss=0.0386]Steps:   4%|▎         | 913/24850 [11:20<9:47:34,  1.47s/it, lr=7e-5, step_loss=0.0386]Steps:   4%|▎         | 913/24850 [11:20<9:47:34,  1.47s/it, lr=7e-5, step_loss=0.0306]Steps:   4%|▎         | 914/24850 [11:21<9:45:57,  1.47s/it, lr=7e-5, step_loss=0.0306]Steps:   4%|▎         | 914/24850 [11:21<9:45:57,  1.47s/it, lr=7e-5, step_loss=0.00584]Steps:   4%|▎         | 915/24850 [11:23<9:44:46,  1.47s/it, lr=7e-5, step_loss=0.00584]Steps:   4%|▎         | 915/24850 [11:23<9:44:46,  1.47s/it, lr=7e-5, step_loss=0.0364] Steps:   4%|▎         | 916/24850 [11:24<9:46:04,  1.47s/it, lr=7e-5, step_loss=0.0364]Steps:   4%|▎         | 916/24850 [11:24<9:46:04,  1.47s/it, lr=7e-5, step_loss=0.0263](512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512)Steps:   4%|▎         | 917/24850 [11:26<9:46:58,  1.47s/it, lr=7e-5, step_loss=0.0263]Steps:   4%|▎         | 917/24850 [11:26<9:46:58,  1.47s/it, lr=7e-5, step_loss=0.148] Steps:   4%|▎         | 918/24850 [11:27<9:45:11,  1.47s/it, lr=7e-5, step_loss=0.148]Steps:   4%|▎         | 918/24850 [11:27<9:45:11,  1.47s/it, lr=7e-5, step_loss=0.0913]Steps:   4%|▎         | 919/24850 [11:29<9:44:55,  1.47s/it, lr=7e-5, step_loss=0.0913]Steps:   4%|▎         | 919/24850 [11:29<9:44:55,  1.47s/it, lr=7e-5, step_loss=0.0573]Steps:   4%|▎         | 920/24850 [11:30<9:44:46,  1.47s/it, lr=7e-5, step_loss=0.0573]Steps:   4%|▎         | 920/24850 [11:30<9:44:46,  1.47s/it, lr=7e-5, step_loss=0.0293]Steps:   4%|▎         | 921/24850 [11:32<9:41:59,  1.46s/it, lr=7e-5, step_loss=0.0293]Steps:   4%|▎         | 921/24850 [11:32<9:41:59,  1.46s/it, lr=7e-5, step_loss=0.00125]Steps:   4%|▎         | 922/24850 [11:33<9:42:02,  1.46s/it, lr=7e-5, step_loss=0.00125]Steps:   4%|▎         | 922/24850 [11:33<9:42:02,  1.46s/it, lr=7e-5, step_loss=0.0292] Steps:   4%|▎         | 923/24850 [11:35<9:42:38,  1.46s/it, lr=7e-5, step_loss=0.0292]Steps:   4%|▎         | 923/24850 [11:35<9:42:38,  1.46s/it, lr=7e-5, step_loss=0.00728]Steps:   4%|▎         | 924/24850 [11:36<9:41:03,  1.46s/it, lr=7e-5, step_loss=0.00728]Steps:   4%|▎         | 924/24850 [11:36<9:41:03,  1.46s/it, lr=7e-5, step_loss=0.00137]Steps:   4%|▎         | 925/24850 [11:37<9:40:15,  1.46s/it, lr=7e-5, step_loss=0.00137]Steps:   4%|▎         | 925/24850 [11:37<9:40:15,  1.46s/it, lr=7e-5, step_loss=0.189]  Steps:   4%|▎         | 926/24850 [11:39<9:41:28,  1.46s/it, lr=7e-5, step_loss=0.189]Steps:   4%|▎         | 926/24850 [11:39<9:41:28,  1.46s/it, lr=7e-5, step_loss=0.0694]Steps:   4%|▎         | 927/24850 [11:40<9:43:32,  1.46s/it, lr=7e-5, step_loss=0.0694]Steps:   4%|▎         | 927/24850 [11:40<9:43:32,  1.46s/it, lr=7e-5, step_loss=0.00588]Steps:   4%|▎         | 928/24850 [11:42<9:44:14,  1.47s/it, lr=7e-5, step_loss=0.00588]Steps:   4%|▎         | 928/24850 [11:42<9:44:14,  1.47s/it, lr=7e-5, step_loss=0.0331] Steps:   4%|▎         | 929/24850 [11:43<9:47:29,  1.47s/it, lr=7e-5, step_loss=0.0331]Steps:   4%|▎         | 929/24850 [11:43<9:47:29,  1.47s/it, lr=7e-5, step_loss=0.0106]Steps:   4%|▎         | 930/24850 [11:45<9:49:31,  1.48s/it, lr=7e-5, step_loss=0.0106]Steps:   4%|▎         | 930/24850 [11:45<9:49:31,  1.48s/it, lr=7e-5, step_loss=0.0135]Steps:   4%|▎         | 931/24850 [11:46<9:49:58,  1.48s/it, lr=7e-5, step_loss=0.0135]Steps:   4%|▎         | 931/24850 [11:46<9:49:58,  1.48s/it, lr=7e-5, step_loss=0.0966]Steps:   4%|▍         | 932/24850 [11:48<9:49:21,  1.48s/it, lr=7e-5, step_loss=0.0966]Steps:   4%|▍         | 932/24850 [11:48<9:49:21,  1.48s/it, lr=7e-5, step_loss=0.0258]Steps:   4%|▍         | 933/24850 [11:49<9:49:09,  1.48s/it, lr=7e-5, step_loss=0.0258]Steps:   4%|▍         | 933/24850 [11:49<9:49:09,  1.48s/it, lr=7e-5, step_loss=0.0224]Steps:   4%|▍         | 934/24850 [11:51<9:48:26,  1.48s/it, lr=7e-5, step_loss=0.0224]Steps:   4%|▍         | 934/24850 [11:51<9:48:26,  1.48s/it, lr=7e-5, step_loss=0.0385]Steps:   4%|▍         | 935/24850 [11:52<9:47:04,  1.47s/it, lr=7e-5, step_loss=0.0385]Steps:   4%|▍         | 935/24850 [11:52<9:47:04,  1.47s/it, lr=7e-5, step_loss=0.00413]Steps:   4%|▍         | 936/24850 [11:54<9:50:26,  1.48s/it, lr=7e-5, step_loss=0.00413]Steps:   4%|▍         | 936/24850 [11:54<9:50:26,  1.48s/it, lr=7e-5, step_loss=0.0416] Steps:   4%|▍         | 937/24850 [11:55<9:49:02,  1.48s/it, lr=7e-5, step_loss=0.0416]Steps:   4%|▍         | 937/24850 [11:55<9:49:02,  1.48s/it, lr=7e-5, step_loss=0.0722]Steps:   4%|▍         | 938/24850 [11:57<9:48:54,  1.48s/it, lr=7e-5, step_loss=0.0722]Steps:   4%|▍         | 938/24850 [11:57<9:48:54,  1.48s/it, lr=7e-5, step_loss=0.0121]Steps:   4%|▍         | 939/24850 [11:58<9:49:18,  1.48s/it, lr=7e-5, step_loss=0.0121]Steps:   4%|▍         | 939/24850 [11:58<9:49:18,  1.48s/it, lr=7e-5, step_loss=0.0497]Steps:   4%|▍         | 940/24850 [12:00<9:51:59,  1.49s/it, lr=7e-5, step_loss=0.0497]Steps:   4%|▍         | 940/24850 [12:00<9:51:59,  1.49s/it, lr=7e-5, step_loss=0.089] Steps:   4%|▍         | 941/24850 [12:01<9:48:52,  1.48s/it, lr=7e-5, step_loss=0.089]Steps:   4%|▍         | 941/24850 [12:01<9:48:52,  1.48s/it, lr=7e-5, step_loss=0.0127]Steps:   4%|▍         | 942/24850 [12:03<10:13:49,  1.54s/it, lr=7e-5, step_loss=0.0127]Steps:   4%|▍         | 942/24850 [12:03<10:13:49,  1.54s/it, lr=7e-5, step_loss=0.0262]Steps:   4%|▍         | 943/24850 [12:04<10:05:18,  1.52s/it, lr=7e-5, step_loss=0.0262]Steps:   4%|▍         | 943/24850 [12:04<10:05:18,  1.52s/it, lr=7e-5, step_loss=0.038]  torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:   4%|▍         | 944/24850 [12:06<9:59:41,  1.51s/it, lr=7e-5, step_loss=0.038] Steps:   4%|▍         | 944/24850 [12:06<9:59:41,  1.51s/it, lr=7e-5, step_loss=0.0261]Steps:   4%|▍         | 945/24850 [12:07<9:54:38,  1.49s/it, lr=7e-5, step_loss=0.0261]Steps:   4%|▍         | 945/24850 [12:07<9:54:38,  1.49s/it, lr=7e-5, step_loss=0.0144]Steps:   4%|▍         | 946/24850 [12:09<9:50:30,  1.48s/it, lr=7e-5, step_loss=0.0144]Steps:   4%|▍         | 946/24850 [12:09<9:50:30,  1.48s/it, lr=7e-5, step_loss=0.00729]Steps:   4%|▍         | 947/24850 [12:10<9:48:37,  1.48s/it, lr=7e-5, step_loss=0.00729]Steps:   4%|▍         | 947/24850 [12:10<9:48:37,  1.48s/it, lr=7e-5, step_loss=0.0156] Steps:   4%|▍         | 948/24850 [12:12<9:47:10,  1.47s/it, lr=7e-5, step_loss=0.0156]Steps:   4%|▍         | 948/24850 [12:12<9:47:10,  1.47s/it, lr=7e-5, step_loss=0.0222]Steps:   4%|▍         | 949/24850 [12:14<12:01:23,  1.81s/it, lr=7e-5, step_loss=0.0222]Steps:   4%|▍         | 949/24850 [12:14<12:01:23,  1.81s/it, lr=7e-5, step_loss=0.00471]Steps:   4%|▍         | 950/24850 [12:16<11:21:59,  1.71s/it, lr=7e-5, step_loss=0.00471]Steps:   4%|▍         | 950/24850 [12:16<11:21:59,  1.71s/it, lr=7e-5, step_loss=0.0366] Steps:   4%|▍         | 951/24850 [12:17<10:54:31,  1.64s/it, lr=7e-5, step_loss=0.0366]Steps:   4%|▍         | 951/24850 [12:17<10:54:31,  1.64s/it, lr=7e-5, step_loss=0.0781]Steps:   4%|▍         | 952/24850 [12:19<10:36:42,  1.60s/it, lr=7e-5, step_loss=0.0781]Steps:   4%|▍         | 952/24850 [12:19<10:36:42,  1.60s/it, lr=7e-5, step_loss=0.0959]Steps:   4%|▍         | 953/24850 [12:20<10:21:07,  1.56s/it, lr=7e-5, step_loss=0.0959]Steps:   4%|▍         | 953/24850 [12:20<10:21:07,  1.56s/it, lr=7e-5, step_loss=0.0223]Steps:   4%|▍         | 954/24850 [12:22<10:11:24,  1.54s/it, lr=7e-5, step_loss=0.0223]Steps:   4%|▍         | 954/24850 [12:22<10:11:24,  1.54s/it, lr=7e-5, step_loss=0.0291]Steps:   4%|▍         | 955/24850 [12:23<10:03:35,  1.52s/it, lr=7e-5, step_loss=0.0291]Steps:   4%|▍         | 955/24850 [12:23<10:03:35,  1.52s/it, lr=7e-5, step_loss=0.139] Steps:   4%|▍         | 956/24850 [12:25<10:00:34,  1.51s/it, lr=7e-5, step_loss=0.139]Steps:   4%|▍         | 956/24850 [12:25<10:00:34,  1.51s/it, lr=7e-5, step_loss=0.0146]Steps:   4%|▍         | 957/24850 [12:26<9:54:18,  1.49s/it, lr=7e-5, step_loss=0.0146] Steps:   4%|▍         | 957/24850 [12:26<9:54:18,  1.49s/it, lr=7e-5, step_loss=0.00746]Steps:   4%|▍         | 958/24850 [12:27<9:51:55,  1.49s/it, lr=7e-5, step_loss=0.00746]Steps:   4%|▍         | 958/24850 [12:27<9:51:55,  1.49s/it, lr=7e-5, step_loss=0.0678] Steps:   4%|▍         | 959/24850 [12:29<9:49:20,  1.48s/it, lr=7e-5, step_loss=0.0678]Steps:   4%|▍         | 959/24850 [12:29<9:49:20,  1.48s/it, lr=7e-5, step_loss=0.0119]Steps:   4%|▍         | 960/24850 [12:30<9:47:01,  1.47s/it, lr=7e-5, step_loss=0.0119]Steps:   4%|▍         | 960/24850 [12:30<9:47:01,  1.47s/it, lr=7e-5, step_loss=0.0265]Steps:   4%|▍         | 961/24850 [12:32<9:45:51,  1.47s/it, lr=7e-5, step_loss=0.0265]Steps:   4%|▍         | 961/24850 [12:32<9:45:51,  1.47s/it, lr=7e-5, step_loss=0.0134]Steps:   4%|▍         | 962/24850 [12:33<9:46:42,  1.47s/it, lr=7e-5, step_loss=0.0134]Steps:   4%|▍         | 962/24850 [12:33<9:46:42,  1.47s/it, lr=7e-5, step_loss=0.0178]Steps:   4%|▍         | 963/24850 [12:35<9:46:20,  1.47s/it, lr=7e-5, step_loss=0.0178]Steps:   4%|▍         | 963/24850 [12:35<9:46:20,  1.47s/it, lr=7e-5, step_loss=0.0431]Steps:   4%|▍         | 964/24850 [12:36<9:45:00,  1.47s/it, lr=7e-5, step_loss=0.0431]Steps:   4%|▍         | 964/24850 [12:36<9:45:00,  1.47s/it, lr=7e-5, step_loss=0.00367]Steps:   4%|▍         | 965/24850 [12:38<9:43:46,  1.47s/it, lr=7e-5, step_loss=0.00367]Steps:   4%|▍         | 965/24850 [12:38<9:43:46,  1.47s/it, lr=7e-5, step_loss=0.00383]Steps:   4%|▍         | 966/24850 [12:39<9:43:04,  1.46s/it, lr=7e-5, step_loss=0.00383]Steps:   4%|▍         | 966/24850 [12:39<9:43:04,  1.46s/it, lr=7e-5, step_loss=0.000994]Steps:   4%|▍         | 967/24850 [12:41<9:45:24,  1.47s/it, lr=7e-5, step_loss=0.000994]Steps:   4%|▍         | 967/24850 [12:41<9:45:24,  1.47s/it, lr=7e-5, step_loss=0.0202]  Steps:   4%|▍         | 968/24850 [12:42<9:51:25,  1.49s/it, lr=7e-5, step_loss=0.0202]Steps:   4%|▍         | 968/24850 [12:42<9:51:25,  1.49s/it, lr=7e-5, step_loss=0.00172]Steps:   4%|▍         | 969/24850 [12:44<9:56:15,  1.50s/it, lr=7e-5, step_loss=0.00172]Steps:   4%|▍         | 969/24850 [12:44<9:56:15,  1.50s/it, lr=7e-5, step_loss=0.0911] Steps:   4%|▍         | 970/24850 [12:45<9:56:13,  1.50s/it, lr=7e-5, step_loss=0.0911]Steps:   4%|▍         | 970/24850 [12:45<9:56:13,  1.50s/it, lr=7e-5, step_loss=0.0376]torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  Steps:   4%|▍         | 971/24850 [12:47<9:51:59,  1.49s/it, lr=7e-5, step_loss=0.0376]Steps:   4%|▍         | 971/24850 [12:47<9:51:59,  1.49s/it, lr=7e-5, step_loss=0.0104]Steps:   4%|▍         | 972/24850 [12:48<9:52:08,  1.49s/it, lr=7e-5, step_loss=0.0104]Steps:   4%|▍         | 972/24850 [12:48<9:52:08,  1.49s/it, lr=7e-5, step_loss=0.0763]Steps:   4%|▍         | 973/24850 [12:50<9:51:58,  1.49s/it, lr=7e-5, step_loss=0.0763]Steps:   4%|▍         | 973/24850 [12:50<9:51:58,  1.49s/it, lr=7e-5, step_loss=0.00637]Steps:   4%|▍         | 974/24850 [12:51<9:51:57,  1.49s/it, lr=7e-5, step_loss=0.00637]Steps:   4%|▍         | 974/24850 [12:51<9:51:57,  1.49s/it, lr=7e-5, step_loss=0.00769]Steps:   4%|▍         | 975/24850 [12:53<9:51:02,  1.49s/it, lr=7e-5, step_loss=0.00769]Steps:   4%|▍         | 975/24850 [12:53<9:51:02,  1.49s/it, lr=7e-5, step_loss=0.00297]Steps:   4%|▍         | 976/24850 [12:54<9:51:37,  1.49s/it, lr=7e-5, step_loss=0.00297]Steps:   4%|▍         | 976/24850 [12:54<9:51:37,  1.49s/it, lr=7e-5, step_loss=0.00431]Steps:   4%|▍         | 977/24850 [12:56<9:48:09,  1.48s/it, lr=7e-5, step_loss=0.00431]Steps:   4%|▍         | 977/24850 [12:56<9:48:09,  1.48s/it, lr=7e-5, step_loss=0.0221] Steps:   4%|▍         | 978/24850 [12:57<9:51:40,  1.49s/it, lr=7e-5, step_loss=0.0221]Steps:   4%|▍         | 978/24850 [12:57<9:51:40,  1.49s/it, lr=7e-5, step_loss=0.0182]Steps:   4%|▍         | 979/24850 [12:59<9:49:35,  1.48s/it, lr=7e-5, step_loss=0.0182]Steps:   4%|▍         | 979/24850 [12:59<9:49:35,  1.48s/it, lr=7e-5, step_loss=0.00151]Steps:   4%|▍         | 980/24850 [13:00<9:50:30,  1.48s/it, lr=7e-5, step_loss=0.00151]Steps:   4%|▍         | 980/24850 [13:00<9:50:30,  1.48s/it, lr=7e-5, step_loss=0.0422] Steps:   4%|▍         | 981/24850 [13:01<9:48:40,  1.48s/it, lr=7e-5, step_loss=0.0422]Steps:   4%|▍         | 981/24850 [13:01<9:48:40,  1.48s/it, lr=7e-5, step_loss=0.0255]Steps:   4%|▍         | 982/24850 [13:03<9:48:02,  1.48s/it, lr=7e-5, step_loss=0.0255]Steps:   4%|▍         | 982/24850 [13:03<9:48:02,  1.48s/it, lr=7e-5, step_loss=0.0207]Steps:   4%|▍         | 983/24850 [13:04<9:46:23,  1.47s/it, lr=7e-5, step_loss=0.0207]Steps:   4%|▍         | 983/24850 [13:04<9:46:23,  1.47s/it, lr=7e-5, step_loss=0.0243]Steps:   4%|▍         | 984/24850 [13:06<9:46:27,  1.47s/it, lr=7e-5, step_loss=0.0243]Steps:   4%|▍         | 984/24850 [13:06<9:46:27,  1.47s/it, lr=7e-5, step_loss=0.0257]Steps:   4%|▍         | 985/24850 [13:07<9:44:48,  1.47s/it, lr=7e-5, step_loss=0.0257]Steps:   4%|▍         | 985/24850 [13:07<9:44:48,  1.47s/it, lr=7e-5, step_loss=0.00556]Steps:   4%|▍         | 986/24850 [13:09<9:43:27,  1.47s/it, lr=7e-5, step_loss=0.00556]Steps:   4%|▍         | 986/24850 [13:09<9:43:27,  1.47s/it, lr=7e-5, step_loss=0.0109] Steps:   4%|▍         | 987/24850 [13:10<9:44:08,  1.47s/it, lr=7e-5, step_loss=0.0109]Steps:   4%|▍         | 987/24850 [13:10<9:44:08,  1.47s/it, lr=7e-5, step_loss=0.00576]Steps:   4%|▍         | 988/24850 [13:12<9:43:47,  1.47s/it, lr=7e-5, step_loss=0.00576]Steps:   4%|▍         | 988/24850 [13:12<9:43:47,  1.47s/it, lr=7e-5, step_loss=0.00648]Steps:   4%|▍         | 989/24850 [13:13<9:42:48,  1.47s/it, lr=7e-5, step_loss=0.00648]Steps:   4%|▍         | 989/24850 [13:13<9:42:48,  1.47s/it, lr=7e-5, step_loss=0.26]   Steps:   4%|▍         | 990/24850 [13:15<9:43:38,  1.47s/it, lr=7e-5, step_loss=0.26]Steps:   4%|▍         | 990/24850 [13:15<9:43:38,  1.47s/it, lr=7e-5, step_loss=0.028]Steps:   4%|▍         | 991/24850 [13:16<9:42:54,  1.47s/it, lr=7e-5, step_loss=0.028]Steps:   4%|▍         | 991/24850 [13:16<9:42:54,  1.47s/it, lr=7e-5, step_loss=0.0512]Steps:   4%|▍         | 992/24850 [13:18<9:44:03,  1.47s/it, lr=7e-5, step_loss=0.0512]Steps:   4%|▍         | 992/24850 [13:18<9:44:03,  1.47s/it, lr=7e-5, step_loss=0.037] Steps:   4%|▍         | 993/24850 [13:19<9:46:44,  1.48s/it, lr=7e-5, step_loss=0.037]Steps:   4%|▍         | 993/24850 [13:19<9:46:44,  1.48s/it, lr=7e-5, step_loss=0.00127]Steps:   4%|▍         | 994/24850 [13:21<9:51:19,  1.49s/it, lr=7e-5, step_loss=0.00127]Steps:   4%|▍         | 994/24850 [13:21<9:51:19,  1.49s/it, lr=7e-5, step_loss=0.077]  Steps:   4%|▍         | 995/24850 [13:22<9:53:42,  1.49s/it, lr=7e-5, step_loss=0.077]Steps:   4%|▍         | 995/24850 [13:22<9:53:42,  1.49s/it, lr=7e-5, step_loss=0.021]Steps:   4%|▍         | 996/24850 [13:24<9:52:09,  1.49s/it, lr=7e-5, step_loss=0.021]Steps:   4%|▍         | 996/24850 [13:24<9:52:09,  1.49s/it, lr=7e-5, step_loss=0.0593]Steps:   4%|▍         | 997/24850 [13:25<9:50:28,  1.49s/it, lr=7e-5, step_loss=0.0593]Steps:   4%|▍         | 997/24850 [13:25<9:50:28,  1.49s/it, lr=7e-5, step_loss=0.0501]Steps:   4%|▍         | 998/24850 [13:27<9:49:20,  1.48s/it, lr=7e-5, step_loss=0.0501]04/12/2024 10:23:35 - INFO - accelerate.accelerator - Saving current state to /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-1000
Configuration saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-1000/unet/config.json
Model weights saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-1000/unet/diffusion_pytorch_model.safetensors
Model weights saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-1000/unet/pytorch_lora_weights.safetensors
04/12/2024 10:24:06 - INFO - accelerate.checkpointing - Optimizer state saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-1000/optimizer.bin
04/12/2024 10:24:06 - INFO - accelerate.checkpointing - Scheduler state saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-1000/scheduler.bin
04/12/2024 10:24:06 - INFO - accelerate.checkpointing - Random states saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-1000/random_states_0.pkl
04/12/2024 10:24:06 - INFO - __main__ - Saved state to /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-1000
Steps:   4%|▍         | 998/24850 [13:58<9:49:20,  1.48s/it, lr=7e-5, step_loss=0.0568]mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:   4%|▍         | 999/24850 [14:07<86:25:50, 13.05s/it, lr=7e-5, step_loss=0.0568]Steps:   4%|▍         | 999/24850 [14:07<86:25:50, 13.05s/it, lr=7e-5, step_loss=0.00333]Steps:   4%|▍         | 1000/24850 [14:08<63:20:55,  9.56s/it, lr=7e-5, step_loss=0.00333]Steps:   4%|▍         | 1000/24850 [14:08<63:20:55,  9.56s/it, lr=7e-5, step_loss=0.0044] Steps:   4%|▍         | 1001/24850 [14:09<47:13:12,  7.13s/it, lr=7e-5, step_loss=0.0044]Steps:   4%|▍         | 1001/24850 [14:09<47:13:12,  7.13s/it, lr=7e-5, step_loss=0.0227]Steps:   4%|▍         | 1002/24850 [14:11<35:56:43,  5.43s/it, lr=7e-5, step_loss=0.0227]Steps:   4%|▍         | 1002/24850 [14:11<35:56:43,  5.43s/it, lr=7e-5, step_loss=0.0148]Steps:   4%|▍         | 1003/24850 [14:12<28:02:11,  4.23s/it, lr=7e-5, step_loss=0.0148]Steps:   4%|▍         | 1003/24850 [14:12<28:02:11,  4.23s/it, lr=7e-5, step_loss=0.025] Steps:   4%|▍         | 1004/24850 [14:14<22:28:57,  3.39s/it, lr=7e-5, step_loss=0.025]Steps:   4%|▍         | 1004/24850 [14:14<22:28:57,  3.39s/it, lr=7e-5, step_loss=0.0958]Steps:   4%|▍         | 1005/24850 [14:15<18:35:22,  2.81s/it, lr=7e-5, step_loss=0.0958]Steps:   4%|▍         | 1005/24850 [14:15<18:35:22,  2.81s/it, lr=7e-5, step_loss=0.00131]Steps:   4%|▍         | 1006/24850 [14:17<15:53:00,  2.40s/it, lr=7e-5, step_loss=0.00131]Steps:   4%|▍         | 1006/24850 [14:17<15:53:00,  2.40s/it, lr=7e-5, step_loss=0.0525] Steps:   4%|▍         | 1007/24850 [14:18<13:58:44,  2.11s/it, lr=7e-5, step_loss=0.0525]Steps:   4%|▍         | 1007/24850 [14:18<13:58:44,  2.11s/it, lr=7e-5, step_loss=0.0333]Steps:   4%|▍         | 1008/24850 [14:20<12:37:40,  1.91s/it, lr=7e-5, step_loss=0.0333]Steps:   4%|▍         | 1008/24850 [14:20<12:37:40,  1.91s/it, lr=7e-5, step_loss=0.0339]Steps:   4%|▍         | 1009/24850 [14:21<11:41:04,  1.76s/it, lr=7e-5, step_loss=0.0339]Steps:   4%|▍         | 1009/24850 [14:21<11:41:04,  1.76s/it, lr=7e-5, step_loss=0.00181]Steps:   4%|▍         | 1010/24850 [14:22<11:02:21,  1.67s/it, lr=7e-5, step_loss=0.00181]Steps:   4%|▍         | 1010/24850 [14:22<11:02:21,  1.67s/it, lr=7e-5, step_loss=0.00892]Steps:   4%|▍         | 1011/24850 [14:24<10:35:54,  1.60s/it, lr=7e-5, step_loss=0.00892]Steps:   4%|▍         | 1011/24850 [14:24<10:35:54,  1.60s/it, lr=7e-5, step_loss=0.0222] Steps:   4%|▍         | 1012/24850 [14:25<10:15:55,  1.55s/it, lr=7e-5, step_loss=0.0222]Steps:   4%|▍         | 1012/24850 [14:25<10:15:55,  1.55s/it, lr=7e-5, step_loss=0.0277]Steps:   4%|▍         | 1013/24850 [14:27<10:02:52,  1.52s/it, lr=7e-5, step_loss=0.0277]Steps:   4%|▍         | 1013/24850 [14:27<10:02:52,  1.52s/it, lr=7e-5, step_loss=0.031] Steps:   4%|▍         | 1014/24850 [14:28<9:54:27,  1.50s/it, lr=7e-5, step_loss=0.031] Steps:   4%|▍         | 1014/24850 [14:28<9:54:27,  1.50s/it, lr=7e-5, step_loss=0.012]04/12/2024 10:24:37 - INFO - __main__ - Running validation...
torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([9, 4, 64, 64])

Loading pipeline components...:   0%|          | 0/7 [00:00<?, ?it/s][A`text_config_dict` is provided which will be used to initialize `CLIPTextConfig`. The value `text_config["id2label"]` will be overriden.
`text_config_dict` is provided which will be used to initialize `CLIPTextConfig`. The value `text_config["bos_token_id"]` will be overriden.
`text_config_dict` is provided which will be used to initialize `CLIPTextConfig`. The value `text_config["eos_token_id"]` will be overriden.
Loaded safety_checker as StableDiffusionSafetyChecker from `safety_checker` subfolder of timbrooks/instruct-pix2pix.

Loading pipeline components...:  14%|█▍        | 1/7 [00:00<00:02,  2.49it/s][ALoaded feature_extractor as CLIPImageProcessor from `feature_extractor` subfolder of timbrooks/instruct-pix2pix.
{'timestep_spacing'} was not found in config. Values will be initialized to default values.
Loaded scheduler as EulerAncestralDiscreteScheduler from `scheduler` subfolder of timbrooks/instruct-pix2pix.
Loaded tokenizer as CLIPTokenizer from `tokenizer` subfolder of timbrooks/instruct-pix2pix.
Loading pipeline components...: 100%|██████████| 7/7 [00:00<00:00, 14.74it/s]
{'timestep_spacing'} was not found in config. Values will be initialized to default values.
conduct do_classifier_free_guidance, text_guidance: 16,image_guidance: 1

  0%|          | 0/50 [00:00<?, ?it/s][A
  2%|▏         | 1/50 [00:00<00:21,  2.32it/s][A
  4%|▍         | 2/50 [00:00<00:20,  2.37it/s][A
  6%|▌         | 3/50 [00:01<00:19,  2.38it/s][A
  8%|▊         | 4/50 [00:01<00:19,  2.41it/s][A
 10%|█         | 5/50 [00:02<00:18,  2.42it/s][A
 12%|█▏        | 6/50 [00:02<00:18,  2.43it/s][A
 14%|█▍        | 7/50 [00:02<00:17,  2.43it/s][A
 16%|█▌        | 8/50 [00:03<00:17,  2.43it/s][A
 18%|█▊        | 9/50 [00:03<00:16,  2.43it/s][A
 20%|██        | 10/50 [00:04<00:16,  2.43it/s][A
 22%|██▏       | 11/50 [00:04<00:16,  2.43it/s][A
 24%|██▍       | 12/50 [00:04<00:15,  2.44it/s][A
 26%|██▌       | 13/50 [00:05<00:15,  2.45it/s][A
 28%|██▊       | 14/50 [00:05<00:14,  2.45it/s][A
 30%|███       | 15/50 [00:06<00:14,  2.44it/s][A
 32%|███▏      | 16/50 [00:06<00:13,  2.44it/s][A
 34%|███▍      | 17/50 [00:06<00:13,  2.44it/s][A
 36%|███▌      | 18/50 [00:07<00:13,  2.44it/s][A
 38%|███▊      | 19/50 [00:07<00:12,  2.44it/s][A
 40%|████      | 20/50 [00:08<00:12,  2.45it/s][A
 42%|████▏     | 21/50 [00:08<00:11,  2.45it/s][A
 44%|████▍     | 22/50 [00:09<00:11,  2.44it/s][A
 46%|████▌     | 23/50 [00:09<00:11,  2.44it/s][A
 48%|████▊     | 24/50 [00:09<00:10,  2.43it/s][A
 50%|█████     | 25/50 [00:10<00:10,  2.43it/s][A
 52%|█████▏    | 26/50 [00:10<00:09,  2.43it/s][A
 54%|█████▍    | 27/50 [00:11<00:09,  2.42it/s][A
 56%|█████▌    | 28/50 [00:11<00:09,  2.41it/s][A
 58%|█████▊    | 29/50 [00:11<00:08,  2.39it/s][A
 60%|██████    | 30/50 [00:12<00:08,  2.36it/s][A
 62%|██████▏   | 31/50 [00:12<00:08,  2.37it/s][A
 64%|██████▍   | 32/50 [00:13<00:07,  2.37it/s][A
 66%|██████▌   | 33/50 [00:13<00:07,  2.38it/s][A(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) 
 68%|██████▊   | 34/50 [00:14<00:06,  2.38it/s][A
 70%|███████   | 35/50 [00:14<00:06,  2.39it/s][A
 72%|███████▏  | 36/50 [00:14<00:05,  2.40it/s][A
 74%|███████▍  | 37/50 [00:15<00:05,  2.41it/s][A
 76%|███████▌  | 38/50 [00:15<00:04,  2.42it/s][A
 78%|███████▊  | 39/50 [00:16<00:04,  2.42it/s][A
 80%|████████  | 40/50 [00:16<00:04,  2.41it/s][A
 82%|████████▏ | 41/50 [00:16<00:03,  2.41it/s][A
 84%|████████▍ | 42/50 [00:17<00:03,  2.41it/s][A
 86%|████████▌ | 43/50 [00:17<00:02,  2.42it/s][A
 88%|████████▊ | 44/50 [00:18<00:02,  2.42it/s][A
 90%|█████████ | 45/50 [00:18<00:02,  2.41it/s][A
 92%|█████████▏| 46/50 [00:19<00:01,  2.42it/s][A
 94%|█████████▍| 47/50 [00:19<00:01,  2.42it/s][A
 96%|█████████▌| 48/50 [00:19<00:00,  2.41it/s][A
 98%|█████████▊| 49/50 [00:20<00:00,  2.41it/s][A
100%|██████████| 50/50 [00:20<00:00,  2.42it/s][A100%|██████████| 50/50 [00:20<00:00,  2.42it/s]
04/12/2024 10:25:00 - INFO - __main__ - Running training...
torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
save img to : /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/images/modify the images for task ['flare']_val_step_1016_0.png modify the images for task ['flare']
writing inference outputs failed [Errno 2] No such file or directory: '/usr/bin/ffmpeg'
Steps:   4%|▍         | 1015/24850 [15:00<69:39:33, 10.52s/it, lr=7e-5, step_loss=0.012]Steps:   4%|▍         | 1015/24850 [15:00<69:39:33, 10.52s/it, lr=7e-5, step_loss=0.00554]Steps:   4%|▍         | 1016/24850 [15:01<51:39:29,  7.80s/it, lr=7e-5, step_loss=0.00554]Steps:   4%|▍         | 1016/24850 [15:01<51:39:29,  7.80s/it, lr=7e-5, step_loss=0.0187] Steps:   4%|▍         | 1017/24850 [15:03<39:06:17,  5.91s/it, lr=7e-5, step_loss=0.0187]Steps:   4%|▍         | 1017/24850 [15:03<39:06:17,  5.91s/it, lr=7e-5, step_loss=0.00697]Steps:   4%|▍         | 1018/24850 [15:04<30:15:00,  4.57s/it, lr=7e-5, step_loss=0.00697]Steps:   4%|▍         | 1018/24850 [15:04<30:15:00,  4.57s/it, lr=7e-5, step_loss=0.00391]Steps:   4%|▍         | 1019/24850 [15:06<24:04:38,  3.64s/it, lr=7e-5, step_loss=0.00391]Steps:   4%|▍         | 1019/24850 [15:06<24:04:38,  3.64s/it, lr=7e-5, step_loss=0.0439] Steps:   4%|▍         | 1020/24850 [15:07<19:43:49,  2.98s/it, lr=7e-5, step_loss=0.0439]Steps:   4%|▍         | 1020/24850 [15:07<19:43:49,  2.98s/it, lr=7e-5, step_loss=0.0575]Steps:   4%|▍         | 1021/24850 [15:09<16:41:39,  2.52s/it, lr=7e-5, step_loss=0.0575]Steps:   4%|▍         | 1021/24850 [15:09<16:41:39,  2.52s/it, lr=7e-5, step_loss=0.0474]Steps:   4%|▍         | 1022/24850 [15:10<14:38:26,  2.21s/it, lr=7e-5, step_loss=0.0474]Steps:   4%|▍         | 1022/24850 [15:10<14:38:26,  2.21s/it, lr=7e-5, step_loss=0.00494]Steps:   4%|▍         | 1023/24850 [15:11<13:08:17,  1.99s/it, lr=7e-5, step_loss=0.00494]Steps:   4%|▍         | 1023/24850 [15:11<13:08:17,  1.99s/it, lr=7e-5, step_loss=0.00949]Steps:   4%|▍         | 1024/24850 [15:13<12:04:28,  1.82s/it, lr=7e-5, step_loss=0.00949]Steps:   4%|▍         | 1024/24850 [15:13<12:04:28,  1.82s/it, lr=7e-5, step_loss=0.121]  Steps:   4%|▍         | 1025/24850 [15:14<11:25:15,  1.73s/it, lr=7e-5, step_loss=0.121]Steps:   4%|▍         | 1025/24850 [15:14<11:25:15,  1.73s/it, lr=7e-5, step_loss=0.0288]Steps:   4%|▍         | 1026/24850 [15:16<10:53:16,  1.65s/it, lr=7e-5, step_loss=0.0288]Steps:   4%|▍         | 1026/24850 [15:16<10:53:16,  1.65s/it, lr=7e-5, step_loss=0.0134]Steps:   4%|▍         | 1027/24850 [15:17<10:33:41,  1.60s/it, lr=7e-5, step_loss=0.0134]Steps:   4%|▍         | 1027/24850 [15:17<10:33:41,  1.60s/it, lr=7e-5, step_loss=0.0424]Steps:   4%|▍         | 1028/24850 [15:19<10:15:33,  1.55s/it, lr=7e-5, step_loss=0.0424]Steps:   4%|▍         | 1028/24850 [15:19<10:15:33,  1.55s/it, lr=7e-5, step_loss=0.146] Steps:   4%|▍         | 1029/24850 [15:20<10:03:56,  1.52s/it, lr=7e-5, step_loss=0.146]Steps:   4%|▍         | 1029/24850 [15:20<10:03:56,  1.52s/it, lr=7e-5, step_loss=0.0701]Steps:   4%|▍         | 1030/24850 [15:22<9:56:06,  1.50s/it, lr=7e-5, step_loss=0.0701] Steps:   4%|▍         | 1030/24850 [15:22<9:56:06,  1.50s/it, lr=7e-5, step_loss=0.0054]Steps:   4%|▍         | 1031/24850 [15:23<9:49:50,  1.49s/it, lr=7e-5, step_loss=0.0054]Steps:   4%|▍         | 1031/24850 [15:23<9:49:50,  1.49s/it, lr=7e-5, step_loss=0.00948]Steps:   4%|▍         | 1032/24850 [15:25<9:46:39,  1.48s/it, lr=7e-5, step_loss=0.00948]Steps:   4%|▍         | 1032/24850 [15:25<9:46:39,  1.48s/it, lr=7e-5, step_loss=0.0219] Steps:   4%|▍         | 1033/24850 [15:26<9:42:08,  1.47s/it, lr=7e-5, step_loss=0.0219]Steps:   4%|▍         | 1033/24850 [15:26<9:42:08,  1.47s/it, lr=7e-5, step_loss=0.00943]Steps:   4%|▍         | 1034/24850 [15:28<9:41:55,  1.47s/it, lr=7e-5, step_loss=0.00943]Steps:   4%|▍         | 1034/24850 [15:28<9:41:55,  1.47s/it, lr=7e-5, step_loss=0.0321] Steps:   4%|▍         | 1035/24850 [15:29<9:41:52,  1.47s/it, lr=7e-5, step_loss=0.0321]Steps:   4%|▍         | 1035/24850 [15:29<9:41:52,  1.47s/it, lr=7e-5, step_loss=0.0311]Steps:   4%|▍         | 1036/24850 [15:30<9:42:04,  1.47s/it, lr=7e-5, step_loss=0.0311]Steps:   4%|▍         | 1036/24850 [15:30<9:42:04,  1.47s/it, lr=7e-5, step_loss=0.171] Steps:   4%|▍         | 1037/24850 [15:32<9:41:40,  1.47s/it, lr=7e-5, step_loss=0.171]Steps:   4%|▍         | 1037/24850 [15:32<9:41:40,  1.47s/it, lr=7e-5, step_loss=0.0584]Steps:   4%|▍         | 1038/24850 [15:33<9:40:23,  1.46s/it, lr=7e-5, step_loss=0.0584]Steps:   4%|▍         | 1038/24850 [15:33<9:40:23,  1.46s/it, lr=7e-5, step_loss=0.014] Steps:   4%|▍         | 1039/24850 [15:35<9:41:43,  1.47s/it, lr=7e-5, step_loss=0.014]Steps:   4%|▍         | 1039/24850 [15:35<9:41:43,  1.47s/it, lr=7e-5, step_loss=0.0336]Steps:   4%|▍         | 1040/24850 [15:36<9:41:24,  1.47s/it, lr=7e-5, step_loss=0.0336]Steps:   4%|▍         | 1040/24850 [15:36<9:41:24,  1.47s/it, lr=7e-5, step_loss=0.00354]Steps:   4%|▍         | 1041/24850 [15:38<9:43:41,  1.47s/it, lr=7e-5, step_loss=0.00354]Steps:   4%|▍         | 1041/24850 [15:38<9:43:41,  1.47s/it, lr=7e-5, step_loss=0.0321] (512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512)Steps:   4%|▍         | 1042/24850 [15:39<9:41:50,  1.47s/it, lr=7e-5, step_loss=0.0321]Steps:   4%|▍         | 1042/24850 [15:39<9:41:50,  1.47s/it, lr=7e-5, step_loss=0.00445]Steps:   4%|▍         | 1043/24850 [15:41<9:40:28,  1.46s/it, lr=7e-5, step_loss=0.00445]Steps:   4%|▍         | 1043/24850 [15:41<9:40:28,  1.46s/it, lr=7e-5, step_loss=0.00411]Steps:   4%|▍         | 1044/24850 [15:42<9:40:13,  1.46s/it, lr=7e-5, step_loss=0.00411]Steps:   4%|▍         | 1044/24850 [15:42<9:40:13,  1.46s/it, lr=7e-5, step_loss=0.0178] Steps:   4%|▍         | 1045/24850 [15:44<9:40:36,  1.46s/it, lr=7e-5, step_loss=0.0178]Steps:   4%|▍         | 1045/24850 [15:44<9:40:36,  1.46s/it, lr=7e-5, step_loss=0.00467]Steps:   4%|▍         | 1046/24850 [15:45<9:38:41,  1.46s/it, lr=7e-5, step_loss=0.00467]Steps:   4%|▍         | 1046/24850 [15:45<9:38:41,  1.46s/it, lr=7e-5, step_loss=0.0463] Steps:   4%|▍         | 1047/24850 [15:47<9:38:27,  1.46s/it, lr=7e-5, step_loss=0.0463]Steps:   4%|▍         | 1047/24850 [15:47<9:38:27,  1.46s/it, lr=7e-5, step_loss=0.0236]Steps:   4%|▍         | 1048/24850 [15:49<11:38:06,  1.76s/it, lr=7e-5, step_loss=0.0236]Steps:   4%|▍         | 1048/24850 [15:49<11:38:06,  1.76s/it, lr=7e-5, step_loss=0.0174]Steps:   4%|▍         | 1049/24850 [15:50<11:00:37,  1.67s/it, lr=7e-5, step_loss=0.0174]Steps:   4%|▍         | 1049/24850 [15:50<11:00:37,  1.67s/it, lr=7e-5, step_loss=0.0317]Steps:   4%|▍         | 1050/24850 [15:52<10:35:28,  1.60s/it, lr=7e-5, step_loss=0.0317]Steps:   4%|▍         | 1050/24850 [15:52<10:35:28,  1.60s/it, lr=7e-5, step_loss=0.000932]Steps:   4%|▍         | 1051/24850 [15:53<10:17:44,  1.56s/it, lr=7e-5, step_loss=0.000932]Steps:   4%|▍         | 1051/24850 [15:53<10:17:44,  1.56s/it, lr=7e-5, step_loss=0.0605]  Steps:   4%|▍         | 1052/24850 [15:55<10:05:48,  1.53s/it, lr=7e-5, step_loss=0.0605]Steps:   4%|▍         | 1052/24850 [15:55<10:05:48,  1.53s/it, lr=7e-5, step_loss=0.0297]Steps:   4%|▍         | 1053/24850 [15:56<10:00:58,  1.52s/it, lr=7e-5, step_loss=0.0297]Steps:   4%|▍         | 1053/24850 [15:56<10:00:58,  1.52s/it, lr=7e-5, step_loss=0.0135]Steps:   4%|▍         | 1054/24850 [15:58<9:54:46,  1.50s/it, lr=7e-5, step_loss=0.0135] Steps:   4%|▍         | 1054/24850 [15:58<9:54:46,  1.50s/it, lr=7e-5, step_loss=0.00565]Steps:   4%|▍         | 1055/24850 [15:59<9:52:42,  1.49s/it, lr=7e-5, step_loss=0.00565]Steps:   4%|▍         | 1055/24850 [15:59<9:52:42,  1.49s/it, lr=7e-5, step_loss=0.0228] Steps:   4%|▍         | 1056/24850 [16:01<9:48:18,  1.48s/it, lr=7e-5, step_loss=0.0228]Steps:   4%|▍         | 1056/24850 [16:01<9:48:18,  1.48s/it, lr=7e-5, step_loss=0.023] Steps:   4%|▍         | 1057/24850 [16:02<9:45:16,  1.48s/it, lr=7e-5, step_loss=0.023]Steps:   4%|▍         | 1057/24850 [16:02<9:45:16,  1.48s/it, lr=7e-5, step_loss=0.0105]Steps:   4%|▍         | 1058/24850 [16:04<9:44:35,  1.47s/it, lr=7e-5, step_loss=0.0105]Steps:   4%|▍         | 1058/24850 [16:04<9:44:35,  1.47s/it, lr=7e-5, step_loss=0.0262]Steps:   4%|▍         | 1059/24850 [16:05<9:42:12,  1.47s/it, lr=7e-5, step_loss=0.0262]Steps:   4%|▍         | 1059/24850 [16:05<9:42:12,  1.47s/it, lr=7e-5, step_loss=0.0236]Steps:   4%|▍         | 1060/24850 [16:07<9:40:36,  1.46s/it, lr=7e-5, step_loss=0.0236]Steps:   4%|▍         | 1060/24850 [16:07<9:40:36,  1.46s/it, lr=7e-5, step_loss=0.0117]Steps:   4%|▍         | 1061/24850 [16:08<9:40:14,  1.46s/it, lr=7e-5, step_loss=0.0117]Steps:   4%|▍         | 1061/24850 [16:08<9:40:14,  1.46s/it, lr=7e-5, step_loss=0.00149]Steps:   4%|▍         | 1062/24850 [16:09<9:38:59,  1.46s/it, lr=7e-5, step_loss=0.00149]Steps:   4%|▍         | 1062/24850 [16:09<9:38:59,  1.46s/it, lr=7e-5, step_loss=0.122]  Steps:   4%|▍         | 1063/24850 [16:11<9:42:19,  1.47s/it, lr=7e-5, step_loss=0.122]Steps:   4%|▍         | 1063/24850 [16:11<9:42:19,  1.47s/it, lr=7e-5, step_loss=0.00921]Steps:   4%|▍         | 1064/24850 [16:12<9:43:30,  1.47s/it, lr=7e-5, step_loss=0.00921]Steps:   4%|▍         | 1064/24850 [16:12<9:43:30,  1.47s/it, lr=7e-5, step_loss=0.00838]Steps:   4%|▍         | 1065/24850 [16:14<9:42:06,  1.47s/it, lr=7e-5, step_loss=0.00838]Steps:   4%|▍         | 1065/24850 [16:14<9:42:06,  1.47s/it, lr=7e-5, step_loss=0.0108] Steps:   4%|▍         | 1066/24850 [16:15<9:42:34,  1.47s/it, lr=7e-5, step_loss=0.0108]Steps:   4%|▍         | 1066/24850 [16:15<9:42:34,  1.47s/it, lr=7e-5, step_loss=0.021] Steps:   4%|▍         | 1067/24850 [16:17<9:41:03,  1.47s/it, lr=7e-5, step_loss=0.021]Steps:   4%|▍         | 1067/24850 [16:17<9:41:03,  1.47s/it, lr=7e-5, step_loss=0.00505]Steps:   4%|▍         | 1068/24850 [16:18<9:40:07,  1.46s/it, lr=7e-5, step_loss=0.00505]Steps:   4%|▍         | 1068/24850 [16:18<9:40:07,  1.46s/it, lr=7e-5, step_loss=0.00252] torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:   4%|▍         | 1069/24850 [16:20<9:39:11,  1.46s/it, lr=7e-5, step_loss=0.00252]Steps:   4%|▍         | 1069/24850 [16:20<9:39:11,  1.46s/it, lr=7e-5, step_loss=0.0415] Steps:   4%|▍         | 1070/24850 [16:21<9:40:13,  1.46s/it, lr=7e-5, step_loss=0.0415]Steps:   4%|▍         | 1070/24850 [16:21<9:40:13,  1.46s/it, lr=7e-5, step_loss=0.0308]Steps:   4%|▍         | 1071/24850 [16:23<9:40:52,  1.47s/it, lr=7e-5, step_loss=0.0308]Steps:   4%|▍         | 1071/24850 [16:23<9:40:52,  1.47s/it, lr=7e-5, step_loss=0.0114]Steps:   4%|▍         | 1072/24850 [16:24<9:41:15,  1.47s/it, lr=7e-5, step_loss=0.0114]Steps:   4%|▍         | 1072/24850 [16:24<9:41:15,  1.47s/it, lr=7e-5, step_loss=0.00104]Steps:   4%|▍         | 1073/24850 [16:26<9:40:05,  1.46s/it, lr=7e-5, step_loss=0.00104]Steps:   4%|▍         | 1073/24850 [16:26<9:40:05,  1.46s/it, lr=7e-5, step_loss=0.0462] Steps:   4%|▍         | 1074/24850 [16:27<9:39:57,  1.46s/it, lr=7e-5, step_loss=0.0462]Steps:   4%|▍         | 1074/24850 [16:27<9:39:57,  1.46s/it, lr=7e-5, step_loss=0.0505]Steps:   4%|▍         | 1075/24850 [16:29<10:06:20,  1.53s/it, lr=7e-5, step_loss=0.0505]Steps:   4%|▍         | 1075/24850 [16:29<10:06:20,  1.53s/it, lr=7e-5, step_loss=0.017] Steps:   4%|▍         | 1076/24850 [16:30<9:56:50,  1.51s/it, lr=7e-5, step_loss=0.017] Steps:   4%|▍         | 1076/24850 [16:30<9:56:50,  1.51s/it, lr=7e-5, step_loss=0.0628]Steps:   4%|▍         | 1077/24850 [16:32<9:48:47,  1.49s/it, lr=7e-5, step_loss=0.0628]Steps:   4%|▍         | 1077/24850 [16:32<9:48:47,  1.49s/it, lr=7e-5, step_loss=0.00235]Steps:   4%|▍         | 1078/24850 [16:33<9:46:58,  1.48s/it, lr=7e-5, step_loss=0.00235]Steps:   4%|▍         | 1078/24850 [16:33<9:46:58,  1.48s/it, lr=7e-5, step_loss=0.0277] Steps:   4%|▍         | 1079/24850 [16:35<9:44:29,  1.48s/it, lr=7e-5, step_loss=0.0277]Steps:   4%|▍         | 1079/24850 [16:35<9:44:29,  1.48s/it, lr=7e-5, step_loss=0.0408]Steps:   4%|▍         | 1080/24850 [16:36<9:41:26,  1.47s/it, lr=7e-5, step_loss=0.0408]Steps:   4%|▍         | 1080/24850 [16:36<9:41:26,  1.47s/it, lr=7e-5, step_loss=0.00439]Steps:   4%|▍         | 1081/24850 [16:37<9:39:13,  1.46s/it, lr=7e-5, step_loss=0.00439]Steps:   4%|▍         | 1081/24850 [16:37<9:39:13,  1.46s/it, lr=7e-5, step_loss=0.00581]Steps:   4%|▍         | 1082/24850 [16:39<9:40:15,  1.46s/it, lr=7e-5, step_loss=0.00581]Steps:   4%|▍         | 1082/24850 [16:39<9:40:15,  1.46s/it, lr=7e-5, step_loss=0.0285] Steps:   4%|▍         | 1083/24850 [16:40<9:39:38,  1.46s/it, lr=7e-5, step_loss=0.0285]Steps:   4%|▍         | 1083/24850 [16:40<9:39:38,  1.46s/it, lr=7e-5, step_loss=0.01]  Steps:   4%|▍         | 1084/24850 [16:42<9:40:53,  1.47s/it, lr=7e-5, step_loss=0.01]Steps:   4%|▍         | 1084/24850 [16:42<9:40:53,  1.47s/it, lr=7e-5, step_loss=0.0477]Steps:   4%|▍         | 1085/24850 [16:43<9:48:01,  1.48s/it, lr=7e-5, step_loss=0.0477]Steps:   4%|▍         | 1085/24850 [16:43<9:48:01,  1.48s/it, lr=7e-5, step_loss=0.0129]Steps:   4%|▍         | 1086/24850 [16:45<9:46:02,  1.48s/it, lr=7e-5, step_loss=0.0129]Steps:   4%|▍         | 1086/24850 [16:45<9:46:02,  1.48s/it, lr=7e-5, step_loss=0.00296]Steps:   4%|▍         | 1087/24850 [16:46<9:45:21,  1.48s/it, lr=7e-5, step_loss=0.00296]Steps:   4%|▍         | 1087/24850 [16:46<9:45:21,  1.48s/it, lr=7e-5, step_loss=0.012]  Steps:   4%|▍         | 1088/24850 [16:48<9:44:26,  1.48s/it, lr=7e-5, step_loss=0.012]Steps:   4%|▍         | 1088/24850 [16:48<9:44:26,  1.48s/it, lr=7e-5, step_loss=0.0245]Steps:   4%|▍         | 1089/24850 [16:49<9:43:29,  1.47s/it, lr=7e-5, step_loss=0.0245]Steps:   4%|▍         | 1089/24850 [16:49<9:43:29,  1.47s/it, lr=7e-5, step_loss=0.171] Steps:   4%|▍         | 1090/24850 [16:51<9:45:35,  1.48s/it, lr=7e-5, step_loss=0.171]Steps:   4%|▍         | 1090/24850 [16:51<9:45:35,  1.48s/it, lr=7e-5, step_loss=0.0575]Steps:   4%|▍         | 1091/24850 [16:52<9:43:23,  1.47s/it, lr=7e-5, step_loss=0.0575]Steps:   4%|▍         | 1091/24850 [16:52<9:43:23,  1.47s/it, lr=7e-5, step_loss=0.00323]Steps:   4%|▍         | 1092/24850 [16:54<9:42:23,  1.47s/it, lr=7e-5, step_loss=0.00323]Steps:   4%|▍         | 1092/24850 [16:54<9:42:23,  1.47s/it, lr=7e-5, step_loss=0.0921] Steps:   4%|▍         | 1093/24850 [16:55<9:40:36,  1.47s/it, lr=7e-5, step_loss=0.0921]Steps:   4%|▍         | 1093/24850 [16:55<9:40:36,  1.47s/it, lr=7e-5, step_loss=0.0964]Steps:   4%|▍         | 1094/24850 [16:57<9:40:03,  1.47s/it, lr=7e-5, step_loss=0.0964]Steps:   4%|▍         | 1094/24850 [16:57<9:40:03,  1.47s/it, lr=7e-5, step_loss=0.0955]Steps:   4%|▍         | 1095/24850 [16:58<9:40:32,  1.47s/it, lr=7e-5, step_loss=0.0955]Steps:   4%|▍         | 1095/24850 [16:58<9:40:32,  1.47s/it, lr=7e-5, step_loss=0.0195]torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  Steps:   4%|▍         | 1096/24850 [17:00<9:40:19,  1.47s/it, lr=7e-5, step_loss=0.0195]Steps:   4%|▍         | 1096/24850 [17:00<9:40:19,  1.47s/it, lr=7e-5, step_loss=0.123] Steps:   4%|▍         | 1097/24850 [17:01<9:40:05,  1.47s/it, lr=7e-5, step_loss=0.123]Steps:   4%|▍         | 1097/24850 [17:01<9:40:05,  1.47s/it, lr=7e-5, step_loss=0.0134]Steps:   4%|▍         | 1098/24850 [17:03<11:39:00,  1.77s/it, lr=7e-5, step_loss=0.0134]Steps:   4%|▍         | 1098/24850 [17:03<11:39:00,  1.77s/it, lr=7e-5, step_loss=0.00933]Steps:   4%|▍         | 1099/24850 [17:05<11:03:15,  1.68s/it, lr=7e-5, step_loss=0.00933]Steps:   4%|▍         | 1099/24850 [17:05<11:03:15,  1.68s/it, lr=7e-5, step_loss=0.117]  Steps:   4%|▍         | 1100/24850 [17:06<10:38:27,  1.61s/it, lr=7e-5, step_loss=0.117]Steps:   4%|▍         | 1100/24850 [17:06<10:38:27,  1.61s/it, lr=7e-5, step_loss=0.00264]Steps:   4%|▍         | 1101/24850 [17:08<10:19:36,  1.57s/it, lr=7e-5, step_loss=0.00264]Steps:   4%|▍         | 1101/24850 [17:08<10:19:36,  1.57s/it, lr=7e-5, step_loss=0.151]  Steps:   4%|▍         | 1102/24850 [17:09<10:08:57,  1.54s/it, lr=7e-5, step_loss=0.151]Steps:   4%|▍         | 1102/24850 [17:09<10:08:57,  1.54s/it, lr=7e-5, step_loss=0.0106]Steps:   4%|▍         | 1103/24850 [17:11<9:58:51,  1.51s/it, lr=7e-5, step_loss=0.0106] Steps:   4%|▍         | 1103/24850 [17:11<9:58:51,  1.51s/it, lr=7e-5, step_loss=0.0648]Steps:   4%|▍         | 1104/24850 [17:12<9:52:32,  1.50s/it, lr=7e-5, step_loss=0.0648]Steps:   4%|▍         | 1104/24850 [17:12<9:52:32,  1.50s/it, lr=7e-5, step_loss=0.0179]Steps:   4%|▍         | 1105/24850 [17:14<9:48:37,  1.49s/it, lr=7e-5, step_loss=0.0179]Steps:   4%|▍         | 1105/24850 [17:14<9:48:37,  1.49s/it, lr=7e-5, step_loss=0.00527]Steps:   4%|▍         | 1106/24850 [17:15<9:46:09,  1.48s/it, lr=7e-5, step_loss=0.00527]Steps:   4%|▍         | 1106/24850 [17:15<9:46:09,  1.48s/it, lr=7e-5, step_loss=0.0318] Steps:   4%|▍         | 1107/24850 [17:17<9:44:14,  1.48s/it, lr=7e-5, step_loss=0.0318]Steps:   4%|▍         | 1107/24850 [17:17<9:44:14,  1.48s/it, lr=7e-5, step_loss=0.00689]Steps:   4%|▍         | 1108/24850 [17:18<9:43:08,  1.47s/it, lr=7e-5, step_loss=0.00689]Steps:   4%|▍         | 1108/24850 [17:18<9:43:08,  1.47s/it, lr=7e-5, step_loss=0.0203] Steps:   4%|▍         | 1109/24850 [17:20<9:41:57,  1.47s/it, lr=7e-5, step_loss=0.0203]Steps:   4%|▍         | 1109/24850 [17:20<9:41:57,  1.47s/it, lr=7e-5, step_loss=0.0544]Steps:   4%|▍         | 1110/24850 [17:21<9:42:40,  1.47s/it, lr=7e-5, step_loss=0.0544]Steps:   4%|▍         | 1110/24850 [17:21<9:42:40,  1.47s/it, lr=7e-5, step_loss=0.00723]Steps:   4%|▍         | 1111/24850 [17:23<9:41:35,  1.47s/it, lr=7e-5, step_loss=0.00723]Steps:   4%|▍         | 1111/24850 [17:23<9:41:35,  1.47s/it, lr=7e-5, step_loss=0.044]  Steps:   4%|▍         | 1112/24850 [17:24<9:43:26,  1.47s/it, lr=7e-5, step_loss=0.044]Steps:   4%|▍         | 1112/24850 [17:24<9:43:26,  1.47s/it, lr=7e-5, step_loss=0.00734]Steps:   4%|▍         | 1113/24850 [17:25<9:41:10,  1.47s/it, lr=7e-5, step_loss=0.00734]Steps:   4%|▍         | 1113/24850 [17:25<9:41:10,  1.47s/it, lr=7e-5, step_loss=0.0188] Steps:   4%|▍         | 1114/24850 [17:27<9:40:34,  1.47s/it, lr=7e-5, step_loss=0.0188]Steps:   4%|▍         | 1114/24850 [17:27<9:40:34,  1.47s/it, lr=7e-5, step_loss=0.00208]Steps:   4%|▍         | 1115/24850 [17:28<9:39:12,  1.46s/it, lr=7e-5, step_loss=0.00208]Steps:   4%|▍         | 1115/24850 [17:28<9:39:12,  1.46s/it, lr=7e-5, step_loss=0.315]  Steps:   4%|▍         | 1116/24850 [17:30<9:37:11,  1.46s/it, lr=7e-5, step_loss=0.315]Steps:   4%|▍         | 1116/24850 [17:30<9:37:11,  1.46s/it, lr=7e-5, step_loss=0.000763]Steps:   4%|▍         | 1117/24850 [17:31<9:37:17,  1.46s/it, lr=7e-5, step_loss=0.000763]Steps:   4%|▍         | 1117/24850 [17:31<9:37:17,  1.46s/it, lr=7e-5, step_loss=0.0247]  Steps:   4%|▍         | 1118/24850 [17:33<9:38:14,  1.46s/it, lr=7e-5, step_loss=0.0247]Steps:   4%|▍         | 1118/24850 [17:33<9:38:14,  1.46s/it, lr=7e-5, step_loss=0.0343]Steps:   5%|▍         | 1119/24850 [17:34<9:37:54,  1.46s/it, lr=7e-5, step_loss=0.0343]Steps:   5%|▍         | 1119/24850 [17:34<9:37:54,  1.46s/it, lr=7e-5, step_loss=0.0176]Steps:   5%|▍         | 1120/24850 [17:36<9:37:48,  1.46s/it, lr=7e-5, step_loss=0.0176]Steps:   5%|▍         | 1120/24850 [17:36<9:37:48,  1.46s/it, lr=7e-5, step_loss=0.0555]Steps:   5%|▍         | 1121/24850 [17:37<9:36:10,  1.46s/it, lr=7e-5, step_loss=0.0555]Steps:   5%|▍         | 1121/24850 [17:37<9:36:10,  1.46s/it, lr=7e-5, step_loss=0.00355]Steps:   5%|▍         | 1122/24850 [17:39<9:36:14,  1.46s/it, lr=7e-5, step_loss=0.00355]Steps:   5%|▍         | 1122/24850 [17:39<9:36:14,  1.46s/it, lr=7e-5, step_loss=0.0909] Steps:   5%|▍         | 1123/24850 [17:40<9:36:38,  1.46s/it, lr=7e-5, step_loss=0.0909]Steps:   5%|▍         | 1123/24850 [17:40<9:36:38,  1.46s/it, lr=7e-5, step_loss=0.175] mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:   5%|▍         | 1124/24850 [17:42<9:37:19,  1.46s/it, lr=7e-5, step_loss=0.175]Steps:   5%|▍         | 1124/24850 [17:42<9:37:19,  1.46s/it, lr=7e-5, step_loss=0.0201]Steps:   5%|▍         | 1125/24850 [17:43<9:44:59,  1.48s/it, lr=7e-5, step_loss=0.0201]Steps:   5%|▍         | 1125/24850 [17:43<9:44:59,  1.48s/it, lr=7e-5, step_loss=0.0299]Steps:   5%|▍         | 1126/24850 [17:45<9:45:19,  1.48s/it, lr=7e-5, step_loss=0.0299]Steps:   5%|▍         | 1126/24850 [17:45<9:45:19,  1.48s/it, lr=7e-5, step_loss=0.0277]Steps:   5%|▍         | 1127/24850 [17:46<9:44:06,  1.48s/it, lr=7e-5, step_loss=0.0277]Steps:   5%|▍         | 1127/24850 [17:46<9:44:06,  1.48s/it, lr=7e-5, step_loss=0.1]   Steps:   5%|▍         | 1128/24850 [17:47<9:43:04,  1.47s/it, lr=7e-5, step_loss=0.1]Steps:   5%|▍         | 1128/24850 [17:47<9:43:04,  1.47s/it, lr=7e-5, step_loss=0.00717]Steps:   5%|▍         | 1129/24850 [17:49<9:40:31,  1.47s/it, lr=7e-5, step_loss=0.00717]Steps:   5%|▍         | 1129/24850 [17:49<9:40:31,  1.47s/it, lr=7e-5, step_loss=0.0739] Steps:   5%|▍         | 1130/24850 [17:50<9:39:46,  1.47s/it, lr=7e-5, step_loss=0.0739]Steps:   5%|▍         | 1130/24850 [17:50<9:39:46,  1.47s/it, lr=7e-5, step_loss=0.0265]Steps:   5%|▍         | 1131/24850 [17:52<9:39:22,  1.47s/it, lr=7e-5, step_loss=0.0265]Steps:   5%|▍         | 1131/24850 [17:52<9:39:22,  1.47s/it, lr=7e-5, step_loss=0.0778]Steps:   5%|▍         | 1132/24850 [17:53<9:39:21,  1.47s/it, lr=7e-5, step_loss=0.0778]Steps:   5%|▍         | 1132/24850 [17:53<9:39:21,  1.47s/it, lr=7e-5, step_loss=0.0173]Steps:   5%|▍         | 1133/24850 [17:55<9:40:01,  1.47s/it, lr=7e-5, step_loss=0.0173]Steps:   5%|▍         | 1133/24850 [17:55<9:40:01,  1.47s/it, lr=7e-5, step_loss=0.0168]Steps:   5%|▍         | 1134/24850 [17:56<9:40:05,  1.47s/it, lr=7e-5, step_loss=0.0168]Steps:   5%|▍         | 1134/24850 [17:56<9:40:05,  1.47s/it, lr=7e-5, step_loss=0.066] Steps:   5%|▍         | 1135/24850 [17:58<9:41:05,  1.47s/it, lr=7e-5, step_loss=0.066]Steps:   5%|▍         | 1135/24850 [17:58<9:41:05,  1.47s/it, lr=7e-5, step_loss=0.0378]Steps:   5%|▍         | 1136/24850 [17:59<9:40:39,  1.47s/it, lr=7e-5, step_loss=0.0378]Steps:   5%|▍         | 1136/24850 [17:59<9:40:39,  1.47s/it, lr=7e-5, step_loss=0.0136]Steps:   5%|▍         | 1137/24850 [18:01<9:38:02,  1.46s/it, lr=7e-5, step_loss=0.0136]Steps:   5%|▍         | 1137/24850 [18:01<9:38:02,  1.46s/it, lr=7e-5, step_loss=0.0246]Steps:   5%|▍         | 1138/24850 [18:02<9:43:03,  1.48s/it, lr=7e-5, step_loss=0.0246]Steps:   5%|▍         | 1138/24850 [18:02<9:43:03,  1.48s/it, lr=7e-5, step_loss=0.00261]Steps:   5%|▍         | 1139/24850 [18:04<9:41:06,  1.47s/it, lr=7e-5, step_loss=0.00261]Steps:   5%|▍         | 1139/24850 [18:04<9:41:06,  1.47s/it, lr=7e-5, step_loss=0.0189] Steps:   5%|▍         | 1140/24850 [18:05<9:39:24,  1.47s/it, lr=7e-5, step_loss=0.0189]Steps:   5%|▍         | 1140/24850 [18:05<9:39:24,  1.47s/it, lr=7e-5, step_loss=0.00531]Steps:   5%|▍         | 1141/24850 [18:07<9:39:14,  1.47s/it, lr=7e-5, step_loss=0.00531]Steps:   5%|▍         | 1141/24850 [18:07<9:39:14,  1.47s/it, lr=7e-5, step_loss=0.0659] Steps:   5%|▍         | 1142/24850 [18:08<9:38:01,  1.46s/it, lr=7e-5, step_loss=0.0659]Steps:   5%|▍         | 1142/24850 [18:08<9:38:01,  1.46s/it, lr=7e-5, step_loss=0.0532]Steps:   5%|▍         | 1143/24850 [18:09<9:38:50,  1.46s/it, lr=7e-5, step_loss=0.0532]Steps:   5%|▍         | 1143/24850 [18:09<9:38:50,  1.46s/it, lr=7e-5, step_loss=0.0438]Steps:   5%|▍         | 1144/24850 [18:11<9:37:57,  1.46s/it, lr=7e-5, step_loss=0.0438]Steps:   5%|▍         | 1144/24850 [18:11<9:37:57,  1.46s/it, lr=7e-5, step_loss=0.0564]Steps:   5%|▍         | 1145/24850 [18:13<9:54:13,  1.50s/it, lr=7e-5, step_loss=0.0564]Steps:   5%|▍         | 1145/24850 [18:13<9:54:13,  1.50s/it, lr=7e-5, step_loss=0.0193]Steps:   5%|▍         | 1146/24850 [18:14<9:49:02,  1.49s/it, lr=7e-5, step_loss=0.0193]Steps:   5%|▍         | 1146/24850 [18:14<9:49:02,  1.49s/it, lr=7e-5, step_loss=0.134] Steps:   5%|▍         | 1147/24850 [18:15<9:45:56,  1.48s/it, lr=7e-5, step_loss=0.134]Steps:   5%|▍         | 1147/24850 [18:15<9:45:56,  1.48s/it, lr=7e-5, step_loss=0.00813]Steps:   5%|▍         | 1148/24850 [18:18<11:32:14,  1.75s/it, lr=7e-5, step_loss=0.00813]Steps:   5%|▍         | 1148/24850 [18:18<11:32:14,  1.75s/it, lr=7e-5, step_loss=0.00659]Steps:   5%|▍         | 1149/24850 [18:19<10:57:04,  1.66s/it, lr=7e-5, step_loss=0.00659]Steps:   5%|▍         | 1149/24850 [18:19<10:57:04,  1.66s/it, lr=7e-5, step_loss=0.0169] Steps:   5%|▍         | 1150/24850 [18:21<10:32:51,  1.60s/it, lr=7e-5, step_loss=0.0169]Steps:   5%|▍         | 1150/24850 [18:21<10:32:51,  1.60s/it, lr=7e-5, step_loss=0.026] torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) Steps:   5%|▍         | 1151/24850 [18:22<10:16:57,  1.56s/it, lr=7e-5, step_loss=0.026]Steps:   5%|▍         | 1151/24850 [18:22<10:16:57,  1.56s/it, lr=7e-5, step_loss=0.0224]Steps:   5%|▍         | 1152/24850 [18:24<10:04:12,  1.53s/it, lr=7e-5, step_loss=0.0224]Steps:   5%|▍         | 1152/24850 [18:24<10:04:12,  1.53s/it, lr=7e-5, step_loss=0.0133]Steps:   5%|▍         | 1153/24850 [18:25<9:55:46,  1.51s/it, lr=7e-5, step_loss=0.0133] Steps:   5%|▍         | 1153/24850 [18:25<9:55:46,  1.51s/it, lr=7e-5, step_loss=0.0183]Steps:   5%|▍         | 1154/24850 [18:27<9:50:47,  1.50s/it, lr=7e-5, step_loss=0.0183]Steps:   5%|▍         | 1154/24850 [18:27<9:50:47,  1.50s/it, lr=7e-5, step_loss=0.0172]Steps:   5%|▍         | 1155/24850 [18:28<9:49:28,  1.49s/it, lr=7e-5, step_loss=0.0172]Steps:   5%|▍         | 1155/24850 [18:28<9:49:28,  1.49s/it, lr=7e-5, step_loss=0.00253]Steps:   5%|▍         | 1156/24850 [18:30<9:46:11,  1.48s/it, lr=7e-5, step_loss=0.00253]Steps:   5%|▍         | 1156/24850 [18:30<9:46:11,  1.48s/it, lr=7e-5, step_loss=0.0169] Steps:   5%|▍         | 1157/24850 [18:31<9:43:01,  1.48s/it, lr=7e-5, step_loss=0.0169]Steps:   5%|▍         | 1157/24850 [18:31<9:43:01,  1.48s/it, lr=7e-5, step_loss=0.0784]Steps:   5%|▍         | 1158/24850 [18:32<9:40:59,  1.47s/it, lr=7e-5, step_loss=0.0784]Steps:   5%|▍         | 1158/24850 [18:32<9:40:59,  1.47s/it, lr=7e-5, step_loss=0.00543]Steps:   5%|▍         | 1159/24850 [18:34<9:40:19,  1.47s/it, lr=7e-5, step_loss=0.00543]Steps:   5%|▍         | 1159/24850 [18:34<9:40:19,  1.47s/it, lr=7e-5, step_loss=0.0678] Steps:   5%|▍         | 1160/24850 [18:35<9:41:16,  1.47s/it, lr=7e-5, step_loss=0.0678]Steps:   5%|▍         | 1160/24850 [18:35<9:41:16,  1.47s/it, lr=7e-5, step_loss=0.0304]Steps:   5%|▍         | 1161/24850 [18:37<9:40:22,  1.47s/it, lr=7e-5, step_loss=0.0304]Steps:   5%|▍         | 1161/24850 [18:37<9:40:22,  1.47s/it, lr=7e-5, step_loss=0.00818]Steps:   5%|▍         | 1162/24850 [18:38<9:40:21,  1.47s/it, lr=7e-5, step_loss=0.00818]Steps:   5%|▍         | 1162/24850 [18:38<9:40:21,  1.47s/it, lr=7e-5, step_loss=0.0263] Steps:   5%|▍         | 1163/24850 [18:40<9:39:18,  1.47s/it, lr=7e-5, step_loss=0.0263]Steps:   5%|▍         | 1163/24850 [18:40<9:39:18,  1.47s/it, lr=7e-5, step_loss=0.0357]Steps:   5%|▍         | 1164/24850 [18:41<9:38:57,  1.47s/it, lr=7e-5, step_loss=0.0357]Steps:   5%|▍         | 1164/24850 [18:41<9:38:57,  1.47s/it, lr=7e-5, step_loss=0.0207]Steps:   5%|▍         | 1165/24850 [18:43<9:40:16,  1.47s/it, lr=7e-5, step_loss=0.0207]Steps:   5%|▍         | 1165/24850 [18:43<9:40:16,  1.47s/it, lr=7e-5, step_loss=0.0199]Steps:   5%|▍         | 1166/24850 [18:44<9:45:36,  1.48s/it, lr=7e-5, step_loss=0.0199]Steps:   5%|▍         | 1166/24850 [18:44<9:45:36,  1.48s/it, lr=7e-5, step_loss=0.0144]Steps:   5%|▍         | 1167/24850 [18:46<9:43:15,  1.48s/it, lr=7e-5, step_loss=0.0144]Steps:   5%|▍         | 1167/24850 [18:46<9:43:15,  1.48s/it, lr=7e-5, step_loss=0.0343]Steps:   5%|▍         | 1168/24850 [18:47<9:43:18,  1.48s/it, lr=7e-5, step_loss=0.0343]Steps:   5%|▍         | 1168/24850 [18:47<9:43:18,  1.48s/it, lr=7e-5, step_loss=0.0829]Steps:   5%|▍         | 1169/24850 [18:49<9:43:10,  1.48s/it, lr=7e-5, step_loss=0.0829]Steps:   5%|▍         | 1169/24850 [18:49<9:43:10,  1.48s/it, lr=7e-5, step_loss=0.0796]Steps:   5%|▍         | 1170/24850 [18:50<9:42:29,  1.48s/it, lr=7e-5, step_loss=0.0796]Steps:   5%|▍         | 1170/24850 [18:50<9:42:29,  1.48s/it, lr=7e-5, step_loss=0.0696]Steps:   5%|▍         | 1171/24850 [18:52<9:40:44,  1.47s/it, lr=7e-5, step_loss=0.0696]Steps:   5%|▍         | 1171/24850 [18:52<9:40:44,  1.47s/it, lr=7e-5, step_loss=0.134] Steps:   5%|▍         | 1172/24850 [18:53<9:40:20,  1.47s/it, lr=7e-5, step_loss=0.134]Steps:   5%|▍         | 1172/24850 [18:53<9:40:20,  1.47s/it, lr=7e-5, step_loss=0.0785]Steps:   5%|▍         | 1173/24850 [18:55<9:39:35,  1.47s/it, lr=7e-5, step_loss=0.0785]Steps:   5%|▍         | 1173/24850 [18:55<9:39:35,  1.47s/it, lr=7e-5, step_loss=0.0976]Steps:   5%|▍         | 1174/24850 [18:56<9:39:19,  1.47s/it, lr=7e-5, step_loss=0.0976]Steps:   5%|▍         | 1174/24850 [18:56<9:39:19,  1.47s/it, lr=7e-5, step_loss=0.0735]Steps:   5%|▍         | 1175/24850 [18:57<9:37:55,  1.46s/it, lr=7e-5, step_loss=0.0735]Steps:   5%|▍         | 1175/24850 [18:57<9:37:55,  1.46s/it, lr=7e-5, step_loss=0.00175]Steps:   5%|▍         | 1176/24850 [18:59<9:37:53,  1.46s/it, lr=7e-5, step_loss=0.00175]Steps:   5%|▍         | 1176/24850 [18:59<9:37:53,  1.46s/it, lr=7e-5, step_loss=0.0273] Steps:   5%|▍         | 1177/24850 [19:00<9:37:27,  1.46s/it, lr=7e-5, step_loss=0.0273]Steps:   5%|▍         | 1177/24850 [19:00<9:37:27,  1.46s/it, lr=7e-5, step_loss=0.0196]torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:   5%|▍         | 1178/24850 [19:02<9:36:58,  1.46s/it, lr=7e-5, step_loss=0.0196]Steps:   5%|▍         | 1178/24850 [19:02<9:36:58,  1.46s/it, lr=7e-5, step_loss=0.0226]Steps:   5%|▍         | 1179/24850 [19:03<9:36:08,  1.46s/it, lr=7e-5, step_loss=0.0226]Steps:   5%|▍         | 1179/24850 [19:03<9:36:08,  1.46s/it, lr=7e-5, step_loss=0.00125]Steps:   5%|▍         | 1180/24850 [19:05<9:36:34,  1.46s/it, lr=7e-5, step_loss=0.00125]Steps:   5%|▍         | 1180/24850 [19:05<9:36:34,  1.46s/it, lr=7e-5, step_loss=0.0114] Steps:   5%|▍         | 1181/24850 [19:06<9:37:02,  1.46s/it, lr=7e-5, step_loss=0.0114]Steps:   5%|▍         | 1181/24850 [19:06<9:37:02,  1.46s/it, lr=7e-5, step_loss=0.0316]Steps:   5%|▍         | 1182/24850 [19:08<9:36:30,  1.46s/it, lr=7e-5, step_loss=0.0316]Steps:   5%|▍         | 1182/24850 [19:08<9:36:30,  1.46s/it, lr=7e-5, step_loss=0.0125]Steps:   5%|▍         | 1183/24850 [19:09<9:36:41,  1.46s/it, lr=7e-5, step_loss=0.0125]Steps:   5%|▍         | 1183/24850 [19:09<9:36:41,  1.46s/it, lr=7e-5, step_loss=0.063] Steps:   5%|▍         | 1184/24850 [19:11<9:36:44,  1.46s/it, lr=7e-5, step_loss=0.063]Steps:   5%|▍         | 1184/24850 [19:11<9:36:44,  1.46s/it, lr=7e-5, step_loss=0.198]Steps:   5%|▍         | 1185/24850 [19:12<9:35:58,  1.46s/it, lr=7e-5, step_loss=0.198]Steps:   5%|▍         | 1185/24850 [19:12<9:35:58,  1.46s/it, lr=7e-5, step_loss=0.0718]Steps:   5%|▍         | 1186/24850 [19:14<9:40:31,  1.47s/it, lr=7e-5, step_loss=0.0718]Steps:   5%|▍         | 1186/24850 [19:14<9:40:31,  1.47s/it, lr=7e-5, step_loss=0.0165]Steps:   5%|▍         | 1187/24850 [19:15<9:40:45,  1.47s/it, lr=7e-5, step_loss=0.0165]Steps:   5%|▍         | 1187/24850 [19:15<9:40:45,  1.47s/it, lr=7e-5, step_loss=0.0505]Steps:   5%|▍         | 1188/24850 [19:17<9:42:32,  1.48s/it, lr=7e-5, step_loss=0.0505]Steps:   5%|▍         | 1188/24850 [19:17<9:42:32,  1.48s/it, lr=7e-5, step_loss=0.035] Steps:   5%|▍         | 1189/24850 [19:18<9:42:02,  1.48s/it, lr=7e-5, step_loss=0.035]Steps:   5%|▍         | 1189/24850 [19:18<9:42:02,  1.48s/it, lr=7e-5, step_loss=0.00462]Steps:   5%|▍         | 1190/24850 [19:19<9:39:39,  1.47s/it, lr=7e-5, step_loss=0.00462]Steps:   5%|▍         | 1190/24850 [19:19<9:39:39,  1.47s/it, lr=7e-5, step_loss=0.0344] Steps:   5%|▍         | 1191/24850 [19:21<9:48:22,  1.49s/it, lr=7e-5, step_loss=0.0344]Steps:   5%|▍         | 1191/24850 [19:21<9:48:22,  1.49s/it, lr=7e-5, step_loss=0.00682]Steps:   5%|▍         | 1192/24850 [19:22<9:44:31,  1.48s/it, lr=7e-5, step_loss=0.00682]Steps:   5%|▍         | 1192/24850 [19:22<9:44:31,  1.48s/it, lr=7e-5, step_loss=0.0237] Steps:   5%|▍         | 1193/24850 [19:24<9:41:21,  1.47s/it, lr=7e-5, step_loss=0.0237]Steps:   5%|▍         | 1193/24850 [19:24<9:41:21,  1.47s/it, lr=7e-5, step_loss=0.0128]Steps:   5%|▍         | 1194/24850 [19:25<9:42:25,  1.48s/it, lr=7e-5, step_loss=0.0128]Steps:   5%|▍         | 1194/24850 [19:25<9:42:25,  1.48s/it, lr=7e-5, step_loss=0.0233]Steps:   5%|▍         | 1195/24850 [19:27<9:39:42,  1.47s/it, lr=7e-5, step_loss=0.0233]Steps:   5%|▍         | 1195/24850 [19:27<9:39:42,  1.47s/it, lr=7e-5, step_loss=0.028] Steps:   5%|▍         | 1196/24850 [19:28<9:39:06,  1.47s/it, lr=7e-5, step_loss=0.028]Steps:   5%|▍         | 1196/24850 [19:28<9:39:06,  1.47s/it, lr=7e-5, step_loss=0.0151]Steps:   5%|▍         | 1197/24850 [19:30<9:38:24,  1.47s/it, lr=7e-5, step_loss=0.0151]Steps:   5%|▍         | 1197/24850 [19:30<9:38:24,  1.47s/it, lr=7e-5, step_loss=0.0136]Steps:   5%|▍         | 1198/24850 [19:32<11:39:07,  1.77s/it, lr=7e-5, step_loss=0.0136]Steps:   5%|▍         | 1198/24850 [19:32<11:39:07,  1.77s/it, lr=7e-5, step_loss=0.0007]Steps:   5%|▍         | 1199/24850 [19:34<11:01:57,  1.68s/it, lr=7e-5, step_loss=0.0007]Steps:   5%|▍         | 1199/24850 [19:34<11:01:57,  1.68s/it, lr=7e-5, step_loss=0.00716]Steps:   5%|▍         | 1200/24850 [19:35<10:37:18,  1.62s/it, lr=7e-5, step_loss=0.00716]Steps:   5%|▍         | 1200/24850 [19:35<10:37:18,  1.62s/it, lr=7e-5, step_loss=0.0317] Steps:   5%|▍         | 1201/24850 [19:37<10:18:31,  1.57s/it, lr=7e-5, step_loss=0.0317]Steps:   5%|▍         | 1201/24850 [19:37<10:18:31,  1.57s/it, lr=7e-5, step_loss=0.127] Steps:   5%|▍         | 1202/24850 [19:38<10:05:29,  1.54s/it, lr=7e-5, step_loss=0.127]Steps:   5%|▍         | 1202/24850 [19:38<10:05:29,  1.54s/it, lr=7e-5, step_loss=0.0258]Steps:   5%|▍         | 1203/24850 [19:40<9:56:43,  1.51s/it, lr=7e-5, step_loss=0.0258] Steps:   5%|▍         | 1203/24850 [19:40<9:56:43,  1.51s/it, lr=7e-5, step_loss=0.196] Steps:   5%|▍         | 1204/24850 [19:41<9:48:29,  1.49s/it, lr=7e-5, step_loss=0.196]Steps:   5%|▍         | 1204/24850 [19:41<9:48:29,  1.49s/it, lr=7e-5, step_loss=0.00646]Steps:   5%|▍         | 1205/24850 [19:43<10:07:47,  1.54s/it, lr=7e-5, step_loss=0.00646]Steps:   5%|▍         | 1205/24850 [19:43<10:07:47,  1.54s/it, lr=7e-5, step_loss=0.0203] torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
Steps:   5%|▍         | 1206/24850 [19:44<10:00:55,  1.52s/it, lr=7e-5, step_loss=0.0203]Steps:   5%|▍         | 1206/24850 [19:44<10:00:55,  1.52s/it, lr=7e-5, step_loss=0.00627]Steps:   5%|▍         | 1207/24850 [19:46<9:54:28,  1.51s/it, lr=7e-5, step_loss=0.00627] Steps:   5%|▍         | 1207/24850 [19:46<9:54:28,  1.51s/it, lr=7e-5, step_loss=0.0109] Steps:   5%|▍         | 1208/24850 [19:47<9:49:18,  1.50s/it, lr=7e-5, step_loss=0.0109]Steps:   5%|▍         | 1208/24850 [19:47<9:49:18,  1.50s/it, lr=7e-5, step_loss=0.0105]Steps:   5%|▍         | 1209/24850 [19:49<9:45:46,  1.49s/it, lr=7e-5, step_loss=0.0105]Steps:   5%|▍         | 1209/24850 [19:49<9:45:46,  1.49s/it, lr=7e-5, step_loss=0.0418]Steps:   5%|▍         | 1210/24850 [19:50<9:44:02,  1.48s/it, lr=7e-5, step_loss=0.0418]Steps:   5%|▍         | 1210/24850 [19:50<9:44:02,  1.48s/it, lr=7e-5, step_loss=0.00289]Steps:   5%|▍         | 1211/24850 [19:52<9:45:12,  1.49s/it, lr=7e-5, step_loss=0.00289]Steps:   5%|▍         | 1211/24850 [19:52<9:45:12,  1.49s/it, lr=7e-5, step_loss=0.076]  Steps:   5%|▍         | 1212/24850 [19:53<9:42:24,  1.48s/it, lr=7e-5, step_loss=0.076]Steps:   5%|▍         | 1212/24850 [19:53<9:42:24,  1.48s/it, lr=7e-5, step_loss=0.0151]Steps:   5%|▍         | 1213/24850 [19:54<9:39:44,  1.47s/it, lr=7e-5, step_loss=0.0151]Steps:   5%|▍         | 1213/24850 [19:54<9:39:44,  1.47s/it, lr=7e-5, step_loss=0.0438]Steps:   5%|▍         | 1214/24850 [19:56<9:38:51,  1.47s/it, lr=7e-5, step_loss=0.0438]Steps:   5%|▍         | 1214/24850 [19:56<9:38:51,  1.47s/it, lr=7e-5, step_loss=0.0274]Steps:   5%|▍         | 1215/24850 [19:57<9:38:26,  1.47s/it, lr=7e-5, step_loss=0.0274]Steps:   5%|▍         | 1215/24850 [19:57<9:38:26,  1.47s/it, lr=7e-5, step_loss=0.0996]Steps:   5%|▍         | 1216/24850 [19:59<9:37:38,  1.47s/it, lr=7e-5, step_loss=0.0996]Steps:   5%|▍         | 1216/24850 [19:59<9:37:38,  1.47s/it, lr=7e-5, step_loss=0.0229]Steps:   5%|▍         | 1217/24850 [20:00<9:36:48,  1.46s/it, lr=7e-5, step_loss=0.0229]Steps:   5%|▍         | 1217/24850 [20:00<9:36:48,  1.46s/it, lr=7e-5, step_loss=0.0133]Steps:   5%|▍         | 1218/24850 [20:02<9:40:18,  1.47s/it, lr=7e-5, step_loss=0.0133]Steps:   5%|▍         | 1218/24850 [20:02<9:40:18,  1.47s/it, lr=7e-5, step_loss=0.00204]Steps:   5%|▍         | 1219/24850 [20:03<9:38:48,  1.47s/it, lr=7e-5, step_loss=0.00204]Steps:   5%|▍         | 1219/24850 [20:03<9:38:48,  1.47s/it, lr=7e-5, step_loss=0.0549] Steps:   5%|▍         | 1220/24850 [20:05<9:37:50,  1.47s/it, lr=7e-5, step_loss=0.0549]Steps:   5%|▍         | 1220/24850 [20:05<9:37:50,  1.47s/it, lr=7e-5, step_loss=0.0338]Steps:   5%|▍         | 1221/24850 [20:06<9:37:28,  1.47s/it, lr=7e-5, step_loss=0.0338]Steps:   5%|▍         | 1221/24850 [20:06<9:37:28,  1.47s/it, lr=7e-5, step_loss=0.0391]Steps:   5%|▍         | 1222/24850 [20:08<9:36:21,  1.46s/it, lr=7e-5, step_loss=0.0391]Steps:   5%|▍         | 1222/24850 [20:08<9:36:21,  1.46s/it, lr=7e-5, step_loss=0.039] Steps:   5%|▍         | 1223/24850 [20:09<9:35:52,  1.46s/it, lr=7e-5, step_loss=0.039]Steps:   5%|▍         | 1223/24850 [20:09<9:35:52,  1.46s/it, lr=7e-5, step_loss=0.00847]Steps:   5%|▍         | 1224/24850 [20:11<9:35:56,  1.46s/it, lr=7e-5, step_loss=0.00847]Steps:   5%|▍         | 1224/24850 [20:11<9:35:56,  1.46s/it, lr=7e-5, step_loss=0.00936]Steps:   5%|▍         | 1225/24850 [20:12<9:36:17,  1.46s/it, lr=7e-5, step_loss=0.00936]Steps:   5%|▍         | 1225/24850 [20:12<9:36:17,  1.46s/it, lr=7e-5, step_loss=0.0341] Steps:   5%|▍         | 1226/24850 [20:13<9:35:28,  1.46s/it, lr=7e-5, step_loss=0.0341]Steps:   5%|▍         | 1226/24850 [20:13<9:35:28,  1.46s/it, lr=7e-5, step_loss=0.0165]Steps:   5%|▍         | 1227/24850 [20:15<9:39:32,  1.47s/it, lr=7e-5, step_loss=0.0165]Steps:   5%|▍         | 1227/24850 [20:15<9:39:32,  1.47s/it, lr=7e-5, step_loss=0.111] Steps:   5%|▍         | 1228/24850 [20:16<9:38:52,  1.47s/it, lr=7e-5, step_loss=0.111]Steps:   5%|▍         | 1228/24850 [20:16<9:38:52,  1.47s/it, lr=7e-5, step_loss=0.0134]Steps:   5%|▍         | 1229/24850 [20:18<9:36:43,  1.46s/it, lr=7e-5, step_loss=0.0134]Steps:   5%|▍         | 1229/24850 [20:18<9:36:43,  1.46s/it, lr=7e-5, step_loss=0.0444]Steps:   5%|▍         | 1230/24850 [20:19<9:36:10,  1.46s/it, lr=7e-5, step_loss=0.0444]Steps:   5%|▍         | 1230/24850 [20:19<9:36:10,  1.46s/it, lr=7e-5, step_loss=0.0551]Steps:   5%|▍         | 1231/24850 [20:21<9:34:51,  1.46s/it, lr=7e-5, step_loss=0.0551]Steps:   5%|▍         | 1231/24850 [20:21<9:34:51,  1.46s/it, lr=7e-5, step_loss=0.0557]Steps:   5%|▍         | 1232/24850 [20:22<9:35:34,  1.46s/it, lr=7e-5, step_loss=0.0557]Steps:   5%|▍         | 1232/24850 [20:22<9:35:34,  1.46s/it, lr=7e-5, step_loss=0.0525](512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512)Steps:   5%|▍         | 1233/24850 [20:24<9:35:26,  1.46s/it, lr=7e-5, step_loss=0.0525]Steps:   5%|▍         | 1233/24850 [20:24<9:35:26,  1.46s/it, lr=7e-5, step_loss=0.00237]Steps:   5%|▍         | 1234/24850 [20:25<9:35:25,  1.46s/it, lr=7e-5, step_loss=0.00237]Steps:   5%|▍         | 1234/24850 [20:25<9:35:25,  1.46s/it, lr=7e-5, step_loss=0.0113] Steps:   5%|▍         | 1235/24850 [20:27<9:35:42,  1.46s/it, lr=7e-5, step_loss=0.0113]Steps:   5%|▍         | 1235/24850 [20:27<9:35:42,  1.46s/it, lr=7e-5, step_loss=0.0146]Steps:   5%|▍         | 1236/24850 [20:28<9:35:15,  1.46s/it, lr=7e-5, step_loss=0.0146]Steps:   5%|▍         | 1236/24850 [20:28<9:35:15,  1.46s/it, lr=7e-5, step_loss=0.091] Steps:   5%|▍         | 1237/24850 [20:30<9:35:06,  1.46s/it, lr=7e-5, step_loss=0.091]Steps:   5%|▍         | 1237/24850 [20:30<9:35:06,  1.46s/it, lr=7e-5, step_loss=0.0101]Steps:   5%|▍         | 1238/24850 [20:31<9:34:14,  1.46s/it, lr=7e-5, step_loss=0.0101]Steps:   5%|▍         | 1238/24850 [20:31<9:34:14,  1.46s/it, lr=7e-5, step_loss=0.00357]Steps:   5%|▍         | 1239/24850 [20:33<9:34:47,  1.46s/it, lr=7e-5, step_loss=0.00357]Steps:   5%|▍         | 1239/24850 [20:33<9:34:47,  1.46s/it, lr=7e-5, step_loss=0.0089] Steps:   5%|▍         | 1240/24850 [20:34<9:35:03,  1.46s/it, lr=7e-5, step_loss=0.0089]Steps:   5%|▍         | 1240/24850 [20:34<9:35:03,  1.46s/it, lr=7e-5, step_loss=0.0333]Steps:   5%|▍         | 1241/24850 [20:35<9:35:45,  1.46s/it, lr=7e-5, step_loss=0.0333]Steps:   5%|▍         | 1241/24850 [20:35<9:35:45,  1.46s/it, lr=7e-5, step_loss=0.0138]Steps:   5%|▍         | 1242/24850 [20:37<9:36:01,  1.46s/it, lr=7e-5, step_loss=0.0138]Steps:   5%|▍         | 1242/24850 [20:37<9:36:01,  1.46s/it, lr=7e-5, step_loss=0.0607]Steps:   5%|▌         | 1243/24850 [20:38<9:37:13,  1.47s/it, lr=7e-5, step_loss=0.0607]Steps:   5%|▌         | 1243/24850 [20:38<9:37:13,  1.47s/it, lr=7e-5, step_loss=0.135] Steps:   5%|▌         | 1244/24850 [20:40<9:35:38,  1.46s/it, lr=7e-5, step_loss=0.135]Steps:   5%|▌         | 1244/24850 [20:40<9:35:38,  1.46s/it, lr=7e-5, step_loss=0.00506]Steps:   5%|▌         | 1245/24850 [20:41<9:35:48,  1.46s/it, lr=7e-5, step_loss=0.00506]Steps:   5%|▌         | 1245/24850 [20:41<9:35:48,  1.46s/it, lr=7e-5, step_loss=0.0132] Steps:   5%|▌         | 1246/24850 [20:43<9:44:50,  1.49s/it, lr=7e-5, step_loss=0.0132]Steps:   5%|▌         | 1246/24850 [20:43<9:44:50,  1.49s/it, lr=7e-5, step_loss=0.0178]Steps:   5%|▌         | 1247/24850 [20:44<9:45:52,  1.49s/it, lr=7e-5, step_loss=0.0178]Steps:   5%|▌         | 1247/24850 [20:44<9:45:52,  1.49s/it, lr=7e-5, step_loss=0.068] Steps:   5%|▌         | 1248/24850 [20:47<11:45:40,  1.79s/it, lr=7e-5, step_loss=0.068]Steps:   5%|▌         | 1248/24850 [20:47<11:45:40,  1.79s/it, lr=7e-5, step_loss=0.0256]Steps:   5%|▌         | 1249/24850 [20:48<11:06:09,  1.69s/it, lr=7e-5, step_loss=0.0256]Steps:   5%|▌         | 1249/24850 [20:48<11:06:09,  1.69s/it, lr=7e-5, step_loss=0.0454]Steps:   5%|▌         | 1250/24850 [20:50<10:39:30,  1.63s/it, lr=7e-5, step_loss=0.0454]Steps:   5%|▌         | 1250/24850 [20:50<10:39:30,  1.63s/it, lr=7e-5, step_loss=0.0415]Steps:   5%|▌         | 1251/24850 [20:51<10:20:37,  1.58s/it, lr=7e-5, step_loss=0.0415]Steps:   5%|▌         | 1251/24850 [20:51<10:20:37,  1.58s/it, lr=7e-5, step_loss=0.0411]Steps:   5%|▌         | 1252/24850 [20:53<10:08:25,  1.55s/it, lr=7e-5, step_loss=0.0411]Steps:   5%|▌         | 1252/24850 [20:53<10:08:25,  1.55s/it, lr=7e-5, step_loss=0.0233]Steps:   5%|▌         | 1253/24850 [20:54<9:58:07,  1.52s/it, lr=7e-5, step_loss=0.0233] Steps:   5%|▌         | 1253/24850 [20:54<9:58:07,  1.52s/it, lr=7e-5, step_loss=0.0467]Steps:   5%|▌         | 1254/24850 [20:56<9:51:26,  1.50s/it, lr=7e-5, step_loss=0.0467]Steps:   5%|▌         | 1254/24850 [20:56<9:51:26,  1.50s/it, lr=7e-5, step_loss=0.0646]Steps:   5%|▌         | 1255/24850 [20:57<9:46:25,  1.49s/it, lr=7e-5, step_loss=0.0646]Steps:   5%|▌         | 1255/24850 [20:57<9:46:25,  1.49s/it, lr=7e-5, step_loss=0.183] Steps:   5%|▌         | 1256/24850 [20:59<9:42:11,  1.48s/it, lr=7e-5, step_loss=0.183]Steps:   5%|▌         | 1256/24850 [20:59<9:42:11,  1.48s/it, lr=7e-5, step_loss=0.0582]Steps:   5%|▌         | 1257/24850 [21:00<9:41:05,  1.48s/it, lr=7e-5, step_loss=0.0582]Steps:   5%|▌         | 1257/24850 [21:00<9:41:05,  1.48s/it, lr=7e-5, step_loss=0.0324]Steps:   5%|▌         | 1258/24850 [21:01<9:38:41,  1.47s/it, lr=7e-5, step_loss=0.0324]Steps:   5%|▌         | 1258/24850 [21:01<9:38:41,  1.47s/it, lr=7e-5, step_loss=0.0165]Steps:   5%|▌         | 1259/24850 [21:03<9:38:25,  1.47s/it, lr=7e-5, step_loss=0.0165]Steps:   5%|▌         | 1259/24850 [21:03<9:38:25,  1.47s/it, lr=7e-5, step_loss=0.101]  torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:   5%|▌         | 1260/24850 [21:04<9:37:11,  1.47s/it, lr=7e-5, step_loss=0.101]Steps:   5%|▌         | 1260/24850 [21:04<9:37:11,  1.47s/it, lr=7e-5, step_loss=0.0329]Steps:   5%|▌         | 1261/24850 [21:06<9:35:21,  1.46s/it, lr=7e-5, step_loss=0.0329]Steps:   5%|▌         | 1261/24850 [21:06<9:35:21,  1.46s/it, lr=7e-5, step_loss=0.00554]Steps:   5%|▌         | 1262/24850 [21:07<9:35:20,  1.46s/it, lr=7e-5, step_loss=0.00554]Steps:   5%|▌         | 1262/24850 [21:07<9:35:20,  1.46s/it, lr=7e-5, step_loss=0.022]  Steps:   5%|▌         | 1263/24850 [21:09<9:34:34,  1.46s/it, lr=7e-5, step_loss=0.022]Steps:   5%|▌         | 1263/24850 [21:09<9:34:34,  1.46s/it, lr=7e-5, step_loss=0.0138]Steps:   5%|▌         | 1264/24850 [21:10<9:34:52,  1.46s/it, lr=7e-5, step_loss=0.0138]Steps:   5%|▌         | 1264/24850 [21:10<9:34:52,  1.46s/it, lr=7e-5, step_loss=0.0628]Steps:   5%|▌         | 1265/24850 [21:12<9:36:04,  1.47s/it, lr=7e-5, step_loss=0.0628]Steps:   5%|▌         | 1265/24850 [21:12<9:36:04,  1.47s/it, lr=7e-5, step_loss=0.00236]Steps:   5%|▌         | 1266/24850 [21:13<9:35:11,  1.46s/it, lr=7e-5, step_loss=0.00236]Steps:   5%|▌         | 1266/24850 [21:13<9:35:11,  1.46s/it, lr=7e-5, step_loss=0.0484] Steps:   5%|▌         | 1267/24850 [21:15<9:36:39,  1.47s/it, lr=7e-5, step_loss=0.0484]Steps:   5%|▌         | 1267/24850 [21:15<9:36:39,  1.47s/it, lr=7e-5, step_loss=0.0172]Steps:   5%|▌         | 1268/24850 [21:16<9:41:06,  1.48s/it, lr=7e-5, step_loss=0.0172]Steps:   5%|▌         | 1268/24850 [21:16<9:41:06,  1.48s/it, lr=7e-5, step_loss=0.035] Steps:   5%|▌         | 1269/24850 [21:18<9:40:25,  1.48s/it, lr=7e-5, step_loss=0.035]Steps:   5%|▌         | 1269/24850 [21:18<9:40:25,  1.48s/it, lr=7e-5, step_loss=0.0159]Steps:   5%|▌         | 1270/24850 [21:19<9:40:42,  1.48s/it, lr=7e-5, step_loss=0.0159]Steps:   5%|▌         | 1270/24850 [21:19<9:40:42,  1.48s/it, lr=7e-5, step_loss=0.000152]Steps:   5%|▌         | 1271/24850 [21:21<9:38:03,  1.47s/it, lr=7e-5, step_loss=0.000152]Steps:   5%|▌         | 1271/24850 [21:21<9:38:03,  1.47s/it, lr=7e-5, step_loss=0.0215]  Steps:   5%|▌         | 1272/24850 [21:22<9:35:33,  1.46s/it, lr=7e-5, step_loss=0.0215]Steps:   5%|▌         | 1272/24850 [21:22<9:35:33,  1.46s/it, lr=7e-5, step_loss=0.0025]Steps:   5%|▌         | 1273/24850 [21:23<9:34:44,  1.46s/it, lr=7e-5, step_loss=0.0025]Steps:   5%|▌         | 1273/24850 [21:23<9:34:44,  1.46s/it, lr=7e-5, step_loss=0.0201]Steps:   5%|▌         | 1274/24850 [21:25<9:33:05,  1.46s/it, lr=7e-5, step_loss=0.0201]Steps:   5%|▌         | 1274/24850 [21:25<9:33:05,  1.46s/it, lr=7e-5, step_loss=0.0113]Steps:   5%|▌         | 1275/24850 [21:26<9:33:52,  1.46s/it, lr=7e-5, step_loss=0.0113]Steps:   5%|▌         | 1275/24850 [21:26<9:33:52,  1.46s/it, lr=7e-5, step_loss=0.0222]Steps:   5%|▌         | 1276/24850 [21:28<9:35:55,  1.47s/it, lr=7e-5, step_loss=0.0222]Steps:   5%|▌         | 1276/24850 [21:28<9:35:55,  1.47s/it, lr=7e-5, step_loss=0.0597]Steps:   5%|▌         | 1277/24850 [21:29<9:35:23,  1.46s/it, lr=7e-5, step_loss=0.0597]Steps:   5%|▌         | 1277/24850 [21:29<9:35:23,  1.46s/it, lr=7e-5, step_loss=0.0279]Steps:   5%|▌         | 1278/24850 [21:31<9:36:06,  1.47s/it, lr=7e-5, step_loss=0.0279]Steps:   5%|▌         | 1278/24850 [21:31<9:36:06,  1.47s/it, lr=7e-5, step_loss=0.016] Steps:   5%|▌         | 1279/24850 [21:32<9:34:42,  1.46s/it, lr=7e-5, step_loss=0.016]Steps:   5%|▌         | 1279/24850 [21:32<9:34:42,  1.46s/it, lr=7e-5, step_loss=0.0842]Steps:   5%|▌         | 1280/24850 [21:34<9:36:06,  1.47s/it, lr=7e-5, step_loss=0.0842]Steps:   5%|▌         | 1280/24850 [21:34<9:36:06,  1.47s/it, lr=7e-5, step_loss=0.242] Steps:   5%|▌         | 1281/24850 [21:35<9:35:10,  1.46s/it, lr=7e-5, step_loss=0.242]Steps:   5%|▌         | 1281/24850 [21:35<9:35:10,  1.46s/it, lr=7e-5, step_loss=0.00941]Steps:   5%|▌         | 1282/24850 [21:37<9:37:16,  1.47s/it, lr=7e-5, step_loss=0.00941]Steps:   5%|▌         | 1282/24850 [21:37<9:37:16,  1.47s/it, lr=7e-5, step_loss=0.0254] Steps:   5%|▌         | 1283/24850 [21:38<9:37:13,  1.47s/it, lr=7e-5, step_loss=0.0254]Steps:   5%|▌         | 1283/24850 [21:38<9:37:13,  1.47s/it, lr=7e-5, step_loss=0.0532]Steps:   5%|▌         | 1284/24850 [21:40<9:39:00,  1.47s/it, lr=7e-5, step_loss=0.0532]Steps:   5%|▌         | 1284/24850 [21:40<9:39:00,  1.47s/it, lr=7e-5, step_loss=0.0392]Steps:   5%|▌         | 1285/24850 [21:41<9:38:23,  1.47s/it, lr=7e-5, step_loss=0.0392]Steps:   5%|▌         | 1285/24850 [21:41<9:38:23,  1.47s/it, lr=7e-5, step_loss=0.0566]Steps:   5%|▌         | 1286/24850 [21:43<9:44:23,  1.49s/it, lr=7e-5, step_loss=0.0566]Steps:   5%|▌         | 1286/24850 [21:43<9:44:23,  1.49s/it, lr=7e-5, step_loss=0.00219]torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  Steps:   5%|▌         | 1287/24850 [21:44<9:43:32,  1.49s/it, lr=7e-5, step_loss=0.00219]Steps:   5%|▌         | 1287/24850 [21:44<9:43:32,  1.49s/it, lr=7e-5, step_loss=0.0156] Steps:   5%|▌         | 1288/24850 [21:46<9:40:46,  1.48s/it, lr=7e-5, step_loss=0.0156]Steps:   5%|▌         | 1288/24850 [21:46<9:40:46,  1.48s/it, lr=7e-5, step_loss=0.000567]Steps:   5%|▌         | 1289/24850 [21:47<9:43:12,  1.49s/it, lr=7e-5, step_loss=0.000567]Steps:   5%|▌         | 1289/24850 [21:47<9:43:12,  1.49s/it, lr=7e-5, step_loss=0.0251]  Steps:   5%|▌         | 1290/24850 [21:49<9:43:07,  1.49s/it, lr=7e-5, step_loss=0.0251]Steps:   5%|▌         | 1290/24850 [21:49<9:43:07,  1.49s/it, lr=7e-5, step_loss=0.0262]Steps:   5%|▌         | 1291/24850 [21:50<9:40:53,  1.48s/it, lr=7e-5, step_loss=0.0262]Steps:   5%|▌         | 1291/24850 [21:50<9:40:53,  1.48s/it, lr=7e-5, step_loss=0.0376]Steps:   5%|▌         | 1292/24850 [21:51<9:39:04,  1.47s/it, lr=7e-5, step_loss=0.0376]Steps:   5%|▌         | 1292/24850 [21:51<9:39:04,  1.47s/it, lr=7e-5, step_loss=0.00359]Steps:   5%|▌         | 1293/24850 [21:53<9:39:18,  1.48s/it, lr=7e-5, step_loss=0.00359]Steps:   5%|▌         | 1293/24850 [21:53<9:39:18,  1.48s/it, lr=7e-5, step_loss=0.0776] Steps:   5%|▌         | 1294/24850 [21:54<9:37:52,  1.47s/it, lr=7e-5, step_loss=0.0776]Steps:   5%|▌         | 1294/24850 [21:54<9:37:52,  1.47s/it, lr=7e-5, step_loss=0.0016]Steps:   5%|▌         | 1295/24850 [21:56<9:36:25,  1.47s/it, lr=7e-5, step_loss=0.0016]Steps:   5%|▌         | 1295/24850 [21:56<9:36:25,  1.47s/it, lr=7e-5, step_loss=0.0121]Steps:   5%|▌         | 1296/24850 [21:57<9:37:32,  1.47s/it, lr=7e-5, step_loss=0.0121]Steps:   5%|▌         | 1296/24850 [21:57<9:37:32,  1.47s/it, lr=7e-5, step_loss=0.00546]Steps:   5%|▌         | 1297/24850 [21:59<9:38:02,  1.47s/it, lr=7e-5, step_loss=0.00546]Steps:   5%|▌         | 1297/24850 [21:59<9:38:02,  1.47s/it, lr=7e-5, step_loss=0.177]  Steps:   5%|▌         | 1298/24850 [22:01<11:35:05,  1.77s/it, lr=7e-5, step_loss=0.177]Steps:   5%|▌         | 1298/24850 [22:01<11:35:05,  1.77s/it, lr=7e-5, step_loss=0.0151]Steps:   5%|▌         | 1299/24850 [22:03<10:59:39,  1.68s/it, lr=7e-5, step_loss=0.0151]Steps:   5%|▌         | 1299/24850 [22:03<10:59:39,  1.68s/it, lr=7e-5, step_loss=0.00563]Steps:   5%|▌         | 1300/24850 [22:04<10:35:10,  1.62s/it, lr=7e-5, step_loss=0.00563]Steps:   5%|▌         | 1300/24850 [22:04<10:35:10,  1.62s/it, lr=7e-5, step_loss=0.00775]Steps:   5%|▌         | 1301/24850 [22:06<10:17:32,  1.57s/it, lr=7e-5, step_loss=0.00775]Steps:   5%|▌         | 1301/24850 [22:06<10:17:32,  1.57s/it, lr=7e-5, step_loss=0.00568]Steps:   5%|▌         | 1302/24850 [22:07<10:04:26,  1.54s/it, lr=7e-5, step_loss=0.00568]Steps:   5%|▌         | 1302/24850 [22:07<10:04:26,  1.54s/it, lr=7e-5, step_loss=0.00433]Steps:   5%|▌         | 1303/24850 [22:09<10:14:32,  1.57s/it, lr=7e-5, step_loss=0.00433]Steps:   5%|▌         | 1303/24850 [22:09<10:14:32,  1.57s/it, lr=7e-5, step_loss=0.0125] Steps:   5%|▌         | 1304/24850 [22:10<10:03:08,  1.54s/it, lr=7e-5, step_loss=0.0125]Steps:   5%|▌         | 1304/24850 [22:10<10:03:08,  1.54s/it, lr=7e-5, step_loss=0.0531]Steps:   5%|▌         | 1305/24850 [22:12<9:55:30,  1.52s/it, lr=7e-5, step_loss=0.0531] Steps:   5%|▌         | 1305/24850 [22:12<9:55:30,  1.52s/it, lr=7e-5, step_loss=0.0115]Steps:   5%|▌         | 1306/24850 [22:13<9:47:23,  1.50s/it, lr=7e-5, step_loss=0.0115]Steps:   5%|▌         | 1306/24850 [22:13<9:47:23,  1.50s/it, lr=7e-5, step_loss=0.0084]Steps:   5%|▌         | 1307/24850 [22:15<9:43:26,  1.49s/it, lr=7e-5, step_loss=0.0084]Steps:   5%|▌         | 1307/24850 [22:15<9:43:26,  1.49s/it, lr=7e-5, step_loss=0.00823]Steps:   5%|▌         | 1308/24850 [22:16<9:40:40,  1.48s/it, lr=7e-5, step_loss=0.00823]Steps:   5%|▌         | 1308/24850 [22:16<9:40:40,  1.48s/it, lr=7e-5, step_loss=0.0178] Steps:   5%|▌         | 1309/24850 [22:18<9:39:08,  1.48s/it, lr=7e-5, step_loss=0.0178]Steps:   5%|▌         | 1309/24850 [22:18<9:39:08,  1.48s/it, lr=7e-5, step_loss=0.0306]Steps:   5%|▌         | 1310/24850 [22:19<9:38:27,  1.47s/it, lr=7e-5, step_loss=0.0306]Steps:   5%|▌         | 1310/24850 [22:19<9:38:27,  1.47s/it, lr=7e-5, step_loss=0.00451]Steps:   5%|▌         | 1311/24850 [22:21<9:36:58,  1.47s/it, lr=7e-5, step_loss=0.00451]Steps:   5%|▌         | 1311/24850 [22:21<9:36:58,  1.47s/it, lr=7e-5, step_loss=0.0127] Steps:   5%|▌         | 1312/24850 [22:22<9:36:39,  1.47s/it, lr=7e-5, step_loss=0.0127]Steps:   5%|▌         | 1312/24850 [22:22<9:36:39,  1.47s/it, lr=7e-5, step_loss=0.00814]Steps:   5%|▌         | 1313/24850 [22:23<9:35:04,  1.47s/it, lr=7e-5, step_loss=0.00814]Steps:   5%|▌         | 1313/24850 [22:23<9:35:04,  1.47s/it, lr=7e-5, step_loss=0.007]  Steps:   5%|▌         | 1314/24850 [22:25<9:35:14,  1.47s/it, lr=7e-5, step_loss=0.007]Steps:   5%|▌         | 1314/24850 [22:25<9:35:14,  1.47s/it, lr=7e-5, step_loss=0.044]mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:   5%|▌         | 1315/24850 [22:26<9:34:54,  1.47s/it, lr=7e-5, step_loss=0.044]Steps:   5%|▌         | 1315/24850 [22:26<9:34:54,  1.47s/it, lr=7e-5, step_loss=0.016]Steps:   5%|▌         | 1316/24850 [22:28<9:36:44,  1.47s/it, lr=7e-5, step_loss=0.016]Steps:   5%|▌         | 1316/24850 [22:28<9:36:44,  1.47s/it, lr=7e-5, step_loss=0.0397]Steps:   5%|▌         | 1317/24850 [22:29<9:35:57,  1.47s/it, lr=7e-5, step_loss=0.0397]Steps:   5%|▌         | 1317/24850 [22:29<9:35:57,  1.47s/it, lr=7e-5, step_loss=0.00158]Steps:   5%|▌         | 1318/24850 [22:31<9:36:39,  1.47s/it, lr=7e-5, step_loss=0.00158]Steps:   5%|▌         | 1318/24850 [22:31<9:36:39,  1.47s/it, lr=7e-5, step_loss=0.0286] Steps:   5%|▌         | 1319/24850 [22:32<9:36:02,  1.47s/it, lr=7e-5, step_loss=0.0286]Steps:   5%|▌         | 1319/24850 [22:32<9:36:02,  1.47s/it, lr=7e-5, step_loss=0.0123]Steps:   5%|▌         | 1320/24850 [22:34<9:36:32,  1.47s/it, lr=7e-5, step_loss=0.0123]Steps:   5%|▌         | 1320/24850 [22:34<9:36:32,  1.47s/it, lr=7e-5, step_loss=0.043] Steps:   5%|▌         | 1321/24850 [22:35<9:35:35,  1.47s/it, lr=7e-5, step_loss=0.043]Steps:   5%|▌         | 1321/24850 [22:35<9:35:35,  1.47s/it, lr=7e-5, step_loss=0.0111]Steps:   5%|▌         | 1322/24850 [22:37<9:35:25,  1.47s/it, lr=7e-5, step_loss=0.0111]Steps:   5%|▌         | 1322/24850 [22:37<9:35:25,  1.47s/it, lr=7e-5, step_loss=0.0199]Steps:   5%|▌         | 1323/24850 [22:38<9:36:02,  1.47s/it, lr=7e-5, step_loss=0.0199]Steps:   5%|▌         | 1323/24850 [22:38<9:36:02,  1.47s/it, lr=7e-5, step_loss=0.0666]Steps:   5%|▌         | 1324/24850 [22:40<9:36:03,  1.47s/it, lr=7e-5, step_loss=0.0666]Steps:   5%|▌         | 1324/24850 [22:40<9:36:03,  1.47s/it, lr=7e-5, step_loss=0.0686]Steps:   5%|▌         | 1325/24850 [22:41<9:36:34,  1.47s/it, lr=7e-5, step_loss=0.0686]Steps:   5%|▌         | 1325/24850 [22:41<9:36:34,  1.47s/it, lr=7e-5, step_loss=0.0593]Steps:   5%|▌         | 1326/24850 [22:43<9:49:22,  1.50s/it, lr=7e-5, step_loss=0.0593]Steps:   5%|▌         | 1326/24850 [22:43<9:49:22,  1.50s/it, lr=7e-5, step_loss=0.0243]Steps:   5%|▌         | 1327/24850 [22:44<9:47:29,  1.50s/it, lr=7e-5, step_loss=0.0243]Steps:   5%|▌         | 1327/24850 [22:44<9:47:29,  1.50s/it, lr=7e-5, step_loss=0.00499]Steps:   5%|▌         | 1328/24850 [22:46<9:48:04,  1.50s/it, lr=7e-5, step_loss=0.00499]Steps:   5%|▌         | 1328/24850 [22:46<9:48:04,  1.50s/it, lr=7e-5, step_loss=0.00582]Steps:   5%|▌         | 1329/24850 [22:47<9:45:26,  1.49s/it, lr=7e-5, step_loss=0.00582]Steps:   5%|▌         | 1329/24850 [22:47<9:45:26,  1.49s/it, lr=7e-5, step_loss=0.032]  Steps:   5%|▌         | 1330/24850 [22:49<9:43:00,  1.49s/it, lr=7e-5, step_loss=0.032]Steps:   5%|▌         | 1330/24850 [22:49<9:43:00,  1.49s/it, lr=7e-5, step_loss=0.0232]Steps:   5%|▌         | 1331/24850 [22:50<9:44:32,  1.49s/it, lr=7e-5, step_loss=0.0232]Steps:   5%|▌         | 1331/24850 [22:50<9:44:32,  1.49s/it, lr=7e-5, step_loss=0.043] Steps:   5%|▌         | 1332/24850 [22:52<9:42:26,  1.49s/it, lr=7e-5, step_loss=0.043]Steps:   5%|▌         | 1332/24850 [22:52<9:42:26,  1.49s/it, lr=7e-5, step_loss=0.0268]Steps:   5%|▌         | 1333/24850 [22:53<9:41:50,  1.48s/it, lr=7e-5, step_loss=0.0268]Steps:   5%|▌         | 1333/24850 [22:53<9:41:50,  1.48s/it, lr=7e-5, step_loss=0.0107]Steps:   5%|▌         | 1334/24850 [22:55<9:39:00,  1.48s/it, lr=7e-5, step_loss=0.0107]Steps:   5%|▌         | 1334/24850 [22:55<9:39:00,  1.48s/it, lr=7e-5, step_loss=0.00666]Steps:   5%|▌         | 1335/24850 [22:56<9:37:39,  1.47s/it, lr=7e-5, step_loss=0.00666]Steps:   5%|▌         | 1335/24850 [22:56<9:37:39,  1.47s/it, lr=7e-5, step_loss=0.023]  Steps:   5%|▌         | 1336/24850 [22:57<9:36:57,  1.47s/it, lr=7e-5, step_loss=0.023]Steps:   5%|▌         | 1336/24850 [22:57<9:36:57,  1.47s/it, lr=7e-5, step_loss=0.00655]Steps:   5%|▌         | 1337/24850 [22:59<9:36:08,  1.47s/it, lr=7e-5, step_loss=0.00655]Steps:   5%|▌         | 1337/24850 [22:59<9:36:08,  1.47s/it, lr=7e-5, step_loss=0.039]  Steps:   5%|▌         | 1338/24850 [23:00<9:36:08,  1.47s/it, lr=7e-5, step_loss=0.039]Steps:   5%|▌         | 1338/24850 [23:00<9:36:08,  1.47s/it, lr=7e-5, step_loss=0.0429]Steps:   5%|▌         | 1339/24850 [23:02<9:35:27,  1.47s/it, lr=7e-5, step_loss=0.0429]Steps:   5%|▌         | 1339/24850 [23:02<9:35:27,  1.47s/it, lr=7e-5, step_loss=0.00504]Steps:   5%|▌         | 1340/24850 [23:03<9:35:26,  1.47s/it, lr=7e-5, step_loss=0.00504]Steps:   5%|▌         | 1340/24850 [23:03<9:35:26,  1.47s/it, lr=7e-5, step_loss=0.00503]Steps:   5%|▌         | 1341/24850 [23:05<9:35:44,  1.47s/it, lr=7e-5, step_loss=0.00503]Steps:   5%|▌         | 1341/24850 [23:05<9:35:44,  1.47s/it, lr=7e-5, step_loss=0.0584] torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) Steps:   5%|▌         | 1342/24850 [23:06<9:36:27,  1.47s/it, lr=7e-5, step_loss=0.0584]Steps:   5%|▌         | 1342/24850 [23:06<9:36:27,  1.47s/it, lr=7e-5, step_loss=0.018] Steps:   5%|▌         | 1343/24850 [23:08<9:35:32,  1.47s/it, lr=7e-5, step_loss=0.018]Steps:   5%|▌         | 1343/24850 [23:08<9:35:32,  1.47s/it, lr=7e-5, step_loss=0.0911]Steps:   5%|▌         | 1344/24850 [23:09<9:34:30,  1.47s/it, lr=7e-5, step_loss=0.0911]Steps:   5%|▌         | 1344/24850 [23:09<9:34:30,  1.47s/it, lr=7e-5, step_loss=0.0109]Steps:   5%|▌         | 1345/24850 [23:11<9:34:59,  1.47s/it, lr=7e-5, step_loss=0.0109]Steps:   5%|▌         | 1345/24850 [23:11<9:34:59,  1.47s/it, lr=7e-5, step_loss=0.0179]Steps:   5%|▌         | 1346/24850 [23:12<9:35:42,  1.47s/it, lr=7e-5, step_loss=0.0179]Steps:   5%|▌         | 1346/24850 [23:12<9:35:42,  1.47s/it, lr=7e-5, step_loss=0.00426]Steps:   5%|▌         | 1347/24850 [23:14<9:35:34,  1.47s/it, lr=7e-5, step_loss=0.00426]Steps:   5%|▌         | 1347/24850 [23:14<9:35:34,  1.47s/it, lr=7e-5, step_loss=0.222]  Steps:   5%|▌         | 1348/24850 [23:16<11:39:56,  1.79s/it, lr=7e-5, step_loss=0.222]Steps:   5%|▌         | 1348/24850 [23:16<11:39:56,  1.79s/it, lr=7e-5, step_loss=0.00473]Steps:   5%|▌         | 1349/24850 [23:18<11:06:32,  1.70s/it, lr=7e-5, step_loss=0.00473]Steps:   5%|▌         | 1349/24850 [23:18<11:06:32,  1.70s/it, lr=7e-5, step_loss=0.0444] Steps:   5%|▌         | 1350/24850 [23:19<10:37:18,  1.63s/it, lr=7e-5, step_loss=0.0444]Steps:   5%|▌         | 1350/24850 [23:19<10:37:18,  1.63s/it, lr=7e-5, step_loss=0.0498]Steps:   5%|▌         | 1351/24850 [23:21<10:22:09,  1.59s/it, lr=7e-5, step_loss=0.0498]Steps:   5%|▌         | 1351/24850 [23:21<10:22:09,  1.59s/it, lr=7e-5, step_loss=0.0337]Steps:   5%|▌         | 1352/24850 [23:22<10:10:53,  1.56s/it, lr=7e-5, step_loss=0.0337]Steps:   5%|▌         | 1352/24850 [23:22<10:10:53,  1.56s/it, lr=7e-5, step_loss=0.00345]Steps:   5%|▌         | 1353/24850 [23:24<10:00:36,  1.53s/it, lr=7e-5, step_loss=0.00345]Steps:   5%|▌         | 1353/24850 [23:24<10:00:36,  1.53s/it, lr=7e-5, step_loss=0.0134] Steps:   5%|▌         | 1354/24850 [23:25<9:58:29,  1.53s/it, lr=7e-5, step_loss=0.0134] Steps:   5%|▌         | 1354/24850 [23:25<9:58:29,  1.53s/it, lr=7e-5, step_loss=0.0222]Steps:   5%|▌         | 1355/24850 [23:27<9:51:46,  1.51s/it, lr=7e-5, step_loss=0.0222]Steps:   5%|▌         | 1355/24850 [23:27<9:51:46,  1.51s/it, lr=7e-5, step_loss=0.22]  Steps:   5%|▌         | 1356/24850 [23:28<9:46:11,  1.50s/it, lr=7e-5, step_loss=0.22]Steps:   5%|▌         | 1356/24850 [23:28<9:46:11,  1.50s/it, lr=7e-5, step_loss=0.0211]Steps:   5%|▌         | 1357/24850 [23:29<9:44:49,  1.49s/it, lr=7e-5, step_loss=0.0211]Steps:   5%|▌         | 1357/24850 [23:29<9:44:49,  1.49s/it, lr=7e-5, step_loss=0.0126]Steps:   5%|▌         | 1358/24850 [23:31<9:41:07,  1.48s/it, lr=7e-5, step_loss=0.0126]Steps:   5%|▌         | 1358/24850 [23:31<9:41:07,  1.48s/it, lr=7e-5, step_loss=0.0134]Steps:   5%|▌         | 1359/24850 [23:32<9:39:14,  1.48s/it, lr=7e-5, step_loss=0.0134]Steps:   5%|▌         | 1359/24850 [23:32<9:39:14,  1.48s/it, lr=7e-5, step_loss=0.0231]Steps:   5%|▌         | 1360/24850 [23:34<9:37:32,  1.48s/it, lr=7e-5, step_loss=0.0231]Steps:   5%|▌         | 1360/24850 [23:34<9:37:32,  1.48s/it, lr=7e-5, step_loss=0.0403]Steps:   5%|▌         | 1361/24850 [23:35<9:35:30,  1.47s/it, lr=7e-5, step_loss=0.0403]Steps:   5%|▌         | 1361/24850 [23:35<9:35:30,  1.47s/it, lr=7e-5, step_loss=0.0176]Steps:   5%|▌         | 1362/24850 [23:37<9:33:39,  1.47s/it, lr=7e-5, step_loss=0.0176]Steps:   5%|▌         | 1362/24850 [23:37<9:33:39,  1.47s/it, lr=7e-5, step_loss=0.0419]Steps:   5%|▌         | 1363/24850 [23:38<9:32:11,  1.46s/it, lr=7e-5, step_loss=0.0419]Steps:   5%|▌         | 1363/24850 [23:38<9:32:11,  1.46s/it, lr=7e-5, step_loss=0.0622]Steps:   5%|▌         | 1364/24850 [23:40<9:32:17,  1.46s/it, lr=7e-5, step_loss=0.0622]Steps:   5%|▌         | 1364/24850 [23:40<9:32:17,  1.46s/it, lr=7e-5, step_loss=0.0921]Steps:   5%|▌         | 1365/24850 [23:41<9:32:16,  1.46s/it, lr=7e-5, step_loss=0.0921]Steps:   5%|▌         | 1365/24850 [23:41<9:32:16,  1.46s/it, lr=7e-5, step_loss=0.0131]Steps:   5%|▌         | 1366/24850 [23:43<9:36:42,  1.47s/it, lr=7e-5, step_loss=0.0131]Steps:   5%|▌         | 1366/24850 [23:43<9:36:42,  1.47s/it, lr=7e-5, step_loss=0.0163]Steps:   6%|▌         | 1367/24850 [23:44<9:39:40,  1.48s/it, lr=7e-5, step_loss=0.0163]Steps:   6%|▌         | 1367/24850 [23:44<9:39:40,  1.48s/it, lr=7e-5, step_loss=0.0259]Steps:   6%|▌         | 1368/24850 [23:46<9:40:12,  1.48s/it, lr=7e-5, step_loss=0.0259]Steps:   6%|▌         | 1368/24850 [23:46<9:40:12,  1.48s/it, lr=7e-5, step_loss=0.00517]torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:   6%|▌         | 1369/24850 [23:47<9:40:25,  1.48s/it, lr=7e-5, step_loss=0.00517]Steps:   6%|▌         | 1369/24850 [23:47<9:40:25,  1.48s/it, lr=7e-5, step_loss=0.062]  Steps:   6%|▌         | 1370/24850 [23:49<9:38:46,  1.48s/it, lr=7e-5, step_loss=0.062]Steps:   6%|▌         | 1370/24850 [23:49<9:38:46,  1.48s/it, lr=7e-5, step_loss=0.0335]Steps:   6%|▌         | 1371/24850 [23:50<9:39:09,  1.48s/it, lr=7e-5, step_loss=0.0335]Steps:   6%|▌         | 1371/24850 [23:50<9:39:09,  1.48s/it, lr=7e-5, step_loss=0.0739]Steps:   6%|▌         | 1372/24850 [23:52<9:38:21,  1.48s/it, lr=7e-5, step_loss=0.0739]Steps:   6%|▌         | 1372/24850 [23:52<9:38:21,  1.48s/it, lr=7e-5, step_loss=0.0606]Steps:   6%|▌         | 1373/24850 [23:53<9:36:53,  1.47s/it, lr=7e-5, step_loss=0.0606]Steps:   6%|▌         | 1373/24850 [23:53<9:36:53,  1.47s/it, lr=7e-5, step_loss=0.00422]Steps:   6%|▌         | 1374/24850 [23:55<9:38:47,  1.48s/it, lr=7e-5, step_loss=0.00422]Steps:   6%|▌         | 1374/24850 [23:55<9:38:47,  1.48s/it, lr=7e-5, step_loss=0.00316]Steps:   6%|▌         | 1375/24850 [23:56<9:38:58,  1.48s/it, lr=7e-5, step_loss=0.00316]Steps:   6%|▌         | 1375/24850 [23:56<9:38:58,  1.48s/it, lr=7e-5, step_loss=0.00204]Steps:   6%|▌         | 1376/24850 [23:57<9:36:59,  1.47s/it, lr=7e-5, step_loss=0.00204]Steps:   6%|▌         | 1376/24850 [23:57<9:36:59,  1.47s/it, lr=7e-5, step_loss=0.0293] Steps:   6%|▌         | 1377/24850 [23:59<9:35:03,  1.47s/it, lr=7e-5, step_loss=0.0293]Steps:   6%|▌         | 1377/24850 [23:59<9:35:03,  1.47s/it, lr=7e-5, step_loss=0.0433]Steps:   6%|▌         | 1378/24850 [24:00<9:36:17,  1.47s/it, lr=7e-5, step_loss=0.0433]Steps:   6%|▌         | 1378/24850 [24:00<9:36:17,  1.47s/it, lr=7e-5, step_loss=0.0587]Steps:   6%|▌         | 1379/24850 [24:02<9:35:22,  1.47s/it, lr=7e-5, step_loss=0.0587]Steps:   6%|▌         | 1379/24850 [24:02<9:35:22,  1.47s/it, lr=7e-5, step_loss=0.0119]Steps:   6%|▌         | 1380/24850 [24:03<9:34:07,  1.47s/it, lr=7e-5, step_loss=0.0119]Steps:   6%|▌         | 1380/24850 [24:03<9:34:07,  1.47s/it, lr=7e-5, step_loss=0.00231]Steps:   6%|▌         | 1381/24850 [24:05<9:33:55,  1.47s/it, lr=7e-5, step_loss=0.00231]Steps:   6%|▌         | 1381/24850 [24:05<9:33:55,  1.47s/it, lr=7e-5, step_loss=0.0189] Steps:   6%|▌         | 1382/24850 [24:06<9:33:48,  1.47s/it, lr=7e-5, step_loss=0.0189]Steps:   6%|▌         | 1382/24850 [24:06<9:33:48,  1.47s/it, lr=7e-5, step_loss=0.112] Steps:   6%|▌         | 1383/24850 [24:08<9:32:29,  1.46s/it, lr=7e-5, step_loss=0.112]Steps:   6%|▌         | 1383/24850 [24:08<9:32:29,  1.46s/it, lr=7e-5, step_loss=0.0383]Steps:   6%|▌         | 1384/24850 [24:09<9:34:02,  1.47s/it, lr=7e-5, step_loss=0.0383]Steps:   6%|▌         | 1384/24850 [24:09<9:34:02,  1.47s/it, lr=7e-5, step_loss=0.0289]Steps:   6%|▌         | 1385/24850 [24:11<9:31:50,  1.46s/it, lr=7e-5, step_loss=0.0289]Steps:   6%|▌         | 1385/24850 [24:11<9:31:50,  1.46s/it, lr=7e-5, step_loss=0.0166]Steps:   6%|▌         | 1386/24850 [24:12<9:32:53,  1.46s/it, lr=7e-5, step_loss=0.0166]Steps:   6%|▌         | 1386/24850 [24:12<9:32:53,  1.46s/it, lr=7e-5, step_loss=0.00561]Steps:   6%|▌         | 1387/24850 [24:14<9:35:16,  1.47s/it, lr=7e-5, step_loss=0.00561]Steps:   6%|▌         | 1387/24850 [24:14<9:35:16,  1.47s/it, lr=7e-5, step_loss=0.00595]Steps:   6%|▌         | 1388/24850 [24:15<9:35:08,  1.47s/it, lr=7e-5, step_loss=0.00595]Steps:   6%|▌         | 1388/24850 [24:15<9:35:08,  1.47s/it, lr=7e-5, step_loss=0.0246] Steps:   6%|▌         | 1389/24850 [24:17<9:35:20,  1.47s/it, lr=7e-5, step_loss=0.0246]Steps:   6%|▌         | 1389/24850 [24:17<9:35:20,  1.47s/it, lr=7e-5, step_loss=0.0495]Steps:   6%|▌         | 1390/24850 [24:18<9:56:06,  1.52s/it, lr=7e-5, step_loss=0.0495]Steps:   6%|▌         | 1390/24850 [24:18<9:56:06,  1.52s/it, lr=7e-5, step_loss=0.0336]Steps:   6%|▌         | 1391/24850 [24:20<9:49:00,  1.51s/it, lr=7e-5, step_loss=0.0336]Steps:   6%|▌         | 1391/24850 [24:20<9:49:00,  1.51s/it, lr=7e-5, step_loss=0.0249]Steps:   6%|▌         | 1392/24850 [24:21<9:44:14,  1.49s/it, lr=7e-5, step_loss=0.0249]Steps:   6%|▌         | 1392/24850 [24:21<9:44:14,  1.49s/it, lr=7e-5, step_loss=0.00856]Steps:   6%|▌         | 1393/24850 [24:23<9:39:11,  1.48s/it, lr=7e-5, step_loss=0.00856]Steps:   6%|▌         | 1393/24850 [24:23<9:39:11,  1.48s/it, lr=7e-5, step_loss=0.0186] Steps:   6%|▌         | 1394/24850 [24:24<9:36:44,  1.48s/it, lr=7e-5, step_loss=0.0186]Steps:   6%|▌         | 1394/24850 [24:24<9:36:44,  1.48s/it, lr=7e-5, step_loss=0.00444]Steps:   6%|▌         | 1395/24850 [24:26<9:35:57,  1.47s/it, lr=7e-5, step_loss=0.00444]Steps:   6%|▌         | 1395/24850 [24:26<9:35:57,  1.47s/it, lr=7e-5, step_loss=0.02]   Steps:   6%|▌         | 1396/24850 [24:27<9:34:30,  1.47s/it, lr=7e-5, step_loss=0.02]Steps:   6%|▌         | 1396/24850 [24:27<9:34:30,  1.47s/it, lr=7e-5, step_loss=0.00453]torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
Steps:   6%|▌         | 1397/24850 [24:28<9:32:07,  1.46s/it, lr=7e-5, step_loss=0.00453]Steps:   6%|▌         | 1397/24850 [24:28<9:32:07,  1.46s/it, lr=7e-5, step_loss=0.0317] Steps:   6%|▌         | 1398/24850 [24:31<11:15:30,  1.73s/it, lr=7e-5, step_loss=0.0317]Steps:   6%|▌         | 1398/24850 [24:31<11:15:30,  1.73s/it, lr=7e-5, step_loss=0.0311]Steps:   6%|▌         | 1399/24850 [24:32<10:44:33,  1.65s/it, lr=7e-5, step_loss=0.0311]Steps:   6%|▌         | 1399/24850 [24:32<10:44:33,  1.65s/it, lr=7e-5, step_loss=0.0676]Steps:   6%|▌         | 1400/24850 [24:34<10:22:39,  1.59s/it, lr=7e-5, step_loss=0.0676]Steps:   6%|▌         | 1400/24850 [24:34<10:22:39,  1.59s/it, lr=7e-5, step_loss=0.0468]Steps:   6%|▌         | 1401/24850 [24:35<10:06:50,  1.55s/it, lr=7e-5, step_loss=0.0468]Steps:   6%|▌         | 1401/24850 [24:35<10:06:50,  1.55s/it, lr=7e-5, step_loss=0.0698]Steps:   6%|▌         | 1402/24850 [24:37<9:55:40,  1.52s/it, lr=7e-5, step_loss=0.0698] Steps:   6%|▌         | 1402/24850 [24:37<9:55:40,  1.52s/it, lr=7e-5, step_loss=0.0178]Steps:   6%|▌         | 1403/24850 [24:38<9:47:56,  1.50s/it, lr=7e-5, step_loss=0.0178]Steps:   6%|▌         | 1403/24850 [24:38<9:47:56,  1.50s/it, lr=7e-5, step_loss=0.0544]Steps:   6%|▌         | 1404/24850 [24:40<9:41:14,  1.49s/it, lr=7e-5, step_loss=0.0544]Steps:   6%|▌         | 1404/24850 [24:40<9:41:14,  1.49s/it, lr=7e-5, step_loss=0.00201]Steps:   6%|▌         | 1405/24850 [24:41<9:36:27,  1.48s/it, lr=7e-5, step_loss=0.00201]Steps:   6%|▌         | 1405/24850 [24:41<9:36:27,  1.48s/it, lr=7e-5, step_loss=0.0157] Steps:   6%|▌         | 1406/24850 [24:42<9:41:56,  1.49s/it, lr=7e-5, step_loss=0.0157]Steps:   6%|▌         | 1406/24850 [24:42<9:41:56,  1.49s/it, lr=7e-5, step_loss=0.0284]Steps:   6%|▌         | 1407/24850 [24:44<9:48:09,  1.51s/it, lr=7e-5, step_loss=0.0284]Steps:   6%|▌         | 1407/24850 [24:44<9:48:09,  1.51s/it, lr=7e-5, step_loss=0.0324]Steps:   6%|▌         | 1408/24850 [24:45<9:43:13,  1.49s/it, lr=7e-5, step_loss=0.0324]Steps:   6%|▌         | 1408/24850 [24:45<9:43:13,  1.49s/it, lr=7e-5, step_loss=0.00682]Steps:   6%|▌         | 1409/24850 [24:47<9:40:04,  1.48s/it, lr=7e-5, step_loss=0.00682]Steps:   6%|▌         | 1409/24850 [24:47<9:40:04,  1.48s/it, lr=7e-5, step_loss=0.0187] Steps:   6%|▌         | 1410/24850 [24:48<9:40:01,  1.48s/it, lr=7e-5, step_loss=0.0187]Steps:   6%|▌         | 1410/24850 [24:48<9:40:01,  1.48s/it, lr=7e-5, step_loss=0.00616]Steps:   6%|▌         | 1411/24850 [24:50<9:37:53,  1.48s/it, lr=7e-5, step_loss=0.00616]Steps:   6%|▌         | 1411/24850 [24:50<9:37:53,  1.48s/it, lr=7e-5, step_loss=0.0234] Steps:   6%|▌         | 1412/24850 [24:51<9:36:14,  1.48s/it, lr=7e-5, step_loss=0.0234]Steps:   6%|▌         | 1412/24850 [24:51<9:36:14,  1.48s/it, lr=7e-5, step_loss=0.00393]Steps:   6%|▌         | 1413/24850 [24:53<9:34:30,  1.47s/it, lr=7e-5, step_loss=0.00393]Steps:   6%|▌         | 1413/24850 [24:53<9:34:30,  1.47s/it, lr=7e-5, step_loss=0.0863] Steps:   6%|▌         | 1414/24850 [24:54<9:33:38,  1.47s/it, lr=7e-5, step_loss=0.0863]Steps:   6%|▌         | 1414/24850 [24:54<9:33:38,  1.47s/it, lr=7e-5, step_loss=0.00129]Steps:   6%|▌         | 1415/24850 [24:56<9:32:18,  1.47s/it, lr=7e-5, step_loss=0.00129]Steps:   6%|▌         | 1415/24850 [24:56<9:32:18,  1.47s/it, lr=7e-5, step_loss=0.0138] Steps:   6%|▌         | 1416/24850 [24:57<9:33:58,  1.47s/it, lr=7e-5, step_loss=0.0138]Steps:   6%|▌         | 1416/24850 [24:57<9:33:58,  1.47s/it, lr=7e-5, step_loss=0.0445]Steps:   6%|▌         | 1417/24850 [24:59<9:33:18,  1.47s/it, lr=7e-5, step_loss=0.0445]Steps:   6%|▌         | 1417/24850 [24:59<9:33:18,  1.47s/it, lr=7e-5, step_loss=0.11]  Steps:   6%|▌         | 1418/24850 [25:00<9:33:08,  1.47s/it, lr=7e-5, step_loss=0.11]Steps:   6%|▌         | 1418/24850 [25:00<9:33:08,  1.47s/it, lr=7e-5, step_loss=0.0165]Steps:   6%|▌         | 1419/24850 [25:02<9:31:53,  1.46s/it, lr=7e-5, step_loss=0.0165]Steps:   6%|▌         | 1419/24850 [25:02<9:31:53,  1.46s/it, lr=7e-5, step_loss=0.00139]Steps:   6%|▌         | 1420/24850 [25:03<9:33:16,  1.47s/it, lr=7e-5, step_loss=0.00139]Steps:   6%|▌         | 1420/24850 [25:03<9:33:16,  1.47s/it, lr=7e-5, step_loss=0.0146] Steps:   6%|▌         | 1421/24850 [25:05<9:34:19,  1.47s/it, lr=7e-5, step_loss=0.0146]Steps:   6%|▌         | 1421/24850 [25:05<9:34:19,  1.47s/it, lr=7e-5, step_loss=0.0614]Steps:   6%|▌         | 1422/24850 [25:06<9:34:55,  1.47s/it, lr=7e-5, step_loss=0.0614]Steps:   6%|▌         | 1422/24850 [25:06<9:34:55,  1.47s/it, lr=7e-5, step_loss=0.0684]Steps:   6%|▌         | 1423/24850 [25:08<9:34:59,  1.47s/it, lr=7e-5, step_loss=0.0684]Steps:   6%|▌         | 1423/24850 [25:08<9:34:59,  1.47s/it, lr=7e-5, step_loss=0.029] (512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512)Steps:   6%|▌         | 1424/24850 [25:09<9:34:03,  1.47s/it, lr=7e-5, step_loss=0.029]Steps:   6%|▌         | 1424/24850 [25:09<9:34:03,  1.47s/it, lr=7e-5, step_loss=0.0145]Steps:   6%|▌         | 1425/24850 [25:10<9:32:31,  1.47s/it, lr=7e-5, step_loss=0.0145]Steps:   6%|▌         | 1425/24850 [25:10<9:32:31,  1.47s/it, lr=7e-5, step_loss=0.126] Steps:   6%|▌         | 1426/24850 [25:12<9:32:47,  1.47s/it, lr=7e-5, step_loss=0.126]Steps:   6%|▌         | 1426/24850 [25:12<9:32:47,  1.47s/it, lr=7e-5, step_loss=0.0242]Steps:   6%|▌         | 1427/24850 [25:13<9:33:16,  1.47s/it, lr=7e-5, step_loss=0.0242]Steps:   6%|▌         | 1427/24850 [25:13<9:33:16,  1.47s/it, lr=7e-5, step_loss=0.0312]Steps:   6%|▌         | 1428/24850 [25:15<9:32:31,  1.47s/it, lr=7e-5, step_loss=0.0312]Steps:   6%|▌         | 1428/24850 [25:15<9:32:31,  1.47s/it, lr=7e-5, step_loss=0.00529]Steps:   6%|▌         | 1429/24850 [25:16<9:33:45,  1.47s/it, lr=7e-5, step_loss=0.00529]Steps:   6%|▌         | 1429/24850 [25:16<9:33:45,  1.47s/it, lr=7e-5, step_loss=0.0233] Steps:   6%|▌         | 1430/24850 [25:18<9:35:48,  1.48s/it, lr=7e-5, step_loss=0.0233]Steps:   6%|▌         | 1430/24850 [25:18<9:35:48,  1.48s/it, lr=7e-5, step_loss=0.0681]Steps:   6%|▌         | 1431/24850 [25:19<9:35:16,  1.47s/it, lr=7e-5, step_loss=0.0681]Steps:   6%|▌         | 1431/24850 [25:19<9:35:16,  1.47s/it, lr=7e-5, step_loss=0.0346]Steps:   6%|▌         | 1432/24850 [25:21<9:34:42,  1.47s/it, lr=7e-5, step_loss=0.0346]Steps:   6%|▌         | 1432/24850 [25:21<9:34:42,  1.47s/it, lr=7e-5, step_loss=0.0549]Steps:   6%|▌         | 1433/24850 [25:22<9:34:44,  1.47s/it, lr=7e-5, step_loss=0.0549]Steps:   6%|▌         | 1433/24850 [25:22<9:34:44,  1.47s/it, lr=7e-5, step_loss=0.00225]Steps:   6%|▌         | 1434/24850 [25:24<9:33:21,  1.47s/it, lr=7e-5, step_loss=0.00225]Steps:   6%|▌         | 1434/24850 [25:24<9:33:21,  1.47s/it, lr=7e-5, step_loss=0.00761]Steps:   6%|▌         | 1435/24850 [25:25<9:32:14,  1.47s/it, lr=7e-5, step_loss=0.00761]Steps:   6%|▌         | 1435/24850 [25:25<9:32:14,  1.47s/it, lr=7e-5, step_loss=0.03]   Steps:   6%|▌         | 1436/24850 [25:27<9:30:50,  1.46s/it, lr=7e-5, step_loss=0.03]Steps:   6%|▌         | 1436/24850 [25:27<9:30:50,  1.46s/it, lr=7e-5, step_loss=0.00414]Steps:   6%|▌         | 1437/24850 [25:28<9:31:40,  1.47s/it, lr=7e-5, step_loss=0.00414]Steps:   6%|▌         | 1437/24850 [25:28<9:31:40,  1.47s/it, lr=7e-5, step_loss=0.0526] Steps:   6%|▌         | 1438/24850 [25:30<9:30:19,  1.46s/it, lr=7e-5, step_loss=0.0526]Steps:   6%|▌         | 1438/24850 [25:30<9:30:19,  1.46s/it, lr=7e-5, step_loss=0.0746]Steps:   6%|▌         | 1439/24850 [25:31<9:30:48,  1.46s/it, lr=7e-5, step_loss=0.0746]Steps:   6%|▌         | 1439/24850 [25:31<9:30:48,  1.46s/it, lr=7e-5, step_loss=0.0185]Steps:   6%|▌         | 1440/24850 [25:32<9:32:24,  1.47s/it, lr=7e-5, step_loss=0.0185]Steps:   6%|▌         | 1440/24850 [25:32<9:32:24,  1.47s/it, lr=7e-5, step_loss=0.00661]Steps:   6%|▌         | 1441/24850 [25:34<9:32:51,  1.47s/it, lr=7e-5, step_loss=0.00661]Steps:   6%|▌         | 1441/24850 [25:34<9:32:51,  1.47s/it, lr=7e-5, step_loss=0.00498]Steps:   6%|▌         | 1442/24850 [25:35<9:35:31,  1.48s/it, lr=7e-5, step_loss=0.00498]Steps:   6%|▌         | 1442/24850 [25:35<9:35:31,  1.48s/it, lr=7e-5, step_loss=0.0314] Steps:   6%|▌         | 1443/24850 [25:37<9:34:04,  1.47s/it, lr=7e-5, step_loss=0.0314]Steps:   6%|▌         | 1443/24850 [25:37<9:34:04,  1.47s/it, lr=7e-5, step_loss=0.00129]Steps:   6%|▌         | 1444/24850 [25:38<9:31:55,  1.47s/it, lr=7e-5, step_loss=0.00129]Steps:   6%|▌         | 1444/24850 [25:38<9:31:55,  1.47s/it, lr=7e-5, step_loss=0.0138] Steps:   6%|▌         | 1445/24850 [25:40<9:29:48,  1.46s/it, lr=7e-5, step_loss=0.0138]Steps:   6%|▌         | 1445/24850 [25:40<9:29:48,  1.46s/it, lr=7e-5, step_loss=0.0598]Steps:   6%|▌         | 1446/24850 [25:41<9:29:44,  1.46s/it, lr=7e-5, step_loss=0.0598]Steps:   6%|▌         | 1446/24850 [25:41<9:29:44,  1.46s/it, lr=7e-5, step_loss=0.043] Steps:   6%|▌         | 1447/24850 [25:43<9:31:31,  1.47s/it, lr=7e-5, step_loss=0.043]Steps:   6%|▌         | 1447/24850 [25:43<9:31:31,  1.47s/it, lr=7e-5, step_loss=0.00526]Steps:   6%|▌         | 1448/24850 [25:45<11:25:41,  1.76s/it, lr=7e-5, step_loss=0.00526]Steps:   6%|▌         | 1448/24850 [25:45<11:25:41,  1.76s/it, lr=7e-5, step_loss=0.0313] Steps:   6%|▌         | 1449/24850 [25:47<10:51:09,  1.67s/it, lr=7e-5, step_loss=0.0313]Steps:   6%|▌         | 1449/24850 [25:47<10:51:09,  1.67s/it, lr=7e-5, step_loss=0.0195]Steps:   6%|▌         | 1450/24850 [25:48<10:48:17,  1.66s/it, lr=7e-5, step_loss=0.0195]Steps:   6%|▌         | 1450/24850 [25:48<10:48:17,  1.66s/it, lr=7e-5, step_loss=0.00487] torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:   6%|▌         | 1451/24850 [25:50<10:24:47,  1.60s/it, lr=7e-5, step_loss=0.00487]Steps:   6%|▌         | 1451/24850 [25:50<10:24:47,  1.60s/it, lr=7e-5, step_loss=0.0132] Steps:   6%|▌         | 1452/24850 [25:51<10:08:30,  1.56s/it, lr=7e-5, step_loss=0.0132]Steps:   6%|▌         | 1452/24850 [25:51<10:08:30,  1.56s/it, lr=7e-5, step_loss=0.00774]Steps:   6%|▌         | 1453/24850 [25:53<9:58:05,  1.53s/it, lr=7e-5, step_loss=0.00774] Steps:   6%|▌         | 1453/24850 [25:53<9:58:05,  1.53s/it, lr=7e-5, step_loss=0.00795]Steps:   6%|▌         | 1454/24850 [25:54<9:49:08,  1.51s/it, lr=7e-5, step_loss=0.00795]Steps:   6%|▌         | 1454/24850 [25:54<9:49:08,  1.51s/it, lr=7e-5, step_loss=0.00538]Steps:   6%|▌         | 1455/24850 [25:56<9:42:44,  1.49s/it, lr=7e-5, step_loss=0.00538]Steps:   6%|▌         | 1455/24850 [25:56<9:42:44,  1.49s/it, lr=7e-5, step_loss=0.0196] Steps:   6%|▌         | 1456/24850 [25:57<9:38:56,  1.48s/it, lr=7e-5, step_loss=0.0196]Steps:   6%|▌         | 1456/24850 [25:57<9:38:56,  1.48s/it, lr=7e-5, step_loss=0.0211]Steps:   6%|▌         | 1457/24850 [25:59<9:36:22,  1.48s/it, lr=7e-5, step_loss=0.0211]Steps:   6%|▌         | 1457/24850 [25:59<9:36:22,  1.48s/it, lr=7e-5, step_loss=0.0698]Steps:   6%|▌         | 1458/24850 [26:00<9:34:54,  1.47s/it, lr=7e-5, step_loss=0.0698]Steps:   6%|▌         | 1458/24850 [26:00<9:34:54,  1.47s/it, lr=7e-5, step_loss=0.0279]Steps:   6%|▌         | 1459/24850 [26:01<9:34:13,  1.47s/it, lr=7e-5, step_loss=0.0279]Steps:   6%|▌         | 1459/24850 [26:01<9:34:13,  1.47s/it, lr=7e-5, step_loss=0.0308]Steps:   6%|▌         | 1460/24850 [26:03<9:34:51,  1.47s/it, lr=7e-5, step_loss=0.0308]Steps:   6%|▌         | 1460/24850 [26:03<9:34:51,  1.47s/it, lr=7e-5, step_loss=0.00629]Steps:   6%|▌         | 1461/24850 [26:04<9:34:19,  1.47s/it, lr=7e-5, step_loss=0.00629]Steps:   6%|▌         | 1461/24850 [26:04<9:34:19,  1.47s/it, lr=7e-5, step_loss=0.00795]Steps:   6%|▌         | 1462/24850 [26:06<9:33:09,  1.47s/it, lr=7e-5, step_loss=0.00795]Steps:   6%|▌         | 1462/24850 [26:06<9:33:09,  1.47s/it, lr=7e-5, step_loss=0.055]  Steps:   6%|▌         | 1463/24850 [26:07<9:31:56,  1.47s/it, lr=7e-5, step_loss=0.055]Steps:   6%|▌         | 1463/24850 [26:07<9:31:56,  1.47s/it, lr=7e-5, step_loss=0.00128]Steps:   6%|▌         | 1464/24850 [26:09<9:32:56,  1.47s/it, lr=7e-5, step_loss=0.00128]Steps:   6%|▌         | 1464/24850 [26:09<9:32:56,  1.47s/it, lr=7e-5, step_loss=0.00805]Steps:   6%|▌         | 1465/24850 [26:10<9:32:09,  1.47s/it, lr=7e-5, step_loss=0.00805]Steps:   6%|▌         | 1465/24850 [26:10<9:32:09,  1.47s/it, lr=7e-5, step_loss=0.0154] Steps:   6%|▌         | 1466/24850 [26:12<9:29:35,  1.46s/it, lr=7e-5, step_loss=0.0154]Steps:   6%|▌         | 1466/24850 [26:12<9:29:35,  1.46s/it, lr=7e-5, step_loss=0.00584]Steps:   6%|▌         | 1467/24850 [26:13<9:30:36,  1.46s/it, lr=7e-5, step_loss=0.00584]Steps:   6%|▌         | 1467/24850 [26:13<9:30:36,  1.46s/it, lr=7e-5, step_loss=0.0753] Steps:   6%|▌         | 1468/24850 [26:15<9:31:57,  1.47s/it, lr=7e-5, step_loss=0.0753]Steps:   6%|▌         | 1468/24850 [26:15<9:31:57,  1.47s/it, lr=7e-5, step_loss=0.0638]Steps:   6%|▌         | 1469/24850 [26:16<9:32:39,  1.47s/it, lr=7e-5, step_loss=0.0638]Steps:   6%|▌         | 1469/24850 [26:16<9:32:39,  1.47s/it, lr=7e-5, step_loss=0.0118]Steps:   6%|▌         | 1470/24850 [26:18<9:33:57,  1.47s/it, lr=7e-5, step_loss=0.0118]Steps:   6%|▌         | 1470/24850 [26:18<9:33:57,  1.47s/it, lr=7e-5, step_loss=0.0181]Steps:   6%|▌         | 1471/24850 [26:19<9:31:48,  1.47s/it, lr=7e-5, step_loss=0.0181]Steps:   6%|▌         | 1471/24850 [26:19<9:31:48,  1.47s/it, lr=7e-5, step_loss=0.00126]Steps:   6%|▌         | 1472/24850 [26:21<9:31:54,  1.47s/it, lr=7e-5, step_loss=0.00126]Steps:   6%|▌         | 1472/24850 [26:21<9:31:54,  1.47s/it, lr=7e-5, step_loss=0.00474]Steps:   6%|▌         | 1473/24850 [26:22<9:31:55,  1.47s/it, lr=7e-5, step_loss=0.00474]Steps:   6%|▌         | 1473/24850 [26:22<9:31:55,  1.47s/it, lr=7e-5, step_loss=0.00948]Steps:   6%|▌         | 1474/24850 [26:23<9:30:32,  1.46s/it, lr=7e-5, step_loss=0.00948]Steps:   6%|▌         | 1474/24850 [26:23<9:30:32,  1.46s/it, lr=7e-5, step_loss=0.0119] Steps:   6%|▌         | 1475/24850 [26:25<9:31:33,  1.47s/it, lr=7e-5, step_loss=0.0119]Steps:   6%|▌         | 1475/24850 [26:25<9:31:33,  1.47s/it, lr=7e-5, step_loss=0.0114]Steps:   6%|▌         | 1476/24850 [26:26<9:31:21,  1.47s/it, lr=7e-5, step_loss=0.0114]Steps:   6%|▌         | 1476/24850 [26:26<9:31:21,  1.47s/it, lr=7e-5, step_loss=0.0494]Steps:   6%|▌         | 1477/24850 [26:28<9:29:18,  1.46s/it, lr=7e-5, step_loss=0.0494]Steps:   6%|▌         | 1477/24850 [26:28<9:29:18,  1.46s/it, lr=7e-5, step_loss=0.113] torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  Steps:   6%|▌         | 1478/24850 [26:29<9:28:46,  1.46s/it, lr=7e-5, step_loss=0.113]Steps:   6%|▌         | 1478/24850 [26:29<9:28:46,  1.46s/it, lr=7e-5, step_loss=0.224]Steps:   6%|▌         | 1479/24850 [26:31<9:29:03,  1.46s/it, lr=7e-5, step_loss=0.224]Steps:   6%|▌         | 1479/24850 [26:31<9:29:03,  1.46s/it, lr=7e-5, step_loss=0.0426]Steps:   6%|▌         | 1480/24850 [26:32<9:35:05,  1.48s/it, lr=7e-5, step_loss=0.0426]Steps:   6%|▌         | 1480/24850 [26:32<9:35:05,  1.48s/it, lr=7e-5, step_loss=0.0237]Steps:   6%|▌         | 1481/24850 [26:34<9:34:17,  1.47s/it, lr=7e-5, step_loss=0.0237]Steps:   6%|▌         | 1481/24850 [26:34<9:34:17,  1.47s/it, lr=7e-5, step_loss=0.0764]Steps:   6%|▌         | 1482/24850 [26:35<9:32:18,  1.47s/it, lr=7e-5, step_loss=0.0764]Steps:   6%|▌         | 1482/24850 [26:35<9:32:18,  1.47s/it, lr=7e-5, step_loss=0.00461]Steps:   6%|▌         | 1483/24850 [26:37<9:31:25,  1.47s/it, lr=7e-5, step_loss=0.00461]Steps:   6%|▌         | 1483/24850 [26:37<9:31:25,  1.47s/it, lr=7e-5, step_loss=0.0035] Steps:   6%|▌         | 1484/24850 [26:38<9:30:01,  1.46s/it, lr=7e-5, step_loss=0.0035]Steps:   6%|▌         | 1484/24850 [26:38<9:30:01,  1.46s/it, lr=7e-5, step_loss=0.00493]Steps:   6%|▌         | 1485/24850 [26:40<9:30:50,  1.47s/it, lr=7e-5, step_loss=0.00493]Steps:   6%|▌         | 1485/24850 [26:40<9:30:50,  1.47s/it, lr=7e-5, step_loss=0.0607] Steps:   6%|▌         | 1486/24850 [26:41<9:32:31,  1.47s/it, lr=7e-5, step_loss=0.0607]Steps:   6%|▌         | 1486/24850 [26:41<9:32:31,  1.47s/it, lr=7e-5, step_loss=0.0396]Steps:   6%|▌         | 1487/24850 [26:43<9:45:29,  1.50s/it, lr=7e-5, step_loss=0.0396]Steps:   6%|▌         | 1487/24850 [26:43<9:45:29,  1.50s/it, lr=7e-5, step_loss=0.024] Steps:   6%|▌         | 1488/24850 [26:44<9:42:20,  1.50s/it, lr=7e-5, step_loss=0.024]Steps:   6%|▌         | 1488/24850 [26:44<9:42:20,  1.50s/it, lr=7e-5, step_loss=0.081]Steps:   6%|▌         | 1489/24850 [26:46<9:41:05,  1.49s/it, lr=7e-5, step_loss=0.081]Steps:   6%|▌         | 1489/24850 [26:46<9:41:05,  1.49s/it, lr=7e-5, step_loss=0.0176]Steps:   6%|▌         | 1490/24850 [26:47<9:38:51,  1.49s/it, lr=7e-5, step_loss=0.0176]Steps:   6%|▌         | 1490/24850 [26:47<9:38:51,  1.49s/it, lr=7e-5, step_loss=0.0214]Steps:   6%|▌         | 1491/24850 [26:49<9:34:22,  1.48s/it, lr=7e-5, step_loss=0.0214]Steps:   6%|▌         | 1491/24850 [26:49<9:34:22,  1.48s/it, lr=7e-5, step_loss=0.0137]Steps:   6%|▌         | 1492/24850 [26:50<9:33:31,  1.47s/it, lr=7e-5, step_loss=0.0137]Steps:   6%|▌         | 1492/24850 [26:50<9:33:31,  1.47s/it, lr=7e-5, step_loss=0.0353]Steps:   6%|▌         | 1493/24850 [26:51<9:32:43,  1.47s/it, lr=7e-5, step_loss=0.0353]Steps:   6%|▌         | 1493/24850 [26:51<9:32:43,  1.47s/it, lr=7e-5, step_loss=0.00388]Steps:   6%|▌         | 1494/24850 [26:53<9:32:33,  1.47s/it, lr=7e-5, step_loss=0.00388]Steps:   6%|▌         | 1494/24850 [26:53<9:32:33,  1.47s/it, lr=7e-5, step_loss=0.0225] Steps:   6%|▌         | 1495/24850 [26:54<9:31:53,  1.47s/it, lr=7e-5, step_loss=0.0225]Steps:   6%|▌         | 1495/24850 [26:54<9:31:53,  1.47s/it, lr=7e-5, step_loss=0.0139]Steps:   6%|▌         | 1496/24850 [26:56<9:31:55,  1.47s/it, lr=7e-5, step_loss=0.0139]Steps:   6%|▌         | 1496/24850 [26:56<9:31:55,  1.47s/it, lr=7e-5, step_loss=0.0275]Steps:   6%|▌         | 1497/24850 [26:57<9:29:55,  1.46s/it, lr=7e-5, step_loss=0.0275]04/12/2024 10:37:06 - INFO - __main__ - 2 checkpoints already exist, removing 1 checkpoints
04/12/2024 10:37:06 - INFO - __main__ - removing checkpoints: checkpoint-500
04/12/2024 10:37:07 - INFO - accelerate.accelerator - Saving current state to /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-1500
Configuration saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-1500/unet/config.json
Model weights saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-1500/unet/diffusion_pytorch_model.safetensors
Model weights saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-1500/unet/pytorch_lora_weights.safetensors
04/12/2024 10:37:39 - INFO - accelerate.checkpointing - Optimizer state saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-1500/optimizer.bin
04/12/2024 10:37:39 - INFO - accelerate.checkpointing - Scheduler state saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-1500/scheduler.bin
04/12/2024 10:37:39 - INFO - accelerate.checkpointing - Random states saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-1500/random_states_0.pkl
04/12/2024 10:37:39 - INFO - __main__ - Saved state to /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-1500
Steps:   6%|▌         | 1497/24850 [27:30<9:29:55,  1.46s/it, lr=7e-5, step_loss=0.0484]Steps:   6%|▌         | 1498/24850 [27:39<87:52:57, 13.55s/it, lr=7e-5, step_loss=0.0484]Steps:   6%|▌         | 1498/24850 [27:39<87:52:57, 13.55s/it, lr=7e-5, step_loss=0.0259]Steps:   6%|▌         | 1499/24850 [27:41<64:20:12,  9.92s/it, lr=7e-5, step_loss=0.0259]Steps:   6%|▌         | 1499/24850 [27:41<64:20:12,  9.92s/it, lr=7e-5, step_loss=0.00445]Steps:   6%|▌         | 1500/24850 [27:42<47:50:26,  7.38s/it, lr=7e-5, step_loss=0.00445]Steps:   6%|▌         | 1500/24850 [27:42<47:50:26,  7.38s/it, lr=7e-5, step_loss=0.0139] Steps:   6%|▌         | 1501/24850 [27:44<36:33:38,  5.64s/it, lr=7e-5, step_loss=0.0139]Steps:   6%|▌         | 1501/24850 [27:44<36:33:38,  5.64s/it, lr=7e-5, step_loss=0.0225]Steps:   6%|▌         | 1502/24850 [27:45<28:25:19,  4.38s/it, lr=7e-5, step_loss=0.0225]Steps:   6%|▌         | 1502/24850 [27:45<28:25:19,  4.38s/it, lr=7e-5, step_loss=0.0931]Steps:   6%|▌         | 1503/24850 [27:46<22:43:28,  3.50s/it, lr=7e-5, step_loss=0.0931]Steps:   6%|▌         | 1503/24850 [27:46<22:43:28,  3.50s/it, lr=7e-5, step_loss=0.00628]Steps:   6%|▌         | 1504/24850 [27:48<18:45:51,  2.89s/it, lr=7e-5, step_loss=0.00628]Steps:   6%|▌         | 1504/24850 [27:48<18:45:51,  2.89s/it, lr=7e-5, step_loss=0.0308] Steps:   6%|▌         | 1505/24850 [27:49<15:55:49,  2.46s/it, lr=7e-5, step_loss=0.0308]Steps:   6%|▌         | 1505/24850 [27:49<15:55:49,  2.46s/it, lr=7e-5, step_loss=0.0205]mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:   6%|▌         | 1506/24850 [27:51<14:21:06,  2.21s/it, lr=7e-5, step_loss=0.0205]Steps:   6%|▌         | 1506/24850 [27:51<14:21:06,  2.21s/it, lr=7e-5, step_loss=0.017] Steps:   6%|▌         | 1507/24850 [27:52<12:49:52,  1.98s/it, lr=7e-5, step_loss=0.017]Steps:   6%|▌         | 1507/24850 [27:52<12:49:52,  1.98s/it, lr=7e-5, step_loss=0.328]Steps:   6%|▌         | 1508/24850 [27:54<11:49:05,  1.82s/it, lr=7e-5, step_loss=0.328]Steps:   6%|▌         | 1508/24850 [27:54<11:49:05,  1.82s/it, lr=7e-5, step_loss=0.0283]Steps:   6%|▌         | 1509/24850 [27:55<11:05:05,  1.71s/it, lr=7e-5, step_loss=0.0283]Steps:   6%|▌         | 1509/24850 [27:55<11:05:05,  1.71s/it, lr=7e-5, step_loss=0.00956]Steps:   6%|▌         | 1510/24850 [27:57<10:36:03,  1.64s/it, lr=7e-5, step_loss=0.00956]Steps:   6%|▌         | 1510/24850 [27:57<10:36:03,  1.64s/it, lr=7e-5, step_loss=0.0467] Steps:   6%|▌         | 1511/24850 [27:58<10:12:36,  1.57s/it, lr=7e-5, step_loss=0.0467]Steps:   6%|▌         | 1511/24850 [27:58<10:12:36,  1.57s/it, lr=7e-5, step_loss=0.0121]Steps:   6%|▌         | 1512/24850 [28:00<9:58:19,  1.54s/it, lr=7e-5, step_loss=0.0121] Steps:   6%|▌         | 1512/24850 [28:00<9:58:19,  1.54s/it, lr=7e-5, step_loss=0.0223]Steps:   6%|▌         | 1513/24850 [28:01<9:47:49,  1.51s/it, lr=7e-5, step_loss=0.0223]Steps:   6%|▌         | 1513/24850 [28:01<9:47:49,  1.51s/it, lr=7e-5, step_loss=0.0639]Steps:   6%|▌         | 1514/24850 [28:03<9:39:54,  1.49s/it, lr=7e-5, step_loss=0.0639]Steps:   6%|▌         | 1514/24850 [28:03<9:39:54,  1.49s/it, lr=7e-5, step_loss=0.00329]Steps:   6%|▌         | 1515/24850 [28:04<9:33:07,  1.47s/it, lr=7e-5, step_loss=0.00329]Steps:   6%|▌         | 1515/24850 [28:04<9:33:07,  1.47s/it, lr=7e-5, step_loss=0.0068] Steps:   6%|▌         | 1516/24850 [28:05<9:29:55,  1.47s/it, lr=7e-5, step_loss=0.0068]Steps:   6%|▌         | 1516/24850 [28:05<9:29:55,  1.47s/it, lr=7e-5, step_loss=0.0388]Steps:   6%|▌         | 1517/24850 [28:07<9:27:48,  1.46s/it, lr=7e-5, step_loss=0.0388]Steps:   6%|▌         | 1517/24850 [28:07<9:27:48,  1.46s/it, lr=7e-5, step_loss=0.0147]Steps:   6%|▌         | 1518/24850 [28:08<9:25:35,  1.45s/it, lr=7e-5, step_loss=0.0147]Steps:   6%|▌         | 1518/24850 [28:08<9:25:35,  1.45s/it, lr=7e-5, step_loss=0.0377]Steps:   6%|▌         | 1519/24850 [28:10<9:24:29,  1.45s/it, lr=7e-5, step_loss=0.0377]Steps:   6%|▌         | 1519/24850 [28:10<9:24:29,  1.45s/it, lr=7e-5, step_loss=0.0138]Steps:   6%|▌         | 1520/24850 [28:11<9:24:03,  1.45s/it, lr=7e-5, step_loss=0.0138]Steps:   6%|▌         | 1520/24850 [28:11<9:24:03,  1.45s/it, lr=7e-5, step_loss=0.0108]Steps:   6%|▌         | 1521/24850 [28:13<9:34:23,  1.48s/it, lr=7e-5, step_loss=0.0108]Steps:   6%|▌         | 1521/24850 [28:13<9:34:23,  1.48s/it, lr=7e-5, step_loss=0.0509]04/12/2024 10:38:21 - INFO - __main__ - Running validation...
torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([9, 4, 64, 64])

Loading pipeline components...:   0%|          | 0/7 [00:00<?, ?it/s][A`text_config_dict` is provided which will be used to initialize `CLIPTextConfig`. The value `text_config["id2label"]` will be overriden.
`text_config_dict` is provided which will be used to initialize `CLIPTextConfig`. The value `text_config["bos_token_id"]` will be overriden.
`text_config_dict` is provided which will be used to initialize `CLIPTextConfig`. The value `text_config["eos_token_id"]` will be overriden.
Loaded safety_checker as StableDiffusionSafetyChecker from `safety_checker` subfolder of timbrooks/instruct-pix2pix.

Loading pipeline components...:  14%|█▍        | 1/7 [00:00<00:02,  2.23it/s][ALoaded feature_extractor as CLIPImageProcessor from `feature_extractor` subfolder of timbrooks/instruct-pix2pix.
{'timestep_spacing'} was not found in config. Values will be initialized to default values.
Loaded scheduler as EulerAncestralDiscreteScheduler from `scheduler` subfolder of timbrooks/instruct-pix2pix.
Loaded tokenizer as CLIPTokenizer from `tokenizer` subfolder of timbrooks/instruct-pix2pix.
Loading pipeline components...: 100%|██████████| 7/7 [00:00<00:00, 12.79it/s]
{'timestep_spacing'} was not found in config. Values will be initialized to default values.
conduct do_classifier_free_guidance, text_guidance: 16,image_guidance: 1

  0%|          | 0/50 [00:00<?, ?it/s][A
  2%|▏         | 1/50 [00:00<00:21,  2.32it/s][A
  4%|▍         | 2/50 [00:00<00:20,  2.39it/s][A
  6%|▌         | 3/50 [00:01<00:19,  2.42it/s][A
  8%|▊         | 4/50 [00:01<00:18,  2.44it/s][A
 10%|█         | 5/50 [00:02<00:18,  2.44it/s][A
 12%|█▏        | 6/50 [00:02<00:18,  2.44it/s][A
 14%|█▍        | 7/50 [00:02<00:17,  2.44it/s][A
 16%|█▌        | 8/50 [00:03<00:17,  2.44it/s][A
 18%|█▊        | 9/50 [00:03<00:16,  2.44it/s][A
 20%|██        | 10/50 [00:04<00:16,  2.44it/s][A
 22%|██▏       | 11/50 [00:04<00:15,  2.45it/s][A
 24%|██▍       | 12/50 [00:04<00:15,  2.45it/s][A
 26%|██▌       | 13/50 [00:05<00:15,  2.45it/s][A
 28%|██▊       | 14/50 [00:05<00:14,  2.44it/s][A
 30%|███       | 15/50 [00:06<00:14,  2.44it/s][A
 32%|███▏      | 16/50 [00:06<00:13,  2.45it/s][A
 34%|███▍      | 17/50 [00:06<00:13,  2.44it/s][A
 36%|███▌      | 18/50 [00:07<00:13,  2.44it/s][A
 38%|███▊      | 19/50 [00:07<00:12,  2.44it/s][A
 40%|████      | 20/50 [00:08<00:12,  2.45it/s][A
 42%|████▏     | 21/50 [00:08<00:11,  2.45it/s][A
 44%|████▍     | 22/50 [00:09<00:11,  2.45it/s][A
 46%|████▌     | 23/50 [00:09<00:11,  2.45it/s][A
 48%|████▊     | 24/50 [00:09<00:10,  2.44it/s][A
 50%|█████     | 25/50 [00:10<00:10,  2.44it/s][A
 52%|█████▏    | 26/50 [00:10<00:09,  2.44it/s][A
 54%|█████▍    | 27/50 [00:11<00:09,  2.44it/s][A
 56%|█████▌    | 28/50 [00:11<00:09,  2.44it/s][A
 58%|█████▊    | 29/50 [00:11<00:08,  2.43it/s][A
 60%|██████    | 30/50 [00:12<00:08,  2.44it/s][A
 62%|██████▏   | 31/50 [00:12<00:07,  2.44it/s][A
 64%|██████▍   | 32/50 [00:13<00:07,  2.44it/s][A
 66%|██████▌   | 33/50 [00:13<00:06,  2.45it/s][A(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) 
 68%|██████▊   | 34/50 [00:13<00:06,  2.45it/s][A
 70%|███████   | 35/50 [00:14<00:06,  2.45it/s][A
 72%|███████▏  | 36/50 [00:14<00:05,  2.44it/s][A
 74%|███████▍  | 37/50 [00:15<00:05,  2.45it/s][A
 76%|███████▌  | 38/50 [00:15<00:04,  2.44it/s][A
 78%|███████▊  | 39/50 [00:15<00:04,  2.44it/s][A
 80%|████████  | 40/50 [00:16<00:04,  2.44it/s][A
 82%|████████▏ | 41/50 [00:16<00:03,  2.44it/s][A
 84%|████████▍ | 42/50 [00:17<00:03,  2.44it/s][A
 86%|████████▌ | 43/50 [00:17<00:02,  2.43it/s][A
 88%|████████▊ | 44/50 [00:18<00:02,  2.43it/s][A
 90%|█████████ | 45/50 [00:18<00:02,  2.43it/s][A
 92%|█████████▏| 46/50 [00:18<00:01,  2.43it/s][A
 94%|█████████▍| 47/50 [00:19<00:01,  2.43it/s][A
 96%|█████████▌| 48/50 [00:19<00:00,  2.44it/s][A
 98%|█████████▊| 49/50 [00:20<00:00,  2.44it/s][A
100%|██████████| 50/50 [00:20<00:00,  2.44it/s][A100%|██████████| 50/50 [00:20<00:00,  2.44it/s]
04/12/2024 10:38:45 - INFO - __main__ - Running training...
torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
save img to : /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/images/modify the images for task ['flare']_val_step_1524_0.png modify the images for task ['flare']
writing inference outputs failed [Errno 2] No such file or directory: '/usr/bin/ffmpeg'
Steps:   6%|▌         | 1522/24850 [28:44<68:05:28, 10.51s/it, lr=7e-5, step_loss=0.0509]Steps:   6%|▌         | 1522/24850 [28:44<68:05:28, 10.51s/it, lr=7e-5, step_loss=0.00842]Steps:   6%|▌         | 1523/24850 [28:46<50:39:42,  7.82s/it, lr=7e-5, step_loss=0.00842]Steps:   6%|▌         | 1523/24850 [28:46<50:39:42,  7.82s/it, lr=7e-5, step_loss=0.00308]Steps:   6%|▌         | 1524/24850 [28:47<38:21:22,  5.92s/it, lr=7e-5, step_loss=0.00308]Steps:   6%|▌         | 1524/24850 [28:47<38:21:22,  5.92s/it, lr=7e-5, step_loss=0.00489]Steps:   6%|▌         | 1525/24850 [28:49<29:40:30,  4.58s/it, lr=7e-5, step_loss=0.00489]Steps:   6%|▌         | 1525/24850 [28:49<29:40:30,  4.58s/it, lr=7e-5, step_loss=0.00787]Steps:   6%|▌         | 1526/24850 [28:50<23:36:42,  3.64s/it, lr=7e-5, step_loss=0.00787]Steps:   6%|▌         | 1526/24850 [28:50<23:36:42,  3.64s/it, lr=7e-5, step_loss=0.0754] Steps:   6%|▌         | 1527/24850 [28:52<19:24:38,  3.00s/it, lr=7e-5, step_loss=0.0754]Steps:   6%|▌         | 1527/24850 [28:52<19:24:38,  3.00s/it, lr=7e-5, step_loss=0.0181]Steps:   6%|▌         | 1528/24850 [28:53<16:23:01,  2.53s/it, lr=7e-5, step_loss=0.0181]Steps:   6%|▌         | 1528/24850 [28:53<16:23:01,  2.53s/it, lr=7e-5, step_loss=0.0148]Steps:   6%|▌         | 1529/24850 [28:55<14:21:34,  2.22s/it, lr=7e-5, step_loss=0.0148]Steps:   6%|▌         | 1529/24850 [28:55<14:21:34,  2.22s/it, lr=7e-5, step_loss=0.0045]Steps:   6%|▌         | 1530/24850 [28:56<12:53:15,  1.99s/it, lr=7e-5, step_loss=0.0045]Steps:   6%|▌         | 1530/24850 [28:56<12:53:15,  1.99s/it, lr=7e-5, step_loss=0.00567]Steps:   6%|▌         | 1531/24850 [28:58<11:51:16,  1.83s/it, lr=7e-5, step_loss=0.00567]Steps:   6%|▌         | 1531/24850 [28:58<11:51:16,  1.83s/it, lr=7e-5, step_loss=0.00297]Steps:   6%|▌         | 1532/24850 [28:59<11:07:48,  1.72s/it, lr=7e-5, step_loss=0.00297]Steps:   6%|▌         | 1532/24850 [28:59<11:07:48,  1.72s/it, lr=7e-5, step_loss=0.14]   Steps:   6%|▌         | 1533/24850 [29:01<10:37:15,  1.64s/it, lr=7e-5, step_loss=0.14]Steps:   6%|▌         | 1533/24850 [29:01<10:37:15,  1.64s/it, lr=7e-5, step_loss=0.0361]Steps:   6%|▌         | 1534/24850 [29:02<10:22:10,  1.60s/it, lr=7e-5, step_loss=0.0361]Steps:   6%|▌         | 1534/24850 [29:02<10:22:10,  1.60s/it, lr=7e-5, step_loss=0.0126]Steps:   6%|▌         | 1535/24850 [29:04<10:05:49,  1.56s/it, lr=7e-5, step_loss=0.0126]Steps:   6%|▌         | 1535/24850 [29:04<10:05:49,  1.56s/it, lr=7e-5, step_loss=0.0289]Steps:   6%|▌         | 1536/24850 [29:05<9:55:08,  1.53s/it, lr=7e-5, step_loss=0.0289] Steps:   6%|▌         | 1536/24850 [29:05<9:55:08,  1.53s/it, lr=7e-5, step_loss=0.0246]Steps:   6%|▌         | 1537/24850 [29:06<9:48:15,  1.51s/it, lr=7e-5, step_loss=0.0246]Steps:   6%|▌         | 1537/24850 [29:06<9:48:15,  1.51s/it, lr=7e-5, step_loss=0.0387]Steps:   6%|▌         | 1538/24850 [29:08<9:41:41,  1.50s/it, lr=7e-5, step_loss=0.0387]Steps:   6%|▌         | 1538/24850 [29:08<9:41:41,  1.50s/it, lr=7e-5, step_loss=0.0308]Steps:   6%|▌         | 1539/24850 [29:09<9:37:41,  1.49s/it, lr=7e-5, step_loss=0.0308]Steps:   6%|▌         | 1539/24850 [29:09<9:37:41,  1.49s/it, lr=7e-5, step_loss=0.00686]Steps:   6%|▌         | 1540/24850 [29:11<9:34:06,  1.48s/it, lr=7e-5, step_loss=0.00686]Steps:   6%|▌         | 1540/24850 [29:11<9:34:06,  1.48s/it, lr=7e-5, step_loss=0.0208] Steps:   6%|▌         | 1541/24850 [29:12<9:31:30,  1.47s/it, lr=7e-5, step_loss=0.0208]Steps:   6%|▌         | 1541/24850 [29:12<9:31:30,  1.47s/it, lr=7e-5, step_loss=0.00721]Steps:   6%|▌         | 1542/24850 [29:14<9:31:11,  1.47s/it, lr=7e-5, step_loss=0.00721]Steps:   6%|▌         | 1542/24850 [29:14<9:31:11,  1.47s/it, lr=7e-5, step_loss=0.0121] Steps:   6%|▌         | 1543/24850 [29:15<9:31:48,  1.47s/it, lr=7e-5, step_loss=0.0121]Steps:   6%|▌         | 1543/24850 [29:15<9:31:48,  1.47s/it, lr=7e-5, step_loss=0.018] Steps:   6%|▌         | 1544/24850 [29:17<9:32:04,  1.47s/it, lr=7e-5, step_loss=0.018]Steps:   6%|▌         | 1544/24850 [29:17<9:32:04,  1.47s/it, lr=7e-5, step_loss=0.0364]Steps:   6%|▌         | 1545/24850 [29:18<9:29:59,  1.47s/it, lr=7e-5, step_loss=0.0364]Steps:   6%|▌         | 1545/24850 [29:18<9:29:59,  1.47s/it, lr=7e-5, step_loss=0.00397]Steps:   6%|▌         | 1546/24850 [29:20<9:29:14,  1.47s/it, lr=7e-5, step_loss=0.00397]Steps:   6%|▌         | 1546/24850 [29:20<9:29:14,  1.47s/it, lr=7e-5, step_loss=0.00317]Steps:   6%|▌         | 1547/24850 [29:22<11:25:54,  1.77s/it, lr=7e-5, step_loss=0.00317]Steps:   6%|▌         | 1547/24850 [29:22<11:25:54,  1.77s/it, lr=7e-5, step_loss=0.00832]Steps:   6%|▌         | 1548/24850 [29:24<10:50:00,  1.67s/it, lr=7e-5, step_loss=0.00832]Steps:   6%|▌         | 1548/24850 [29:24<10:50:00,  1.67s/it, lr=7e-5, step_loss=0.0328] (512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512)Steps:   6%|▌         | 1549/24850 [29:25<10:25:33,  1.61s/it, lr=7e-5, step_loss=0.0328]Steps:   6%|▌         | 1549/24850 [29:25<10:25:33,  1.61s/it, lr=7e-5, step_loss=0.00984]Steps:   6%|▌         | 1550/24850 [29:27<10:08:29,  1.57s/it, lr=7e-5, step_loss=0.00984]Steps:   6%|▌         | 1550/24850 [29:27<10:08:29,  1.57s/it, lr=7e-5, step_loss=0.00297]Steps:   6%|▌         | 1551/24850 [29:28<9:56:20,  1.54s/it, lr=7e-5, step_loss=0.00297] Steps:   6%|▌         | 1551/24850 [29:28<9:56:20,  1.54s/it, lr=7e-5, step_loss=0.0339] Steps:   6%|▌         | 1552/24850 [29:29<9:47:58,  1.51s/it, lr=7e-5, step_loss=0.0339]Steps:   6%|▌         | 1552/24850 [29:29<9:47:58,  1.51s/it, lr=7e-5, step_loss=0.00547]Steps:   6%|▌         | 1553/24850 [29:31<9:42:37,  1.50s/it, lr=7e-5, step_loss=0.00547]Steps:   6%|▌         | 1553/24850 [29:31<9:42:37,  1.50s/it, lr=7e-5, step_loss=0.00541]Steps:   6%|▋         | 1554/24850 [29:32<9:41:10,  1.50s/it, lr=7e-5, step_loss=0.00541]Steps:   6%|▋         | 1554/24850 [29:32<9:41:10,  1.50s/it, lr=7e-5, step_loss=0.00744]Steps:   6%|▋         | 1555/24850 [29:34<9:37:25,  1.49s/it, lr=7e-5, step_loss=0.00744]Steps:   6%|▋         | 1555/24850 [29:34<9:37:25,  1.49s/it, lr=7e-5, step_loss=0.0292] Steps:   6%|▋         | 1556/24850 [29:35<9:33:06,  1.48s/it, lr=7e-5, step_loss=0.0292]Steps:   6%|▋         | 1556/24850 [29:35<9:33:06,  1.48s/it, lr=7e-5, step_loss=0.0213]Steps:   6%|▋         | 1557/24850 [29:37<9:30:47,  1.47s/it, lr=7e-5, step_loss=0.0213]Steps:   6%|▋         | 1557/24850 [29:37<9:30:47,  1.47s/it, lr=7e-5, step_loss=0.0494]Steps:   6%|▋         | 1558/24850 [29:38<9:28:48,  1.47s/it, lr=7e-5, step_loss=0.0494]Steps:   6%|▋         | 1558/24850 [29:38<9:28:48,  1.47s/it, lr=7e-5, step_loss=0.0498]Steps:   6%|▋         | 1559/24850 [29:40<9:26:48,  1.46s/it, lr=7e-5, step_loss=0.0498]Steps:   6%|▋         | 1559/24850 [29:40<9:26:48,  1.46s/it, lr=7e-5, step_loss=0.0427]Steps:   6%|▋         | 1560/24850 [29:41<9:27:43,  1.46s/it, lr=7e-5, step_loss=0.0427]Steps:   6%|▋         | 1560/24850 [29:41<9:27:43,  1.46s/it, lr=7e-5, step_loss=0.0209]Steps:   6%|▋         | 1561/24850 [29:43<9:32:51,  1.48s/it, lr=7e-5, step_loss=0.0209]Steps:   6%|▋         | 1561/24850 [29:43<9:32:51,  1.48s/it, lr=7e-5, step_loss=0.0363]Steps:   6%|▋         | 1562/24850 [29:44<9:32:16,  1.47s/it, lr=7e-5, step_loss=0.0363]Steps:   6%|▋         | 1562/24850 [29:44<9:32:16,  1.47s/it, lr=7e-5, step_loss=0.0455]Steps:   6%|▋         | 1563/24850 [29:46<9:30:49,  1.47s/it, lr=7e-5, step_loss=0.0455]Steps:   6%|▋         | 1563/24850 [29:46<9:30:49,  1.47s/it, lr=7e-5, step_loss=0.00724]Steps:   6%|▋         | 1564/24850 [29:47<9:31:58,  1.47s/it, lr=7e-5, step_loss=0.00724]Steps:   6%|▋         | 1564/24850 [29:47<9:31:58,  1.47s/it, lr=7e-5, step_loss=0.00805]Steps:   6%|▋         | 1565/24850 [29:49<9:30:12,  1.47s/it, lr=7e-5, step_loss=0.00805]Steps:   6%|▋         | 1565/24850 [29:49<9:30:12,  1.47s/it, lr=7e-5, step_loss=0.0408] Steps:   6%|▋         | 1566/24850 [29:50<9:30:29,  1.47s/it, lr=7e-5, step_loss=0.0408]Steps:   6%|▋         | 1566/24850 [29:50<9:30:29,  1.47s/it, lr=7e-5, step_loss=0.0348]Steps:   6%|▋         | 1567/24850 [29:51<9:30:33,  1.47s/it, lr=7e-5, step_loss=0.0348]Steps:   6%|▋         | 1567/24850 [29:51<9:30:33,  1.47s/it, lr=7e-5, step_loss=0.0138]Steps:   6%|▋         | 1568/24850 [29:53<9:35:22,  1.48s/it, lr=7e-5, step_loss=0.0138]Steps:   6%|▋         | 1568/24850 [29:53<9:35:22,  1.48s/it, lr=7e-5, step_loss=0.0244]Steps:   6%|▋         | 1569/24850 [29:54<9:34:40,  1.48s/it, lr=7e-5, step_loss=0.0244]Steps:   6%|▋         | 1569/24850 [29:54<9:34:40,  1.48s/it, lr=7e-5, step_loss=0.0251]Steps:   6%|▋         | 1570/24850 [29:56<9:34:01,  1.48s/it, lr=7e-5, step_loss=0.0251]Steps:   6%|▋         | 1570/24850 [29:56<9:34:01,  1.48s/it, lr=7e-5, step_loss=0.0877]Steps:   6%|▋         | 1571/24850 [29:57<9:34:48,  1.48s/it, lr=7e-5, step_loss=0.0877]Steps:   6%|▋         | 1571/24850 [29:57<9:34:48,  1.48s/it, lr=7e-5, step_loss=0.0618]Steps:   6%|▋         | 1572/24850 [29:59<9:32:04,  1.47s/it, lr=7e-5, step_loss=0.0618]Steps:   6%|▋         | 1572/24850 [29:59<9:32:04,  1.47s/it, lr=7e-5, step_loss=0.0324]Steps:   6%|▋         | 1573/24850 [30:00<9:29:55,  1.47s/it, lr=7e-5, step_loss=0.0324]Steps:   6%|▋         | 1573/24850 [30:00<9:29:55,  1.47s/it, lr=7e-5, step_loss=0.0228]Steps:   6%|▋         | 1574/24850 [30:02<9:28:59,  1.47s/it, lr=7e-5, step_loss=0.0228]Steps:   6%|▋         | 1574/24850 [30:02<9:28:59,  1.47s/it, lr=7e-5, step_loss=0.00811]Steps:   6%|▋         | 1575/24850 [30:03<9:28:51,  1.47s/it, lr=7e-5, step_loss=0.00811]Steps:   6%|▋         | 1575/24850 [30:03<9:28:51,  1.47s/it, lr=7e-5, step_loss=0.0201]  torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:   6%|▋         | 1576/24850 [30:05<9:28:31,  1.47s/it, lr=7e-5, step_loss=0.0201]Steps:   6%|▋         | 1576/24850 [30:05<9:28:31,  1.47s/it, lr=7e-5, step_loss=0.0802]Steps:   6%|▋         | 1577/24850 [30:06<9:28:45,  1.47s/it, lr=7e-5, step_loss=0.0802]Steps:   6%|▋         | 1577/24850 [30:06<9:28:45,  1.47s/it, lr=7e-5, step_loss=0.0104]Steps:   6%|▋         | 1578/24850 [30:08<9:28:16,  1.47s/it, lr=7e-5, step_loss=0.0104]Steps:   6%|▋         | 1578/24850 [30:08<9:28:16,  1.47s/it, lr=7e-5, step_loss=0.0485]Steps:   6%|▋         | 1579/24850 [30:09<9:26:22,  1.46s/it, lr=7e-5, step_loss=0.0485]Steps:   6%|▋         | 1579/24850 [30:09<9:26:22,  1.46s/it, lr=7e-5, step_loss=0.00762]Steps:   6%|▋         | 1580/24850 [30:11<9:26:52,  1.46s/it, lr=7e-5, step_loss=0.00762]Steps:   6%|▋         | 1580/24850 [30:11<9:26:52,  1.46s/it, lr=7e-5, step_loss=0.0147] Steps:   6%|▋         | 1581/24850 [30:12<9:27:06,  1.46s/it, lr=7e-5, step_loss=0.0147]Steps:   6%|▋         | 1581/24850 [30:12<9:27:06,  1.46s/it, lr=7e-5, step_loss=0.0432]Steps:   6%|▋         | 1582/24850 [30:14<9:53:41,  1.53s/it, lr=7e-5, step_loss=0.0432]Steps:   6%|▋         | 1582/24850 [30:14<9:53:41,  1.53s/it, lr=7e-5, step_loss=0.0139]Steps:   6%|▋         | 1583/24850 [30:15<9:45:41,  1.51s/it, lr=7e-5, step_loss=0.0139]Steps:   6%|▋         | 1583/24850 [30:15<9:45:41,  1.51s/it, lr=7e-5, step_loss=0.0186]Steps:   6%|▋         | 1584/24850 [30:17<9:41:43,  1.50s/it, lr=7e-5, step_loss=0.0186]Steps:   6%|▋         | 1584/24850 [30:17<9:41:43,  1.50s/it, lr=7e-5, step_loss=0.00727]Steps:   6%|▋         | 1585/24850 [30:18<9:36:28,  1.49s/it, lr=7e-5, step_loss=0.00727]Steps:   6%|▋         | 1585/24850 [30:18<9:36:28,  1.49s/it, lr=7e-5, step_loss=0.000338]Steps:   6%|▋         | 1586/24850 [30:20<9:32:01,  1.48s/it, lr=7e-5, step_loss=0.000338]Steps:   6%|▋         | 1586/24850 [30:20<9:32:01,  1.48s/it, lr=7e-5, step_loss=0.00105] Steps:   6%|▋         | 1587/24850 [30:21<9:35:28,  1.48s/it, lr=7e-5, step_loss=0.00105]Steps:   6%|▋         | 1587/24850 [30:21<9:35:28,  1.48s/it, lr=7e-5, step_loss=0.0625] Steps:   6%|▋         | 1588/24850 [30:23<9:32:20,  1.48s/it, lr=7e-5, step_loss=0.0625]Steps:   6%|▋         | 1588/24850 [30:23<9:32:20,  1.48s/it, lr=7e-5, step_loss=0.017] Steps:   6%|▋         | 1589/24850 [30:24<9:30:18,  1.47s/it, lr=7e-5, step_loss=0.017]Steps:   6%|▋         | 1589/24850 [30:24<9:30:18,  1.47s/it, lr=7e-5, step_loss=0.0125]Steps:   6%|▋         | 1590/24850 [30:25<9:27:07,  1.46s/it, lr=7e-5, step_loss=0.0125]Steps:   6%|▋         | 1590/24850 [30:25<9:27:07,  1.46s/it, lr=7e-5, step_loss=0.0453]Steps:   6%|▋         | 1591/24850 [30:27<9:27:00,  1.46s/it, lr=7e-5, step_loss=0.0453]Steps:   6%|▋         | 1591/24850 [30:27<9:27:00,  1.46s/it, lr=7e-5, step_loss=0.0268]Steps:   6%|▋         | 1592/24850 [30:28<9:25:04,  1.46s/it, lr=7e-5, step_loss=0.0268]Steps:   6%|▋         | 1592/24850 [30:28<9:25:04,  1.46s/it, lr=7e-5, step_loss=0.00796]Steps:   6%|▋         | 1593/24850 [30:30<9:26:01,  1.46s/it, lr=7e-5, step_loss=0.00796]Steps:   6%|▋         | 1593/24850 [30:30<9:26:01,  1.46s/it, lr=7e-5, step_loss=0.00958]Steps:   6%|▋         | 1594/24850 [30:31<9:25:21,  1.46s/it, lr=7e-5, step_loss=0.00958]Steps:   6%|▋         | 1594/24850 [30:31<9:25:21,  1.46s/it, lr=7e-5, step_loss=0.0109] Steps:   6%|▋         | 1595/24850 [30:33<9:25:44,  1.46s/it, lr=7e-5, step_loss=0.0109]Steps:   6%|▋         | 1595/24850 [30:33<9:25:44,  1.46s/it, lr=7e-5, step_loss=0.0225]Steps:   6%|▋         | 1596/24850 [30:34<9:29:25,  1.47s/it, lr=7e-5, step_loss=0.0225]Steps:   6%|▋         | 1596/24850 [30:34<9:29:25,  1.47s/it, lr=7e-5, step_loss=0.0454]Steps:   6%|▋         | 1597/24850 [30:37<11:22:31,  1.76s/it, lr=7e-5, step_loss=0.0454]Steps:   6%|▋         | 1597/24850 [30:37<11:22:31,  1.76s/it, lr=7e-5, step_loss=0.128] Steps:   6%|▋         | 1598/24850 [30:38<10:48:40,  1.67s/it, lr=7e-5, step_loss=0.128]Steps:   6%|▋         | 1598/24850 [30:38<10:48:40,  1.67s/it, lr=7e-5, step_loss=0.0455]Steps:   6%|▋         | 1599/24850 [30:40<10:22:39,  1.61s/it, lr=7e-5, step_loss=0.0455]Steps:   6%|▋         | 1599/24850 [30:40<10:22:39,  1.61s/it, lr=7e-5, step_loss=0.0294]Steps:   6%|▋         | 1600/24850 [30:41<10:07:03,  1.57s/it, lr=7e-5, step_loss=0.0294]Steps:   6%|▋         | 1600/24850 [30:41<10:07:03,  1.57s/it, lr=7e-5, step_loss=0.00926]Steps:   6%|▋         | 1601/24850 [30:43<10:03:07,  1.56s/it, lr=7e-5, step_loss=0.00926]Steps:   6%|▋         | 1601/24850 [30:43<10:03:07,  1.56s/it, lr=7e-5, step_loss=0.0092] Steps:   6%|▋         | 1602/24850 [30:44<9:56:41,  1.54s/it, lr=7e-5, step_loss=0.0092] Steps:   6%|▋         | 1602/24850 [30:44<9:56:41,  1.54s/it, lr=7e-5, step_loss=0.0243]torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  Steps:   6%|▋         | 1603/24850 [30:46<9:48:54,  1.52s/it, lr=7e-5, step_loss=0.0243]Steps:   6%|▋         | 1603/24850 [30:46<9:48:54,  1.52s/it, lr=7e-5, step_loss=0.0118]Steps:   6%|▋         | 1604/24850 [30:47<9:44:59,  1.51s/it, lr=7e-5, step_loss=0.0118]Steps:   6%|▋         | 1604/24850 [30:47<9:44:59,  1.51s/it, lr=7e-5, step_loss=0.0653]Steps:   6%|▋         | 1605/24850 [30:48<9:39:30,  1.50s/it, lr=7e-5, step_loss=0.0653]Steps:   6%|▋         | 1605/24850 [30:48<9:39:30,  1.50s/it, lr=7e-5, step_loss=0.0252]Steps:   6%|▋         | 1606/24850 [30:50<9:36:15,  1.49s/it, lr=7e-5, step_loss=0.0252]Steps:   6%|▋         | 1606/24850 [30:50<9:36:15,  1.49s/it, lr=7e-5, step_loss=0.0157]Steps:   6%|▋         | 1607/24850 [30:51<9:34:57,  1.48s/it, lr=7e-5, step_loss=0.0157]Steps:   6%|▋         | 1607/24850 [30:51<9:34:57,  1.48s/it, lr=7e-5, step_loss=0.035] Steps:   6%|▋         | 1608/24850 [30:53<9:31:57,  1.48s/it, lr=7e-5, step_loss=0.035]Steps:   6%|▋         | 1608/24850 [30:53<9:31:57,  1.48s/it, lr=7e-5, step_loss=0.043]Steps:   6%|▋         | 1609/24850 [30:54<9:30:32,  1.47s/it, lr=7e-5, step_loss=0.043]Steps:   6%|▋         | 1609/24850 [30:54<9:30:32,  1.47s/it, lr=7e-5, step_loss=0.00722]Steps:   6%|▋         | 1610/24850 [30:56<9:30:05,  1.47s/it, lr=7e-5, step_loss=0.00722]Steps:   6%|▋         | 1610/24850 [30:56<9:30:05,  1.47s/it, lr=7e-5, step_loss=0.0137] Steps:   6%|▋         | 1611/24850 [30:57<9:30:19,  1.47s/it, lr=7e-5, step_loss=0.0137]Steps:   6%|▋         | 1611/24850 [30:57<9:30:19,  1.47s/it, lr=7e-5, step_loss=0.00668]Steps:   6%|▋         | 1612/24850 [30:59<9:29:19,  1.47s/it, lr=7e-5, step_loss=0.00668]Steps:   6%|▋         | 1612/24850 [30:59<9:29:19,  1.47s/it, lr=7e-5, step_loss=0.0734] Steps:   6%|▋         | 1613/24850 [31:00<9:28:49,  1.47s/it, lr=7e-5, step_loss=0.0734]Steps:   6%|▋         | 1613/24850 [31:00<9:28:49,  1.47s/it, lr=7e-5, step_loss=0.0352]Steps:   6%|▋         | 1614/24850 [31:02<9:27:52,  1.47s/it, lr=7e-5, step_loss=0.0352]Steps:   6%|▋         | 1614/24850 [31:02<9:27:52,  1.47s/it, lr=7e-5, step_loss=0.0518]Steps:   6%|▋         | 1615/24850 [31:03<9:27:11,  1.46s/it, lr=7e-5, step_loss=0.0518]Steps:   6%|▋         | 1615/24850 [31:03<9:27:11,  1.46s/it, lr=7e-5, step_loss=0.00131]Steps:   7%|▋         | 1616/24850 [31:05<9:25:24,  1.46s/it, lr=7e-5, step_loss=0.00131]Steps:   7%|▋         | 1616/24850 [31:05<9:25:24,  1.46s/it, lr=7e-5, step_loss=0.022]  Steps:   7%|▋         | 1617/24850 [31:06<9:26:03,  1.46s/it, lr=7e-5, step_loss=0.022]Steps:   7%|▋         | 1617/24850 [31:06<9:26:03,  1.46s/it, lr=7e-5, step_loss=0.0229]Steps:   7%|▋         | 1618/24850 [31:08<9:26:35,  1.46s/it, lr=7e-5, step_loss=0.0229]Steps:   7%|▋         | 1618/24850 [31:08<9:26:35,  1.46s/it, lr=7e-5, step_loss=0.00123]Steps:   7%|▋         | 1619/24850 [31:09<9:24:06,  1.46s/it, lr=7e-5, step_loss=0.00123]Steps:   7%|▋         | 1619/24850 [31:09<9:24:06,  1.46s/it, lr=7e-5, step_loss=0.00381]Steps:   7%|▋         | 1620/24850 [31:10<9:26:49,  1.46s/it, lr=7e-5, step_loss=0.00381]Steps:   7%|▋         | 1620/24850 [31:10<9:26:49,  1.46s/it, lr=7e-5, step_loss=0.135]  Steps:   7%|▋         | 1621/24850 [31:12<9:26:53,  1.46s/it, lr=7e-5, step_loss=0.135]Steps:   7%|▋         | 1621/24850 [31:12<9:26:53,  1.46s/it, lr=7e-5, step_loss=0.0376]Steps:   7%|▋         | 1622/24850 [31:13<9:25:25,  1.46s/it, lr=7e-5, step_loss=0.0376]Steps:   7%|▋         | 1622/24850 [31:13<9:25:25,  1.46s/it, lr=7e-5, step_loss=0.1]   Steps:   7%|▋         | 1623/24850 [31:15<9:25:07,  1.46s/it, lr=7e-5, step_loss=0.1]Steps:   7%|▋         | 1623/24850 [31:15<9:25:07,  1.46s/it, lr=7e-5, step_loss=0.00652]Steps:   7%|▋         | 1624/24850 [31:16<9:24:48,  1.46s/it, lr=7e-5, step_loss=0.00652]Steps:   7%|▋         | 1624/24850 [31:16<9:24:48,  1.46s/it, lr=7e-5, step_loss=0.0294] Steps:   7%|▋         | 1625/24850 [31:18<9:23:30,  1.46s/it, lr=7e-5, step_loss=0.0294]Steps:   7%|▋         | 1625/24850 [31:18<9:23:30,  1.46s/it, lr=7e-5, step_loss=0.0307]Steps:   7%|▋         | 1626/24850 [31:19<9:24:52,  1.46s/it, lr=7e-5, step_loss=0.0307]Steps:   7%|▋         | 1626/24850 [31:19<9:24:52,  1.46s/it, lr=7e-5, step_loss=0.045] Steps:   7%|▋         | 1627/24850 [31:21<9:24:23,  1.46s/it, lr=7e-5, step_loss=0.045]Steps:   7%|▋         | 1627/24850 [31:21<9:24:23,  1.46s/it, lr=7e-5, step_loss=0.0616]Steps:   7%|▋         | 1628/24850 [31:22<9:25:27,  1.46s/it, lr=7e-5, step_loss=0.0616]Steps:   7%|▋         | 1628/24850 [31:22<9:25:27,  1.46s/it, lr=7e-5, step_loss=0.111] Steps:   7%|▋         | 1629/24850 [31:24<9:25:37,  1.46s/it, lr=7e-5, step_loss=0.111]Steps:   7%|▋         | 1629/24850 [31:24<9:25:37,  1.46s/it, lr=7e-5, step_loss=0.0251]Steps:   7%|▋         | 1630/24850 [31:25<9:25:24,  1.46s/it, lr=7e-5, step_loss=0.0251]Steps:   7%|▋         | 1630/24850 [31:25<9:25:24,  1.46s/it, lr=7e-5, step_loss=0.00848]mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:   7%|▋         | 1631/24850 [31:27<9:26:25,  1.46s/it, lr=7e-5, step_loss=0.00848]Steps:   7%|▋         | 1631/24850 [31:27<9:26:25,  1.46s/it, lr=7e-5, step_loss=0.0339] Steps:   7%|▋         | 1632/24850 [31:28<9:25:40,  1.46s/it, lr=7e-5, step_loss=0.0339]Steps:   7%|▋         | 1632/24850 [31:28<9:25:40,  1.46s/it, lr=7e-5, step_loss=0.0363]Steps:   7%|▋         | 1633/24850 [31:29<9:26:30,  1.46s/it, lr=7e-5, step_loss=0.0363]Steps:   7%|▋         | 1633/24850 [31:29<9:26:30,  1.46s/it, lr=7e-5, step_loss=0.0477]Steps:   7%|▋         | 1634/24850 [31:31<9:27:03,  1.47s/it, lr=7e-5, step_loss=0.0477]Steps:   7%|▋         | 1634/24850 [31:31<9:27:03,  1.47s/it, lr=7e-5, step_loss=0.0407]Steps:   7%|▋         | 1635/24850 [31:32<9:27:52,  1.47s/it, lr=7e-5, step_loss=0.0407]Steps:   7%|▋         | 1635/24850 [31:32<9:27:52,  1.47s/it, lr=7e-5, step_loss=0.0344]Steps:   7%|▋         | 1636/24850 [31:34<9:26:36,  1.46s/it, lr=7e-5, step_loss=0.0344]Steps:   7%|▋         | 1636/24850 [31:34<9:26:36,  1.46s/it, lr=7e-5, step_loss=0.00102]Steps:   7%|▋         | 1637/24850 [31:35<9:26:00,  1.46s/it, lr=7e-5, step_loss=0.00102]Steps:   7%|▋         | 1637/24850 [31:35<9:26:00,  1.46s/it, lr=7e-5, step_loss=0.0028] Steps:   7%|▋         | 1638/24850 [31:37<9:25:45,  1.46s/it, lr=7e-5, step_loss=0.0028]Steps:   7%|▋         | 1638/24850 [31:37<9:25:45,  1.46s/it, lr=7e-5, step_loss=0.0258]Steps:   7%|▋         | 1639/24850 [31:38<9:25:37,  1.46s/it, lr=7e-5, step_loss=0.0258]Steps:   7%|▋         | 1639/24850 [31:38<9:25:37,  1.46s/it, lr=7e-5, step_loss=0.0608]Steps:   7%|▋         | 1640/24850 [31:40<9:26:38,  1.46s/it, lr=7e-5, step_loss=0.0608]Steps:   7%|▋         | 1640/24850 [31:40<9:26:38,  1.46s/it, lr=7e-5, step_loss=0.00237]Steps:   7%|▋         | 1641/24850 [31:41<9:26:58,  1.47s/it, lr=7e-5, step_loss=0.00237]Steps:   7%|▋         | 1641/24850 [31:41<9:26:58,  1.47s/it, lr=7e-5, step_loss=0.0548] Steps:   7%|▋         | 1642/24850 [31:43<9:29:53,  1.47s/it, lr=7e-5, step_loss=0.0548]Steps:   7%|▋         | 1642/24850 [31:43<9:29:53,  1.47s/it, lr=7e-5, step_loss=0.13]  Steps:   7%|▋         | 1643/24850 [31:44<9:31:44,  1.48s/it, lr=7e-5, step_loss=0.13]Steps:   7%|▋         | 1643/24850 [31:44<9:31:44,  1.48s/it, lr=7e-5, step_loss=0.162]Steps:   7%|▋         | 1644/24850 [31:46<9:31:14,  1.48s/it, lr=7e-5, step_loss=0.162]Steps:   7%|▋         | 1644/24850 [31:46<9:31:14,  1.48s/it, lr=7e-5, step_loss=0.0245]Steps:   7%|▋         | 1645/24850 [31:47<9:29:43,  1.47s/it, lr=7e-5, step_loss=0.0245]Steps:   7%|▋         | 1645/24850 [31:47<9:29:43,  1.47s/it, lr=7e-5, step_loss=0.0109]Steps:   7%|▋         | 1646/24850 [31:49<9:28:24,  1.47s/it, lr=7e-5, step_loss=0.0109]Steps:   7%|▋         | 1646/24850 [31:49<9:28:24,  1.47s/it, lr=7e-5, step_loss=0.0138]Steps:   7%|▋         | 1647/24850 [31:51<11:17:01,  1.75s/it, lr=7e-5, step_loss=0.0138]Steps:   7%|▋         | 1647/24850 [31:51<11:17:01,  1.75s/it, lr=7e-5, step_loss=0.0798]Steps:   7%|▋         | 1648/24850 [31:52<10:45:38,  1.67s/it, lr=7e-5, step_loss=0.0798]Steps:   7%|▋         | 1648/24850 [31:52<10:45:38,  1.67s/it, lr=7e-5, step_loss=0.0741]Steps:   7%|▋         | 1649/24850 [31:54<10:23:54,  1.61s/it, lr=7e-5, step_loss=0.0741]Steps:   7%|▋         | 1649/24850 [31:54<10:23:54,  1.61s/it, lr=7e-5, step_loss=0.0105]Steps:   7%|▋         | 1650/24850 [31:55<10:06:23,  1.57s/it, lr=7e-5, step_loss=0.0105]Steps:   7%|▋         | 1650/24850 [31:55<10:06:23,  1.57s/it, lr=7e-5, step_loss=0.0502]Steps:   7%|▋         | 1651/24850 [31:57<9:54:16,  1.54s/it, lr=7e-5, step_loss=0.0502] Steps:   7%|▋         | 1651/24850 [31:57<9:54:16,  1.54s/it, lr=7e-5, step_loss=0.00876]Steps:   7%|▋         | 1652/24850 [31:58<10:02:44,  1.56s/it, lr=7e-5, step_loss=0.00876]Steps:   7%|▋         | 1652/24850 [31:58<10:02:44,  1.56s/it, lr=7e-5, step_loss=0.00725]Steps:   7%|▋         | 1653/24850 [32:00<9:50:23,  1.53s/it, lr=7e-5, step_loss=0.00725] Steps:   7%|▋         | 1653/24850 [32:00<9:50:23,  1.53s/it, lr=7e-5, step_loss=0.00784]Steps:   7%|▋         | 1654/24850 [32:01<9:41:52,  1.51s/it, lr=7e-5, step_loss=0.00784]Steps:   7%|▋         | 1654/24850 [32:01<9:41:52,  1.51s/it, lr=7e-5, step_loss=0.0111] Steps:   7%|▋         | 1655/24850 [32:03<9:37:41,  1.49s/it, lr=7e-5, step_loss=0.0111]Steps:   7%|▋         | 1655/24850 [32:03<9:37:41,  1.49s/it, lr=7e-5, step_loss=0.00963]Steps:   7%|▋         | 1656/24850 [32:04<9:33:46,  1.48s/it, lr=7e-5, step_loss=0.00963]Steps:   7%|▋         | 1656/24850 [32:04<9:33:46,  1.48s/it, lr=7e-5, step_loss=0.0215] Steps:   7%|▋         | 1657/24850 [32:06<9:30:48,  1.48s/it, lr=7e-5, step_loss=0.0215]Steps:   7%|▋         | 1657/24850 [32:06<9:30:48,  1.48s/it, lr=7e-5, step_loss=0.0266]torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) Steps:   7%|▋         | 1658/24850 [32:07<9:29:46,  1.47s/it, lr=7e-5, step_loss=0.0266]Steps:   7%|▋         | 1658/24850 [32:07<9:29:46,  1.47s/it, lr=7e-5, step_loss=0.111] Steps:   7%|▋         | 1659/24850 [32:09<9:28:35,  1.47s/it, lr=7e-5, step_loss=0.111]Steps:   7%|▋         | 1659/24850 [32:09<9:28:35,  1.47s/it, lr=7e-5, step_loss=0.0946]Steps:   7%|▋         | 1660/24850 [32:10<9:27:44,  1.47s/it, lr=7e-5, step_loss=0.0946]Steps:   7%|▋         | 1660/24850 [32:10<9:27:44,  1.47s/it, lr=7e-5, step_loss=0.0131]Steps:   7%|▋         | 1661/24850 [32:12<9:26:41,  1.47s/it, lr=7e-5, step_loss=0.0131]Steps:   7%|▋         | 1661/24850 [32:12<9:26:41,  1.47s/it, lr=7e-5, step_loss=0.00601]Steps:   7%|▋         | 1662/24850 [32:13<9:27:51,  1.47s/it, lr=7e-5, step_loss=0.00601]Steps:   7%|▋         | 1662/24850 [32:13<9:27:51,  1.47s/it, lr=7e-5, step_loss=0.0598] Steps:   7%|▋         | 1663/24850 [32:15<9:27:28,  1.47s/it, lr=7e-5, step_loss=0.0598]Steps:   7%|▋         | 1663/24850 [32:15<9:27:28,  1.47s/it, lr=7e-5, step_loss=0.0135]Steps:   7%|▋         | 1664/24850 [32:16<9:27:33,  1.47s/it, lr=7e-5, step_loss=0.0135]Steps:   7%|▋         | 1664/24850 [32:16<9:27:33,  1.47s/it, lr=7e-5, step_loss=0.036] Steps:   7%|▋         | 1665/24850 [32:17<9:26:30,  1.47s/it, lr=7e-5, step_loss=0.036]Steps:   7%|▋         | 1665/24850 [32:17<9:26:30,  1.47s/it, lr=7e-5, step_loss=0.00803]Steps:   7%|▋         | 1666/24850 [32:19<9:25:38,  1.46s/it, lr=7e-5, step_loss=0.00803]Steps:   7%|▋         | 1666/24850 [32:19<9:25:38,  1.46s/it, lr=7e-5, step_loss=0.051]  Steps:   7%|▋         | 1667/24850 [32:20<9:26:20,  1.47s/it, lr=7e-5, step_loss=0.051]Steps:   7%|▋         | 1667/24850 [32:20<9:26:20,  1.47s/it, lr=7e-5, step_loss=0.0308]Steps:   7%|▋         | 1668/24850 [32:22<9:24:27,  1.46s/it, lr=7e-5, step_loss=0.0308]Steps:   7%|▋         | 1668/24850 [32:22<9:24:27,  1.46s/it, lr=7e-5, step_loss=0.00582]Steps:   7%|▋         | 1669/24850 [32:23<9:24:35,  1.46s/it, lr=7e-5, step_loss=0.00582]Steps:   7%|▋         | 1669/24850 [32:23<9:24:35,  1.46s/it, lr=7e-5, step_loss=0.141]  Steps:   7%|▋         | 1670/24850 [32:25<9:23:55,  1.46s/it, lr=7e-5, step_loss=0.141]Steps:   7%|▋         | 1670/24850 [32:25<9:23:55,  1.46s/it, lr=7e-5, step_loss=0.00536]Steps:   7%|▋         | 1671/24850 [32:26<9:28:22,  1.47s/it, lr=7e-5, step_loss=0.00536]Steps:   7%|▋         | 1671/24850 [32:26<9:28:22,  1.47s/it, lr=7e-5, step_loss=0.0346] Steps:   7%|▋         | 1672/24850 [32:28<9:27:26,  1.47s/it, lr=7e-5, step_loss=0.0346]Steps:   7%|▋         | 1672/24850 [32:28<9:27:26,  1.47s/it, lr=7e-5, step_loss=0.0112]Steps:   7%|▋         | 1673/24850 [32:29<9:26:00,  1.47s/it, lr=7e-5, step_loss=0.0112]Steps:   7%|▋         | 1673/24850 [32:29<9:26:00,  1.47s/it, lr=7e-5, step_loss=0.123] Steps:   7%|▋         | 1674/24850 [32:31<9:25:51,  1.46s/it, lr=7e-5, step_loss=0.123]Steps:   7%|▋         | 1674/24850 [32:31<9:25:51,  1.46s/it, lr=7e-5, step_loss=0.0238]Steps:   7%|▋         | 1675/24850 [32:32<9:25:49,  1.46s/it, lr=7e-5, step_loss=0.0238]Steps:   7%|▋         | 1675/24850 [32:32<9:25:49,  1.46s/it, lr=7e-5, step_loss=0.214] Steps:   7%|▋         | 1676/24850 [32:34<9:26:21,  1.47s/it, lr=7e-5, step_loss=0.214]Steps:   7%|▋         | 1676/24850 [32:34<9:26:21,  1.47s/it, lr=7e-5, step_loss=0.00782]Steps:   7%|▋         | 1677/24850 [32:35<9:27:04,  1.47s/it, lr=7e-5, step_loss=0.00782]Steps:   7%|▋         | 1677/24850 [32:35<9:27:04,  1.47s/it, lr=7e-5, step_loss=0.00486]Steps:   7%|▋         | 1678/24850 [32:37<9:26:47,  1.47s/it, lr=7e-5, step_loss=0.00486]Steps:   7%|▋         | 1678/24850 [32:37<9:26:47,  1.47s/it, lr=7e-5, step_loss=0.068]  Steps:   7%|▋         | 1679/24850 [32:38<9:26:51,  1.47s/it, lr=7e-5, step_loss=0.068]Steps:   7%|▋         | 1679/24850 [32:38<9:26:51,  1.47s/it, lr=7e-5, step_loss=0.0302]Steps:   7%|▋         | 1680/24850 [32:39<9:25:51,  1.47s/it, lr=7e-5, step_loss=0.0302]Steps:   7%|▋         | 1680/24850 [32:39<9:25:51,  1.47s/it, lr=7e-5, step_loss=0.00372]Steps:   7%|▋         | 1681/24850 [32:41<9:24:50,  1.46s/it, lr=7e-5, step_loss=0.00372]Steps:   7%|▋         | 1681/24850 [32:41<9:24:50,  1.46s/it, lr=7e-5, step_loss=0.0212] Steps:   7%|▋         | 1682/24850 [32:42<9:30:11,  1.48s/it, lr=7e-5, step_loss=0.0212]Steps:   7%|▋         | 1682/24850 [32:42<9:30:11,  1.48s/it, lr=7e-5, step_loss=0.0637]Steps:   7%|▋         | 1683/24850 [32:44<9:35:13,  1.49s/it, lr=7e-5, step_loss=0.0637]Steps:   7%|▋         | 1683/24850 [32:44<9:35:13,  1.49s/it, lr=7e-5, step_loss=0.109] Steps:   7%|▋         | 1684/24850 [32:45<9:33:12,  1.48s/it, lr=7e-5, step_loss=0.109]Steps:   7%|▋         | 1684/24850 [32:45<9:33:12,  1.48s/it, lr=7e-5, step_loss=0.0455]torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:   7%|▋         | 1685/24850 [32:47<9:33:17,  1.48s/it, lr=7e-5, step_loss=0.0455]Steps:   7%|▋         | 1685/24850 [32:47<9:33:17,  1.48s/it, lr=7e-5, step_loss=0.0384]Steps:   7%|▋         | 1686/24850 [32:48<9:30:48,  1.48s/it, lr=7e-5, step_loss=0.0384]Steps:   7%|▋         | 1686/24850 [32:48<9:30:48,  1.48s/it, lr=7e-5, step_loss=0.229] Steps:   7%|▋         | 1687/24850 [32:50<9:30:29,  1.48s/it, lr=7e-5, step_loss=0.229]Steps:   7%|▋         | 1687/24850 [32:50<9:30:29,  1.48s/it, lr=7e-5, step_loss=0.0672]Steps:   7%|▋         | 1688/24850 [32:51<9:28:55,  1.47s/it, lr=7e-5, step_loss=0.0672]Steps:   7%|▋         | 1688/24850 [32:51<9:28:55,  1.47s/it, lr=7e-5, step_loss=0.0187]Steps:   7%|▋         | 1689/24850 [32:53<9:31:16,  1.48s/it, lr=7e-5, step_loss=0.0187]Steps:   7%|▋         | 1689/24850 [32:53<9:31:16,  1.48s/it, lr=7e-5, step_loss=0.00445]Steps:   7%|▋         | 1690/24850 [32:54<9:35:02,  1.49s/it, lr=7e-5, step_loss=0.00445]Steps:   7%|▋         | 1690/24850 [32:54<9:35:02,  1.49s/it, lr=7e-5, step_loss=0.0308] Steps:   7%|▋         | 1691/24850 [32:56<9:33:27,  1.49s/it, lr=7e-5, step_loss=0.0308]Steps:   7%|▋         | 1691/24850 [32:56<9:33:27,  1.49s/it, lr=7e-5, step_loss=0.066] Steps:   7%|▋         | 1692/24850 [32:57<9:31:49,  1.48s/it, lr=7e-5, step_loss=0.066]Steps:   7%|▋         | 1692/24850 [32:57<9:31:49,  1.48s/it, lr=7e-5, step_loss=0.00694]Steps:   7%|▋         | 1693/24850 [32:59<9:30:52,  1.48s/it, lr=7e-5, step_loss=0.00694]Steps:   7%|▋         | 1693/24850 [32:59<9:30:52,  1.48s/it, lr=7e-5, step_loss=0.0267] Steps:   7%|▋         | 1694/24850 [33:00<9:31:28,  1.48s/it, lr=7e-5, step_loss=0.0267]Steps:   7%|▋         | 1694/24850 [33:00<9:31:28,  1.48s/it, lr=7e-5, step_loss=0.0286]Steps:   7%|▋         | 1695/24850 [33:02<9:30:26,  1.48s/it, lr=7e-5, step_loss=0.0286]Steps:   7%|▋         | 1695/24850 [33:02<9:30:26,  1.48s/it, lr=7e-5, step_loss=0.000541]Steps:   7%|▋         | 1696/24850 [33:03<9:28:59,  1.47s/it, lr=7e-5, step_loss=0.000541]Steps:   7%|▋         | 1696/24850 [33:03<9:28:59,  1.47s/it, lr=7e-5, step_loss=0.0455]  Steps:   7%|▋         | 1697/24850 [33:06<11:25:54,  1.78s/it, lr=7e-5, step_loss=0.0455]Steps:   7%|▋         | 1697/24850 [33:06<11:25:54,  1.78s/it, lr=7e-5, step_loss=0.0337]Steps:   7%|▋         | 1698/24850 [33:07<10:50:10,  1.68s/it, lr=7e-5, step_loss=0.0337]Steps:   7%|▋         | 1698/24850 [33:07<10:50:10,  1.68s/it, lr=7e-5, step_loss=0.0339]Steps:   7%|▋         | 1699/24850 [33:09<10:24:56,  1.62s/it, lr=7e-5, step_loss=0.0339]Steps:   7%|▋         | 1699/24850 [33:09<10:24:56,  1.62s/it, lr=7e-5, step_loss=0.0165]Steps:   7%|▋         | 1700/24850 [33:10<10:07:42,  1.58s/it, lr=7e-5, step_loss=0.0165]Steps:   7%|▋         | 1700/24850 [33:10<10:07:42,  1.58s/it, lr=7e-5, step_loss=0.036] Steps:   7%|▋         | 1701/24850 [33:12<9:55:50,  1.54s/it, lr=7e-5, step_loss=0.036] Steps:   7%|▋         | 1701/24850 [33:12<9:55:50,  1.54s/it, lr=7e-5, step_loss=0.0151]Steps:   7%|▋         | 1702/24850 [33:13<9:45:35,  1.52s/it, lr=7e-5, step_loss=0.0151]Steps:   7%|▋         | 1702/24850 [33:13<9:45:35,  1.52s/it, lr=7e-5, step_loss=0.0364]Steps:   7%|▋         | 1703/24850 [33:14<9:40:15,  1.50s/it, lr=7e-5, step_loss=0.0364]Steps:   7%|▋         | 1703/24850 [33:14<9:40:15,  1.50s/it, lr=7e-5, step_loss=0.0869]Steps:   7%|▋         | 1704/24850 [33:16<9:37:14,  1.50s/it, lr=7e-5, step_loss=0.0869]Steps:   7%|▋         | 1704/24850 [33:16<9:37:14,  1.50s/it, lr=7e-5, step_loss=0.244] Steps:   7%|▋         | 1705/24850 [33:17<9:35:00,  1.49s/it, lr=7e-5, step_loss=0.244]Steps:   7%|▋         | 1705/24850 [33:17<9:35:00,  1.49s/it, lr=7e-5, step_loss=0.00876]Steps:   7%|▋         | 1706/24850 [33:19<9:30:41,  1.48s/it, lr=7e-5, step_loss=0.00876]Steps:   7%|▋         | 1706/24850 [33:19<9:30:41,  1.48s/it, lr=7e-5, step_loss=0.0113] Steps:   7%|▋         | 1707/24850 [33:20<9:29:17,  1.48s/it, lr=7e-5, step_loss=0.0113]Steps:   7%|▋         | 1707/24850 [33:20<9:29:17,  1.48s/it, lr=7e-5, step_loss=0.14]  Steps:   7%|▋         | 1708/24850 [33:22<9:26:01,  1.47s/it, lr=7e-5, step_loss=0.14]Steps:   7%|▋         | 1708/24850 [33:22<9:26:01,  1.47s/it, lr=7e-5, step_loss=0.0159]Steps:   7%|▋         | 1709/24850 [33:23<9:25:00,  1.46s/it, lr=7e-5, step_loss=0.0159]Steps:   7%|▋         | 1709/24850 [33:23<9:25:00,  1.46s/it, lr=7e-5, step_loss=0.0254]Steps:   7%|▋         | 1710/24850 [33:25<9:25:30,  1.47s/it, lr=7e-5, step_loss=0.0254]Steps:   7%|▋         | 1710/24850 [33:25<9:25:30,  1.47s/it, lr=7e-5, step_loss=0.0133]Steps:   7%|▋         | 1711/24850 [33:26<9:27:15,  1.47s/it, lr=7e-5, step_loss=0.0133]Steps:   7%|▋         | 1711/24850 [33:26<9:27:15,  1.47s/it, lr=7e-5, step_loss=0.0265]Steps:   7%|▋         | 1712/24850 [33:28<9:27:16,  1.47s/it, lr=7e-5, step_loss=0.0265]Steps:   7%|▋         | 1712/24850 [33:28<9:27:16,  1.47s/it, lr=7e-5, step_loss=0.026] torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
Steps:   7%|▋         | 1713/24850 [33:29<9:27:32,  1.47s/it, lr=7e-5, step_loss=0.026]Steps:   7%|▋         | 1713/24850 [33:29<9:27:32,  1.47s/it, lr=7e-5, step_loss=0.00794]Steps:   7%|▋         | 1714/24850 [33:31<9:26:55,  1.47s/it, lr=7e-5, step_loss=0.00794]Steps:   7%|▋         | 1714/24850 [33:31<9:26:55,  1.47s/it, lr=7e-5, step_loss=0.0461] Steps:   7%|▋         | 1715/24850 [33:32<9:26:16,  1.47s/it, lr=7e-5, step_loss=0.0461]Steps:   7%|▋         | 1715/24850 [33:32<9:26:16,  1.47s/it, lr=7e-5, step_loss=0.0302]Steps:   7%|▋         | 1716/24850 [33:34<9:25:53,  1.47s/it, lr=7e-5, step_loss=0.0302]Steps:   7%|▋         | 1716/24850 [33:34<9:25:53,  1.47s/it, lr=7e-5, step_loss=0.0198]Steps:   7%|▋         | 1717/24850 [33:35<9:29:12,  1.48s/it, lr=7e-5, step_loss=0.0198]Steps:   7%|▋         | 1717/24850 [33:35<9:29:12,  1.48s/it, lr=7e-5, step_loss=0.0917]Steps:   7%|▋         | 1718/24850 [33:36<9:28:55,  1.48s/it, lr=7e-5, step_loss=0.0917]Steps:   7%|▋         | 1718/24850 [33:36<9:28:55,  1.48s/it, lr=7e-5, step_loss=0.00551]Steps:   7%|▋         | 1719/24850 [33:38<9:27:01,  1.47s/it, lr=7e-5, step_loss=0.00551]Steps:   7%|▋         | 1719/24850 [33:38<9:27:01,  1.47s/it, lr=7e-5, step_loss=0.0011] Steps:   7%|▋         | 1720/24850 [33:39<9:28:20,  1.47s/it, lr=7e-5, step_loss=0.0011]Steps:   7%|▋         | 1720/24850 [33:39<9:28:20,  1.47s/it, lr=7e-5, step_loss=0.0172]Steps:   7%|▋         | 1721/24850 [33:41<9:27:18,  1.47s/it, lr=7e-5, step_loss=0.0172]Steps:   7%|▋         | 1721/24850 [33:41<9:27:18,  1.47s/it, lr=7e-5, step_loss=0.0398]Steps:   7%|▋         | 1722/24850 [33:43<9:43:42,  1.51s/it, lr=7e-5, step_loss=0.0398]Steps:   7%|▋         | 1722/24850 [33:43<9:43:42,  1.51s/it, lr=7e-5, step_loss=0.144] Steps:   7%|▋         | 1723/24850 [33:44<9:48:50,  1.53s/it, lr=7e-5, step_loss=0.144]Steps:   7%|▋         | 1723/24850 [33:44<9:48:50,  1.53s/it, lr=7e-5, step_loss=0.0371]Steps:   7%|▋         | 1724/24850 [33:46<9:44:17,  1.52s/it, lr=7e-5, step_loss=0.0371]Steps:   7%|▋         | 1724/24850 [33:46<9:44:17,  1.52s/it, lr=7e-5, step_loss=0.0824]Steps:   7%|▋         | 1725/24850 [33:47<9:38:17,  1.50s/it, lr=7e-5, step_loss=0.0824]Steps:   7%|▋         | 1725/24850 [33:47<9:38:17,  1.50s/it, lr=7e-5, step_loss=0.0694]Steps:   7%|▋         | 1726/24850 [33:49<9:34:46,  1.49s/it, lr=7e-5, step_loss=0.0694]Steps:   7%|▋         | 1726/24850 [33:49<9:34:46,  1.49s/it, lr=7e-5, step_loss=0.0646]Steps:   7%|▋         | 1727/24850 [33:50<9:31:35,  1.48s/it, lr=7e-5, step_loss=0.0646]Steps:   7%|▋         | 1727/24850 [33:50<9:31:35,  1.48s/it, lr=7e-5, step_loss=0.0042]Steps:   7%|▋         | 1728/24850 [33:51<9:31:16,  1.48s/it, lr=7e-5, step_loss=0.0042]Steps:   7%|▋         | 1728/24850 [33:51<9:31:16,  1.48s/it, lr=7e-5, step_loss=0.0612]Steps:   7%|▋         | 1729/24850 [33:53<9:31:57,  1.48s/it, lr=7e-5, step_loss=0.0612]Steps:   7%|▋         | 1729/24850 [33:53<9:31:57,  1.48s/it, lr=7e-5, step_loss=0.0368]Steps:   7%|▋         | 1730/24850 [33:54<9:33:12,  1.49s/it, lr=7e-5, step_loss=0.0368]Steps:   7%|▋         | 1730/24850 [33:54<9:33:12,  1.49s/it, lr=7e-5, step_loss=0.059] Steps:   7%|▋         | 1731/24850 [33:56<9:33:48,  1.49s/it, lr=7e-5, step_loss=0.059]Steps:   7%|▋         | 1731/24850 [33:56<9:33:48,  1.49s/it, lr=7e-5, step_loss=0.00632]Steps:   7%|▋         | 1732/24850 [33:57<9:34:50,  1.49s/it, lr=7e-5, step_loss=0.00632]Steps:   7%|▋         | 1732/24850 [33:57<9:34:50,  1.49s/it, lr=7e-5, step_loss=0.0402] Steps:   7%|▋         | 1733/24850 [33:59<9:32:46,  1.49s/it, lr=7e-5, step_loss=0.0402]Steps:   7%|▋         | 1733/24850 [33:59<9:32:46,  1.49s/it, lr=7e-5, step_loss=0.0572]Steps:   7%|▋         | 1734/24850 [34:00<9:31:04,  1.48s/it, lr=7e-5, step_loss=0.0572]Steps:   7%|▋         | 1734/24850 [34:00<9:31:04,  1.48s/it, lr=7e-5, step_loss=0.00339]Steps:   7%|▋         | 1735/24850 [34:02<9:29:58,  1.48s/it, lr=7e-5, step_loss=0.00339]Steps:   7%|▋         | 1735/24850 [34:02<9:29:58,  1.48s/it, lr=7e-5, step_loss=0.0506] Steps:   7%|▋         | 1736/24850 [34:03<9:28:23,  1.48s/it, lr=7e-5, step_loss=0.0506]Steps:   7%|▋         | 1736/24850 [34:03<9:28:23,  1.48s/it, lr=7e-5, step_loss=0.00303]Steps:   7%|▋         | 1737/24850 [34:05<9:27:08,  1.47s/it, lr=7e-5, step_loss=0.00303]Steps:   7%|▋         | 1737/24850 [34:05<9:27:08,  1.47s/it, lr=7e-5, step_loss=0.00646]Steps:   7%|▋         | 1738/24850 [34:06<9:28:02,  1.47s/it, lr=7e-5, step_loss=0.00646]Steps:   7%|▋         | 1738/24850 [34:06<9:28:02,  1.47s/it, lr=7e-5, step_loss=0.0695] Steps:   7%|▋         | 1739/24850 [34:08<9:28:12,  1.48s/it, lr=7e-5, step_loss=0.0695]Steps:   7%|▋         | 1739/24850 [34:08<9:28:12,  1.48s/it, lr=7e-5, step_loss=0.0183](512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512)Steps:   7%|▋         | 1740/24850 [34:09<9:27:41,  1.47s/it, lr=7e-5, step_loss=0.0183]Steps:   7%|▋         | 1740/24850 [34:09<9:27:41,  1.47s/it, lr=7e-5, step_loss=0.0242]Steps:   7%|▋         | 1741/24850 [34:11<9:26:01,  1.47s/it, lr=7e-5, step_loss=0.0242]Steps:   7%|▋         | 1741/24850 [34:11<9:26:01,  1.47s/it, lr=7e-5, step_loss=0.0532]Steps:   7%|▋         | 1742/24850 [34:12<9:23:29,  1.46s/it, lr=7e-5, step_loss=0.0532]Steps:   7%|▋         | 1742/24850 [34:12<9:23:29,  1.46s/it, lr=7e-5, step_loss=0.000156]Steps:   7%|▋         | 1743/24850 [34:14<9:25:08,  1.47s/it, lr=7e-5, step_loss=0.000156]Steps:   7%|▋         | 1743/24850 [34:14<9:25:08,  1.47s/it, lr=7e-5, step_loss=0.058]   Steps:   7%|▋         | 1744/24850 [34:15<9:32:01,  1.49s/it, lr=7e-5, step_loss=0.058]Steps:   7%|▋         | 1744/24850 [34:15<9:32:01,  1.49s/it, lr=7e-5, step_loss=0.0923]Steps:   7%|▋         | 1745/24850 [34:17<9:31:09,  1.48s/it, lr=7e-5, step_loss=0.0923]Steps:   7%|▋         | 1745/24850 [34:17<9:31:09,  1.48s/it, lr=7e-5, step_loss=0.0303]Steps:   7%|▋         | 1746/24850 [34:18<9:30:56,  1.48s/it, lr=7e-5, step_loss=0.0303]Steps:   7%|▋         | 1746/24850 [34:18<9:30:56,  1.48s/it, lr=7e-5, step_loss=0.0223]Steps:   7%|▋         | 1747/24850 [34:20<11:15:01,  1.75s/it, lr=7e-5, step_loss=0.0223]Steps:   7%|▋         | 1747/24850 [34:20<11:15:01,  1.75s/it, lr=7e-5, step_loss=0.00566]Steps:   7%|▋         | 1748/24850 [34:22<10:41:09,  1.67s/it, lr=7e-5, step_loss=0.00566]Steps:   7%|▋         | 1748/24850 [34:22<10:41:09,  1.67s/it, lr=7e-5, step_loss=0.0389] Steps:   7%|▋         | 1749/24850 [34:23<10:17:46,  1.60s/it, lr=7e-5, step_loss=0.0389]Steps:   7%|▋         | 1749/24850 [34:23<10:17:46,  1.60s/it, lr=7e-5, step_loss=0.0932]Steps:   7%|▋         | 1750/24850 [34:25<10:00:30,  1.56s/it, lr=7e-5, step_loss=0.0932]Steps:   7%|▋         | 1750/24850 [34:25<10:00:30,  1.56s/it, lr=7e-5, step_loss=0.074] Steps:   7%|▋         | 1751/24850 [34:26<9:48:55,  1.53s/it, lr=7e-5, step_loss=0.074] Steps:   7%|▋         | 1751/24850 [34:26<9:48:55,  1.53s/it, lr=7e-5, step_loss=0.0156]Steps:   7%|▋         | 1752/24850 [34:28<9:41:11,  1.51s/it, lr=7e-5, step_loss=0.0156]Steps:   7%|▋         | 1752/24850 [34:28<9:41:11,  1.51s/it, lr=7e-5, step_loss=0.0207]Steps:   7%|▋         | 1753/24850 [34:29<9:37:14,  1.50s/it, lr=7e-5, step_loss=0.0207]Steps:   7%|▋         | 1753/24850 [34:29<9:37:14,  1.50s/it, lr=7e-5, step_loss=0.0384]Steps:   7%|▋         | 1754/24850 [34:31<9:33:39,  1.49s/it, lr=7e-5, step_loss=0.0384]Steps:   7%|▋         | 1754/24850 [34:31<9:33:39,  1.49s/it, lr=7e-5, step_loss=0.0414]Steps:   7%|▋         | 1755/24850 [34:32<9:30:17,  1.48s/it, lr=7e-5, step_loss=0.0414]Steps:   7%|▋         | 1755/24850 [34:32<9:30:17,  1.48s/it, lr=7e-5, step_loss=0.228] Steps:   7%|▋         | 1756/24850 [34:34<9:29:58,  1.48s/it, lr=7e-5, step_loss=0.228]Steps:   7%|▋         | 1756/24850 [34:34<9:29:58,  1.48s/it, lr=7e-5, step_loss=0.0484]Steps:   7%|▋         | 1757/24850 [34:35<9:27:19,  1.47s/it, lr=7e-5, step_loss=0.0484]Steps:   7%|▋         | 1757/24850 [34:35<9:27:19,  1.47s/it, lr=7e-5, step_loss=0.0667]Steps:   7%|▋         | 1758/24850 [34:37<9:25:20,  1.47s/it, lr=7e-5, step_loss=0.0667]Steps:   7%|▋         | 1758/24850 [34:37<9:25:20,  1.47s/it, lr=7e-5, step_loss=0.00474]Steps:   7%|▋         | 1759/24850 [34:38<9:24:33,  1.47s/it, lr=7e-5, step_loss=0.00474]Steps:   7%|▋         | 1759/24850 [34:38<9:24:33,  1.47s/it, lr=7e-5, step_loss=0.0797] Steps:   7%|▋         | 1760/24850 [34:39<9:24:16,  1.47s/it, lr=7e-5, step_loss=0.0797]Steps:   7%|▋         | 1760/24850 [34:39<9:24:16,  1.47s/it, lr=7e-5, step_loss=0.0327]Steps:   7%|▋         | 1761/24850 [34:41<9:23:48,  1.47s/it, lr=7e-5, step_loss=0.0327]Steps:   7%|▋         | 1761/24850 [34:41<9:23:48,  1.47s/it, lr=7e-5, step_loss=0.0265]Steps:   7%|▋         | 1762/24850 [34:42<9:26:55,  1.47s/it, lr=7e-5, step_loss=0.0265]Steps:   7%|▋         | 1762/24850 [34:42<9:26:55,  1.47s/it, lr=7e-5, step_loss=0.0104]Steps:   7%|▋         | 1763/24850 [34:44<9:27:24,  1.47s/it, lr=7e-5, step_loss=0.0104]Steps:   7%|▋         | 1763/24850 [34:44<9:27:24,  1.47s/it, lr=7e-5, step_loss=0.0516]Steps:   7%|▋         | 1764/24850 [34:45<9:29:19,  1.48s/it, lr=7e-5, step_loss=0.0516]Steps:   7%|▋         | 1764/24850 [34:45<9:29:19,  1.48s/it, lr=7e-5, step_loss=0.21]  Steps:   7%|▋         | 1765/24850 [34:47<9:27:15,  1.47s/it, lr=7e-5, step_loss=0.21]Steps:   7%|▋         | 1765/24850 [34:47<9:27:15,  1.47s/it, lr=7e-5, step_loss=0.00906]Steps:   7%|▋         | 1766/24850 [34:48<9:26:01,  1.47s/it, lr=7e-5, step_loss=0.00906]Steps:   7%|▋         | 1766/24850 [34:48<9:26:01,  1.47s/it, lr=7e-5, step_loss=0.00998] torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:   7%|▋         | 1767/24850 [34:50<9:25:50,  1.47s/it, lr=7e-5, step_loss=0.00998]Steps:   7%|▋         | 1767/24850 [34:50<9:25:50,  1.47s/it, lr=7e-5, step_loss=0.103]  Steps:   7%|▋         | 1768/24850 [34:51<9:24:24,  1.47s/it, lr=7e-5, step_loss=0.103]Steps:   7%|▋         | 1768/24850 [34:51<9:24:24,  1.47s/it, lr=7e-5, step_loss=0.00982]Steps:   7%|▋         | 1769/24850 [34:53<9:23:28,  1.46s/it, lr=7e-5, step_loss=0.00982]Steps:   7%|▋         | 1769/24850 [34:53<9:23:28,  1.46s/it, lr=7e-5, step_loss=0.0351] Steps:   7%|▋         | 1770/24850 [34:54<9:22:44,  1.46s/it, lr=7e-5, step_loss=0.0351]Steps:   7%|▋         | 1770/24850 [34:54<9:22:44,  1.46s/it, lr=7e-5, step_loss=0.0531]Steps:   7%|▋         | 1771/24850 [34:56<9:22:51,  1.46s/it, lr=7e-5, step_loss=0.0531]Steps:   7%|▋         | 1771/24850 [34:56<9:22:51,  1.46s/it, lr=7e-5, step_loss=0.0297]Steps:   7%|▋         | 1772/24850 [34:57<9:22:33,  1.46s/it, lr=7e-5, step_loss=0.0297]Steps:   7%|▋         | 1772/24850 [34:57<9:22:33,  1.46s/it, lr=7e-5, step_loss=0.0031]Steps:   7%|▋         | 1773/24850 [34:59<9:24:00,  1.47s/it, lr=7e-5, step_loss=0.0031]Steps:   7%|▋         | 1773/24850 [34:59<9:24:00,  1.47s/it, lr=7e-5, step_loss=0.0028]Steps:   7%|▋         | 1774/24850 [35:00<9:24:46,  1.47s/it, lr=7e-5, step_loss=0.0028]Steps:   7%|▋         | 1774/24850 [35:00<9:24:46,  1.47s/it, lr=7e-5, step_loss=0.0305]Steps:   7%|▋         | 1775/24850 [35:02<9:23:17,  1.46s/it, lr=7e-5, step_loss=0.0305]Steps:   7%|▋         | 1775/24850 [35:02<9:23:17,  1.46s/it, lr=7e-5, step_loss=0.0401]Steps:   7%|▋         | 1776/24850 [35:03<9:26:11,  1.47s/it, lr=7e-5, step_loss=0.0401]Steps:   7%|▋         | 1776/24850 [35:03<9:26:11,  1.47s/it, lr=7e-5, step_loss=0.0833]Steps:   7%|▋         | 1777/24850 [35:04<9:26:51,  1.47s/it, lr=7e-5, step_loss=0.0833]Steps:   7%|▋         | 1777/24850 [35:04<9:26:51,  1.47s/it, lr=7e-5, step_loss=0.0348]Steps:   7%|▋         | 1778/24850 [35:06<9:25:07,  1.47s/it, lr=7e-5, step_loss=0.0348]Steps:   7%|▋         | 1778/24850 [35:06<9:25:07,  1.47s/it, lr=7e-5, step_loss=0.00568]Steps:   7%|▋         | 1779/24850 [35:07<9:25:21,  1.47s/it, lr=7e-5, step_loss=0.00568]Steps:   7%|▋         | 1779/24850 [35:07<9:25:21,  1.47s/it, lr=7e-5, step_loss=0.0171] Steps:   7%|▋         | 1780/24850 [35:09<9:24:58,  1.47s/it, lr=7e-5, step_loss=0.0171]Steps:   7%|▋         | 1780/24850 [35:09<9:24:58,  1.47s/it, lr=7e-5, step_loss=0.0758]Steps:   7%|▋         | 1781/24850 [35:10<9:25:31,  1.47s/it, lr=7e-5, step_loss=0.0758]Steps:   7%|▋         | 1781/24850 [35:10<9:25:31,  1.47s/it, lr=7e-5, step_loss=0.0538]Steps:   7%|▋         | 1782/24850 [35:12<9:24:55,  1.47s/it, lr=7e-5, step_loss=0.0538]Steps:   7%|▋         | 1782/24850 [35:12<9:24:55,  1.47s/it, lr=7e-5, step_loss=0.0466]Steps:   7%|▋         | 1783/24850 [35:13<9:24:38,  1.47s/it, lr=7e-5, step_loss=0.0466]Steps:   7%|▋         | 1783/24850 [35:13<9:24:38,  1.47s/it, lr=7e-5, step_loss=0.0926]Steps:   7%|▋         | 1784/24850 [35:15<9:23:46,  1.47s/it, lr=7e-5, step_loss=0.0926]Steps:   7%|▋         | 1784/24850 [35:15<9:23:46,  1.47s/it, lr=7e-5, step_loss=0.0258]Steps:   7%|▋         | 1785/24850 [35:16<9:23:08,  1.46s/it, lr=7e-5, step_loss=0.0258]Steps:   7%|▋         | 1785/24850 [35:16<9:23:08,  1.46s/it, lr=7e-5, step_loss=0.00195]Steps:   7%|▋         | 1786/24850 [35:18<9:24:08,  1.47s/it, lr=7e-5, step_loss=0.00195]Steps:   7%|▋         | 1786/24850 [35:18<9:24:08,  1.47s/it, lr=7e-5, step_loss=0.0304] Steps:   7%|▋         | 1787/24850 [35:19<9:22:17,  1.46s/it, lr=7e-5, step_loss=0.0304]Steps:   7%|▋         | 1787/24850 [35:19<9:22:17,  1.46s/it, lr=7e-5, step_loss=0.0109]Steps:   7%|▋         | 1788/24850 [35:21<9:22:08,  1.46s/it, lr=7e-5, step_loss=0.0109]Steps:   7%|▋         | 1788/24850 [35:21<9:22:08,  1.46s/it, lr=7e-5, step_loss=0.014] Steps:   7%|▋         | 1789/24850 [35:22<9:22:56,  1.46s/it, lr=7e-5, step_loss=0.014]Steps:   7%|▋         | 1789/24850 [35:22<9:22:56,  1.46s/it, lr=7e-5, step_loss=0.104]Steps:   7%|▋         | 1790/24850 [35:24<9:22:13,  1.46s/it, lr=7e-5, step_loss=0.104]Steps:   7%|▋         | 1790/24850 [35:24<9:22:13,  1.46s/it, lr=7e-5, step_loss=0.0123]Steps:   7%|▋         | 1791/24850 [35:25<9:23:30,  1.47s/it, lr=7e-5, step_loss=0.0123]Steps:   7%|▋         | 1791/24850 [35:25<9:23:30,  1.47s/it, lr=7e-5, step_loss=0.0521]Steps:   7%|▋         | 1792/24850 [35:26<9:23:33,  1.47s/it, lr=7e-5, step_loss=0.0521]Steps:   7%|▋         | 1792/24850 [35:26<9:23:33,  1.47s/it, lr=7e-5, step_loss=0.0261]Steps:   7%|▋         | 1793/24850 [35:28<9:24:01,  1.47s/it, lr=7e-5, step_loss=0.0261]Steps:   7%|▋         | 1793/24850 [35:28<9:24:01,  1.47s/it, lr=7e-5, step_loss=0.0156]torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  Steps:   7%|▋         | 1794/24850 [35:29<9:23:50,  1.47s/it, lr=7e-5, step_loss=0.0156]Steps:   7%|▋         | 1794/24850 [35:29<9:23:50,  1.47s/it, lr=7e-5, step_loss=0.188] Steps:   7%|▋         | 1795/24850 [35:31<9:23:40,  1.47s/it, lr=7e-5, step_loss=0.188]Steps:   7%|▋         | 1795/24850 [35:31<9:23:40,  1.47s/it, lr=7e-5, step_loss=0.0188]Steps:   7%|▋         | 1796/24850 [35:32<9:23:03,  1.47s/it, lr=7e-5, step_loss=0.0188]Steps:   7%|▋         | 1796/24850 [35:32<9:23:03,  1.47s/it, lr=7e-5, step_loss=0.00335]Steps:   7%|▋         | 1797/24850 [35:35<11:07:07,  1.74s/it, lr=7e-5, step_loss=0.00335]Steps:   7%|▋         | 1797/24850 [35:35<11:07:07,  1.74s/it, lr=7e-5, step_loss=0.00422]Steps:   7%|▋         | 1798/24850 [35:36<10:34:24,  1.65s/it, lr=7e-5, step_loss=0.00422]Steps:   7%|▋         | 1798/24850 [35:36<10:34:24,  1.65s/it, lr=7e-5, step_loss=0.007]  Steps:   7%|▋         | 1799/24850 [35:38<10:11:55,  1.59s/it, lr=7e-5, step_loss=0.007]Steps:   7%|▋         | 1799/24850 [35:38<10:11:55,  1.59s/it, lr=7e-5, step_loss=0.0301]Steps:   7%|▋         | 1800/24850 [35:39<9:57:36,  1.56s/it, lr=7e-5, step_loss=0.0301] Steps:   7%|▋         | 1800/24850 [35:39<9:57:36,  1.56s/it, lr=7e-5, step_loss=0.029] Steps:   7%|▋         | 1801/24850 [35:41<9:48:06,  1.53s/it, lr=7e-5, step_loss=0.029]Steps:   7%|▋         | 1801/24850 [35:41<9:48:06,  1.53s/it, lr=7e-5, step_loss=0.077]Steps:   7%|▋         | 1802/24850 [35:42<9:40:26,  1.51s/it, lr=7e-5, step_loss=0.077]Steps:   7%|▋         | 1802/24850 [35:42<9:40:26,  1.51s/it, lr=7e-5, step_loss=0.0125]Steps:   7%|▋         | 1803/24850 [35:47<16:31:15,  2.58s/it, lr=7e-5, step_loss=0.0125]Steps:   7%|▋         | 1803/24850 [35:47<16:31:15,  2.58s/it, lr=7e-5, step_loss=0.0121]Steps:   7%|▋         | 1804/24850 [35:49<15:17:07,  2.39s/it, lr=7e-5, step_loss=0.0121]Steps:   7%|▋         | 1804/24850 [35:49<15:17:07,  2.39s/it, lr=7e-5, step_loss=0.00362]Steps:   7%|▋         | 1805/24850 [35:51<13:52:41,  2.17s/it, lr=7e-5, step_loss=0.00362]Steps:   7%|▋         | 1805/24850 [35:51<13:52:41,  2.17s/it, lr=7e-5, step_loss=0.0463] Steps:   7%|▋         | 1806/24850 [35:52<12:37:06,  1.97s/it, lr=7e-5, step_loss=0.0463]Steps:   7%|▋         | 1806/24850 [35:52<12:37:06,  1.97s/it, lr=7e-5, step_loss=0.0351]Steps:   7%|▋         | 1807/24850 [35:54<11:39:49,  1.82s/it, lr=7e-5, step_loss=0.0351]Steps:   7%|▋         | 1807/24850 [35:54<11:39:49,  1.82s/it, lr=7e-5, step_loss=0.0332]Steps:   7%|▋         | 1808/24850 [35:55<10:58:59,  1.72s/it, lr=7e-5, step_loss=0.0332]Steps:   7%|▋         | 1808/24850 [35:55<10:58:59,  1.72s/it, lr=7e-5, step_loss=0.00498]Steps:   7%|▋         | 1809/24850 [35:57<10:31:01,  1.64s/it, lr=7e-5, step_loss=0.00498]Steps:   7%|▋         | 1809/24850 [35:57<10:31:01,  1.64s/it, lr=7e-5, step_loss=0.0308] Steps:   7%|▋         | 1810/24850 [35:58<10:32:18,  1.65s/it, lr=7e-5, step_loss=0.0308]Steps:   7%|▋         | 1810/24850 [35:58<10:32:18,  1.65s/it, lr=7e-5, step_loss=0.00546]Steps:   7%|▋         | 1811/24850 [36:00<10:11:48,  1.59s/it, lr=7e-5, step_loss=0.00546]Steps:   7%|▋         | 1811/24850 [36:00<10:11:48,  1.59s/it, lr=7e-5, step_loss=0.00399]Steps:   7%|▋         | 1812/24850 [36:01<9:56:23,  1.55s/it, lr=7e-5, step_loss=0.00399] Steps:   7%|▋         | 1812/24850 [36:01<9:56:23,  1.55s/it, lr=7e-5, step_loss=0.142]  Steps:   7%|▋         | 1813/24850 [36:03<9:47:38,  1.53s/it, lr=7e-5, step_loss=0.142]Steps:   7%|▋         | 1813/24850 [36:03<9:47:38,  1.53s/it, lr=7e-5, step_loss=0.00122]Steps:   7%|▋         | 1814/24850 [36:04<9:40:01,  1.51s/it, lr=7e-5, step_loss=0.00122]Steps:   7%|▋         | 1814/24850 [36:04<9:40:01,  1.51s/it, lr=7e-5, step_loss=0.0173] Steps:   7%|▋         | 1815/24850 [36:06<9:39:22,  1.51s/it, lr=7e-5, step_loss=0.0173]Steps:   7%|▋         | 1815/24850 [36:06<9:39:22,  1.51s/it, lr=7e-5, step_loss=0.00158]Steps:   7%|▋         | 1816/24850 [36:07<9:36:15,  1.50s/it, lr=7e-5, step_loss=0.00158]Steps:   7%|▋         | 1816/24850 [36:07<9:36:15,  1.50s/it, lr=7e-5, step_loss=0.0935] Steps:   7%|▋         | 1817/24850 [36:09<9:32:05,  1.49s/it, lr=7e-5, step_loss=0.0935]Steps:   7%|▋         | 1817/24850 [36:09<9:32:05,  1.49s/it, lr=7e-5, step_loss=0.0695]Steps:   7%|▋         | 1818/24850 [36:10<9:29:11,  1.48s/it, lr=7e-5, step_loss=0.0695]Steps:   7%|▋         | 1818/24850 [36:10<9:29:11,  1.48s/it, lr=7e-5, step_loss=0.0127]Steps:   7%|▋         | 1819/24850 [36:12<9:28:39,  1.48s/it, lr=7e-5, step_loss=0.0127]Steps:   7%|▋         | 1819/24850 [36:12<9:28:39,  1.48s/it, lr=7e-5, step_loss=0.0364]Steps:   7%|▋         | 1820/24850 [36:13<9:26:15,  1.48s/it, lr=7e-5, step_loss=0.0364]Steps:   7%|▋         | 1820/24850 [36:13<9:26:15,  1.48s/it, lr=7e-5, step_loss=0.0569]Steps:   7%|▋         | 1821/24850 [36:14<9:25:02,  1.47s/it, lr=7e-5, step_loss=0.0569]Steps:   7%|▋         | 1821/24850 [36:14<9:25:02,  1.47s/it, lr=7e-5, step_loss=0.0227]mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:   7%|▋         | 1822/24850 [36:16<9:23:57,  1.47s/it, lr=7e-5, step_loss=0.0227]Steps:   7%|▋         | 1822/24850 [36:16<9:23:57,  1.47s/it, lr=7e-5, step_loss=0.0175]Steps:   7%|▋         | 1823/24850 [36:17<9:22:39,  1.47s/it, lr=7e-5, step_loss=0.0175]Steps:   7%|▋         | 1823/24850 [36:17<9:22:39,  1.47s/it, lr=7e-5, step_loss=0.00377]Steps:   7%|▋         | 1824/24850 [36:19<9:21:47,  1.46s/it, lr=7e-5, step_loss=0.00377]Steps:   7%|▋         | 1824/24850 [36:19<9:21:47,  1.46s/it, lr=7e-5, step_loss=0.00465]Steps:   7%|▋         | 1825/24850 [36:20<9:21:32,  1.46s/it, lr=7e-5, step_loss=0.00465]Steps:   7%|▋         | 1825/24850 [36:20<9:21:32,  1.46s/it, lr=7e-5, step_loss=0.00425]Steps:   7%|▋         | 1826/24850 [36:22<9:20:59,  1.46s/it, lr=7e-5, step_loss=0.00425]Steps:   7%|▋         | 1826/24850 [36:22<9:20:59,  1.46s/it, lr=7e-5, step_loss=0.0354] Steps:   7%|▋         | 1827/24850 [36:23<9:20:04,  1.46s/it, lr=7e-5, step_loss=0.0354]Steps:   7%|▋         | 1827/24850 [36:23<9:20:04,  1.46s/it, lr=7e-5, step_loss=0.0227]Steps:   7%|▋         | 1828/24850 [36:25<9:19:02,  1.46s/it, lr=7e-5, step_loss=0.0227]Steps:   7%|▋         | 1828/24850 [36:25<9:19:02,  1.46s/it, lr=7e-5, step_loss=0.0307]Steps:   7%|▋         | 1829/24850 [36:26<9:20:14,  1.46s/it, lr=7e-5, step_loss=0.0307]Steps:   7%|▋         | 1829/24850 [36:26<9:20:14,  1.46s/it, lr=7e-5, step_loss=0.00739]Steps:   7%|▋         | 1830/24850 [36:28<9:19:16,  1.46s/it, lr=7e-5, step_loss=0.00739]Steps:   7%|▋         | 1830/24850 [36:28<9:19:16,  1.46s/it, lr=7e-5, step_loss=0.00374]Steps:   7%|▋         | 1831/24850 [36:29<9:19:34,  1.46s/it, lr=7e-5, step_loss=0.00374]Steps:   7%|▋         | 1831/24850 [36:29<9:19:34,  1.46s/it, lr=7e-5, step_loss=0.03]   Steps:   7%|▋         | 1832/24850 [36:30<9:18:15,  1.46s/it, lr=7e-5, step_loss=0.03]Steps:   7%|▋         | 1832/24850 [36:30<9:18:15,  1.46s/it, lr=7e-5, step_loss=0.0156]Steps:   7%|▋         | 1833/24850 [36:32<9:19:32,  1.46s/it, lr=7e-5, step_loss=0.0156]Steps:   7%|▋         | 1833/24850 [36:32<9:19:32,  1.46s/it, lr=7e-5, step_loss=0.0245]Steps:   7%|▋         | 1834/24850 [36:33<9:20:11,  1.46s/it, lr=7e-5, step_loss=0.0245]Steps:   7%|▋         | 1834/24850 [36:33<9:20:11,  1.46s/it, lr=7e-5, step_loss=0.0342]Steps:   7%|▋         | 1835/24850 [36:35<9:19:36,  1.46s/it, lr=7e-5, step_loss=0.0342]Steps:   7%|▋         | 1835/24850 [36:35<9:19:36,  1.46s/it, lr=7e-5, step_loss=0.0139]Steps:   7%|▋         | 1836/24850 [36:36<9:19:42,  1.46s/it, lr=7e-5, step_loss=0.0139]Steps:   7%|▋         | 1836/24850 [36:36<9:19:42,  1.46s/it, lr=7e-5, step_loss=0.0123]Steps:   7%|▋         | 1837/24850 [36:38<9:21:18,  1.46s/it, lr=7e-5, step_loss=0.0123]Steps:   7%|▋         | 1837/24850 [36:38<9:21:18,  1.46s/it, lr=7e-5, step_loss=0.0387]Steps:   7%|▋         | 1838/24850 [36:39<9:22:59,  1.47s/it, lr=7e-5, step_loss=0.0387]Steps:   7%|▋         | 1838/24850 [36:39<9:22:59,  1.47s/it, lr=7e-5, step_loss=0.0227]Steps:   7%|▋         | 1839/24850 [36:41<9:22:32,  1.47s/it, lr=7e-5, step_loss=0.0227]Steps:   7%|▋         | 1839/24850 [36:41<9:22:32,  1.47s/it, lr=7e-5, step_loss=0.00398]Steps:   7%|▋         | 1840/24850 [36:42<9:22:10,  1.47s/it, lr=7e-5, step_loss=0.00398]Steps:   7%|▋         | 1840/24850 [36:42<9:22:10,  1.47s/it, lr=7e-5, step_loss=0.00824]Steps:   7%|▋         | 1841/24850 [37:07<53:49:19,  8.42s/it, lr=7e-5, step_loss=0.00824]Steps:   7%|▋         | 1841/24850 [37:07<53:49:19,  8.42s/it, lr=7e-5, step_loss=0.0109] Steps:   7%|▋         | 1842/24850 [37:13<49:20:37,  7.72s/it, lr=7e-5, step_loss=0.0109]Steps:   7%|▋         | 1842/24850 [37:13<49:20:37,  7.72s/it, lr=7e-5, step_loss=0.0216]Steps:   7%|▋         | 1843/24850 [37:17<42:56:48,  6.72s/it, lr=7e-5, step_loss=0.0216]Steps:   7%|▋         | 1843/24850 [37:17<42:56:48,  6.72s/it, lr=7e-5, step_loss=0.0496]Steps:   7%|▋         | 1844/24850 [37:20<34:36:56,  5.42s/it, lr=7e-5, step_loss=0.0496]Steps:   7%|▋         | 1844/24850 [37:20<34:36:56,  5.42s/it, lr=7e-5, step_loss=0.0282]Steps:   7%|▋         | 1845/24850 [37:21<27:05:03,  4.24s/it, lr=7e-5, step_loss=0.0282]Steps:   7%|▋         | 1845/24850 [37:21<27:05:03,  4.24s/it, lr=7e-5, step_loss=0.148] Steps:   7%|▋         | 1846/24850 [37:23<21:57:22,  3.44s/it, lr=7e-5, step_loss=0.148]Steps:   7%|▋         | 1846/24850 [37:23<21:57:22,  3.44s/it, lr=7e-5, step_loss=0.00783]Steps:   7%|▋         | 1847/24850 [37:25<20:10:10,  3.16s/it, lr=7e-5, step_loss=0.00783]Steps:   7%|▋         | 1847/24850 [37:25<20:10:10,  3.16s/it, lr=7e-5, step_loss=0.0112] Steps:   7%|▋         | 1848/24850 [37:27<16:57:03,  2.65s/it, lr=7e-5, step_loss=0.0112]Steps:   7%|▋         | 1848/24850 [37:27<16:57:03,  2.65s/it, lr=7e-5, step_loss=0.00913]torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) Steps:   7%|▋         | 1849/24850 [37:28<14:41:41,  2.30s/it, lr=7e-5, step_loss=0.00913]Steps:   7%|▋         | 1849/24850 [37:28<14:41:41,  2.30s/it, lr=7e-5, step_loss=0.0126] Steps:   7%|▋         | 1850/24850 [37:30<13:04:54,  2.05s/it, lr=7e-5, step_loss=0.0126]Steps:   7%|▋         | 1850/24850 [37:30<13:04:54,  2.05s/it, lr=7e-5, step_loss=0.00292]Steps:   7%|▋         | 1851/24850 [37:31<11:57:42,  1.87s/it, lr=7e-5, step_loss=0.00292]Steps:   7%|▋         | 1851/24850 [37:31<11:57:42,  1.87s/it, lr=7e-5, step_loss=0.0262] Steps:   7%|▋         | 1852/24850 [37:33<11:10:58,  1.75s/it, lr=7e-5, step_loss=0.0262]Steps:   7%|▋         | 1852/24850 [37:33<11:10:58,  1.75s/it, lr=7e-5, step_loss=0.00867]Steps:   7%|▋         | 1853/24850 [37:34<10:38:51,  1.67s/it, lr=7e-5, step_loss=0.00867]Steps:   7%|▋         | 1853/24850 [37:34<10:38:51,  1.67s/it, lr=7e-5, step_loss=0.168]  Steps:   7%|▋         | 1854/24850 [37:36<10:15:09,  1.61s/it, lr=7e-5, step_loss=0.168]Steps:   7%|▋         | 1854/24850 [37:36<10:15:09,  1.61s/it, lr=7e-5, step_loss=0.164]Steps:   7%|▋         | 1855/24850 [37:37<9:58:54,  1.56s/it, lr=7e-5, step_loss=0.164] Steps:   7%|▋         | 1855/24850 [37:37<9:58:54,  1.56s/it, lr=7e-5, step_loss=0.036]Steps:   7%|▋         | 1856/24850 [37:38<9:48:00,  1.53s/it, lr=7e-5, step_loss=0.036]Steps:   7%|▋         | 1856/24850 [37:38<9:48:00,  1.53s/it, lr=7e-5, step_loss=0.00996]Steps:   7%|▋         | 1857/24850 [37:40<9:41:52,  1.52s/it, lr=7e-5, step_loss=0.00996]Steps:   7%|▋         | 1857/24850 [37:40<9:41:52,  1.52s/it, lr=7e-5, step_loss=0.0183] Steps:   7%|▋         | 1858/24850 [37:41<9:34:11,  1.50s/it, lr=7e-5, step_loss=0.0183]Steps:   7%|▋         | 1858/24850 [37:41<9:34:11,  1.50s/it, lr=7e-5, step_loss=0.0768]Steps:   7%|▋         | 1859/24850 [37:46<16:00:18,  2.51s/it, lr=7e-5, step_loss=0.0768]Steps:   7%|▋         | 1859/24850 [37:46<16:00:18,  2.51s/it, lr=7e-5, step_loss=0.0174]Steps:   7%|▋         | 1860/24850 [37:50<17:46:12,  2.78s/it, lr=7e-5, step_loss=0.0174]Steps:   7%|▋         | 1860/24850 [37:50<17:46:12,  2.78s/it, lr=7e-5, step_loss=0.0411]Steps:   7%|▋         | 1861/24850 [37:52<16:14:07,  2.54s/it, lr=7e-5, step_loss=0.0411]Steps:   7%|▋         | 1861/24850 [37:52<16:14:07,  2.54s/it, lr=7e-5, step_loss=0.0679]Steps:   7%|▋         | 1862/24850 [37:53<14:25:25,  2.26s/it, lr=7e-5, step_loss=0.0679]Steps:   7%|▋         | 1862/24850 [37:53<14:25:25,  2.26s/it, lr=7e-5, step_loss=0.0385]Steps:   7%|▋         | 1863/24850 [37:55<12:59:45,  2.04s/it, lr=7e-5, step_loss=0.0385]Steps:   7%|▋         | 1863/24850 [37:55<12:59:45,  2.04s/it, lr=7e-5, step_loss=0.00186]Steps:   8%|▊         | 1864/24850 [37:56<11:56:57,  1.87s/it, lr=7e-5, step_loss=0.00186]Steps:   8%|▊         | 1864/24850 [37:56<11:56:57,  1.87s/it, lr=7e-5, step_loss=0.0172] Steps:   8%|▊         | 1865/24850 [37:58<11:10:20,  1.75s/it, lr=7e-5, step_loss=0.0172]Steps:   8%|▊         | 1865/24850 [37:58<11:10:20,  1.75s/it, lr=7e-5, step_loss=0.0477]Steps:   8%|▊         | 1866/24850 [37:59<10:38:00,  1.67s/it, lr=7e-5, step_loss=0.0477]Steps:   8%|▊         | 1866/24850 [37:59<10:38:00,  1.67s/it, lr=7e-5, step_loss=0.00854]Steps:   8%|▊         | 1867/24850 [38:01<10:13:54,  1.60s/it, lr=7e-5, step_loss=0.00854]Steps:   8%|▊         | 1867/24850 [38:01<10:13:54,  1.60s/it, lr=7e-5, step_loss=0.00872]Steps:   8%|▊         | 1868/24850 [38:02<9:58:23,  1.56s/it, lr=7e-5, step_loss=0.00872] Steps:   8%|▊         | 1868/24850 [38:02<9:58:23,  1.56s/it, lr=7e-5, step_loss=0.0176] Steps:   8%|▊         | 1869/24850 [38:04<9:47:42,  1.53s/it, lr=7e-5, step_loss=0.0176]Steps:   8%|▊         | 1869/24850 [38:04<9:47:42,  1.53s/it, lr=7e-5, step_loss=0.00771]Steps:   8%|▊         | 1870/24850 [38:05<9:40:10,  1.51s/it, lr=7e-5, step_loss=0.00771]Steps:   8%|▊         | 1870/24850 [38:05<9:40:10,  1.51s/it, lr=7e-5, step_loss=0.0105] Steps:   8%|▊         | 1871/24850 [38:07<9:33:09,  1.50s/it, lr=7e-5, step_loss=0.0105]Steps:   8%|▊         | 1871/24850 [38:07<9:33:09,  1.50s/it, lr=7e-5, step_loss=0.026] Steps:   8%|▊         | 1872/24850 [38:08<9:27:57,  1.48s/it, lr=7e-5, step_loss=0.026]Steps:   8%|▊         | 1872/24850 [38:08<9:27:57,  1.48s/it, lr=7e-5, step_loss=0.00822]Steps:   8%|▊         | 1873/24850 [38:09<9:26:27,  1.48s/it, lr=7e-5, step_loss=0.00822]Steps:   8%|▊         | 1873/24850 [38:09<9:26:27,  1.48s/it, lr=7e-5, step_loss=0.0735] Steps:   8%|▊         | 1874/24850 [38:11<9:23:35,  1.47s/it, lr=7e-5, step_loss=0.0735]Steps:   8%|▊         | 1874/24850 [38:11<9:23:35,  1.47s/it, lr=7e-5, step_loss=0.0751]Steps:   8%|▊         | 1875/24850 [38:12<9:21:59,  1.47s/it, lr=7e-5, step_loss=0.0751]Steps:   8%|▊         | 1875/24850 [38:12<9:21:59,  1.47s/it, lr=7e-5, step_loss=0.0511]torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:   8%|▊         | 1876/24850 [38:14<9:21:15,  1.47s/it, lr=7e-5, step_loss=0.0511]Steps:   8%|▊         | 1876/24850 [38:14<9:21:15,  1.47s/it, lr=7e-5, step_loss=0.0116]Steps:   8%|▊         | 1877/24850 [38:15<9:19:19,  1.46s/it, lr=7e-5, step_loss=0.0116]Steps:   8%|▊         | 1877/24850 [38:15<9:19:19,  1.46s/it, lr=7e-5, step_loss=0.0716]Steps:   8%|▊         | 1878/24850 [38:17<9:18:02,  1.46s/it, lr=7e-5, step_loss=0.0716]Steps:   8%|▊         | 1878/24850 [38:17<9:18:02,  1.46s/it, lr=7e-5, step_loss=0.012] Steps:   8%|▊         | 1879/24850 [38:18<9:18:11,  1.46s/it, lr=7e-5, step_loss=0.012]Steps:   8%|▊         | 1879/24850 [38:18<9:18:11,  1.46s/it, lr=7e-5, step_loss=0.0353]Steps:   8%|▊         | 1880/24850 [38:20<9:17:10,  1.46s/it, lr=7e-5, step_loss=0.0353]Steps:   8%|▊         | 1880/24850 [38:20<9:17:10,  1.46s/it, lr=7e-5, step_loss=0.00961]Steps:   8%|▊         | 1881/24850 [38:21<9:17:53,  1.46s/it, lr=7e-5, step_loss=0.00961]Steps:   8%|▊         | 1881/24850 [38:21<9:17:53,  1.46s/it, lr=7e-5, step_loss=0.0119] Steps:   8%|▊         | 1882/24850 [38:23<9:18:40,  1.46s/it, lr=7e-5, step_loss=0.0119]Steps:   8%|▊         | 1882/24850 [38:23<9:18:40,  1.46s/it, lr=7e-5, step_loss=0.019] Steps:   8%|▊         | 1883/24850 [38:24<9:19:17,  1.46s/it, lr=7e-5, step_loss=0.019]Steps:   8%|▊         | 1883/24850 [38:24<9:19:17,  1.46s/it, lr=7e-5, step_loss=0.00702]Steps:   8%|▊         | 1884/24850 [38:25<9:19:34,  1.46s/it, lr=7e-5, step_loss=0.00702]Steps:   8%|▊         | 1884/24850 [38:25<9:19:34,  1.46s/it, lr=7e-5, step_loss=0.0412] Steps:   8%|▊         | 1885/24850 [38:27<9:19:45,  1.46s/it, lr=7e-5, step_loss=0.0412]Steps:   8%|▊         | 1885/24850 [38:27<9:19:45,  1.46s/it, lr=7e-5, step_loss=0.00635]Steps:   8%|▊         | 1886/24850 [38:28<9:20:20,  1.46s/it, lr=7e-5, step_loss=0.00635]Steps:   8%|▊         | 1886/24850 [38:28<9:20:20,  1.46s/it, lr=7e-5, step_loss=0.0231] Steps:   8%|▊         | 1887/24850 [38:30<9:18:41,  1.46s/it, lr=7e-5, step_loss=0.0231]Steps:   8%|▊         | 1887/24850 [38:30<9:18:41,  1.46s/it, lr=7e-5, step_loss=0.0312]Steps:   8%|▊         | 1888/24850 [38:31<9:16:40,  1.45s/it, lr=7e-5, step_loss=0.0312]Steps:   8%|▊         | 1888/24850 [38:31<9:16:40,  1.45s/it, lr=7e-5, step_loss=0.0474]Steps:   8%|▊         | 1889/24850 [38:33<9:16:25,  1.45s/it, lr=7e-5, step_loss=0.0474]Steps:   8%|▊         | 1889/24850 [38:33<9:16:25,  1.45s/it, lr=7e-5, step_loss=0.0217]Steps:   8%|▊         | 1890/24850 [38:34<9:16:54,  1.46s/it, lr=7e-5, step_loss=0.0217]Steps:   8%|▊         | 1890/24850 [38:34<9:16:54,  1.46s/it, lr=7e-5, step_loss=0.0429]Steps:   8%|▊         | 1891/24850 [38:36<9:17:06,  1.46s/it, lr=7e-5, step_loss=0.0429]Steps:   8%|▊         | 1891/24850 [38:36<9:17:06,  1.46s/it, lr=7e-5, step_loss=0.0879]Steps:   8%|▊         | 1892/24850 [38:37<9:18:04,  1.46s/it, lr=7e-5, step_loss=0.0879]Steps:   8%|▊         | 1892/24850 [38:37<9:18:04,  1.46s/it, lr=7e-5, step_loss=0.0173]Steps:   8%|▊         | 1893/24850 [38:39<9:18:29,  1.46s/it, lr=7e-5, step_loss=0.0173]Steps:   8%|▊         | 1893/24850 [38:39<9:18:29,  1.46s/it, lr=7e-5, step_loss=0.0286]Steps:   8%|▊         | 1894/24850 [38:40<9:16:26,  1.45s/it, lr=7e-5, step_loss=0.0286]Steps:   8%|▊         | 1894/24850 [38:40<9:16:26,  1.45s/it, lr=7e-5, step_loss=0.0652]Steps:   8%|▊         | 1895/24850 [38:42<9:17:40,  1.46s/it, lr=7e-5, step_loss=0.0652]Steps:   8%|▊         | 1895/24850 [38:42<9:17:40,  1.46s/it, lr=7e-5, step_loss=0.0373]Steps:   8%|▊         | 1896/24850 [38:43<9:20:31,  1.47s/it, lr=7e-5, step_loss=0.0373]Steps:   8%|▊         | 1896/24850 [38:43<9:20:31,  1.47s/it, lr=7e-5, step_loss=0.0262]Steps:   8%|▊         | 1897/24850 [38:46<11:38:47,  1.83s/it, lr=7e-5, step_loss=0.0262]Steps:   8%|▊         | 1897/24850 [38:46<11:38:47,  1.83s/it, lr=7e-5, step_loss=0.0307]Steps:   8%|▊         | 1898/24850 [38:47<10:56:27,  1.72s/it, lr=7e-5, step_loss=0.0307]Steps:   8%|▊         | 1898/24850 [38:47<10:56:27,  1.72s/it, lr=7e-5, step_loss=0.0433]Steps:   8%|▊         | 1899/24850 [38:49<10:28:11,  1.64s/it, lr=7e-5, step_loss=0.0433]Steps:   8%|▊         | 1899/24850 [38:49<10:28:11,  1.64s/it, lr=7e-5, step_loss=0.0268]Steps:   8%|▊         | 1900/24850 [38:50<10:06:52,  1.59s/it, lr=7e-5, step_loss=0.0268]Steps:   8%|▊         | 1900/24850 [38:50<10:06:52,  1.59s/it, lr=7e-5, step_loss=0.00513]Steps:   8%|▊         | 1901/24850 [38:52<9:52:36,  1.55s/it, lr=7e-5, step_loss=0.00513] Steps:   8%|▊         | 1901/24850 [38:52<9:52:36,  1.55s/it, lr=7e-5, step_loss=0.0112] Steps:   8%|▊         | 1902/24850 [38:53<9:42:39,  1.52s/it, lr=7e-5, step_loss=0.0112]Steps:   8%|▊         | 1902/24850 [38:53<9:42:39,  1.52s/it, lr=7e-5, step_loss=0.121] Steps:   8%|▊         | 1903/24850 [38:54<9:37:03,  1.51s/it, lr=7e-5, step_loss=0.121]Steps:   8%|▊         | 1903/24850 [38:54<9:37:03,  1.51s/it, lr=7e-5, step_loss=0.006]torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
Steps:   8%|▊         | 1904/24850 [38:56<9:31:10,  1.49s/it, lr=7e-5, step_loss=0.006]Steps:   8%|▊         | 1904/24850 [38:56<9:31:10,  1.49s/it, lr=7e-5, step_loss=0.000983]Steps:   8%|▊         | 1905/24850 [38:57<9:27:28,  1.48s/it, lr=7e-5, step_loss=0.000983]Steps:   8%|▊         | 1905/24850 [38:57<9:27:28,  1.48s/it, lr=7e-5, step_loss=0.0157]  Steps:   8%|▊         | 1906/24850 [38:59<9:27:59,  1.49s/it, lr=7e-5, step_loss=0.0157]Steps:   8%|▊         | 1906/24850 [38:59<9:27:59,  1.49s/it, lr=7e-5, step_loss=0.00157]Steps:   8%|▊         | 1907/24850 [39:00<9:25:14,  1.48s/it, lr=7e-5, step_loss=0.00157]Steps:   8%|▊         | 1907/24850 [39:00<9:25:14,  1.48s/it, lr=7e-5, step_loss=0.00598]Steps:   8%|▊         | 1908/24850 [39:02<9:22:56,  1.47s/it, lr=7e-5, step_loss=0.00598]Steps:   8%|▊         | 1908/24850 [39:02<9:22:56,  1.47s/it, lr=7e-5, step_loss=0.0877] Steps:   8%|▊         | 1909/24850 [39:03<9:23:50,  1.47s/it, lr=7e-5, step_loss=0.0877]Steps:   8%|▊         | 1909/24850 [39:03<9:23:50,  1.47s/it, lr=7e-5, step_loss=0.026] Steps:   8%|▊         | 1910/24850 [39:05<9:23:06,  1.47s/it, lr=7e-5, step_loss=0.026]Steps:   8%|▊         | 1910/24850 [39:05<9:23:06,  1.47s/it, lr=7e-5, step_loss=0.11] Steps:   8%|▊         | 1911/24850 [39:06<9:23:08,  1.47s/it, lr=7e-5, step_loss=0.11]Steps:   8%|▊         | 1911/24850 [39:06<9:23:08,  1.47s/it, lr=7e-5, step_loss=0.0132]Steps:   8%|▊         | 1912/24850 [39:08<9:21:30,  1.47s/it, lr=7e-5, step_loss=0.0132]Steps:   8%|▊         | 1912/24850 [39:08<9:21:30,  1.47s/it, lr=7e-5, step_loss=0.133] Steps:   8%|▊         | 1913/24850 [39:09<9:20:38,  1.47s/it, lr=7e-5, step_loss=0.133]Steps:   8%|▊         | 1913/24850 [39:09<9:20:38,  1.47s/it, lr=7e-5, step_loss=0.0166]Steps:   8%|▊         | 1914/24850 [39:11<9:18:42,  1.46s/it, lr=7e-5, step_loss=0.0166]Steps:   8%|▊         | 1914/24850 [39:11<9:18:42,  1.46s/it, lr=7e-5, step_loss=0.00751]Steps:   8%|▊         | 1915/24850 [39:12<9:18:57,  1.46s/it, lr=7e-5, step_loss=0.00751]Steps:   8%|▊         | 1915/24850 [39:12<9:18:57,  1.46s/it, lr=7e-5, step_loss=0.00596]Steps:   8%|▊         | 1916/24850 [39:14<9:20:41,  1.47s/it, lr=7e-5, step_loss=0.00596]Steps:   8%|▊         | 1916/24850 [39:14<9:20:41,  1.47s/it, lr=7e-5, step_loss=0.0375] Steps:   8%|▊         | 1917/24850 [39:15<9:25:01,  1.48s/it, lr=7e-5, step_loss=0.0375]Steps:   8%|▊         | 1917/24850 [39:15<9:25:01,  1.48s/it, lr=7e-5, step_loss=0.0407]Steps:   8%|▊         | 1918/24850 [39:16<9:24:25,  1.48s/it, lr=7e-5, step_loss=0.0407]Steps:   8%|▊         | 1918/24850 [39:16<9:24:25,  1.48s/it, lr=7e-5, step_loss=0.0238]Steps:   8%|▊         | 1919/24850 [39:18<9:22:26,  1.47s/it, lr=7e-5, step_loss=0.0238]Steps:   8%|▊         | 1919/24850 [39:18<9:22:26,  1.47s/it, lr=7e-5, step_loss=0.0222]Steps:   8%|▊         | 1920/24850 [39:19<9:19:41,  1.46s/it, lr=7e-5, step_loss=0.0222]Steps:   8%|▊         | 1920/24850 [39:19<9:19:41,  1.46s/it, lr=7e-5, step_loss=0.023] Steps:   8%|▊         | 1921/24850 [39:21<9:19:15,  1.46s/it, lr=7e-5, step_loss=0.023]Steps:   8%|▊         | 1921/24850 [39:21<9:19:15,  1.46s/it, lr=7e-5, step_loss=0.0438]Steps:   8%|▊         | 1922/24850 [39:22<9:18:29,  1.46s/it, lr=7e-5, step_loss=0.0438]Steps:   8%|▊         | 1922/24850 [39:22<9:18:29,  1.46s/it, lr=7e-5, step_loss=0.0381]Steps:   8%|▊         | 1923/24850 [39:24<9:17:33,  1.46s/it, lr=7e-5, step_loss=0.0381]Steps:   8%|▊         | 1923/24850 [39:24<9:17:33,  1.46s/it, lr=7e-5, step_loss=0.0471]Steps:   8%|▊         | 1924/24850 [39:25<9:17:59,  1.46s/it, lr=7e-5, step_loss=0.0471]Steps:   8%|▊         | 1924/24850 [39:25<9:17:59,  1.46s/it, lr=7e-5, step_loss=0.00485]Steps:   8%|▊         | 1925/24850 [39:27<9:19:04,  1.46s/it, lr=7e-5, step_loss=0.00485]Steps:   8%|▊         | 1925/24850 [39:27<9:19:04,  1.46s/it, lr=7e-5, step_loss=0.244]  Steps:   8%|▊         | 1926/24850 [39:28<9:20:04,  1.47s/it, lr=7e-5, step_loss=0.244]Steps:   8%|▊         | 1926/24850 [39:28<9:20:04,  1.47s/it, lr=7e-5, step_loss=0.036]Steps:   8%|▊         | 1927/24850 [39:30<9:20:16,  1.47s/it, lr=7e-5, step_loss=0.036]Steps:   8%|▊         | 1927/24850 [39:30<9:20:16,  1.47s/it, lr=7e-5, step_loss=0.00252]Steps:   8%|▊         | 1928/24850 [39:31<9:20:16,  1.47s/it, lr=7e-5, step_loss=0.00252]Steps:   8%|▊         | 1928/24850 [39:31<9:20:16,  1.47s/it, lr=7e-5, step_loss=0.0209] Steps:   8%|▊         | 1929/24850 [39:33<9:18:31,  1.46s/it, lr=7e-5, step_loss=0.0209]Steps:   8%|▊         | 1929/24850 [39:33<9:18:31,  1.46s/it, lr=7e-5, step_loss=0.000902]Steps:   8%|▊         | 1930/24850 [39:34<9:18:58,  1.46s/it, lr=7e-5, step_loss=0.000902]Steps:   8%|▊         | 1930/24850 [39:34<9:18:58,  1.46s/it, lr=7e-5, step_loss=0.0359]  (512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512)Steps:   8%|▊         | 1931/24850 [39:35<9:18:45,  1.46s/it, lr=7e-5, step_loss=0.0359]Steps:   8%|▊         | 1931/24850 [39:35<9:18:45,  1.46s/it, lr=7e-5, step_loss=0.0131]Steps:   8%|▊         | 1932/24850 [39:37<9:17:36,  1.46s/it, lr=7e-5, step_loss=0.0131]Steps:   8%|▊         | 1932/24850 [39:37<9:17:36,  1.46s/it, lr=7e-5, step_loss=0.00208]Steps:   8%|▊         | 1933/24850 [39:38<9:16:42,  1.46s/it, lr=7e-5, step_loss=0.00208]Steps:   8%|▊         | 1933/24850 [39:38<9:16:42,  1.46s/it, lr=7e-5, step_loss=0.0167] Steps:   8%|▊         | 1934/24850 [39:40<9:15:30,  1.45s/it, lr=7e-5, step_loss=0.0167]Steps:   8%|▊         | 1934/24850 [39:40<9:15:30,  1.45s/it, lr=7e-5, step_loss=0.00728]Steps:   8%|▊         | 1935/24850 [39:41<9:16:29,  1.46s/it, lr=7e-5, step_loss=0.00728]Steps:   8%|▊         | 1935/24850 [39:41<9:16:29,  1.46s/it, lr=7e-5, step_loss=0.0127] Steps:   8%|▊         | 1936/24850 [39:43<9:35:49,  1.51s/it, lr=7e-5, step_loss=0.0127]Steps:   8%|▊         | 1936/24850 [39:43<9:35:49,  1.51s/it, lr=7e-5, step_loss=0.107] Steps:   8%|▊         | 1937/24850 [39:44<9:36:41,  1.51s/it, lr=7e-5, step_loss=0.107]Steps:   8%|▊         | 1937/24850 [39:44<9:36:41,  1.51s/it, lr=7e-5, step_loss=0.0671]Steps:   8%|▊         | 1938/24850 [39:46<9:32:00,  1.50s/it, lr=7e-5, step_loss=0.0671]Steps:   8%|▊         | 1938/24850 [39:46<9:32:00,  1.50s/it, lr=7e-5, step_loss=0.0563]Steps:   8%|▊         | 1939/24850 [39:47<9:29:12,  1.49s/it, lr=7e-5, step_loss=0.0563]Steps:   8%|▊         | 1939/24850 [39:47<9:29:12,  1.49s/it, lr=7e-5, step_loss=0.0236]Steps:   8%|▊         | 1940/24850 [39:49<9:25:39,  1.48s/it, lr=7e-5, step_loss=0.0236]Steps:   8%|▊         | 1940/24850 [39:49<9:25:39,  1.48s/it, lr=7e-5, step_loss=0.0172]Steps:   8%|▊         | 1941/24850 [39:50<9:23:59,  1.48s/it, lr=7e-5, step_loss=0.0172]Steps:   8%|▊         | 1941/24850 [39:50<9:23:59,  1.48s/it, lr=7e-5, step_loss=0.0429]Steps:   8%|▊         | 1942/24850 [39:52<9:22:31,  1.47s/it, lr=7e-5, step_loss=0.0429]Steps:   8%|▊         | 1942/24850 [39:52<9:22:31,  1.47s/it, lr=7e-5, step_loss=0.0424]Steps:   8%|▊         | 1943/24850 [39:53<9:22:37,  1.47s/it, lr=7e-5, step_loss=0.0424]Steps:   8%|▊         | 1943/24850 [39:53<9:22:37,  1.47s/it, lr=7e-5, step_loss=0.0123]Steps:   8%|▊         | 1944/24850 [39:55<9:21:08,  1.47s/it, lr=7e-5, step_loss=0.0123]Steps:   8%|▊         | 1944/24850 [39:55<9:21:08,  1.47s/it, lr=7e-5, step_loss=0.0888]Steps:   8%|▊         | 1945/24850 [39:56<9:20:39,  1.47s/it, lr=7e-5, step_loss=0.0888]Steps:   8%|▊         | 1945/24850 [39:56<9:20:39,  1.47s/it, lr=7e-5, step_loss=0.0148]Steps:   8%|▊         | 1946/24850 [39:58<9:21:15,  1.47s/it, lr=7e-5, step_loss=0.0148]Steps:   8%|▊         | 1946/24850 [39:58<9:21:15,  1.47s/it, lr=7e-5, step_loss=0.0312]Steps:   8%|▊         | 1947/24850 [40:00<11:19:12,  1.78s/it, lr=7e-5, step_loss=0.0312]Steps:   8%|▊         | 1947/24850 [40:00<11:19:12,  1.78s/it, lr=7e-5, step_loss=0.0184]Steps:   8%|▊         | 1948/24850 [40:02<10:42:00,  1.68s/it, lr=7e-5, step_loss=0.0184]Steps:   8%|▊         | 1948/24850 [40:02<10:42:00,  1.68s/it, lr=7e-5, step_loss=0.00373]Steps:   8%|▊         | 1949/24850 [40:03<10:16:09,  1.61s/it, lr=7e-5, step_loss=0.00373]Steps:   8%|▊         | 1949/24850 [40:03<10:16:09,  1.61s/it, lr=7e-5, step_loss=0.0507] Steps:   8%|▊         | 1950/24850 [40:05<9:58:14,  1.57s/it, lr=7e-5, step_loss=0.0507] Steps:   8%|▊         | 1950/24850 [40:05<9:58:14,  1.57s/it, lr=7e-5, step_loss=0.0805]Steps:   8%|▊         | 1951/24850 [40:06<9:46:26,  1.54s/it, lr=7e-5, step_loss=0.0805]Steps:   8%|▊         | 1951/24850 [40:06<9:46:26,  1.54s/it, lr=7e-5, step_loss=0.0461]Steps:   8%|▊         | 1952/24850 [40:07<9:37:37,  1.51s/it, lr=7e-5, step_loss=0.0461]Steps:   8%|▊         | 1952/24850 [40:07<9:37:37,  1.51s/it, lr=7e-5, step_loss=0.0296]Steps:   8%|▊         | 1953/24850 [40:09<9:31:23,  1.50s/it, lr=7e-5, step_loss=0.0296]Steps:   8%|▊         | 1953/24850 [40:09<9:31:23,  1.50s/it, lr=7e-5, step_loss=0.00341]Steps:   8%|▊         | 1954/24850 [40:10<9:28:27,  1.49s/it, lr=7e-5, step_loss=0.00341]Steps:   8%|▊         | 1954/24850 [40:10<9:28:27,  1.49s/it, lr=7e-5, step_loss=0.00567]Steps:   8%|▊         | 1955/24850 [40:12<9:25:30,  1.48s/it, lr=7e-5, step_loss=0.00567]Steps:   8%|▊         | 1955/24850 [40:12<9:25:30,  1.48s/it, lr=7e-5, step_loss=0.0346] Steps:   8%|▊         | 1956/24850 [40:13<9:22:43,  1.47s/it, lr=7e-5, step_loss=0.0346]Steps:   8%|▊         | 1956/24850 [40:13<9:22:43,  1.47s/it, lr=7e-5, step_loss=0.0413]Steps:   8%|▊         | 1957/24850 [40:15<9:39:50,  1.52s/it, lr=7e-5, step_loss=0.0413]Steps:   8%|▊         | 1957/24850 [40:15<9:39:50,  1.52s/it, lr=7e-5, step_loss=0.0224] torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:   8%|▊         | 1958/24850 [40:16<9:32:44,  1.50s/it, lr=7e-5, step_loss=0.0224]Steps:   8%|▊         | 1958/24850 [40:16<9:32:44,  1.50s/it, lr=7e-5, step_loss=0.0692]Steps:   8%|▊         | 1959/24850 [40:18<9:27:23,  1.49s/it, lr=7e-5, step_loss=0.0692]Steps:   8%|▊         | 1959/24850 [40:18<9:27:23,  1.49s/it, lr=7e-5, step_loss=0.0111]Steps:   8%|▊         | 1960/24850 [40:19<9:25:48,  1.48s/it, lr=7e-5, step_loss=0.0111]Steps:   8%|▊         | 1960/24850 [40:19<9:25:48,  1.48s/it, lr=7e-5, step_loss=0.0409]Steps:   8%|▊         | 1961/24850 [40:21<9:22:26,  1.47s/it, lr=7e-5, step_loss=0.0409]Steps:   8%|▊         | 1961/24850 [40:21<9:22:26,  1.47s/it, lr=7e-5, step_loss=0.00112]Steps:   8%|▊         | 1962/24850 [40:22<9:19:15,  1.47s/it, lr=7e-5, step_loss=0.00112]Steps:   8%|▊         | 1962/24850 [40:22<9:19:15,  1.47s/it, lr=7e-5, step_loss=0.0162] Steps:   8%|▊         | 1963/24850 [40:24<9:18:23,  1.46s/it, lr=7e-5, step_loss=0.0162]Steps:   8%|▊         | 1963/24850 [40:24<9:18:23,  1.46s/it, lr=7e-5, step_loss=0.00244]Steps:   8%|▊         | 1964/24850 [40:25<9:19:50,  1.47s/it, lr=7e-5, step_loss=0.00244]Steps:   8%|▊         | 1964/24850 [40:25<9:19:50,  1.47s/it, lr=7e-5, step_loss=0.0284] Steps:   8%|▊         | 1965/24850 [40:27<9:20:08,  1.47s/it, lr=7e-5, step_loss=0.0284]Steps:   8%|▊         | 1965/24850 [40:27<9:20:08,  1.47s/it, lr=7e-5, step_loss=0.0485]Steps:   8%|▊         | 1966/24850 [40:28<9:20:25,  1.47s/it, lr=7e-5, step_loss=0.0485]Steps:   8%|▊         | 1966/24850 [40:28<9:20:25,  1.47s/it, lr=7e-5, step_loss=0.066] Steps:   8%|▊         | 1967/24850 [40:30<9:20:00,  1.47s/it, lr=7e-5, step_loss=0.066]Steps:   8%|▊         | 1967/24850 [40:30<9:20:00,  1.47s/it, lr=7e-5, step_loss=0.00585]Steps:   8%|▊         | 1968/24850 [40:31<9:19:31,  1.47s/it, lr=7e-5, step_loss=0.00585]Steps:   8%|▊         | 1968/24850 [40:31<9:19:31,  1.47s/it, lr=7e-5, step_loss=0.0661] Steps:   8%|▊         | 1969/24850 [40:32<9:19:28,  1.47s/it, lr=7e-5, step_loss=0.0661]Steps:   8%|▊         | 1969/24850 [40:32<9:19:28,  1.47s/it, lr=7e-5, step_loss=0.171] Steps:   8%|▊         | 1970/24850 [40:34<9:19:16,  1.47s/it, lr=7e-5, step_loss=0.171]Steps:   8%|▊         | 1970/24850 [40:34<9:19:16,  1.47s/it, lr=7e-5, step_loss=0.00681]Steps:   8%|▊         | 1971/24850 [40:35<9:20:09,  1.47s/it, lr=7e-5, step_loss=0.00681]Steps:   8%|▊         | 1971/24850 [40:35<9:20:09,  1.47s/it, lr=7e-5, step_loss=0.0394] Steps:   8%|▊         | 1972/24850 [40:37<9:19:37,  1.47s/it, lr=7e-5, step_loss=0.0394]Steps:   8%|▊         | 1972/24850 [40:37<9:19:37,  1.47s/it, lr=7e-5, step_loss=0.0356]Steps:   8%|▊         | 1973/24850 [40:38<9:17:30,  1.46s/it, lr=7e-5, step_loss=0.0356]Steps:   8%|▊         | 1973/24850 [40:38<9:17:30,  1.46s/it, lr=7e-5, step_loss=0.027] Steps:   8%|▊         | 1974/24850 [40:40<9:16:15,  1.46s/it, lr=7e-5, step_loss=0.027]Steps:   8%|▊         | 1974/24850 [40:40<9:16:15,  1.46s/it, lr=7e-5, step_loss=0.00305]Steps:   8%|▊         | 1975/24850 [40:41<9:16:27,  1.46s/it, lr=7e-5, step_loss=0.00305]Steps:   8%|▊         | 1975/24850 [40:41<9:16:27,  1.46s/it, lr=7e-5, step_loss=0.0248] Steps:   8%|▊         | 1976/24850 [40:43<9:17:24,  1.46s/it, lr=7e-5, step_loss=0.0248]Steps:   8%|▊         | 1976/24850 [40:43<9:17:24,  1.46s/it, lr=7e-5, step_loss=0.0433]Steps:   8%|▊         | 1977/24850 [40:44<9:17:36,  1.46s/it, lr=7e-5, step_loss=0.0433]Steps:   8%|▊         | 1977/24850 [40:44<9:17:36,  1.46s/it, lr=7e-5, step_loss=0.0433]Steps:   8%|▊         | 1978/24850 [40:46<9:17:49,  1.46s/it, lr=7e-5, step_loss=0.0433]Steps:   8%|▊         | 1978/24850 [40:46<9:17:49,  1.46s/it, lr=7e-5, step_loss=0.0107]Steps:   8%|▊         | 1979/24850 [40:47<9:18:52,  1.47s/it, lr=7e-5, step_loss=0.0107]Steps:   8%|▊         | 1979/24850 [40:47<9:18:52,  1.47s/it, lr=7e-5, step_loss=0.00573]Steps:   8%|▊         | 1980/24850 [40:49<9:21:37,  1.47s/it, lr=7e-5, step_loss=0.00573]Steps:   8%|▊         | 1980/24850 [40:49<9:21:37,  1.47s/it, lr=7e-5, step_loss=0.114]  Steps:   8%|▊         | 1981/24850 [40:50<9:20:42,  1.47s/it, lr=7e-5, step_loss=0.114]Steps:   8%|▊         | 1981/24850 [40:50<9:20:42,  1.47s/it, lr=7e-5, step_loss=0.012]Steps:   8%|▊         | 1982/24850 [40:52<9:19:27,  1.47s/it, lr=7e-5, step_loss=0.012]Steps:   8%|▊         | 1982/24850 [40:52<9:19:27,  1.47s/it, lr=7e-5, step_loss=0.0855]Steps:   8%|▊         | 1983/24850 [40:53<9:17:59,  1.46s/it, lr=7e-5, step_loss=0.0855]Steps:   8%|▊         | 1983/24850 [40:53<9:17:59,  1.46s/it, lr=7e-5, step_loss=0.00317]Steps:   8%|▊         | 1984/24850 [40:54<9:18:44,  1.47s/it, lr=7e-5, step_loss=0.00317]Steps:   8%|▊         | 1984/24850 [40:54<9:18:44,  1.47s/it, lr=7e-5, step_loss=0.0738] torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  Steps:   8%|▊         | 1985/24850 [40:56<9:18:15,  1.46s/it, lr=7e-5, step_loss=0.0738]Steps:   8%|▊         | 1985/24850 [40:56<9:18:15,  1.46s/it, lr=7e-5, step_loss=0.00181]Steps:   8%|▊         | 1986/24850 [40:57<9:21:24,  1.47s/it, lr=7e-5, step_loss=0.00181]Steps:   8%|▊         | 1986/24850 [40:57<9:21:24,  1.47s/it, lr=7e-5, step_loss=0.0969] Steps:   8%|▊         | 1987/24850 [40:59<9:20:45,  1.47s/it, lr=7e-5, step_loss=0.0969]Steps:   8%|▊         | 1987/24850 [40:59<9:20:45,  1.47s/it, lr=7e-5, step_loss=0.00258]Steps:   8%|▊         | 1988/24850 [41:00<9:19:10,  1.47s/it, lr=7e-5, step_loss=0.00258]Steps:   8%|▊         | 1988/24850 [41:00<9:19:10,  1.47s/it, lr=7e-5, step_loss=0.0188] Steps:   8%|▊         | 1989/24850 [41:02<9:19:09,  1.47s/it, lr=7e-5, step_loss=0.0188]Steps:   8%|▊         | 1989/24850 [41:02<9:19:09,  1.47s/it, lr=7e-5, step_loss=0.0459]Steps:   8%|▊         | 1990/24850 [41:03<9:19:08,  1.47s/it, lr=7e-5, step_loss=0.0459]Steps:   8%|▊         | 1990/24850 [41:03<9:19:08,  1.47s/it, lr=7e-5, step_loss=0.0283]Steps:   8%|▊         | 1991/24850 [41:05<9:18:42,  1.47s/it, lr=7e-5, step_loss=0.0283]Steps:   8%|▊         | 1991/24850 [41:05<9:18:42,  1.47s/it, lr=7e-5, step_loss=0.00785]Steps:   8%|▊         | 1992/24850 [41:06<9:19:06,  1.47s/it, lr=7e-5, step_loss=0.00785]Steps:   8%|▊         | 1992/24850 [41:06<9:19:06,  1.47s/it, lr=7e-5, step_loss=0.0146] Steps:   8%|▊         | 1993/24850 [41:08<9:18:21,  1.47s/it, lr=7e-5, step_loss=0.0146]Steps:   8%|▊         | 1993/24850 [41:08<9:18:21,  1.47s/it, lr=7e-5, step_loss=0.174] Steps:   8%|▊         | 1994/24850 [41:09<9:17:59,  1.46s/it, lr=7e-5, step_loss=0.174]Steps:   8%|▊         | 1994/24850 [41:09<9:17:59,  1.46s/it, lr=7e-5, step_loss=0.00541]Steps:   8%|▊         | 1995/24850 [41:11<9:17:37,  1.46s/it, lr=7e-5, step_loss=0.00541]Steps:   8%|▊         | 1995/24850 [41:11<9:17:37,  1.46s/it, lr=7e-5, step_loss=0.0311] Steps:   8%|▊         | 1996/24850 [41:12<9:17:03,  1.46s/it, lr=7e-5, step_loss=0.0311]04/12/2024 10:51:20 - INFO - __main__ - 2 checkpoints already exist, removing 1 checkpoints
04/12/2024 10:51:20 - INFO - __main__ - removing checkpoints: checkpoint-1000
04/12/2024 10:51:21 - INFO - accelerate.accelerator - Saving current state to /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-2000
Configuration saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-2000/unet/config.json
Model weights saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-2000/unet/diffusion_pytorch_model.safetensors
Model weights saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-2000/unet/pytorch_lora_weights.safetensors
04/12/2024 10:52:01 - INFO - accelerate.checkpointing - Optimizer state saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-2000/optimizer.bin
04/12/2024 10:52:01 - INFO - accelerate.checkpointing - Scheduler state saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-2000/scheduler.bin
04/12/2024 10:52:01 - INFO - accelerate.checkpointing - Random states saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-2000/random_states_0.pkl
04/12/2024 10:52:01 - INFO - __main__ - Saved state to /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-2000
Steps:   8%|▊         | 1996/24850 [41:53<9:17:03,  1.46s/it, lr=7e-5, step_loss=0.00691]Steps:   8%|▊         | 1997/24850 [42:04<105:49:44, 16.67s/it, lr=7e-5, step_loss=0.00691]Steps:   8%|▊         | 1997/24850 [42:04<105:49:44, 16.67s/it, lr=7e-5, step_loss=0.00403]Steps:   8%|▊         | 1998/24850 [42:06<76:58:10, 12.13s/it, lr=7e-5, step_loss=0.00403] Steps:   8%|▊         | 1998/24850 [42:06<76:58:10, 12.13s/it, lr=7e-5, step_loss=0.0278] Steps:   8%|▊         | 1999/24850 [42:07<56:41:29,  8.93s/it, lr=7e-5, step_loss=0.0278]Steps:   8%|▊         | 1999/24850 [42:07<56:41:29,  8.93s/it, lr=7e-5, step_loss=0.00517]Steps:   8%|▊         | 2000/24850 [42:09<42:29:10,  6.69s/it, lr=7e-5, step_loss=0.00517]Steps:   8%|▊         | 2000/24850 [42:09<42:29:10,  6.69s/it, lr=7e-5, step_loss=0.0311] Steps:   8%|▊         | 2001/24850 [42:10<32:29:52,  5.12s/it, lr=7e-5, step_loss=0.0311]Steps:   8%|▊         | 2001/24850 [42:10<32:29:52,  5.12s/it, lr=7e-5, step_loss=0.0392]Steps:   8%|▊         | 2002/24850 [42:12<25:32:06,  4.02s/it, lr=7e-5, step_loss=0.0392]Steps:   8%|▊         | 2002/24850 [42:12<25:32:06,  4.02s/it, lr=7e-5, step_loss=0.0059]Steps:   8%|▊         | 2003/24850 [42:13<20:37:47,  3.25s/it, lr=7e-5, step_loss=0.0059]Steps:   8%|▊         | 2003/24850 [42:13<20:37:47,  3.25s/it, lr=7e-5, step_loss=0.000952]Steps:   8%|▊         | 2004/24850 [42:15<17:13:46,  2.71s/it, lr=7e-5, step_loss=0.000952]Steps:   8%|▊         | 2004/24850 [42:15<17:13:46,  2.71s/it, lr=7e-5, step_loss=0.0433]  Steps:   8%|▊         | 2005/24850 [42:16<14:48:46,  2.33s/it, lr=7e-5, step_loss=0.0433]Steps:   8%|▊         | 2005/24850 [42:16<14:48:46,  2.33s/it, lr=7e-5, step_loss=0.00793]Steps:   8%|▊         | 2006/24850 [42:17<13:09:34,  2.07s/it, lr=7e-5, step_loss=0.00793]Steps:   8%|▊         | 2006/24850 [42:17<13:09:34,  2.07s/it, lr=7e-5, step_loss=0.0261] Steps:   8%|▊         | 2007/24850 [42:19<11:58:31,  1.89s/it, lr=7e-5, step_loss=0.0261]Steps:   8%|▊         | 2007/24850 [42:19<11:58:31,  1.89s/it, lr=7e-5, step_loss=0.102] Steps:   8%|▊         | 2008/24850 [42:20<11:09:22,  1.76s/it, lr=7e-5, step_loss=0.102]Steps:   8%|▊         | 2008/24850 [42:20<11:09:22,  1.76s/it, lr=7e-5, step_loss=0.319]Steps:   8%|▊         | 2009/24850 [42:22<10:34:34,  1.67s/it, lr=7e-5, step_loss=0.319]Steps:   8%|▊         | 2009/24850 [42:22<10:34:34,  1.67s/it, lr=7e-5, step_loss=0.0178]Steps:   8%|▊         | 2010/24850 [42:23<10:09:58,  1.60s/it, lr=7e-5, step_loss=0.0178]Steps:   8%|▊         | 2010/24850 [42:23<10:09:58,  1.60s/it, lr=7e-5, step_loss=0.046] Steps:   8%|▊         | 2011/24850 [42:25<9:52:26,  1.56s/it, lr=7e-5, step_loss=0.046] Steps:   8%|▊         | 2011/24850 [42:25<9:52:26,  1.56s/it, lr=7e-5, step_loss=0.0133]Steps:   8%|▊         | 2012/24850 [42:26<9:39:21,  1.52s/it, lr=7e-5, step_loss=0.0133]Steps:   8%|▊         | 2012/24850 [42:26<9:39:21,  1.52s/it, lr=7e-5, step_loss=0.0845]mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:   8%|▊         | 2013/24850 [42:28<9:32:05,  1.50s/it, lr=7e-5, step_loss=0.0845]Steps:   8%|▊         | 2013/24850 [42:28<9:32:05,  1.50s/it, lr=7e-5, step_loss=0.088] Steps:   8%|▊         | 2014/24850 [42:29<9:41:18,  1.53s/it, lr=7e-5, step_loss=0.088]Steps:   8%|▊         | 2014/24850 [42:29<9:41:18,  1.53s/it, lr=7e-5, step_loss=0.0718]Steps:   8%|▊         | 2015/24850 [42:31<9:30:18,  1.50s/it, lr=7e-5, step_loss=0.0718]Steps:   8%|▊         | 2015/24850 [42:31<9:30:18,  1.50s/it, lr=7e-5, step_loss=0.0388]Steps:   8%|▊         | 2016/24850 [42:32<9:23:12,  1.48s/it, lr=7e-5, step_loss=0.0388]Steps:   8%|▊         | 2016/24850 [42:32<9:23:12,  1.48s/it, lr=7e-5, step_loss=0.0417]Steps:   8%|▊         | 2017/24850 [42:33<9:17:56,  1.47s/it, lr=7e-5, step_loss=0.0417]Steps:   8%|▊         | 2017/24850 [42:33<9:17:56,  1.47s/it, lr=7e-5, step_loss=0.00455]Steps:   8%|▊         | 2018/24850 [42:35<9:13:50,  1.46s/it, lr=7e-5, step_loss=0.00455]Steps:   8%|▊         | 2018/24850 [42:35<9:13:50,  1.46s/it, lr=7e-5, step_loss=0.0438] Steps:   8%|▊         | 2019/24850 [42:36<9:11:18,  1.45s/it, lr=7e-5, step_loss=0.0438]Steps:   8%|▊         | 2019/24850 [42:36<9:11:18,  1.45s/it, lr=7e-5, step_loss=0.0247]Steps:   8%|▊         | 2020/24850 [42:38<9:10:01,  1.45s/it, lr=7e-5, step_loss=0.0247]Steps:   8%|▊         | 2020/24850 [42:38<9:10:01,  1.45s/it, lr=7e-5, step_loss=0.122] Steps:   8%|▊         | 2021/24850 [42:39<9:10:27,  1.45s/it, lr=7e-5, step_loss=0.122]Steps:   8%|▊         | 2021/24850 [42:39<9:10:27,  1.45s/it, lr=7e-5, step_loss=0.0489]Steps:   8%|▊         | 2022/24850 [42:41<9:08:37,  1.44s/it, lr=7e-5, step_loss=0.0489]Steps:   8%|▊         | 2022/24850 [42:41<9:08:37,  1.44s/it, lr=7e-5, step_loss=0.00459]Steps:   8%|▊         | 2023/24850 [42:42<9:08:50,  1.44s/it, lr=7e-5, step_loss=0.00459]Steps:   8%|▊         | 2023/24850 [42:42<9:08:50,  1.44s/it, lr=7e-5, step_loss=0.0204] Steps:   8%|▊         | 2024/24850 [42:44<9:08:14,  1.44s/it, lr=7e-5, step_loss=0.0204]Steps:   8%|▊         | 2024/24850 [42:44<9:08:14,  1.44s/it, lr=7e-5, step_loss=0.0125]Steps:   8%|▊         | 2025/24850 [42:45<9:09:57,  1.45s/it, lr=7e-5, step_loss=0.0125]Steps:   8%|▊         | 2025/24850 [42:45<9:09:57,  1.45s/it, lr=7e-5, step_loss=0.196] Steps:   8%|▊         | 2026/24850 [42:46<9:09:56,  1.45s/it, lr=7e-5, step_loss=0.196]Steps:   8%|▊         | 2026/24850 [42:46<9:09:56,  1.45s/it, lr=7e-5, step_loss=0.0244]Steps:   8%|▊         | 2027/24850 [42:48<9:09:30,  1.44s/it, lr=7e-5, step_loss=0.0244]Steps:   8%|▊         | 2027/24850 [42:48<9:09:30,  1.44s/it, lr=7e-5, step_loss=0.0061]Steps:   8%|▊         | 2028/24850 [42:49<9:27:11,  1.49s/it, lr=7e-5, step_loss=0.0061]Steps:   8%|▊         | 2028/24850 [42:49<9:27:11,  1.49s/it, lr=7e-5, step_loss=0.191] 04/12/2024 10:52:58 - INFO - __main__ - Running validation...
torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([9, 4, 64, 64])

Loading pipeline components...:   0%|          | 0/7 [00:00<?, ?it/s][A`text_config_dict` is provided which will be used to initialize `CLIPTextConfig`. The value `text_config["id2label"]` will be overriden.
`text_config_dict` is provided which will be used to initialize `CLIPTextConfig`. The value `text_config["bos_token_id"]` will be overriden.
`text_config_dict` is provided which will be used to initialize `CLIPTextConfig`. The value `text_config["eos_token_id"]` will be overriden.
Loaded safety_checker as StableDiffusionSafetyChecker from `safety_checker` subfolder of timbrooks/instruct-pix2pix.

Loading pipeline components...:  14%|█▍        | 1/7 [00:00<00:02,  2.16it/s][ALoaded feature_extractor as CLIPImageProcessor from `feature_extractor` subfolder of timbrooks/instruct-pix2pix.
{'timestep_spacing'} was not found in config. Values will be initialized to default values.
Loaded scheduler as EulerAncestralDiscreteScheduler from `scheduler` subfolder of timbrooks/instruct-pix2pix.
Loaded tokenizer as CLIPTokenizer from `tokenizer` subfolder of timbrooks/instruct-pix2pix.
Loading pipeline components...: 100%|██████████| 7/7 [00:00<00:00, 12.52it/s]
{'timestep_spacing'} was not found in config. Values will be initialized to default values.
conduct do_classifier_free_guidance, text_guidance: 16,image_guidance: 1

  0%|          | 0/50 [00:00<?, ?it/s][A
  2%|▏         | 1/50 [00:00<00:20,  2.35it/s][A
  4%|▍         | 2/50 [00:00<00:19,  2.41it/s][A
  6%|▌         | 3/50 [00:01<00:19,  2.44it/s][A
  8%|▊         | 4/50 [00:01<00:18,  2.45it/s][A
 10%|█         | 5/50 [00:02<00:18,  2.45it/s][A
 12%|█▏        | 6/50 [00:02<00:17,  2.45it/s][A
 14%|█▍        | 7/50 [00:02<00:17,  2.44it/s][A
 16%|█▌        | 8/50 [00:03<00:17,  2.45it/s][A
 18%|█▊        | 9/50 [00:03<00:16,  2.45it/s][A
 20%|██        | 10/50 [00:04<00:16,  2.45it/s][A
 22%|██▏       | 11/50 [00:04<00:15,  2.45it/s][A
 24%|██▍       | 12/50 [00:04<00:15,  2.45it/s][A
 26%|██▌       | 13/50 [00:05<00:15,  2.44it/s][A
 28%|██▊       | 14/50 [00:05<00:14,  2.45it/s][A
 30%|███       | 15/50 [00:06<00:14,  2.45it/s][A
 32%|███▏      | 16/50 [00:06<00:13,  2.45it/s][A
 34%|███▍      | 17/50 [00:06<00:13,  2.44it/s][A
 36%|███▌      | 18/50 [00:07<00:13,  2.44it/s][A
 38%|███▊      | 19/50 [00:07<00:12,  2.45it/s][A
 40%|████      | 20/50 [00:08<00:12,  2.44it/s][A
 42%|████▏     | 21/50 [00:08<00:11,  2.45it/s][A
 44%|████▍     | 22/50 [00:08<00:11,  2.45it/s][A
 46%|████▌     | 23/50 [00:09<00:11,  2.45it/s][A
 48%|████▊     | 24/50 [00:09<00:10,  2.45it/s][A
 50%|█████     | 25/50 [00:10<00:10,  2.44it/s][A
 52%|█████▏    | 26/50 [00:10<00:09,  2.45it/s][A
 54%|█████▍    | 27/50 [00:11<00:09,  2.44it/s][A
 56%|█████▌    | 28/50 [00:11<00:08,  2.45it/s][A
 58%|█████▊    | 29/50 [00:11<00:08,  2.45it/s][A
 60%|██████    | 30/50 [00:12<00:08,  2.45it/s][A
 62%|██████▏   | 31/50 [00:12<00:07,  2.45it/s][A
 64%|██████▍   | 32/50 [00:13<00:07,  2.45it/s][A
 66%|██████▌   | 33/50 [00:13<00:06,  2.46it/s][A(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) 
 68%|██████▊   | 34/50 [00:13<00:06,  2.46it/s][A
 70%|███████   | 35/50 [00:14<00:06,  2.46it/s][A
 72%|███████▏  | 36/50 [00:14<00:05,  2.45it/s][A
 74%|███████▍  | 37/50 [00:15<00:05,  2.45it/s][A
 76%|███████▌  | 38/50 [00:15<00:04,  2.45it/s][A
 78%|███████▊  | 39/50 [00:15<00:04,  2.45it/s][A
 80%|████████  | 40/50 [00:16<00:04,  2.45it/s][A
 82%|████████▏ | 41/50 [00:16<00:03,  2.45it/s][A
 84%|████████▍ | 42/50 [00:17<00:03,  2.45it/s][A
 86%|████████▌ | 43/50 [00:17<00:02,  2.45it/s][A
 88%|████████▊ | 44/50 [00:17<00:02,  2.45it/s][A
 90%|█████████ | 45/50 [00:18<00:02,  2.45it/s][A
 92%|█████████▏| 46/50 [00:18<00:01,  2.44it/s][A
 94%|█████████▍| 47/50 [00:19<00:01,  2.44it/s][A
 96%|█████████▌| 48/50 [00:19<00:00,  2.45it/s][A
 98%|█████████▊| 49/50 [00:20<00:00,  2.45it/s][A
100%|██████████| 50/50 [00:20<00:00,  2.45it/s][A100%|██████████| 50/50 [00:20<00:00,  2.45it/s]
04/12/2024 10:53:22 - INFO - __main__ - Running training...
torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
save img to : /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/images/modify the images for task ['flare']_val_step_2032_0.png modify the images for task ['flare']
writing inference outputs failed [Errno 2] No such file or directory: '/usr/bin/ffmpeg'
Steps:   8%|▊         | 2029/24850 [43:20<65:28:05, 10.33s/it, lr=7e-5, step_loss=0.191]Steps:   8%|▊         | 2029/24850 [43:20<65:28:05, 10.33s/it, lr=7e-5, step_loss=0.0269]Steps:   8%|▊         | 2030/24850 [43:22<48:38:34,  7.67s/it, lr=7e-5, step_loss=0.0269]Steps:   8%|▊         | 2030/24850 [43:22<48:38:34,  7.67s/it, lr=7e-5, step_loss=0.0065]Steps:   8%|▊         | 2031/24850 [43:23<36:49:44,  5.81s/it, lr=7e-5, step_loss=0.0065]Steps:   8%|▊         | 2031/24850 [43:23<36:49:44,  5.81s/it, lr=7e-5, step_loss=0.055] Steps:   8%|▊         | 2032/24850 [43:25<28:31:04,  4.50s/it, lr=7e-5, step_loss=0.055]Steps:   8%|▊         | 2032/24850 [43:25<28:31:04,  4.50s/it, lr=7e-5, step_loss=0.0186]Steps:   8%|▊         | 2033/24850 [43:26<22:43:30,  3.59s/it, lr=7e-5, step_loss=0.0186]Steps:   8%|▊         | 2033/24850 [43:26<22:43:30,  3.59s/it, lr=7e-5, step_loss=0.00177]Steps:   8%|▊         | 2034/24850 [43:28<18:39:57,  2.95s/it, lr=7e-5, step_loss=0.00177]Steps:   8%|▊         | 2034/24850 [43:28<18:39:57,  2.95s/it, lr=7e-5, step_loss=0.0291] Steps:   8%|▊         | 2035/24850 [43:29<15:48:08,  2.49s/it, lr=7e-5, step_loss=0.0291]Steps:   8%|▊         | 2035/24850 [43:29<15:48:08,  2.49s/it, lr=7e-5, step_loss=0.142] Steps:   8%|▊         | 2036/24850 [43:31<13:49:15,  2.18s/it, lr=7e-5, step_loss=0.142]Steps:   8%|▊         | 2036/24850 [43:31<13:49:15,  2.18s/it, lr=7e-5, step_loss=0.0321]Steps:   8%|▊         | 2037/24850 [43:32<12:26:33,  1.96s/it, lr=7e-5, step_loss=0.0321]Steps:   8%|▊         | 2037/24850 [43:32<12:26:33,  1.96s/it, lr=7e-5, step_loss=0.00819]Steps:   8%|▊         | 2038/24850 [43:34<11:32:31,  1.82s/it, lr=7e-5, step_loss=0.00819]Steps:   8%|▊         | 2038/24850 [43:34<11:32:31,  1.82s/it, lr=7e-5, step_loss=0.0372] Steps:   8%|▊         | 2039/24850 [43:35<10:52:03,  1.72s/it, lr=7e-5, step_loss=0.0372]Steps:   8%|▊         | 2039/24850 [43:35<10:52:03,  1.72s/it, lr=7e-5, step_loss=0.062] Steps:   8%|▊         | 2040/24850 [43:36<10:20:42,  1.63s/it, lr=7e-5, step_loss=0.062]Steps:   8%|▊         | 2040/24850 [43:36<10:20:42,  1.63s/it, lr=7e-5, step_loss=0.0155]Steps:   8%|▊         | 2041/24850 [43:38<10:00:24,  1.58s/it, lr=7e-5, step_loss=0.0155]Steps:   8%|▊         | 2041/24850 [43:38<10:00:24,  1.58s/it, lr=7e-5, step_loss=0.013] Steps:   8%|▊         | 2042/24850 [43:39<9:45:43,  1.54s/it, lr=7e-5, step_loss=0.013] Steps:   8%|▊         | 2042/24850 [43:39<9:45:43,  1.54s/it, lr=7e-5, step_loss=0.00214]Steps:   8%|▊         | 2043/24850 [43:41<9:35:12,  1.51s/it, lr=7e-5, step_loss=0.00214]Steps:   8%|▊         | 2043/24850 [43:41<9:35:12,  1.51s/it, lr=7e-5, step_loss=0.00508]Steps:   8%|▊         | 2044/24850 [43:42<9:30:18,  1.50s/it, lr=7e-5, step_loss=0.00508]Steps:   8%|▊         | 2044/24850 [43:42<9:30:18,  1.50s/it, lr=7e-5, step_loss=0.0239] Steps:   8%|▊         | 2045/24850 [43:51<23:39:38,  3.74s/it, lr=7e-5, step_loss=0.0239]Steps:   8%|▊         | 2045/24850 [43:51<23:39:38,  3.74s/it, lr=7e-5, step_loss=0.0326]Steps:   8%|▊         | 2046/24850 [43:57<26:50:32,  4.24s/it, lr=7e-5, step_loss=0.0326]Steps:   8%|▊         | 2046/24850 [43:57<26:50:32,  4.24s/it, lr=7e-5, step_loss=0.0207]Steps:   8%|▊         | 2047/24850 [43:59<22:42:10,  3.58s/it, lr=7e-5, step_loss=0.0207]Steps:   8%|▊         | 2047/24850 [43:59<22:42:10,  3.58s/it, lr=7e-5, step_loss=0.0287]Steps:   8%|▊         | 2048/24850 [44:00<19:11:33,  3.03s/it, lr=7e-5, step_loss=0.0287]Steps:   8%|▊         | 2048/24850 [44:00<19:11:33,  3.03s/it, lr=7e-5, step_loss=0.0557]Steps:   8%|▊         | 2049/24850 [44:02<16:34:02,  2.62s/it, lr=7e-5, step_loss=0.0557]Steps:   8%|▊         | 2049/24850 [44:02<16:34:02,  2.62s/it, lr=7e-5, step_loss=0.0294]Steps:   8%|▊         | 2050/24850 [44:04<14:30:17,  2.29s/it, lr=7e-5, step_loss=0.0294]Steps:   8%|▊         | 2050/24850 [44:04<14:30:17,  2.29s/it, lr=7e-5, step_loss=0.0271]Steps:   8%|▊         | 2051/24850 [44:05<12:59:57,  2.05s/it, lr=7e-5, step_loss=0.0271]Steps:   8%|▊         | 2051/24850 [44:05<12:59:57,  2.05s/it, lr=7e-5, step_loss=0.00577]Steps:   8%|▊         | 2052/24850 [44:07<11:57:21,  1.89s/it, lr=7e-5, step_loss=0.00577]Steps:   8%|▊         | 2052/24850 [44:07<11:57:21,  1.89s/it, lr=7e-5, step_loss=0.108]  Steps:   8%|▊         | 2053/24850 [44:08<11:07:59,  1.76s/it, lr=7e-5, step_loss=0.108]Steps:   8%|▊         | 2053/24850 [44:08<11:07:59,  1.76s/it, lr=7e-5, step_loss=0.0489]Steps:   8%|▊         | 2054/24850 [44:10<10:35:14,  1.67s/it, lr=7e-5, step_loss=0.0489]Steps:   8%|▊         | 2054/24850 [44:10<10:35:14,  1.67s/it, lr=7e-5, step_loss=0.0832]Steps:   8%|▊         | 2055/24850 [44:11<10:11:42,  1.61s/it, lr=7e-5, step_loss=0.0832]Steps:   8%|▊         | 2055/24850 [44:11<10:11:42,  1.61s/it, lr=7e-5, step_loss=0.0122](512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512)Steps:   8%|▊         | 2056/24850 [44:12<9:55:32,  1.57s/it, lr=7e-5, step_loss=0.0122] Steps:   8%|▊         | 2056/24850 [44:12<9:55:32,  1.57s/it, lr=7e-5, step_loss=0.141] Steps:   8%|▊         | 2057/24850 [44:14<9:43:38,  1.54s/it, lr=7e-5, step_loss=0.141]Steps:   8%|▊         | 2057/24850 [44:14<9:43:38,  1.54s/it, lr=7e-5, step_loss=0.00388]Steps:   8%|▊         | 2058/24850 [44:15<9:35:24,  1.51s/it, lr=7e-5, step_loss=0.00388]Steps:   8%|▊         | 2058/24850 [44:15<9:35:24,  1.51s/it, lr=7e-5, step_loss=0.0119] Steps:   8%|▊         | 2059/24850 [44:17<9:30:04,  1.50s/it, lr=7e-5, step_loss=0.0119]Steps:   8%|▊         | 2059/24850 [44:17<9:30:04,  1.50s/it, lr=7e-5, step_loss=0.00232]Steps:   8%|▊         | 2060/24850 [44:18<9:25:33,  1.49s/it, lr=7e-5, step_loss=0.00232]Steps:   8%|▊         | 2060/24850 [44:18<9:25:33,  1.49s/it, lr=7e-5, step_loss=0.0382] Steps:   8%|▊         | 2061/24850 [44:20<9:20:47,  1.48s/it, lr=7e-5, step_loss=0.0382]Steps:   8%|▊         | 2061/24850 [44:20<9:20:47,  1.48s/it, lr=7e-5, step_loss=0.00571]Steps:   8%|▊         | 2062/24850 [44:21<9:18:29,  1.47s/it, lr=7e-5, step_loss=0.00571]Steps:   8%|▊         | 2062/24850 [44:21<9:18:29,  1.47s/it, lr=7e-5, step_loss=0.00356]Steps:   8%|▊         | 2063/24850 [44:23<9:17:46,  1.47s/it, lr=7e-5, step_loss=0.00356]Steps:   8%|▊         | 2063/24850 [44:23<9:17:46,  1.47s/it, lr=7e-5, step_loss=0.0148] Steps:   8%|▊         | 2064/24850 [44:24<9:18:18,  1.47s/it, lr=7e-5, step_loss=0.0148]Steps:   8%|▊         | 2064/24850 [44:24<9:18:18,  1.47s/it, lr=7e-5, step_loss=0.0559]Steps:   8%|▊         | 2065/24850 [44:26<9:14:47,  1.46s/it, lr=7e-5, step_loss=0.0559]Steps:   8%|▊         | 2065/24850 [44:26<9:14:47,  1.46s/it, lr=7e-5, step_loss=0.000938]Steps:   8%|▊         | 2066/24850 [44:27<9:13:27,  1.46s/it, lr=7e-5, step_loss=0.000938]Steps:   8%|▊         | 2066/24850 [44:27<9:13:27,  1.46s/it, lr=7e-5, step_loss=0.0398]  Steps:   8%|▊         | 2067/24850 [44:29<9:13:24,  1.46s/it, lr=7e-5, step_loss=0.0398]Steps:   8%|▊         | 2067/24850 [44:29<9:13:24,  1.46s/it, lr=7e-5, step_loss=0.0346]Steps:   8%|▊         | 2068/24850 [44:30<9:13:20,  1.46s/it, lr=7e-5, step_loss=0.0346]Steps:   8%|▊         | 2068/24850 [44:30<9:13:20,  1.46s/it, lr=7e-5, step_loss=0.034] Steps:   8%|▊         | 2069/24850 [44:31<9:13:04,  1.46s/it, lr=7e-5, step_loss=0.034]Steps:   8%|▊         | 2069/24850 [44:31<9:13:04,  1.46s/it, lr=7e-5, step_loss=0.0883]Steps:   8%|▊         | 2070/24850 [44:33<9:14:16,  1.46s/it, lr=7e-5, step_loss=0.0883]Steps:   8%|▊         | 2070/24850 [44:33<9:14:16,  1.46s/it, lr=7e-5, step_loss=0.0798]Steps:   8%|▊         | 2071/24850 [44:34<9:13:25,  1.46s/it, lr=7e-5, step_loss=0.0798]Steps:   8%|▊         | 2071/24850 [44:34<9:13:25,  1.46s/it, lr=7e-5, step_loss=0.0161]Steps:   8%|▊         | 2072/24850 [44:36<9:13:41,  1.46s/it, lr=7e-5, step_loss=0.0161]Steps:   8%|▊         | 2072/24850 [44:36<9:13:41,  1.46s/it, lr=7e-5, step_loss=0.0192]Steps:   8%|▊         | 2073/24850 [44:37<9:13:05,  1.46s/it, lr=7e-5, step_loss=0.0192]Steps:   8%|▊         | 2073/24850 [44:37<9:13:05,  1.46s/it, lr=7e-5, step_loss=0.00165]Steps:   8%|▊         | 2074/24850 [44:39<9:13:36,  1.46s/it, lr=7e-5, step_loss=0.00165]Steps:   8%|▊         | 2074/24850 [44:39<9:13:36,  1.46s/it, lr=7e-5, step_loss=0.0258] Steps:   8%|▊         | 2075/24850 [44:40<9:13:50,  1.46s/it, lr=7e-5, step_loss=0.0258]Steps:   8%|▊         | 2075/24850 [44:40<9:13:50,  1.46s/it, lr=7e-5, step_loss=0.0323]Steps:   8%|▊         | 2076/24850 [44:42<9:13:53,  1.46s/it, lr=7e-5, step_loss=0.0323]Steps:   8%|▊         | 2076/24850 [44:42<9:13:53,  1.46s/it, lr=7e-5, step_loss=0.00891]Steps:   8%|▊         | 2077/24850 [44:43<9:20:21,  1.48s/it, lr=7e-5, step_loss=0.00891]Steps:   8%|▊         | 2077/24850 [44:43<9:20:21,  1.48s/it, lr=7e-5, step_loss=0.0115] Steps:   8%|▊         | 2078/24850 [44:45<9:17:12,  1.47s/it, lr=7e-5, step_loss=0.0115]Steps:   8%|▊         | 2078/24850 [44:45<9:17:12,  1.47s/it, lr=7e-5, step_loss=0.00436]Steps:   8%|▊         | 2079/24850 [44:46<9:17:49,  1.47s/it, lr=7e-5, step_loss=0.00436]Steps:   8%|▊         | 2079/24850 [44:46<9:17:49,  1.47s/it, lr=7e-5, step_loss=0.00604]Steps:   8%|▊         | 2080/24850 [44:48<9:16:11,  1.47s/it, lr=7e-5, step_loss=0.00604]Steps:   8%|▊         | 2080/24850 [44:48<9:16:11,  1.47s/it, lr=7e-5, step_loss=0.0279] Steps:   8%|▊         | 2081/24850 [44:49<9:14:33,  1.46s/it, lr=7e-5, step_loss=0.0279]Steps:   8%|▊         | 2081/24850 [44:49<9:14:33,  1.46s/it, lr=7e-5, step_loss=0.0411]Steps:   8%|▊         | 2082/24850 [44:50<9:14:06,  1.46s/it, lr=7e-5, step_loss=0.0411]Steps:   8%|▊         | 2082/24850 [44:50<9:14:06,  1.46s/it, lr=7e-5, step_loss=0.0125] torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:   8%|▊         | 2083/24850 [44:52<9:15:12,  1.46s/it, lr=7e-5, step_loss=0.0125]Steps:   8%|▊         | 2083/24850 [44:52<9:15:12,  1.46s/it, lr=7e-5, step_loss=0.0045]Steps:   8%|▊         | 2084/24850 [44:53<9:14:28,  1.46s/it, lr=7e-5, step_loss=0.0045]Steps:   8%|▊         | 2084/24850 [44:53<9:14:28,  1.46s/it, lr=7e-5, step_loss=0.0231]Steps:   8%|▊         | 2085/24850 [44:55<9:13:36,  1.46s/it, lr=7e-5, step_loss=0.0231]Steps:   8%|▊         | 2085/24850 [44:55<9:13:36,  1.46s/it, lr=7e-5, step_loss=0.0473]Steps:   8%|▊         | 2086/24850 [44:56<9:16:14,  1.47s/it, lr=7e-5, step_loss=0.0473]Steps:   8%|▊         | 2086/24850 [44:56<9:16:14,  1.47s/it, lr=7e-5, step_loss=0.0158]Steps:   8%|▊         | 2087/24850 [44:58<9:17:01,  1.47s/it, lr=7e-5, step_loss=0.0158]Steps:   8%|▊         | 2087/24850 [44:58<9:17:01,  1.47s/it, lr=7e-5, step_loss=0.00676]Steps:   8%|▊         | 2088/24850 [44:59<9:15:48,  1.47s/it, lr=7e-5, step_loss=0.00676]Steps:   8%|▊         | 2088/24850 [44:59<9:15:48,  1.47s/it, lr=7e-5, step_loss=0.0356] Steps:   8%|▊         | 2089/24850 [45:01<9:40:13,  1.53s/it, lr=7e-5, step_loss=0.0356]Steps:   8%|▊         | 2089/24850 [45:01<9:40:13,  1.53s/it, lr=7e-5, step_loss=0.00855]Steps:   8%|▊         | 2090/24850 [45:02<9:32:05,  1.51s/it, lr=7e-5, step_loss=0.00855]Steps:   8%|▊         | 2090/24850 [45:02<9:32:05,  1.51s/it, lr=7e-5, step_loss=0.0267] Steps:   8%|▊         | 2091/24850 [45:04<9:25:46,  1.49s/it, lr=7e-5, step_loss=0.0267]Steps:   8%|▊         | 2091/24850 [45:04<9:25:46,  1.49s/it, lr=7e-5, step_loss=0.00332]Steps:   8%|▊         | 2092/24850 [45:05<9:22:14,  1.48s/it, lr=7e-5, step_loss=0.00332]Steps:   8%|▊         | 2092/24850 [45:05<9:22:14,  1.48s/it, lr=7e-5, step_loss=0.021]  Steps:   8%|▊         | 2093/24850 [45:07<9:20:14,  1.48s/it, lr=7e-5, step_loss=0.021]Steps:   8%|▊         | 2093/24850 [45:07<9:20:14,  1.48s/it, lr=7e-5, step_loss=0.0262]Steps:   8%|▊         | 2094/24850 [45:08<9:18:18,  1.47s/it, lr=7e-5, step_loss=0.0262]Steps:   8%|▊         | 2094/24850 [45:08<9:18:18,  1.47s/it, lr=7e-5, step_loss=0.0047]Steps:   8%|▊         | 2095/24850 [45:10<9:21:14,  1.48s/it, lr=7e-5, step_loss=0.0047]Steps:   8%|▊         | 2095/24850 [45:10<9:21:14,  1.48s/it, lr=7e-5, step_loss=0.0469]Steps:   8%|▊         | 2096/24850 [45:12<11:11:41,  1.77s/it, lr=7e-5, step_loss=0.0469]Steps:   8%|▊         | 2096/24850 [45:12<11:11:41,  1.77s/it, lr=7e-5, step_loss=0.0452]Steps:   8%|▊         | 2097/24850 [45:14<10:37:24,  1.68s/it, lr=7e-5, step_loss=0.0452]Steps:   8%|▊         | 2097/24850 [45:14<10:37:24,  1.68s/it, lr=7e-5, step_loss=0.0121]Steps:   8%|▊         | 2098/24850 [45:15<10:11:51,  1.61s/it, lr=7e-5, step_loss=0.0121]Steps:   8%|▊         | 2098/24850 [45:15<10:11:51,  1.61s/it, lr=7e-5, step_loss=0.0437]Steps:   8%|▊         | 2099/24850 [45:17<9:54:00,  1.57s/it, lr=7e-5, step_loss=0.0437] Steps:   8%|▊         | 2099/24850 [45:17<9:54:00,  1.57s/it, lr=7e-5, step_loss=0.14]  Steps:   8%|▊         | 2100/24850 [45:18<9:42:29,  1.54s/it, lr=7e-5, step_loss=0.14]Steps:   8%|▊         | 2100/24850 [45:18<9:42:29,  1.54s/it, lr=7e-5, step_loss=0.000658]Steps:   8%|▊         | 2101/24850 [45:20<9:34:37,  1.52s/it, lr=7e-5, step_loss=0.000658]Steps:   8%|▊         | 2101/24850 [45:20<9:34:37,  1.52s/it, lr=7e-5, step_loss=0.0365]  Steps:   8%|▊         | 2102/24850 [45:21<9:27:56,  1.50s/it, lr=7e-5, step_loss=0.0365]Steps:   8%|▊         | 2102/24850 [45:21<9:27:56,  1.50s/it, lr=7e-5, step_loss=0.0119]Steps:   8%|▊         | 2103/24850 [45:22<9:22:54,  1.48s/it, lr=7e-5, step_loss=0.0119]Steps:   8%|▊         | 2103/24850 [45:22<9:22:54,  1.48s/it, lr=7e-5, step_loss=0.00367]Steps:   8%|▊         | 2104/24850 [45:24<9:21:26,  1.48s/it, lr=7e-5, step_loss=0.00367]Steps:   8%|▊         | 2104/24850 [45:24<9:21:26,  1.48s/it, lr=7e-5, step_loss=0.00164]Steps:   8%|▊         | 2105/24850 [45:25<9:18:44,  1.47s/it, lr=7e-5, step_loss=0.00164]Steps:   8%|▊         | 2105/24850 [45:25<9:18:44,  1.47s/it, lr=7e-5, step_loss=0.0208] Steps:   8%|▊         | 2106/24850 [45:27<9:19:44,  1.48s/it, lr=7e-5, step_loss=0.0208]Steps:   8%|▊         | 2106/24850 [45:27<9:19:44,  1.48s/it, lr=7e-5, step_loss=0.0285]Steps:   8%|▊         | 2107/24850 [45:28<9:19:18,  1.48s/it, lr=7e-5, step_loss=0.0285]Steps:   8%|▊         | 2107/24850 [45:28<9:19:18,  1.48s/it, lr=7e-5, step_loss=0.0161]Steps:   8%|▊         | 2108/24850 [45:30<9:17:31,  1.47s/it, lr=7e-5, step_loss=0.0161]Steps:   8%|▊         | 2108/24850 [45:30<9:17:31,  1.47s/it, lr=7e-5, step_loss=0.0603]Steps:   8%|▊         | 2109/24850 [45:31<9:17:19,  1.47s/it, lr=7e-5, step_loss=0.0603]Steps:   8%|▊         | 2109/24850 [45:31<9:17:19,  1.47s/it, lr=7e-5, step_loss=0.0195]torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  Steps:   8%|▊         | 2110/24850 [45:33<9:17:21,  1.47s/it, lr=7e-5, step_loss=0.0195]Steps:   8%|▊         | 2110/24850 [45:33<9:17:21,  1.47s/it, lr=7e-5, step_loss=0.0239]Steps:   8%|▊         | 2111/24850 [45:34<9:17:31,  1.47s/it, lr=7e-5, step_loss=0.0239]Steps:   8%|▊         | 2111/24850 [45:34<9:17:31,  1.47s/it, lr=7e-5, step_loss=0.0217]Steps:   8%|▊         | 2112/24850 [45:36<9:16:46,  1.47s/it, lr=7e-5, step_loss=0.0217]Steps:   8%|▊         | 2112/24850 [45:36<9:16:46,  1.47s/it, lr=7e-5, step_loss=0.00791]Steps:   9%|▊         | 2113/24850 [45:37<9:16:04,  1.47s/it, lr=7e-5, step_loss=0.00791]Steps:   9%|▊         | 2113/24850 [45:37<9:16:04,  1.47s/it, lr=7e-5, step_loss=0.00188]Steps:   9%|▊         | 2114/24850 [45:39<9:14:47,  1.46s/it, lr=7e-5, step_loss=0.00188]Steps:   9%|▊         | 2114/24850 [45:39<9:14:47,  1.46s/it, lr=7e-5, step_loss=8.03e-5]Steps:   9%|▊         | 2115/24850 [45:40<9:14:13,  1.46s/it, lr=7e-5, step_loss=8.03e-5]Steps:   9%|▊         | 2115/24850 [45:40<9:14:13,  1.46s/it, lr=7e-5, step_loss=0.00632]Steps:   9%|▊         | 2116/24850 [45:41<9:13:57,  1.46s/it, lr=7e-5, step_loss=0.00632]Steps:   9%|▊         | 2116/24850 [45:41<9:13:57,  1.46s/it, lr=7e-5, step_loss=0.0313] Steps:   9%|▊         | 2117/24850 [45:43<9:14:42,  1.46s/it, lr=7e-5, step_loss=0.0313]Steps:   9%|▊         | 2117/24850 [45:43<9:14:42,  1.46s/it, lr=7e-5, step_loss=0.034] Steps:   9%|▊         | 2118/24850 [45:44<9:16:02,  1.47s/it, lr=7e-5, step_loss=0.034]Steps:   9%|▊         | 2118/24850 [45:44<9:16:02,  1.47s/it, lr=7e-5, step_loss=0.0135]Steps:   9%|▊         | 2119/24850 [45:46<9:16:17,  1.47s/it, lr=7e-5, step_loss=0.0135]Steps:   9%|▊         | 2119/24850 [45:46<9:16:17,  1.47s/it, lr=7e-5, step_loss=0.00952]Steps:   9%|▊         | 2120/24850 [45:47<9:17:12,  1.47s/it, lr=7e-5, step_loss=0.00952]Steps:   9%|▊         | 2120/24850 [45:47<9:17:12,  1.47s/it, lr=7e-5, step_loss=0.0579] Steps:   9%|▊         | 2121/24850 [45:49<9:15:20,  1.47s/it, lr=7e-5, step_loss=0.0579]Steps:   9%|▊         | 2121/24850 [45:49<9:15:20,  1.47s/it, lr=7e-5, step_loss=0.00709]Steps:   9%|▊         | 2122/24850 [45:50<9:15:08,  1.47s/it, lr=7e-5, step_loss=0.00709]Steps:   9%|▊         | 2122/24850 [45:50<9:15:08,  1.47s/it, lr=7e-5, step_loss=0.00402]Steps:   9%|▊         | 2123/24850 [45:52<9:14:46,  1.46s/it, lr=7e-5, step_loss=0.00402]Steps:   9%|▊         | 2123/24850 [45:52<9:14:46,  1.46s/it, lr=7e-5, step_loss=0.00178]Steps:   9%|▊         | 2124/24850 [45:53<9:15:33,  1.47s/it, lr=7e-5, step_loss=0.00178]Steps:   9%|▊         | 2124/24850 [45:53<9:15:33,  1.47s/it, lr=7e-5, step_loss=0.0304] Steps:   9%|▊         | 2125/24850 [45:55<9:15:50,  1.47s/it, lr=7e-5, step_loss=0.0304]Steps:   9%|▊         | 2125/24850 [45:55<9:15:50,  1.47s/it, lr=7e-5, step_loss=0.0303]Steps:   9%|▊         | 2126/24850 [45:56<9:16:12,  1.47s/it, lr=7e-5, step_loss=0.0303]Steps:   9%|▊         | 2126/24850 [45:56<9:16:12,  1.47s/it, lr=7e-5, step_loss=0.0822]Steps:   9%|▊         | 2127/24850 [45:58<9:15:10,  1.47s/it, lr=7e-5, step_loss=0.0822]Steps:   9%|▊         | 2127/24850 [45:58<9:15:10,  1.47s/it, lr=7e-5, step_loss=0.0107]Steps:   9%|▊         | 2128/24850 [45:59<9:15:25,  1.47s/it, lr=7e-5, step_loss=0.0107]Steps:   9%|▊         | 2128/24850 [45:59<9:15:25,  1.47s/it, lr=7e-5, step_loss=0.0454]Steps:   9%|▊         | 2129/24850 [46:01<9:15:05,  1.47s/it, lr=7e-5, step_loss=0.0454]Steps:   9%|▊         | 2129/24850 [46:01<9:15:05,  1.47s/it, lr=7e-5, step_loss=0.0494]Steps:   9%|▊         | 2130/24850 [46:02<9:15:01,  1.47s/it, lr=7e-5, step_loss=0.0494]Steps:   9%|▊         | 2130/24850 [46:02<9:15:01,  1.47s/it, lr=7e-5, step_loss=0.104] Steps:   9%|▊         | 2131/24850 [46:03<9:15:05,  1.47s/it, lr=7e-5, step_loss=0.104]Steps:   9%|▊         | 2131/24850 [46:03<9:15:05,  1.47s/it, lr=7e-5, step_loss=0.0134]Steps:   9%|▊         | 2132/24850 [46:05<9:15:21,  1.47s/it, lr=7e-5, step_loss=0.0134]Steps:   9%|▊         | 2132/24850 [46:05<9:15:21,  1.47s/it, lr=7e-5, step_loss=0.0364]Steps:   9%|▊         | 2133/24850 [46:06<9:15:07,  1.47s/it, lr=7e-5, step_loss=0.0364]Steps:   9%|▊         | 2133/24850 [46:06<9:15:07,  1.47s/it, lr=7e-5, step_loss=0.0438]Steps:   9%|▊         | 2134/24850 [46:08<9:15:33,  1.47s/it, lr=7e-5, step_loss=0.0438]Steps:   9%|▊         | 2134/24850 [46:08<9:15:33,  1.47s/it, lr=7e-5, step_loss=0.00667]Steps:   9%|▊         | 2135/24850 [46:09<9:14:48,  1.47s/it, lr=7e-5, step_loss=0.00667]Steps:   9%|▊         | 2135/24850 [46:09<9:14:48,  1.47s/it, lr=7e-5, step_loss=0.105]  Steps:   9%|▊         | 2136/24850 [46:11<9:15:16,  1.47s/it, lr=7e-5, step_loss=0.105]Steps:   9%|▊         | 2136/24850 [46:11<9:15:16,  1.47s/it, lr=7e-5, step_loss=0.103]Steps:   9%|▊         | 2137/24850 [46:12<9:14:31,  1.46s/it, lr=7e-5, step_loss=0.103]Steps:   9%|▊         | 2137/24850 [46:12<9:14:31,  1.46s/it, lr=7e-5, step_loss=0.0345]mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:   9%|▊         | 2138/24850 [46:14<9:13:41,  1.46s/it, lr=7e-5, step_loss=0.0345]Steps:   9%|▊         | 2138/24850 [46:14<9:13:41,  1.46s/it, lr=7e-5, step_loss=0.00782]Steps:   9%|▊         | 2139/24850 [46:15<9:13:53,  1.46s/it, lr=7e-5, step_loss=0.00782]Steps:   9%|▊         | 2139/24850 [46:15<9:13:53,  1.46s/it, lr=7e-5, step_loss=0.0204] Steps:   9%|▊         | 2140/24850 [46:17<9:14:13,  1.46s/it, lr=7e-5, step_loss=0.0204]Steps:   9%|▊         | 2140/24850 [46:17<9:14:13,  1.46s/it, lr=7e-5, step_loss=0.0156]Steps:   9%|▊         | 2141/24850 [46:18<9:14:26,  1.46s/it, lr=7e-5, step_loss=0.0156]Steps:   9%|▊         | 2141/24850 [46:18<9:14:26,  1.46s/it, lr=7e-5, step_loss=0.0636]Steps:   9%|▊         | 2142/24850 [46:20<9:14:54,  1.47s/it, lr=7e-5, step_loss=0.0636]Steps:   9%|▊         | 2142/24850 [46:20<9:14:54,  1.47s/it, lr=7e-5, step_loss=0.0244]Steps:   9%|▊         | 2143/24850 [46:21<9:15:20,  1.47s/it, lr=7e-5, step_loss=0.0244]Steps:   9%|▊         | 2143/24850 [46:21<9:15:20,  1.47s/it, lr=7e-5, step_loss=0.00601]Steps:   9%|▊         | 2144/24850 [46:23<9:15:06,  1.47s/it, lr=7e-5, step_loss=0.00601]Steps:   9%|▊         | 2144/24850 [46:23<9:15:06,  1.47s/it, lr=7e-5, step_loss=0.0413] Steps:   9%|▊         | 2145/24850 [46:24<9:14:06,  1.46s/it, lr=7e-5, step_loss=0.0413]Steps:   9%|▊         | 2145/24850 [46:24<9:14:06,  1.46s/it, lr=7e-5, step_loss=0.0685]Steps:   9%|▊         | 2146/24850 [46:26<11:04:09,  1.76s/it, lr=7e-5, step_loss=0.0685]Steps:   9%|▊         | 2146/24850 [46:26<11:04:09,  1.76s/it, lr=7e-5, step_loss=0.0183]Steps:   9%|▊         | 2147/24850 [46:28<10:30:55,  1.67s/it, lr=7e-5, step_loss=0.0183]Steps:   9%|▊         | 2147/24850 [46:28<10:30:55,  1.67s/it, lr=7e-5, step_loss=0.00341]Steps:   9%|▊         | 2148/24850 [46:29<10:08:22,  1.61s/it, lr=7e-5, step_loss=0.00341]Steps:   9%|▊         | 2148/24850 [46:29<10:08:22,  1.61s/it, lr=7e-5, step_loss=0.0422] Steps:   9%|▊         | 2149/24850 [46:31<9:51:36,  1.56s/it, lr=7e-5, step_loss=0.0422] Steps:   9%|▊         | 2149/24850 [46:31<9:51:36,  1.56s/it, lr=7e-5, step_loss=0.0327]Steps:   9%|▊         | 2150/24850 [46:32<9:40:15,  1.53s/it, lr=7e-5, step_loss=0.0327]Steps:   9%|▊         | 2150/24850 [46:32<9:40:15,  1.53s/it, lr=7e-5, step_loss=0.0145]Steps:   9%|▊         | 2151/24850 [46:34<9:31:38,  1.51s/it, lr=7e-5, step_loss=0.0145]Steps:   9%|▊         | 2151/24850 [46:34<9:31:38,  1.51s/it, lr=7e-5, step_loss=0.00492]Steps:   9%|▊         | 2152/24850 [46:35<9:26:53,  1.50s/it, lr=7e-5, step_loss=0.00492]Steps:   9%|▊         | 2152/24850 [46:35<9:26:53,  1.50s/it, lr=7e-5, step_loss=0.0306] Steps:   9%|▊         | 2153/24850 [46:37<9:22:46,  1.49s/it, lr=7e-5, step_loss=0.0306]Steps:   9%|▊         | 2153/24850 [46:37<9:22:46,  1.49s/it, lr=7e-5, step_loss=0.038] Steps:   9%|▊         | 2154/24850 [46:38<9:20:25,  1.48s/it, lr=7e-5, step_loss=0.038]Steps:   9%|▊         | 2154/24850 [46:38<9:20:25,  1.48s/it, lr=7e-5, step_loss=0.0128]Steps:   9%|▊         | 2155/24850 [46:40<9:19:44,  1.48s/it, lr=7e-5, step_loss=0.0128]Steps:   9%|▊         | 2155/24850 [46:40<9:19:44,  1.48s/it, lr=7e-5, step_loss=0.077] Steps:   9%|▊         | 2156/24850 [46:41<9:18:33,  1.48s/it, lr=7e-5, step_loss=0.077]Steps:   9%|▊         | 2156/24850 [46:41<9:18:33,  1.48s/it, lr=7e-5, step_loss=0.0576]Steps:   9%|▊         | 2157/24850 [46:43<9:24:46,  1.49s/it, lr=7e-5, step_loss=0.0576]Steps:   9%|▊         | 2157/24850 [46:43<9:24:46,  1.49s/it, lr=7e-5, step_loss=0.00498]Steps:   9%|▊         | 2158/24850 [46:44<9:22:43,  1.49s/it, lr=7e-5, step_loss=0.00498]Steps:   9%|▊         | 2158/24850 [46:44<9:22:43,  1.49s/it, lr=7e-5, step_loss=0.00774]Steps:   9%|▊         | 2159/24850 [46:46<9:39:46,  1.53s/it, lr=7e-5, step_loss=0.00774]Steps:   9%|▊         | 2159/24850 [46:46<9:39:46,  1.53s/it, lr=7e-5, step_loss=0.00645]Steps:   9%|▊         | 2160/24850 [46:47<9:32:48,  1.51s/it, lr=7e-5, step_loss=0.00645]Steps:   9%|▊         | 2160/24850 [46:47<9:32:48,  1.51s/it, lr=7e-5, step_loss=0.000794]Steps:   9%|▊         | 2161/24850 [46:49<9:28:44,  1.50s/it, lr=7e-5, step_loss=0.000794]Steps:   9%|▊         | 2161/24850 [46:49<9:28:44,  1.50s/it, lr=7e-5, step_loss=0.00383] Steps:   9%|▊         | 2162/24850 [46:50<9:25:55,  1.50s/it, lr=7e-5, step_loss=0.00383]Steps:   9%|▊         | 2162/24850 [46:50<9:25:55,  1.50s/it, lr=7e-5, step_loss=0.0419] Steps:   9%|▊         | 2163/24850 [46:52<9:22:17,  1.49s/it, lr=7e-5, step_loss=0.0419]Steps:   9%|▊         | 2163/24850 [46:52<9:22:17,  1.49s/it, lr=7e-5, step_loss=0.00941]Steps:   9%|▊         | 2164/24850 [46:53<9:19:24,  1.48s/it, lr=7e-5, step_loss=0.00941]Steps:   9%|▊         | 2164/24850 [46:53<9:19:24,  1.48s/it, lr=7e-5, step_loss=0.0108] torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) Steps:   9%|▊         | 2165/24850 [46:55<9:18:26,  1.48s/it, lr=7e-5, step_loss=0.0108]Steps:   9%|▊         | 2165/24850 [46:55<9:18:26,  1.48s/it, lr=7e-5, step_loss=0.0361]Steps:   9%|▊         | 2166/24850 [46:56<9:17:00,  1.47s/it, lr=7e-5, step_loss=0.0361]Steps:   9%|▊         | 2166/24850 [46:56<9:17:00,  1.47s/it, lr=7e-5, step_loss=0.00939]Steps:   9%|▊         | 2167/24850 [46:58<9:16:14,  1.47s/it, lr=7e-5, step_loss=0.00939]Steps:   9%|▊         | 2167/24850 [46:58<9:16:14,  1.47s/it, lr=7e-5, step_loss=0.00798]Steps:   9%|▊         | 2168/24850 [46:59<9:16:29,  1.47s/it, lr=7e-5, step_loss=0.00798]Steps:   9%|▊         | 2168/24850 [46:59<9:16:29,  1.47s/it, lr=7e-5, step_loss=0.054]  Steps:   9%|▊         | 2169/24850 [47:00<9:16:16,  1.47s/it, lr=7e-5, step_loss=0.054]Steps:   9%|▊         | 2169/24850 [47:00<9:16:16,  1.47s/it, lr=7e-5, step_loss=0.0351]Steps:   9%|▊         | 2170/24850 [47:02<9:13:53,  1.47s/it, lr=7e-5, step_loss=0.0351]Steps:   9%|▊         | 2170/24850 [47:02<9:13:53,  1.47s/it, lr=7e-5, step_loss=0.00825]Steps:   9%|▊         | 2171/24850 [47:03<9:13:33,  1.46s/it, lr=7e-5, step_loss=0.00825]Steps:   9%|▊         | 2171/24850 [47:03<9:13:33,  1.46s/it, lr=7e-5, step_loss=0.0302] Steps:   9%|▊         | 2172/24850 [47:05<9:13:20,  1.46s/it, lr=7e-5, step_loss=0.0302]Steps:   9%|▊         | 2172/24850 [47:05<9:13:20,  1.46s/it, lr=7e-5, step_loss=0.002] Steps:   9%|▊         | 2173/24850 [47:06<9:12:52,  1.46s/it, lr=7e-5, step_loss=0.002]Steps:   9%|▊         | 2173/24850 [47:06<9:12:52,  1.46s/it, lr=7e-5, step_loss=0.00764]Steps:   9%|▊         | 2174/24850 [47:08<9:13:53,  1.47s/it, lr=7e-5, step_loss=0.00764]Steps:   9%|▊         | 2174/24850 [47:08<9:13:53,  1.47s/it, lr=7e-5, step_loss=0.0205] Steps:   9%|▉         | 2175/24850 [47:09<9:14:16,  1.47s/it, lr=7e-5, step_loss=0.0205]Steps:   9%|▉         | 2175/24850 [47:09<9:14:16,  1.47s/it, lr=7e-5, step_loss=0.00608]Steps:   9%|▉         | 2176/24850 [47:11<9:15:05,  1.47s/it, lr=7e-5, step_loss=0.00608]Steps:   9%|▉         | 2176/24850 [47:11<9:15:05,  1.47s/it, lr=7e-5, step_loss=0.0107] Steps:   9%|▉         | 2177/24850 [47:12<9:15:46,  1.47s/it, lr=7e-5, step_loss=0.0107]Steps:   9%|▉         | 2177/24850 [47:12<9:15:46,  1.47s/it, lr=7e-5, step_loss=0.0047]Steps:   9%|▉         | 2178/24850 [47:14<9:16:08,  1.47s/it, lr=7e-5, step_loss=0.0047]Steps:   9%|▉         | 2178/24850 [47:14<9:16:08,  1.47s/it, lr=7e-5, step_loss=0.0588]Steps:   9%|▉         | 2179/24850 [47:15<9:16:05,  1.47s/it, lr=7e-5, step_loss=0.0588]Steps:   9%|▉         | 2179/24850 [47:15<9:16:05,  1.47s/it, lr=7e-5, step_loss=0.011] Steps:   9%|▉         | 2180/24850 [47:17<9:15:48,  1.47s/it, lr=7e-5, step_loss=0.011]Steps:   9%|▉         | 2180/24850 [47:17<9:15:48,  1.47s/it, lr=7e-5, step_loss=0.0513]Steps:   9%|▉         | 2181/24850 [47:18<9:14:52,  1.47s/it, lr=7e-5, step_loss=0.0513]Steps:   9%|▉         | 2181/24850 [47:18<9:14:52,  1.47s/it, lr=7e-5, step_loss=0.00143]Steps:   9%|▉         | 2182/24850 [47:20<9:17:22,  1.48s/it, lr=7e-5, step_loss=0.00143]Steps:   9%|▉         | 2182/24850 [47:20<9:17:22,  1.48s/it, lr=7e-5, step_loss=0.0191] Steps:   9%|▉         | 2183/24850 [47:21<9:19:17,  1.48s/it, lr=7e-5, step_loss=0.0191]Steps:   9%|▉         | 2183/24850 [47:21<9:19:17,  1.48s/it, lr=7e-5, step_loss=0.0476]Steps:   9%|▉         | 2184/24850 [47:23<9:17:37,  1.48s/it, lr=7e-5, step_loss=0.0476]Steps:   9%|▉         | 2184/24850 [47:23<9:17:37,  1.48s/it, lr=7e-5, step_loss=0.059] Steps:   9%|▉         | 2185/24850 [47:24<9:17:31,  1.48s/it, lr=7e-5, step_loss=0.059]Steps:   9%|▉         | 2185/24850 [47:24<9:17:31,  1.48s/it, lr=7e-5, step_loss=0.0029]Steps:   9%|▉         | 2186/24850 [47:25<9:17:01,  1.47s/it, lr=7e-5, step_loss=0.0029]Steps:   9%|▉         | 2186/24850 [47:25<9:17:01,  1.47s/it, lr=7e-5, step_loss=0.0432]Steps:   9%|▉         | 2187/24850 [47:27<9:17:08,  1.48s/it, lr=7e-5, step_loss=0.0432]Steps:   9%|▉         | 2187/24850 [47:27<9:17:08,  1.48s/it, lr=7e-5, step_loss=0.00929]Steps:   9%|▉         | 2188/24850 [47:28<9:14:46,  1.47s/it, lr=7e-5, step_loss=0.00929]Steps:   9%|▉         | 2188/24850 [47:28<9:14:46,  1.47s/it, lr=7e-5, step_loss=0.0475] Steps:   9%|▉         | 2189/24850 [47:30<9:13:29,  1.47s/it, lr=7e-5, step_loss=0.0475]Steps:   9%|▉         | 2189/24850 [47:30<9:13:29,  1.47s/it, lr=7e-5, step_loss=0.00784]Steps:   9%|▉         | 2190/24850 [47:31<9:14:10,  1.47s/it, lr=7e-5, step_loss=0.00784]Steps:   9%|▉         | 2190/24850 [47:31<9:14:10,  1.47s/it, lr=7e-5, step_loss=0.0196] Steps:   9%|▉         | 2191/24850 [47:33<9:14:17,  1.47s/it, lr=7e-5, step_loss=0.0196]Steps:   9%|▉         | 2191/24850 [47:33<9:14:17,  1.47s/it, lr=7e-5, step_loss=0.0194]torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:   9%|▉         | 2192/24850 [47:34<9:14:27,  1.47s/it, lr=7e-5, step_loss=0.0194]Steps:   9%|▉         | 2192/24850 [47:34<9:14:27,  1.47s/it, lr=7e-5, step_loss=0.00887]Steps:   9%|▉         | 2193/24850 [47:36<9:14:13,  1.47s/it, lr=7e-5, step_loss=0.00887]Steps:   9%|▉         | 2193/24850 [47:36<9:14:13,  1.47s/it, lr=7e-5, step_loss=0.0146] Steps:   9%|▉         | 2194/24850 [47:37<9:13:40,  1.47s/it, lr=7e-5, step_loss=0.0146]Steps:   9%|▉         | 2194/24850 [47:37<9:13:40,  1.47s/it, lr=7e-5, step_loss=0.00887]Steps:   9%|▉         | 2195/24850 [47:39<9:15:28,  1.47s/it, lr=7e-5, step_loss=0.00887]Steps:   9%|▉         | 2195/24850 [47:39<9:15:28,  1.47s/it, lr=7e-5, step_loss=0.0359] Steps:   9%|▉         | 2196/24850 [47:41<11:06:09,  1.76s/it, lr=7e-5, step_loss=0.0359]Steps:   9%|▉         | 2196/24850 [47:41<11:06:09,  1.76s/it, lr=7e-5, step_loss=0.0196]Steps:   9%|▉         | 2197/24850 [47:43<10:50:38,  1.72s/it, lr=7e-5, step_loss=0.0196]Steps:   9%|▉         | 2197/24850 [47:43<10:50:38,  1.72s/it, lr=7e-5, step_loss=0.0523]Steps:   9%|▉         | 2198/24850 [47:44<10:33:53,  1.68s/it, lr=7e-5, step_loss=0.0523]Steps:   9%|▉         | 2198/24850 [47:44<10:33:53,  1.68s/it, lr=7e-5, step_loss=0.00458]Steps:   9%|▉         | 2199/24850 [47:46<10:14:04,  1.63s/it, lr=7e-5, step_loss=0.00458]Steps:   9%|▉         | 2199/24850 [47:46<10:14:04,  1.63s/it, lr=7e-5, step_loss=0.0139] Steps:   9%|▉         | 2200/24850 [47:47<9:57:00,  1.58s/it, lr=7e-5, step_loss=0.0139] Steps:   9%|▉         | 2200/24850 [47:47<9:57:00,  1.58s/it, lr=7e-5, step_loss=0.0112]Steps:   9%|▉         | 2201/24850 [47:49<9:45:38,  1.55s/it, lr=7e-5, step_loss=0.0112]Steps:   9%|▉         | 2201/24850 [47:49<9:45:38,  1.55s/it, lr=7e-5, step_loss=0.0608]Steps:   9%|▉         | 2202/24850 [47:50<9:36:15,  1.53s/it, lr=7e-5, step_loss=0.0608]Steps:   9%|▉         | 2202/24850 [47:50<9:36:15,  1.53s/it, lr=7e-5, step_loss=0.0631]Steps:   9%|▉         | 2203/24850 [47:52<9:28:41,  1.51s/it, lr=7e-5, step_loss=0.0631]Steps:   9%|▉         | 2203/24850 [47:52<9:28:41,  1.51s/it, lr=7e-5, step_loss=0.0101]Steps:   9%|▉         | 2204/24850 [47:53<9:26:14,  1.50s/it, lr=7e-5, step_loss=0.0101]Steps:   9%|▉         | 2204/24850 [47:53<9:26:14,  1.50s/it, lr=7e-5, step_loss=0.0394]Steps:   9%|▉         | 2205/24850 [47:55<9:22:28,  1.49s/it, lr=7e-5, step_loss=0.0394]Steps:   9%|▉         | 2205/24850 [47:55<9:22:28,  1.49s/it, lr=7e-5, step_loss=0.0104]Steps:   9%|▉         | 2206/24850 [47:56<9:20:15,  1.48s/it, lr=7e-5, step_loss=0.0104]Steps:   9%|▉         | 2206/24850 [47:56<9:20:15,  1.48s/it, lr=7e-5, step_loss=0.0513]Steps:   9%|▉         | 2207/24850 [47:58<9:19:18,  1.48s/it, lr=7e-5, step_loss=0.0513]Steps:   9%|▉         | 2207/24850 [47:58<9:19:18,  1.48s/it, lr=7e-5, step_loss=0.0249]Steps:   9%|▉         | 2208/24850 [47:59<9:17:53,  1.48s/it, lr=7e-5, step_loss=0.0249]Steps:   9%|▉         | 2208/24850 [47:59<9:17:53,  1.48s/it, lr=7e-5, step_loss=0.00979]Steps:   9%|▉         | 2209/24850 [48:01<9:16:56,  1.48s/it, lr=7e-5, step_loss=0.00979]Steps:   9%|▉         | 2209/24850 [48:01<9:16:56,  1.48s/it, lr=7e-5, step_loss=0.0596] Steps:   9%|▉         | 2210/24850 [48:02<9:16:31,  1.47s/it, lr=7e-5, step_loss=0.0596]Steps:   9%|▉         | 2210/24850 [48:02<9:16:31,  1.47s/it, lr=7e-5, step_loss=0.0706]Steps:   9%|▉         | 2211/24850 [48:03<9:16:13,  1.47s/it, lr=7e-5, step_loss=0.0706]Steps:   9%|▉         | 2211/24850 [48:03<9:16:13,  1.47s/it, lr=7e-5, step_loss=0.0354]Steps:   9%|▉         | 2212/24850 [48:05<9:13:34,  1.47s/it, lr=7e-5, step_loss=0.0354]Steps:   9%|▉         | 2212/24850 [48:05<9:13:34,  1.47s/it, lr=7e-5, step_loss=0.0352]Steps:   9%|▉         | 2213/24850 [48:06<9:11:55,  1.46s/it, lr=7e-5, step_loss=0.0352]Steps:   9%|▉         | 2213/24850 [48:06<9:11:55,  1.46s/it, lr=7e-5, step_loss=0.0041]Steps:   9%|▉         | 2214/24850 [48:08<9:12:36,  1.46s/it, lr=7e-5, step_loss=0.0041]Steps:   9%|▉         | 2214/24850 [48:08<9:12:36,  1.46s/it, lr=7e-5, step_loss=0.112] Steps:   9%|▉         | 2215/24850 [48:09<9:12:19,  1.46s/it, lr=7e-5, step_loss=0.112]Steps:   9%|▉         | 2215/24850 [48:09<9:12:19,  1.46s/it, lr=7e-5, step_loss=0.0201]Steps:   9%|▉         | 2216/24850 [48:11<9:12:07,  1.46s/it, lr=7e-5, step_loss=0.0201]Steps:   9%|▉         | 2216/24850 [48:11<9:12:07,  1.46s/it, lr=7e-5, step_loss=0.00914]Steps:   9%|▉         | 2217/24850 [48:12<9:12:25,  1.46s/it, lr=7e-5, step_loss=0.00914]Steps:   9%|▉         | 2217/24850 [48:12<9:12:25,  1.46s/it, lr=7e-5, step_loss=0.00424]Steps:   9%|▉         | 2218/24850 [48:14<9:12:28,  1.46s/it, lr=7e-5, step_loss=0.00424]Steps:   9%|▉         | 2218/24850 [48:14<9:12:28,  1.46s/it, lr=7e-5, step_loss=0.0621] Steps:   9%|▉         | 2219/24850 [48:15<9:11:38,  1.46s/it, lr=7e-5, step_loss=0.0621]Steps:   9%|▉         | 2219/24850 [48:15<9:11:38,  1.46s/it, lr=7e-5, step_loss=0.00348]torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
Steps:   9%|▉         | 2220/24850 [48:17<9:10:36,  1.46s/it, lr=7e-5, step_loss=0.00348]Steps:   9%|▉         | 2220/24850 [48:17<9:10:36,  1.46s/it, lr=7e-5, step_loss=0.0139] Steps:   9%|▉         | 2221/24850 [48:18<9:11:45,  1.46s/it, lr=7e-5, step_loss=0.0139]Steps:   9%|▉         | 2221/24850 [48:18<9:11:45,  1.46s/it, lr=7e-5, step_loss=0.0123]Steps:   9%|▉         | 2222/24850 [48:20<9:10:30,  1.46s/it, lr=7e-5, step_loss=0.0123]Steps:   9%|▉         | 2222/24850 [48:20<9:10:30,  1.46s/it, lr=7e-5, step_loss=0.00267]Steps:   9%|▉         | 2223/24850 [48:21<9:10:48,  1.46s/it, lr=7e-5, step_loss=0.00267]Steps:   9%|▉         | 2223/24850 [48:21<9:10:48,  1.46s/it, lr=7e-5, step_loss=0.0222] Steps:   9%|▉         | 2224/24850 [48:22<9:11:28,  1.46s/it, lr=7e-5, step_loss=0.0222]Steps:   9%|▉         | 2224/24850 [48:22<9:11:28,  1.46s/it, lr=7e-5, step_loss=0.0145]Steps:   9%|▉         | 2225/24850 [48:24<9:12:31,  1.47s/it, lr=7e-5, step_loss=0.0145]Steps:   9%|▉         | 2225/24850 [48:24<9:12:31,  1.47s/it, lr=7e-5, step_loss=0.0637]Steps:   9%|▉         | 2226/24850 [48:25<9:11:23,  1.46s/it, lr=7e-5, step_loss=0.0637]Steps:   9%|▉         | 2226/24850 [48:25<9:11:23,  1.46s/it, lr=7e-5, step_loss=0.00788]Steps:   9%|▉         | 2227/24850 [48:27<9:11:00,  1.46s/it, lr=7e-5, step_loss=0.00788]Steps:   9%|▉         | 2227/24850 [48:27<9:11:00,  1.46s/it, lr=7e-5, step_loss=0.106]  Steps:   9%|▉         | 2228/24850 [48:28<9:12:23,  1.47s/it, lr=7e-5, step_loss=0.106]Steps:   9%|▉         | 2228/24850 [48:28<9:12:23,  1.47s/it, lr=7e-5, step_loss=0.068]Steps:   9%|▉         | 2229/24850 [48:30<9:12:30,  1.47s/it, lr=7e-5, step_loss=0.068]Steps:   9%|▉         | 2229/24850 [48:30<9:12:30,  1.47s/it, lr=7e-5, step_loss=0.0279]Steps:   9%|▉         | 2230/24850 [48:31<9:13:07,  1.47s/it, lr=7e-5, step_loss=0.0279]Steps:   9%|▉         | 2230/24850 [48:31<9:13:07,  1.47s/it, lr=7e-5, step_loss=0.013] Steps:   9%|▉         | 2231/24850 [48:33<9:13:14,  1.47s/it, lr=7e-5, step_loss=0.013]Steps:   9%|▉         | 2231/24850 [48:33<9:13:14,  1.47s/it, lr=7e-5, step_loss=0.0323]Steps:   9%|▉         | 2232/24850 [48:34<9:13:55,  1.47s/it, lr=7e-5, step_loss=0.0323]Steps:   9%|▉         | 2232/24850 [48:34<9:13:55,  1.47s/it, lr=7e-5, step_loss=0.0141]Steps:   9%|▉         | 2233/24850 [48:36<9:14:53,  1.47s/it, lr=7e-5, step_loss=0.0141]Steps:   9%|▉         | 2233/24850 [48:36<9:14:53,  1.47s/it, lr=7e-5, step_loss=0.0106]Steps:   9%|▉         | 2234/24850 [48:37<9:15:15,  1.47s/it, lr=7e-5, step_loss=0.0106]Steps:   9%|▉         | 2234/24850 [48:37<9:15:15,  1.47s/it, lr=7e-5, step_loss=0.0558]Steps:   9%|▉         | 2235/24850 [48:39<9:15:28,  1.47s/it, lr=7e-5, step_loss=0.0558]Steps:   9%|▉         | 2235/24850 [48:39<9:15:28,  1.47s/it, lr=7e-5, step_loss=0.0849]Steps:   9%|▉         | 2236/24850 [48:40<9:14:03,  1.47s/it, lr=7e-5, step_loss=0.0849]Steps:   9%|▉         | 2236/24850 [48:40<9:14:03,  1.47s/it, lr=7e-5, step_loss=0.0391]Steps:   9%|▉         | 2237/24850 [48:42<9:15:06,  1.47s/it, lr=7e-5, step_loss=0.0391]Steps:   9%|▉         | 2237/24850 [48:42<9:15:06,  1.47s/it, lr=7e-5, step_loss=0.00871]Steps:   9%|▉         | 2238/24850 [48:43<9:16:50,  1.48s/it, lr=7e-5, step_loss=0.00871]Steps:   9%|▉         | 2238/24850 [48:43<9:16:50,  1.48s/it, lr=7e-5, step_loss=0.0582] Steps:   9%|▉         | 2239/24850 [48:45<9:16:04,  1.48s/it, lr=7e-5, step_loss=0.0582]Steps:   9%|▉         | 2239/24850 [48:45<9:16:04,  1.48s/it, lr=7e-5, step_loss=0.00484]Steps:   9%|▉         | 2240/24850 [48:46<9:15:54,  1.48s/it, lr=7e-5, step_loss=0.00484]Steps:   9%|▉         | 2240/24850 [48:46<9:15:54,  1.48s/it, lr=7e-5, step_loss=0.00596]Steps:   9%|▉         | 2241/24850 [48:48<9:16:08,  1.48s/it, lr=7e-5, step_loss=0.00596]Steps:   9%|▉         | 2241/24850 [48:48<9:16:08,  1.48s/it, lr=7e-5, step_loss=0.0107] Steps:   9%|▉         | 2242/24850 [48:49<9:13:42,  1.47s/it, lr=7e-5, step_loss=0.0107]Steps:   9%|▉         | 2242/24850 [48:49<9:13:42,  1.47s/it, lr=7e-5, step_loss=0.0347]Steps:   9%|▉         | 2243/24850 [48:50<9:13:26,  1.47s/it, lr=7e-5, step_loss=0.0347]Steps:   9%|▉         | 2243/24850 [48:50<9:13:26,  1.47s/it, lr=7e-5, step_loss=0.0134]Steps:   9%|▉         | 2244/24850 [48:52<9:12:43,  1.47s/it, lr=7e-5, step_loss=0.0134]Steps:   9%|▉         | 2244/24850 [48:52<9:12:43,  1.47s/it, lr=7e-5, step_loss=0.00199]Steps:   9%|▉         | 2245/24850 [48:53<9:12:35,  1.47s/it, lr=7e-5, step_loss=0.00199]Steps:   9%|▉         | 2245/24850 [48:53<9:12:35,  1.47s/it, lr=7e-5, step_loss=0.00856]Steps:   9%|▉         | 2246/24850 [48:56<11:09:58,  1.78s/it, lr=7e-5, step_loss=0.00856]Steps:   9%|▉         | 2246/24850 [48:56<11:09:58,  1.78s/it, lr=7e-5, step_loss=0.159]  (512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512)Steps:   9%|▉         | 2247/24850 [48:57<10:36:15,  1.69s/it, lr=7e-5, step_loss=0.159]Steps:   9%|▉         | 2247/24850 [48:57<10:36:15,  1.69s/it, lr=7e-5, step_loss=0.08] Steps:   9%|▉         | 2248/24850 [48:59<10:11:17,  1.62s/it, lr=7e-5, step_loss=0.08]Steps:   9%|▉         | 2248/24850 [48:59<10:11:17,  1.62s/it, lr=7e-5, step_loss=0.0243]Steps:   9%|▉         | 2249/24850 [49:00<9:53:00,  1.57s/it, lr=7e-5, step_loss=0.0243] Steps:   9%|▉         | 2249/24850 [49:00<9:53:00,  1.57s/it, lr=7e-5, step_loss=0.00342]Steps:   9%|▉         | 2250/24850 [49:02<9:39:38,  1.54s/it, lr=7e-5, step_loss=0.00342]Steps:   9%|▉         | 2250/24850 [49:02<9:39:38,  1.54s/it, lr=7e-5, step_loss=0.0106] Steps:   9%|▉         | 2251/24850 [49:03<9:30:38,  1.52s/it, lr=7e-5, step_loss=0.0106]Steps:   9%|▉         | 2251/24850 [49:03<9:30:38,  1.52s/it, lr=7e-5, step_loss=0.00339]Steps:   9%|▉         | 2252/24850 [49:05<9:24:56,  1.50s/it, lr=7e-5, step_loss=0.00339]Steps:   9%|▉         | 2252/24850 [49:05<9:24:56,  1.50s/it, lr=7e-5, step_loss=0.00304]Steps:   9%|▉         | 2253/24850 [49:06<9:20:21,  1.49s/it, lr=7e-5, step_loss=0.00304]Steps:   9%|▉         | 2253/24850 [49:06<9:20:21,  1.49s/it, lr=7e-5, step_loss=0.0102] Steps:   9%|▉         | 2254/24850 [49:08<9:18:49,  1.48s/it, lr=7e-5, step_loss=0.0102]Steps:   9%|▉         | 2254/24850 [49:08<9:18:49,  1.48s/it, lr=7e-5, step_loss=0.0467]Steps:   9%|▉         | 2255/24850 [49:09<9:16:17,  1.48s/it, lr=7e-5, step_loss=0.0467]Steps:   9%|▉         | 2255/24850 [49:09<9:16:17,  1.48s/it, lr=7e-5, step_loss=0.0031]Steps:   9%|▉         | 2256/24850 [49:11<9:14:07,  1.47s/it, lr=7e-5, step_loss=0.0031]Steps:   9%|▉         | 2256/24850 [49:11<9:14:07,  1.47s/it, lr=7e-5, step_loss=0.0109]Steps:   9%|▉         | 2257/24850 [49:12<9:13:03,  1.47s/it, lr=7e-5, step_loss=0.0109]Steps:   9%|▉         | 2257/24850 [49:12<9:13:03,  1.47s/it, lr=7e-5, step_loss=0.0327]Steps:   9%|▉         | 2258/24850 [49:13<9:12:40,  1.47s/it, lr=7e-5, step_loss=0.0327]Steps:   9%|▉         | 2258/24850 [49:13<9:12:40,  1.47s/it, lr=7e-5, step_loss=0.0502]Steps:   9%|▉         | 2259/24850 [49:15<9:12:24,  1.47s/it, lr=7e-5, step_loss=0.0502]Steps:   9%|▉         | 2259/24850 [49:15<9:12:24,  1.47s/it, lr=7e-5, step_loss=0.0463]Steps:   9%|▉         | 2260/24850 [49:16<9:12:04,  1.47s/it, lr=7e-5, step_loss=0.0463]Steps:   9%|▉         | 2260/24850 [49:16<9:12:04,  1.47s/it, lr=7e-5, step_loss=0.047] Steps:   9%|▉         | 2261/24850 [49:18<9:12:49,  1.47s/it, lr=7e-5, step_loss=0.047]Steps:   9%|▉         | 2261/24850 [49:18<9:12:49,  1.47s/it, lr=7e-5, step_loss=0.0667]Steps:   9%|▉         | 2262/24850 [49:19<9:13:02,  1.47s/it, lr=7e-5, step_loss=0.0667]Steps:   9%|▉         | 2262/24850 [49:19<9:13:02,  1.47s/it, lr=7e-5, step_loss=0.0187]Steps:   9%|▉         | 2263/24850 [49:21<9:12:57,  1.47s/it, lr=7e-5, step_loss=0.0187]Steps:   9%|▉         | 2263/24850 [49:21<9:12:57,  1.47s/it, lr=7e-5, step_loss=0.00278]Steps:   9%|▉         | 2264/24850 [49:22<9:12:25,  1.47s/it, lr=7e-5, step_loss=0.00278]Steps:   9%|▉         | 2264/24850 [49:22<9:12:25,  1.47s/it, lr=7e-5, step_loss=0.0685] Steps:   9%|▉         | 2265/24850 [49:24<9:11:01,  1.46s/it, lr=7e-5, step_loss=0.0685]Steps:   9%|▉         | 2265/24850 [49:24<9:11:01,  1.46s/it, lr=7e-5, step_loss=0.0098]Steps:   9%|▉         | 2266/24850 [49:25<9:10:28,  1.46s/it, lr=7e-5, step_loss=0.0098]Steps:   9%|▉         | 2266/24850 [49:25<9:10:28,  1.46s/it, lr=7e-5, step_loss=0.000775]Steps:   9%|▉         | 2267/24850 [49:27<9:10:49,  1.46s/it, lr=7e-5, step_loss=0.000775]Steps:   9%|▉         | 2267/24850 [49:27<9:10:49,  1.46s/it, lr=7e-5, step_loss=0.018]   Steps:   9%|▉         | 2268/24850 [49:28<9:09:07,  1.46s/it, lr=7e-5, step_loss=0.018]Steps:   9%|▉         | 2268/24850 [49:28<9:09:07,  1.46s/it, lr=7e-5, step_loss=0.165]Steps:   9%|▉         | 2269/24850 [49:30<9:09:09,  1.46s/it, lr=7e-5, step_loss=0.165]Steps:   9%|▉         | 2269/24850 [49:30<9:09:09,  1.46s/it, lr=7e-5, step_loss=0.0487]Steps:   9%|▉         | 2270/24850 [49:31<9:09:50,  1.46s/it, lr=7e-5, step_loss=0.0487]Steps:   9%|▉         | 2270/24850 [49:31<9:09:50,  1.46s/it, lr=7e-5, step_loss=0.0251]Steps:   9%|▉         | 2271/24850 [49:32<9:10:51,  1.46s/it, lr=7e-5, step_loss=0.0251]Steps:   9%|▉         | 2271/24850 [49:32<9:10:51,  1.46s/it, lr=7e-5, step_loss=0.0192]Steps:   9%|▉         | 2272/24850 [49:34<9:10:23,  1.46s/it, lr=7e-5, step_loss=0.0192]Steps:   9%|▉         | 2272/24850 [49:34<9:10:23,  1.46s/it, lr=7e-5, step_loss=0.0101]Steps:   9%|▉         | 2273/24850 [49:35<9:09:19,  1.46s/it, lr=7e-5, step_loss=0.0101]Steps:   9%|▉         | 2273/24850 [49:35<9:09:19,  1.46s/it, lr=7e-5, step_loss=0.0157] torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:   9%|▉         | 2274/24850 [49:37<9:09:49,  1.46s/it, lr=7e-5, step_loss=0.0157]Steps:   9%|▉         | 2274/24850 [49:37<9:09:49,  1.46s/it, lr=7e-5, step_loss=0.00848]Steps:   9%|▉         | 2275/24850 [49:38<9:09:00,  1.46s/it, lr=7e-5, step_loss=0.00848]Steps:   9%|▉         | 2275/24850 [49:38<9:09:00,  1.46s/it, lr=7e-5, step_loss=0.0681] Steps:   9%|▉         | 2276/24850 [49:40<9:09:10,  1.46s/it, lr=7e-5, step_loss=0.0681]Steps:   9%|▉         | 2276/24850 [49:40<9:09:10,  1.46s/it, lr=7e-5, step_loss=0.0104]Steps:   9%|▉         | 2277/24850 [49:41<9:09:38,  1.46s/it, lr=7e-5, step_loss=0.0104]Steps:   9%|▉         | 2277/24850 [49:41<9:09:38,  1.46s/it, lr=7e-5, step_loss=0.012] Steps:   9%|▉         | 2278/24850 [49:43<9:11:11,  1.47s/it, lr=7e-5, step_loss=0.012]Steps:   9%|▉         | 2278/24850 [49:43<9:11:11,  1.47s/it, lr=7e-5, step_loss=0.00654]Steps:   9%|▉         | 2279/24850 [49:44<9:12:00,  1.47s/it, lr=7e-5, step_loss=0.00654]Steps:   9%|▉         | 2279/24850 [49:44<9:12:00,  1.47s/it, lr=7e-5, step_loss=0.0472] Steps:   9%|▉         | 2280/24850 [49:46<9:12:18,  1.47s/it, lr=7e-5, step_loss=0.0472]Steps:   9%|▉         | 2280/24850 [49:46<9:12:18,  1.47s/it, lr=7e-5, step_loss=0.0261]Steps:   9%|▉         | 2281/24850 [49:47<9:12:03,  1.47s/it, lr=7e-5, step_loss=0.0261]Steps:   9%|▉         | 2281/24850 [49:47<9:12:03,  1.47s/it, lr=7e-5, step_loss=0.00159]Steps:   9%|▉         | 2282/24850 [49:49<9:10:50,  1.46s/it, lr=7e-5, step_loss=0.00159]Steps:   9%|▉         | 2282/24850 [49:49<9:10:50,  1.46s/it, lr=7e-5, step_loss=0.0247] Steps:   9%|▉         | 2283/24850 [49:50<9:08:40,  1.46s/it, lr=7e-5, step_loss=0.0247]Steps:   9%|▉         | 2283/24850 [49:50<9:08:40,  1.46s/it, lr=7e-5, step_loss=0.000735]Steps:   9%|▉         | 2284/24850 [49:51<9:09:56,  1.46s/it, lr=7e-5, step_loss=0.000735]Steps:   9%|▉         | 2284/24850 [49:51<9:09:56,  1.46s/it, lr=7e-5, step_loss=0.0673]  Steps:   9%|▉         | 2285/24850 [49:53<9:11:57,  1.47s/it, lr=7e-5, step_loss=0.0673]Steps:   9%|▉         | 2285/24850 [49:53<9:11:57,  1.47s/it, lr=7e-5, step_loss=0.0119]Steps:   9%|▉         | 2286/24850 [49:54<9:13:12,  1.47s/it, lr=7e-5, step_loss=0.0119]Steps:   9%|▉         | 2286/24850 [49:54<9:13:12,  1.47s/it, lr=7e-5, step_loss=0.0326]Steps:   9%|▉         | 2287/24850 [49:56<9:12:23,  1.47s/it, lr=7e-5, step_loss=0.0326]Steps:   9%|▉         | 2287/24850 [49:56<9:12:23,  1.47s/it, lr=7e-5, step_loss=0.0546]Steps:   9%|▉         | 2288/24850 [49:57<9:12:38,  1.47s/it, lr=7e-5, step_loss=0.0546]Steps:   9%|▉         | 2288/24850 [49:57<9:12:38,  1.47s/it, lr=7e-5, step_loss=0.0461]Steps:   9%|▉         | 2289/24850 [49:59<9:13:11,  1.47s/it, lr=7e-5, step_loss=0.0461]Steps:   9%|▉         | 2289/24850 [49:59<9:13:11,  1.47s/it, lr=7e-5, step_loss=0.03]  Steps:   9%|▉         | 2290/24850 [50:00<9:13:54,  1.47s/it, lr=7e-5, step_loss=0.03]Steps:   9%|▉         | 2290/24850 [50:00<9:13:54,  1.47s/it, lr=7e-5, step_loss=0.0098]Steps:   9%|▉         | 2291/24850 [50:02<9:13:49,  1.47s/it, lr=7e-5, step_loss=0.0098]Steps:   9%|▉         | 2291/24850 [50:02<9:13:49,  1.47s/it, lr=7e-5, step_loss=0.00827]Steps:   9%|▉         | 2292/24850 [50:03<9:14:08,  1.47s/it, lr=7e-5, step_loss=0.00827]Steps:   9%|▉         | 2292/24850 [50:03<9:14:08,  1.47s/it, lr=7e-5, step_loss=0.0174] Steps:   9%|▉         | 2293/24850 [50:05<9:14:19,  1.47s/it, lr=7e-5, step_loss=0.0174]Steps:   9%|▉         | 2293/24850 [50:05<9:14:19,  1.47s/it, lr=7e-5, step_loss=0.00413]Steps:   9%|▉         | 2294/24850 [50:06<9:13:43,  1.47s/it, lr=7e-5, step_loss=0.00413]Steps:   9%|▉         | 2294/24850 [50:06<9:13:43,  1.47s/it, lr=7e-5, step_loss=0.0383] Steps:   9%|▉         | 2295/24850 [50:08<9:14:27,  1.47s/it, lr=7e-5, step_loss=0.0383]Steps:   9%|▉         | 2295/24850 [50:08<9:14:27,  1.47s/it, lr=7e-5, step_loss=0.0208]Steps:   9%|▉         | 2296/24850 [50:10<11:11:48,  1.79s/it, lr=7e-5, step_loss=0.0208]Steps:   9%|▉         | 2296/24850 [50:10<11:11:48,  1.79s/it, lr=7e-5, step_loss=0.0311]Steps:   9%|▉         | 2297/24850 [50:12<10:34:54,  1.69s/it, lr=7e-5, step_loss=0.0311]Steps:   9%|▉         | 2297/24850 [50:12<10:34:54,  1.69s/it, lr=7e-5, step_loss=0.0221]Steps:   9%|▉         | 2298/24850 [50:13<10:08:58,  1.62s/it, lr=7e-5, step_loss=0.0221]Steps:   9%|▉         | 2298/24850 [50:13<10:08:58,  1.62s/it, lr=7e-5, step_loss=0.0114]Steps:   9%|▉         | 2299/24850 [50:15<9:52:24,  1.58s/it, lr=7e-5, step_loss=0.0114] Steps:   9%|▉         | 2299/24850 [50:15<9:52:24,  1.58s/it, lr=7e-5, step_loss=0.00488]Steps:   9%|▉         | 2300/24850 [50:16<9:40:52,  1.55s/it, lr=7e-5, step_loss=0.00488]Steps:   9%|▉         | 2300/24850 [50:16<9:40:52,  1.55s/it, lr=7e-5, step_loss=0.00071]torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  Steps:   9%|▉         | 2301/24850 [50:18<9:38:37,  1.54s/it, lr=7e-5, step_loss=0.00071]Steps:   9%|▉         | 2301/24850 [50:18<9:38:37,  1.54s/it, lr=7e-5, step_loss=0.00603]Steps:   9%|▉         | 2302/24850 [50:19<9:30:26,  1.52s/it, lr=7e-5, step_loss=0.00603]Steps:   9%|▉         | 2302/24850 [50:19<9:30:26,  1.52s/it, lr=7e-5, step_loss=0.0329] Steps:   9%|▉         | 2303/24850 [50:21<9:24:16,  1.50s/it, lr=7e-5, step_loss=0.0329]Steps:   9%|▉         | 2303/24850 [50:21<9:24:16,  1.50s/it, lr=7e-5, step_loss=0.00229]Steps:   9%|▉         | 2304/24850 [50:22<9:20:36,  1.49s/it, lr=7e-5, step_loss=0.00229]Steps:   9%|▉         | 2304/24850 [50:22<9:20:36,  1.49s/it, lr=7e-5, step_loss=0.02]   Steps:   9%|▉         | 2305/24850 [50:23<9:18:34,  1.49s/it, lr=7e-5, step_loss=0.02]Steps:   9%|▉         | 2305/24850 [50:23<9:18:34,  1.49s/it, lr=7e-5, step_loss=0.058]Steps:   9%|▉         | 2306/24850 [50:25<9:16:56,  1.48s/it, lr=7e-5, step_loss=0.058]Steps:   9%|▉         | 2306/24850 [50:25<9:16:56,  1.48s/it, lr=7e-5, step_loss=0.0199]Steps:   9%|▉         | 2307/24850 [50:26<9:14:37,  1.48s/it, lr=7e-5, step_loss=0.0199]Steps:   9%|▉         | 2307/24850 [50:26<9:14:37,  1.48s/it, lr=7e-5, step_loss=0.00649]Steps:   9%|▉         | 2308/24850 [50:28<9:13:51,  1.47s/it, lr=7e-5, step_loss=0.00649]Steps:   9%|▉         | 2308/24850 [50:28<9:13:51,  1.47s/it, lr=7e-5, step_loss=0.0162] Steps:   9%|▉         | 2309/24850 [50:29<9:14:43,  1.48s/it, lr=7e-5, step_loss=0.0162]Steps:   9%|▉         | 2309/24850 [50:29<9:14:43,  1.48s/it, lr=7e-5, step_loss=0.159] Steps:   9%|▉         | 2310/24850 [50:31<9:12:58,  1.47s/it, lr=7e-5, step_loss=0.159]Steps:   9%|▉         | 2310/24850 [50:31<9:12:58,  1.47s/it, lr=7e-5, step_loss=0.19] Steps:   9%|▉         | 2311/24850 [50:32<9:12:35,  1.47s/it, lr=7e-5, step_loss=0.19]Steps:   9%|▉         | 2311/24850 [50:32<9:12:35,  1.47s/it, lr=7e-5, step_loss=0.00682]Steps:   9%|▉         | 2312/24850 [50:34<9:12:17,  1.47s/it, lr=7e-5, step_loss=0.00682]Steps:   9%|▉         | 2312/24850 [50:34<9:12:17,  1.47s/it, lr=7e-5, step_loss=0.0353] Steps:   9%|▉         | 2313/24850 [50:35<9:12:03,  1.47s/it, lr=7e-5, step_loss=0.0353]Steps:   9%|▉         | 2313/24850 [50:35<9:12:03,  1.47s/it, lr=7e-5, step_loss=0.0806]Steps:   9%|▉         | 2314/24850 [50:37<9:13:24,  1.47s/it, lr=7e-5, step_loss=0.0806]Steps:   9%|▉         | 2314/24850 [50:37<9:13:24,  1.47s/it, lr=7e-5, step_loss=0.0515]Steps:   9%|▉         | 2315/24850 [50:38<9:13:59,  1.48s/it, lr=7e-5, step_loss=0.0515]Steps:   9%|▉         | 2315/24850 [50:38<9:13:59,  1.48s/it, lr=7e-5, step_loss=0.0178]Steps:   9%|▉         | 2316/24850 [50:40<9:12:47,  1.47s/it, lr=7e-5, step_loss=0.0178]Steps:   9%|▉         | 2316/24850 [50:40<9:12:47,  1.47s/it, lr=7e-5, step_loss=0.0156]Steps:   9%|▉         | 2317/24850 [50:41<9:31:22,  1.52s/it, lr=7e-5, step_loss=0.0156]Steps:   9%|▉         | 2317/24850 [50:41<9:31:22,  1.52s/it, lr=7e-5, step_loss=0.00312]Steps:   9%|▉         | 2318/24850 [50:43<9:28:49,  1.51s/it, lr=7e-5, step_loss=0.00312]Steps:   9%|▉         | 2318/24850 [50:43<9:28:49,  1.51s/it, lr=7e-5, step_loss=0.0152] Steps:   9%|▉         | 2319/24850 [50:44<9:25:57,  1.51s/it, lr=7e-5, step_loss=0.0152]Steps:   9%|▉         | 2319/24850 [50:44<9:25:57,  1.51s/it, lr=7e-5, step_loss=0.00935]Steps:   9%|▉         | 2320/24850 [50:46<9:21:31,  1.50s/it, lr=7e-5, step_loss=0.00935]Steps:   9%|▉         | 2320/24850 [50:46<9:21:31,  1.50s/it, lr=7e-5, step_loss=0.0586] Steps:   9%|▉         | 2321/24850 [50:47<9:20:36,  1.49s/it, lr=7e-5, step_loss=0.0586]Steps:   9%|▉         | 2321/24850 [50:47<9:20:36,  1.49s/it, lr=7e-5, step_loss=0.00292]Steps:   9%|▉         | 2322/24850 [50:49<9:19:04,  1.49s/it, lr=7e-5, step_loss=0.00292]Steps:   9%|▉         | 2322/24850 [50:49<9:19:04,  1.49s/it, lr=7e-5, step_loss=0.00671]Steps:   9%|▉         | 2323/24850 [50:50<9:15:35,  1.48s/it, lr=7e-5, step_loss=0.00671]Steps:   9%|▉         | 2323/24850 [50:50<9:15:35,  1.48s/it, lr=7e-5, step_loss=0.00275]Steps:   9%|▉         | 2324/24850 [50:52<9:15:14,  1.48s/it, lr=7e-5, step_loss=0.00275]Steps:   9%|▉         | 2324/24850 [50:52<9:15:14,  1.48s/it, lr=7e-5, step_loss=0.011]  Steps:   9%|▉         | 2325/24850 [50:53<9:14:45,  1.48s/it, lr=7e-5, step_loss=0.011]Steps:   9%|▉         | 2325/24850 [50:53<9:14:45,  1.48s/it, lr=7e-5, step_loss=0.00906]Steps:   9%|▉         | 2326/24850 [50:55<9:12:46,  1.47s/it, lr=7e-5, step_loss=0.00906]Steps:   9%|▉         | 2326/24850 [50:55<9:12:46,  1.47s/it, lr=7e-5, step_loss=0.00754]Steps:   9%|▉         | 2327/24850 [50:56<9:11:24,  1.47s/it, lr=7e-5, step_loss=0.00754]Steps:   9%|▉         | 2327/24850 [50:56<9:11:24,  1.47s/it, lr=7e-5, step_loss=0.0531] Steps:   9%|▉         | 2328/24850 [50:58<9:10:38,  1.47s/it, lr=7e-5, step_loss=0.0531]Steps:   9%|▉         | 2328/24850 [50:58<9:10:38,  1.47s/it, lr=7e-5, step_loss=0.0373]mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:   9%|▉         | 2329/24850 [50:59<9:11:05,  1.47s/it, lr=7e-5, step_loss=0.0373]Steps:   9%|▉         | 2329/24850 [50:59<9:11:05,  1.47s/it, lr=7e-5, step_loss=0.0117]Steps:   9%|▉         | 2330/24850 [51:00<9:11:18,  1.47s/it, lr=7e-5, step_loss=0.0117]Steps:   9%|▉         | 2330/24850 [51:00<9:11:18,  1.47s/it, lr=7e-5, step_loss=0.0481]Steps:   9%|▉         | 2331/24850 [51:02<9:09:07,  1.46s/it, lr=7e-5, step_loss=0.0481]Steps:   9%|▉         | 2331/24850 [51:02<9:09:07,  1.46s/it, lr=7e-5, step_loss=0.000366]Steps:   9%|▉         | 2332/24850 [51:03<9:12:06,  1.47s/it, lr=7e-5, step_loss=0.000366]Steps:   9%|▉         | 2332/24850 [51:03<9:12:06,  1.47s/it, lr=7e-5, step_loss=0.062]   Steps:   9%|▉         | 2333/24850 [51:05<9:14:02,  1.48s/it, lr=7e-5, step_loss=0.062]Steps:   9%|▉         | 2333/24850 [51:05<9:14:02,  1.48s/it, lr=7e-5, step_loss=0.0502]Steps:   9%|▉         | 2334/24850 [51:06<9:13:42,  1.48s/it, lr=7e-5, step_loss=0.0502]Steps:   9%|▉         | 2334/24850 [51:06<9:13:42,  1.48s/it, lr=7e-5, step_loss=0.0483]Steps:   9%|▉         | 2335/24850 [51:08<9:13:14,  1.47s/it, lr=7e-5, step_loss=0.0483]Steps:   9%|▉         | 2335/24850 [51:08<9:13:14,  1.47s/it, lr=7e-5, step_loss=0.0093]Steps:   9%|▉         | 2336/24850 [51:09<9:11:20,  1.47s/it, lr=7e-5, step_loss=0.0093]Steps:   9%|▉         | 2336/24850 [51:09<9:11:20,  1.47s/it, lr=7e-5, step_loss=0.00655]Steps:   9%|▉         | 2337/24850 [51:11<9:11:04,  1.47s/it, lr=7e-5, step_loss=0.00655]Steps:   9%|▉         | 2337/24850 [51:11<9:11:04,  1.47s/it, lr=7e-5, step_loss=0.0102] Steps:   9%|▉         | 2338/24850 [51:12<9:09:52,  1.47s/it, lr=7e-5, step_loss=0.0102]Steps:   9%|▉         | 2338/24850 [51:12<9:09:52,  1.47s/it, lr=7e-5, step_loss=0.0544]Steps:   9%|▉         | 2339/24850 [51:14<9:10:00,  1.47s/it, lr=7e-5, step_loss=0.0544]Steps:   9%|▉         | 2339/24850 [51:14<9:10:00,  1.47s/it, lr=7e-5, step_loss=0.0377]Steps:   9%|▉         | 2340/24850 [51:15<9:11:00,  1.47s/it, lr=7e-5, step_loss=0.0377]Steps:   9%|▉         | 2340/24850 [51:15<9:11:00,  1.47s/it, lr=7e-5, step_loss=0.0122]Steps:   9%|▉         | 2341/24850 [51:17<9:09:49,  1.47s/it, lr=7e-5, step_loss=0.0122]Steps:   9%|▉         | 2341/24850 [51:17<9:09:49,  1.47s/it, lr=7e-5, step_loss=0.0297]Steps:   9%|▉         | 2342/24850 [51:18<9:11:30,  1.47s/it, lr=7e-5, step_loss=0.0297]Steps:   9%|▉         | 2342/24850 [51:18<9:11:30,  1.47s/it, lr=7e-5, step_loss=0.0676]Steps:   9%|▉         | 2343/24850 [51:20<9:12:59,  1.47s/it, lr=7e-5, step_loss=0.0676]Steps:   9%|▉         | 2343/24850 [51:20<9:12:59,  1.47s/it, lr=7e-5, step_loss=0.0055]Steps:   9%|▉         | 2344/24850 [51:21<9:11:10,  1.47s/it, lr=7e-5, step_loss=0.0055]Steps:   9%|▉         | 2344/24850 [51:21<9:11:10,  1.47s/it, lr=7e-5, step_loss=0.0795]Steps:   9%|▉         | 2345/24850 [51:23<9:13:24,  1.48s/it, lr=7e-5, step_loss=0.0795]Steps:   9%|▉         | 2345/24850 [51:23<9:13:24,  1.48s/it, lr=7e-5, step_loss=0.0182]Steps:   9%|▉         | 2346/24850 [51:25<11:06:32,  1.78s/it, lr=7e-5, step_loss=0.0182]Steps:   9%|▉         | 2346/24850 [51:25<11:06:32,  1.78s/it, lr=7e-5, step_loss=0.0392]Steps:   9%|▉         | 2347/24850 [51:26<10:30:57,  1.68s/it, lr=7e-5, step_loss=0.0392]Steps:   9%|▉         | 2347/24850 [51:26<10:30:57,  1.68s/it, lr=7e-5, step_loss=0.036] Steps:   9%|▉         | 2348/24850 [51:28<10:07:34,  1.62s/it, lr=7e-5, step_loss=0.036]Steps:   9%|▉         | 2348/24850 [51:28<10:07:34,  1.62s/it, lr=7e-5, step_loss=0.026]Steps:   9%|▉         | 2349/24850 [51:29<9:48:31,  1.57s/it, lr=7e-5, step_loss=0.026] Steps:   9%|▉         | 2349/24850 [51:29<9:48:31,  1.57s/it, lr=7e-5, step_loss=0.114]Steps:   9%|▉         | 2350/24850 [51:31<9:36:23,  1.54s/it, lr=7e-5, step_loss=0.114]Steps:   9%|▉         | 2350/24850 [51:31<9:36:23,  1.54s/it, lr=7e-5, step_loss=0.00546]Steps:   9%|▉         | 2351/24850 [51:32<9:30:31,  1.52s/it, lr=7e-5, step_loss=0.00546]Steps:   9%|▉         | 2351/24850 [51:32<9:30:31,  1.52s/it, lr=7e-5, step_loss=0.0236] Steps:   9%|▉         | 2352/24850 [51:34<9:24:11,  1.50s/it, lr=7e-5, step_loss=0.0236]Steps:   9%|▉         | 2352/24850 [51:34<9:24:11,  1.50s/it, lr=7e-5, step_loss=0.178] Steps:   9%|▉         | 2353/24850 [51:35<9:21:59,  1.50s/it, lr=7e-5, step_loss=0.178]Steps:   9%|▉         | 2353/24850 [51:35<9:21:59,  1.50s/it, lr=7e-5, step_loss=0.00363]Steps:   9%|▉         | 2354/24850 [51:37<9:21:23,  1.50s/it, lr=7e-5, step_loss=0.00363]Steps:   9%|▉         | 2354/24850 [51:37<9:21:23,  1.50s/it, lr=7e-5, step_loss=0.0143] Steps:   9%|▉         | 2355/24850 [51:38<9:17:01,  1.49s/it, lr=7e-5, step_loss=0.0143]Steps:   9%|▉         | 2355/24850 [51:38<9:17:01,  1.49s/it, lr=7e-5, step_loss=0.193] torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) Steps:   9%|▉         | 2356/24850 [51:40<9:15:06,  1.48s/it, lr=7e-5, step_loss=0.193]Steps:   9%|▉         | 2356/24850 [51:40<9:15:06,  1.48s/it, lr=7e-5, step_loss=0.0138]Steps:   9%|▉         | 2357/24850 [51:41<9:12:31,  1.47s/it, lr=7e-5, step_loss=0.0138]Steps:   9%|▉         | 2357/24850 [51:41<9:12:31,  1.47s/it, lr=7e-5, step_loss=0.00312]Steps:   9%|▉         | 2358/24850 [51:43<9:10:24,  1.47s/it, lr=7e-5, step_loss=0.00312]Steps:   9%|▉         | 2358/24850 [51:43<9:10:24,  1.47s/it, lr=7e-5, step_loss=0.00312]Steps:   9%|▉         | 2359/24850 [51:44<9:10:14,  1.47s/it, lr=7e-5, step_loss=0.00312]Steps:   9%|▉         | 2359/24850 [51:44<9:10:14,  1.47s/it, lr=7e-5, step_loss=0.00521]Steps:   9%|▉         | 2360/24850 [51:46<9:09:01,  1.46s/it, lr=7e-5, step_loss=0.00521]Steps:   9%|▉         | 2360/24850 [51:46<9:09:01,  1.46s/it, lr=7e-5, step_loss=0.0195] Steps:  10%|▉         | 2361/24850 [51:47<9:09:11,  1.47s/it, lr=7e-5, step_loss=0.0195]Steps:  10%|▉         | 2361/24850 [51:47<9:09:11,  1.47s/it, lr=7e-5, step_loss=0.0331]Steps:  10%|▉         | 2362/24850 [51:48<9:09:07,  1.47s/it, lr=7e-5, step_loss=0.0331]Steps:  10%|▉         | 2362/24850 [51:48<9:09:07,  1.47s/it, lr=7e-5, step_loss=0.119] Steps:  10%|▉         | 2363/24850 [51:50<9:09:42,  1.47s/it, lr=7e-5, step_loss=0.119]Steps:  10%|▉         | 2363/24850 [51:50<9:09:42,  1.47s/it, lr=7e-5, step_loss=0.012]Steps:  10%|▉         | 2364/24850 [51:51<9:08:57,  1.46s/it, lr=7e-5, step_loss=0.012]Steps:  10%|▉         | 2364/24850 [51:51<9:08:57,  1.46s/it, lr=7e-5, step_loss=0.0223]Steps:  10%|▉         | 2365/24850 [51:53<9:07:48,  1.46s/it, lr=7e-5, step_loss=0.0223]Steps:  10%|▉         | 2365/24850 [51:53<9:07:48,  1.46s/it, lr=7e-5, step_loss=0.0404]Steps:  10%|▉         | 2366/24850 [51:54<9:07:10,  1.46s/it, lr=7e-5, step_loss=0.0404]Steps:  10%|▉         | 2366/24850 [51:54<9:07:10,  1.46s/it, lr=7e-5, step_loss=0.00307]Steps:  10%|▉         | 2367/24850 [51:56<9:07:04,  1.46s/it, lr=7e-5, step_loss=0.00307]Steps:  10%|▉         | 2367/24850 [51:56<9:07:04,  1.46s/it, lr=7e-5, step_loss=0.0435] Steps:  10%|▉         | 2368/24850 [51:57<9:09:21,  1.47s/it, lr=7e-5, step_loss=0.0435]Steps:  10%|▉         | 2368/24850 [51:57<9:09:21,  1.47s/it, lr=7e-5, step_loss=0.0881]Steps:  10%|▉         | 2369/24850 [51:59<9:09:26,  1.47s/it, lr=7e-5, step_loss=0.0881]Steps:  10%|▉         | 2369/24850 [51:59<9:09:26,  1.47s/it, lr=7e-5, step_loss=0.00975]Steps:  10%|▉         | 2370/24850 [52:00<9:08:31,  1.46s/it, lr=7e-5, step_loss=0.00975]Steps:  10%|▉         | 2370/24850 [52:00<9:08:31,  1.46s/it, lr=7e-5, step_loss=0.0509] Steps:  10%|▉         | 2371/24850 [52:02<9:08:12,  1.46s/it, lr=7e-5, step_loss=0.0509]Steps:  10%|▉         | 2371/24850 [52:02<9:08:12,  1.46s/it, lr=7e-5, step_loss=0.0651]Steps:  10%|▉         | 2372/24850 [52:03<9:08:58,  1.47s/it, lr=7e-5, step_loss=0.0651]Steps:  10%|▉         | 2372/24850 [52:03<9:08:58,  1.47s/it, lr=7e-5, step_loss=0.0144]Steps:  10%|▉         | 2373/24850 [52:05<9:08:41,  1.46s/it, lr=7e-5, step_loss=0.0144]Steps:  10%|▉         | 2373/24850 [52:05<9:08:41,  1.46s/it, lr=7e-5, step_loss=0.013] Steps:  10%|▉         | 2374/24850 [52:06<9:07:43,  1.46s/it, lr=7e-5, step_loss=0.013]Steps:  10%|▉         | 2374/24850 [52:06<9:07:43,  1.46s/it, lr=7e-5, step_loss=0.0423]Steps:  10%|▉         | 2375/24850 [52:08<9:08:35,  1.46s/it, lr=7e-5, step_loss=0.0423]Steps:  10%|▉         | 2375/24850 [52:08<9:08:35,  1.46s/it, lr=7e-5, step_loss=0.0142]Steps:  10%|▉         | 2376/24850 [52:09<9:08:16,  1.46s/it, lr=7e-5, step_loss=0.0142]Steps:  10%|▉         | 2376/24850 [52:09<9:08:16,  1.46s/it, lr=7e-5, step_loss=0.0162]Steps:  10%|▉         | 2377/24850 [52:10<9:08:10,  1.46s/it, lr=7e-5, step_loss=0.0162]Steps:  10%|▉         | 2377/24850 [52:10<9:08:10,  1.46s/it, lr=7e-5, step_loss=0.00565]Steps:  10%|▉         | 2378/24850 [52:12<9:08:11,  1.46s/it, lr=7e-5, step_loss=0.00565]Steps:  10%|▉         | 2378/24850 [52:12<9:08:11,  1.46s/it, lr=7e-5, step_loss=0.00191]Steps:  10%|▉         | 2379/24850 [52:13<9:07:47,  1.46s/it, lr=7e-5, step_loss=0.00191]Steps:  10%|▉         | 2379/24850 [52:13<9:07:47,  1.46s/it, lr=7e-5, step_loss=0.0204] Steps:  10%|▉         | 2380/24850 [52:15<9:07:59,  1.46s/it, lr=7e-5, step_loss=0.0204]Steps:  10%|▉         | 2380/24850 [52:15<9:07:59,  1.46s/it, lr=7e-5, step_loss=0.0139]Steps:  10%|▉         | 2381/24850 [52:16<9:07:43,  1.46s/it, lr=7e-5, step_loss=0.0139]Steps:  10%|▉         | 2381/24850 [52:16<9:07:43,  1.46s/it, lr=7e-5, step_loss=0.00887]Steps:  10%|▉         | 2382/24850 [52:18<9:08:14,  1.46s/it, lr=7e-5, step_loss=0.00887]Steps:  10%|▉         | 2382/24850 [52:18<9:08:14,  1.46s/it, lr=7e-5, step_loss=0.0228] torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:  10%|▉         | 2383/24850 [52:19<9:08:32,  1.46s/it, lr=7e-5, step_loss=0.0228]Steps:  10%|▉         | 2383/24850 [52:19<9:08:32,  1.46s/it, lr=7e-5, step_loss=0.273] Steps:  10%|▉         | 2384/24850 [52:21<9:08:59,  1.47s/it, lr=7e-5, step_loss=0.273]Steps:  10%|▉         | 2384/24850 [52:21<9:08:59,  1.47s/it, lr=7e-5, step_loss=0.0121]Steps:  10%|▉         | 2385/24850 [52:22<9:08:52,  1.47s/it, lr=7e-5, step_loss=0.0121]Steps:  10%|▉         | 2385/24850 [52:22<9:08:52,  1.47s/it, lr=7e-5, step_loss=0.0424]Steps:  10%|▉         | 2386/24850 [52:24<9:09:28,  1.47s/it, lr=7e-5, step_loss=0.0424]Steps:  10%|▉         | 2386/24850 [52:24<9:09:28,  1.47s/it, lr=7e-5, step_loss=0.00543]Steps:  10%|▉         | 2387/24850 [52:25<9:08:21,  1.46s/it, lr=7e-5, step_loss=0.00543]Steps:  10%|▉         | 2387/24850 [52:25<9:08:21,  1.46s/it, lr=7e-5, step_loss=0.0448] Steps:  10%|▉         | 2388/24850 [52:27<9:08:26,  1.46s/it, lr=7e-5, step_loss=0.0448]Steps:  10%|▉         | 2388/24850 [52:27<9:08:26,  1.46s/it, lr=7e-5, step_loss=0.0309]Steps:  10%|▉         | 2389/24850 [52:28<9:07:43,  1.46s/it, lr=7e-5, step_loss=0.0309]Steps:  10%|▉         | 2389/24850 [52:28<9:07:43,  1.46s/it, lr=7e-5, step_loss=0.00604]Steps:  10%|▉         | 2390/24850 [52:29<9:06:20,  1.46s/it, lr=7e-5, step_loss=0.00604]Steps:  10%|▉         | 2390/24850 [52:29<9:06:20,  1.46s/it, lr=7e-5, step_loss=0.0847] Steps:  10%|▉         | 2391/24850 [52:31<9:05:37,  1.46s/it, lr=7e-5, step_loss=0.0847]Steps:  10%|▉         | 2391/24850 [52:31<9:05:37,  1.46s/it, lr=7e-5, step_loss=0.00495]Steps:  10%|▉         | 2392/24850 [52:32<9:07:00,  1.46s/it, lr=7e-5, step_loss=0.00495]Steps:  10%|▉         | 2392/24850 [52:32<9:07:00,  1.46s/it, lr=7e-5, step_loss=0.0289] Steps:  10%|▉         | 2393/24850 [52:34<9:04:39,  1.46s/it, lr=7e-5, step_loss=0.0289]Steps:  10%|▉         | 2393/24850 [52:34<9:04:39,  1.46s/it, lr=7e-5, step_loss=0.00381]Steps:  10%|▉         | 2394/24850 [52:35<9:05:33,  1.46s/it, lr=7e-5, step_loss=0.00381]Steps:  10%|▉         | 2394/24850 [52:35<9:05:33,  1.46s/it, lr=7e-5, step_loss=0.169]  Steps:  10%|▉         | 2395/24850 [52:37<9:05:41,  1.46s/it, lr=7e-5, step_loss=0.169]Steps:  10%|▉         | 2395/24850 [52:37<9:05:41,  1.46s/it, lr=7e-5, step_loss=0.11] Steps:  10%|▉         | 2396/24850 [52:39<10:48:58,  1.73s/it, lr=7e-5, step_loss=0.11]Steps:  10%|▉         | 2396/24850 [52:39<10:48:58,  1.73s/it, lr=7e-5, step_loss=0.0101]Steps:  10%|▉         | 2397/24850 [52:41<10:17:00,  1.65s/it, lr=7e-5, step_loss=0.0101]Steps:  10%|▉         | 2397/24850 [52:41<10:17:00,  1.65s/it, lr=7e-5, step_loss=0.148] Steps:  10%|▉         | 2398/24850 [52:42<9:54:43,  1.59s/it, lr=7e-5, step_loss=0.148] Steps:  10%|▉         | 2398/24850 [52:42<9:54:43,  1.59s/it, lr=7e-5, step_loss=0.00345]Steps:  10%|▉         | 2399/24850 [52:44<9:49:33,  1.58s/it, lr=7e-5, step_loss=0.00345]Steps:  10%|▉         | 2399/24850 [52:44<9:49:33,  1.58s/it, lr=7e-5, step_loss=0.00644]Steps:  10%|▉         | 2400/24850 [52:45<9:42:54,  1.56s/it, lr=7e-5, step_loss=0.00644]Steps:  10%|▉         | 2400/24850 [52:45<9:42:54,  1.56s/it, lr=7e-5, step_loss=0.152]  Steps:  10%|▉         | 2401/24850 [52:47<9:33:52,  1.53s/it, lr=7e-5, step_loss=0.152]Steps:  10%|▉         | 2401/24850 [52:47<9:33:52,  1.53s/it, lr=7e-5, step_loss=0.0268]Steps:  10%|▉         | 2402/24850 [52:48<9:28:20,  1.52s/it, lr=7e-5, step_loss=0.0268]Steps:  10%|▉         | 2402/24850 [52:48<9:28:20,  1.52s/it, lr=7e-5, step_loss=0.00128]Steps:  10%|▉         | 2403/24850 [52:50<9:25:42,  1.51s/it, lr=7e-5, step_loss=0.00128]Steps:  10%|▉         | 2403/24850 [52:50<9:25:42,  1.51s/it, lr=7e-5, step_loss=0.0404] Steps:  10%|▉         | 2404/24850 [52:51<9:41:02,  1.55s/it, lr=7e-5, step_loss=0.0404]Steps:  10%|▉         | 2404/24850 [52:51<9:41:02,  1.55s/it, lr=7e-5, step_loss=0.0326]Steps:  10%|▉         | 2405/24850 [52:53<9:30:59,  1.53s/it, lr=7e-5, step_loss=0.0326]Steps:  10%|▉         | 2405/24850 [52:53<9:30:59,  1.53s/it, lr=7e-5, step_loss=0.039] Steps:  10%|▉         | 2406/24850 [52:54<9:25:10,  1.51s/it, lr=7e-5, step_loss=0.039]Steps:  10%|▉         | 2406/24850 [52:54<9:25:10,  1.51s/it, lr=7e-5, step_loss=0.00208]Steps:  10%|▉         | 2407/24850 [52:56<9:21:56,  1.50s/it, lr=7e-5, step_loss=0.00208]Steps:  10%|▉         | 2407/24850 [52:56<9:21:56,  1.50s/it, lr=7e-5, step_loss=0.0518] Steps:  10%|▉         | 2408/24850 [52:57<9:18:56,  1.49s/it, lr=7e-5, step_loss=0.0518]Steps:  10%|▉         | 2408/24850 [52:57<9:18:56,  1.49s/it, lr=7e-5, step_loss=0.0345]Steps:  10%|▉         | 2409/24850 [52:59<9:17:08,  1.49s/it, lr=7e-5, step_loss=0.0345]Steps:  10%|▉         | 2409/24850 [52:59<9:17:08,  1.49s/it, lr=7e-5, step_loss=0.00846]Steps:  10%|▉         | 2410/24850 [53:00<9:12:47,  1.48s/it, lr=7e-5, step_loss=0.00846]Steps:  10%|▉         | 2410/24850 [53:00<9:12:47,  1.48s/it, lr=7e-5, step_loss=0.0748] torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
Steps:  10%|▉         | 2411/24850 [53:01<9:11:43,  1.48s/it, lr=7e-5, step_loss=0.0748]Steps:  10%|▉         | 2411/24850 [53:01<9:11:43,  1.48s/it, lr=7e-5, step_loss=0.0704]Steps:  10%|▉         | 2412/24850 [53:03<9:11:13,  1.47s/it, lr=7e-5, step_loss=0.0704]Steps:  10%|▉         | 2412/24850 [53:03<9:11:13,  1.47s/it, lr=7e-5, step_loss=0.0252]Steps:  10%|▉         | 2413/24850 [53:04<9:10:05,  1.47s/it, lr=7e-5, step_loss=0.0252]Steps:  10%|▉         | 2413/24850 [53:04<9:10:05,  1.47s/it, lr=7e-5, step_loss=0.00392]Steps:  10%|▉         | 2414/24850 [53:06<9:09:54,  1.47s/it, lr=7e-5, step_loss=0.00392]Steps:  10%|▉         | 2414/24850 [53:06<9:09:54,  1.47s/it, lr=7e-5, step_loss=0.00044]Steps:  10%|▉         | 2415/24850 [53:07<9:08:07,  1.47s/it, lr=7e-5, step_loss=0.00044]Steps:  10%|▉         | 2415/24850 [53:07<9:08:07,  1.47s/it, lr=7e-5, step_loss=0.0228] Steps:  10%|▉         | 2416/24850 [53:09<9:06:21,  1.46s/it, lr=7e-5, step_loss=0.0228]Steps:  10%|▉         | 2416/24850 [53:09<9:06:21,  1.46s/it, lr=7e-5, step_loss=0.0239]Steps:  10%|▉         | 2417/24850 [53:10<9:07:03,  1.46s/it, lr=7e-5, step_loss=0.0239]Steps:  10%|▉         | 2417/24850 [53:10<9:07:03,  1.46s/it, lr=7e-5, step_loss=0.0393]Steps:  10%|▉         | 2418/24850 [53:12<9:06:23,  1.46s/it, lr=7e-5, step_loss=0.0393]Steps:  10%|▉         | 2418/24850 [53:12<9:06:23,  1.46s/it, lr=7e-5, step_loss=0.0533]Steps:  10%|▉         | 2419/24850 [53:13<9:05:23,  1.46s/it, lr=7e-5, step_loss=0.0533]Steps:  10%|▉         | 2419/24850 [53:13<9:05:23,  1.46s/it, lr=7e-5, step_loss=0.0303]Steps:  10%|▉         | 2420/24850 [53:15<9:06:44,  1.46s/it, lr=7e-5, step_loss=0.0303]Steps:  10%|▉         | 2420/24850 [53:15<9:06:44,  1.46s/it, lr=7e-5, step_loss=0.0131]Steps:  10%|▉         | 2421/24850 [53:16<9:06:26,  1.46s/it, lr=7e-5, step_loss=0.0131]Steps:  10%|▉         | 2421/24850 [53:16<9:06:26,  1.46s/it, lr=7e-5, step_loss=0.0365]Steps:  10%|▉         | 2422/24850 [53:18<9:05:31,  1.46s/it, lr=7e-5, step_loss=0.0365]Steps:  10%|▉         | 2422/24850 [53:18<9:05:31,  1.46s/it, lr=7e-5, step_loss=0.024] Steps:  10%|▉         | 2423/24850 [53:19<9:05:30,  1.46s/it, lr=7e-5, step_loss=0.024]Steps:  10%|▉         | 2423/24850 [53:19<9:05:30,  1.46s/it, lr=7e-5, step_loss=0.0114]Steps:  10%|▉         | 2424/24850 [53:20<9:04:52,  1.46s/it, lr=7e-5, step_loss=0.0114]Steps:  10%|▉         | 2424/24850 [53:20<9:04:52,  1.46s/it, lr=7e-5, step_loss=0.13]  Steps:  10%|▉         | 2425/24850 [53:22<9:04:54,  1.46s/it, lr=7e-5, step_loss=0.13]Steps:  10%|▉         | 2425/24850 [53:22<9:04:54,  1.46s/it, lr=7e-5, step_loss=0.014]Steps:  10%|▉         | 2426/24850 [53:23<9:07:33,  1.47s/it, lr=7e-5, step_loss=0.014]Steps:  10%|▉         | 2426/24850 [53:23<9:07:33,  1.47s/it, lr=7e-5, step_loss=0.0336]Steps:  10%|▉         | 2427/24850 [53:25<9:06:12,  1.46s/it, lr=7e-5, step_loss=0.0336]Steps:  10%|▉         | 2427/24850 [53:25<9:06:12,  1.46s/it, lr=7e-5, step_loss=0.0472]Steps:  10%|▉         | 2428/24850 [53:26<9:06:08,  1.46s/it, lr=7e-5, step_loss=0.0472]Steps:  10%|▉         | 2428/24850 [53:26<9:06:08,  1.46s/it, lr=7e-5, step_loss=0.00205]Steps:  10%|▉         | 2429/24850 [53:28<9:04:02,  1.46s/it, lr=7e-5, step_loss=0.00205]Steps:  10%|▉         | 2429/24850 [53:28<9:04:02,  1.46s/it, lr=7e-5, step_loss=0.000326]Steps:  10%|▉         | 2430/24850 [53:29<9:05:19,  1.46s/it, lr=7e-5, step_loss=0.000326]Steps:  10%|▉         | 2430/24850 [53:29<9:05:19,  1.46s/it, lr=7e-5, step_loss=0.0211]  Steps:  10%|▉         | 2431/24850 [53:31<9:04:10,  1.46s/it, lr=7e-5, step_loss=0.0211]Steps:  10%|▉         | 2431/24850 [53:31<9:04:10,  1.46s/it, lr=7e-5, step_loss=0.0169]Steps:  10%|▉         | 2432/24850 [53:32<9:04:40,  1.46s/it, lr=7e-5, step_loss=0.0169]Steps:  10%|▉         | 2432/24850 [53:32<9:04:40,  1.46s/it, lr=7e-5, step_loss=0.0177]Steps:  10%|▉         | 2433/24850 [53:34<9:07:07,  1.46s/it, lr=7e-5, step_loss=0.0177]Steps:  10%|▉         | 2433/24850 [53:34<9:07:07,  1.46s/it, lr=7e-5, step_loss=0.0134]Steps:  10%|▉         | 2434/24850 [53:35<9:08:55,  1.47s/it, lr=7e-5, step_loss=0.0134]Steps:  10%|▉         | 2434/24850 [53:35<9:08:55,  1.47s/it, lr=7e-5, step_loss=0.111] Steps:  10%|▉         | 2435/24850 [53:37<9:09:31,  1.47s/it, lr=7e-5, step_loss=0.111]Steps:  10%|▉         | 2435/24850 [53:37<9:09:31,  1.47s/it, lr=7e-5, step_loss=0.00837]Steps:  10%|▉         | 2436/24850 [53:38<9:15:26,  1.49s/it, lr=7e-5, step_loss=0.00837]Steps:  10%|▉         | 2436/24850 [53:38<9:15:26,  1.49s/it, lr=7e-5, step_loss=0.043]  Steps:  10%|▉         | 2437/24850 [53:40<9:15:47,  1.49s/it, lr=7e-5, step_loss=0.043]Steps:  10%|▉         | 2437/24850 [53:40<9:15:47,  1.49s/it, lr=7e-5, step_loss=0.0427](512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512)Steps:  10%|▉         | 2438/24850 [53:41<9:14:54,  1.49s/it, lr=7e-5, step_loss=0.0427]Steps:  10%|▉         | 2438/24850 [53:41<9:14:54,  1.49s/it, lr=7e-5, step_loss=0.00604]Steps:  10%|▉         | 2439/24850 [53:43<9:13:22,  1.48s/it, lr=7e-5, step_loss=0.00604]Steps:  10%|▉         | 2439/24850 [53:43<9:13:22,  1.48s/it, lr=7e-5, step_loss=0.00586]Steps:  10%|▉         | 2440/24850 [53:44<9:17:35,  1.49s/it, lr=7e-5, step_loss=0.00586]Steps:  10%|▉         | 2440/24850 [53:44<9:17:35,  1.49s/it, lr=7e-5, step_loss=0.0528] Steps:  10%|▉         | 2441/24850 [53:46<9:24:07,  1.51s/it, lr=7e-5, step_loss=0.0528]Steps:  10%|▉         | 2441/24850 [53:46<9:24:07,  1.51s/it, lr=7e-5, step_loss=0.00652]Steps:  10%|▉         | 2442/24850 [53:47<9:23:54,  1.51s/it, lr=7e-5, step_loss=0.00652]Steps:  10%|▉         | 2442/24850 [53:47<9:23:54,  1.51s/it, lr=7e-5, step_loss=0.0422] Steps:  10%|▉         | 2443/24850 [53:49<9:19:21,  1.50s/it, lr=7e-5, step_loss=0.0422]Steps:  10%|▉         | 2443/24850 [53:49<9:19:21,  1.50s/it, lr=7e-5, step_loss=0.0159]Steps:  10%|▉         | 2444/24850 [53:50<9:17:19,  1.49s/it, lr=7e-5, step_loss=0.0159]Steps:  10%|▉         | 2444/24850 [53:50<9:17:19,  1.49s/it, lr=7e-5, step_loss=0.0135]Steps:  10%|▉         | 2445/24850 [53:52<9:19:07,  1.50s/it, lr=7e-5, step_loss=0.0135]Steps:  10%|▉         | 2445/24850 [53:52<9:19:07,  1.50s/it, lr=7e-5, step_loss=0.0231]Steps:  10%|▉         | 2446/24850 [53:54<11:03:30,  1.78s/it, lr=7e-5, step_loss=0.0231]Steps:  10%|▉         | 2446/24850 [53:54<11:03:30,  1.78s/it, lr=7e-5, step_loss=0.116] Steps:  10%|▉         | 2447/24850 [53:56<10:32:43,  1.69s/it, lr=7e-5, step_loss=0.116]Steps:  10%|▉         | 2447/24850 [53:56<10:32:43,  1.69s/it, lr=7e-5, step_loss=0.0363]Steps:  10%|▉         | 2448/24850 [53:57<10:08:49,  1.63s/it, lr=7e-5, step_loss=0.0363]Steps:  10%|▉         | 2448/24850 [53:57<10:08:49,  1.63s/it, lr=7e-5, step_loss=0.018] Steps:  10%|▉         | 2449/24850 [53:58<9:52:40,  1.59s/it, lr=7e-5, step_loss=0.018] Steps:  10%|▉         | 2449/24850 [53:58<9:52:40,  1.59s/it, lr=7e-5, step_loss=0.0433]Steps:  10%|▉         | 2450/24850 [54:00<9:40:40,  1.56s/it, lr=7e-5, step_loss=0.0433]Steps:  10%|▉         | 2450/24850 [54:00<9:40:40,  1.56s/it, lr=7e-5, step_loss=0.0433]Steps:  10%|▉         | 2451/24850 [54:01<9:32:29,  1.53s/it, lr=7e-5, step_loss=0.0433]Steps:  10%|▉         | 2451/24850 [54:01<9:32:29,  1.53s/it, lr=7e-5, step_loss=0.0127]Steps:  10%|▉         | 2452/24850 [54:03<9:26:43,  1.52s/it, lr=7e-5, step_loss=0.0127]Steps:  10%|▉         | 2452/24850 [54:03<9:26:43,  1.52s/it, lr=7e-5, step_loss=0.0209]Steps:  10%|▉         | 2453/24850 [54:04<9:22:10,  1.51s/it, lr=7e-5, step_loss=0.0209]Steps:  10%|▉         | 2453/24850 [54:04<9:22:10,  1.51s/it, lr=7e-5, step_loss=0.0344]Steps:  10%|▉         | 2454/24850 [54:06<9:17:58,  1.49s/it, lr=7e-5, step_loss=0.0344]Steps:  10%|▉         | 2454/24850 [54:06<9:17:58,  1.49s/it, lr=7e-5, step_loss=0.00859]Steps:  10%|▉         | 2455/24850 [54:07<9:17:01,  1.49s/it, lr=7e-5, step_loss=0.00859]Steps:  10%|▉         | 2455/24850 [54:07<9:17:01,  1.49s/it, lr=7e-5, step_loss=0.0354] Steps:  10%|▉         | 2456/24850 [54:09<9:13:30,  1.48s/it, lr=7e-5, step_loss=0.0354]Steps:  10%|▉         | 2456/24850 [54:09<9:13:30,  1.48s/it, lr=7e-5, step_loss=0.0148]Steps:  10%|▉         | 2457/24850 [54:10<9:13:00,  1.48s/it, lr=7e-5, step_loss=0.0148]Steps:  10%|▉         | 2457/24850 [54:10<9:13:00,  1.48s/it, lr=7e-5, step_loss=0.0102]Steps:  10%|▉         | 2458/24850 [54:12<9:13:24,  1.48s/it, lr=7e-5, step_loss=0.0102]Steps:  10%|▉         | 2458/24850 [54:12<9:13:24,  1.48s/it, lr=7e-5, step_loss=0.0126]Steps:  10%|▉         | 2459/24850 [54:13<9:12:04,  1.48s/it, lr=7e-5, step_loss=0.0126]Steps:  10%|▉         | 2459/24850 [54:13<9:12:04,  1.48s/it, lr=7e-5, step_loss=0.0259]Steps:  10%|▉         | 2460/24850 [54:15<9:11:18,  1.48s/it, lr=7e-5, step_loss=0.0259]Steps:  10%|▉         | 2460/24850 [54:15<9:11:18,  1.48s/it, lr=7e-5, step_loss=0.0419]Steps:  10%|▉         | 2461/24850 [54:16<9:10:06,  1.47s/it, lr=7e-5, step_loss=0.0419]Steps:  10%|▉         | 2461/24850 [54:16<9:10:06,  1.47s/it, lr=7e-5, step_loss=0.00696]Steps:  10%|▉         | 2462/24850 [54:18<9:10:37,  1.48s/it, lr=7e-5, step_loss=0.00696]Steps:  10%|▉         | 2462/24850 [54:18<9:10:37,  1.48s/it, lr=7e-5, step_loss=0.0552] Steps:  10%|▉         | 2463/24850 [54:19<9:10:11,  1.47s/it, lr=7e-5, step_loss=0.0552]Steps:  10%|▉         | 2463/24850 [54:19<9:10:11,  1.47s/it, lr=7e-5, step_loss=0.28]  Steps:  10%|▉         | 2464/24850 [54:21<9:33:16,  1.54s/it, lr=7e-5, step_loss=0.28]Steps:  10%|▉         | 2464/24850 [54:21<9:33:16,  1.54s/it, lr=7e-5, step_loss=0.0575] torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:  10%|▉         | 2465/24850 [54:22<9:26:23,  1.52s/it, lr=7e-5, step_loss=0.0575]Steps:  10%|▉         | 2465/24850 [54:22<9:26:23,  1.52s/it, lr=7e-5, step_loss=0.00918]Steps:  10%|▉         | 2466/24850 [54:24<9:21:43,  1.51s/it, lr=7e-5, step_loss=0.00918]Steps:  10%|▉         | 2466/24850 [54:24<9:21:43,  1.51s/it, lr=7e-5, step_loss=0.0131] Steps:  10%|▉         | 2467/24850 [54:25<9:17:50,  1.50s/it, lr=7e-5, step_loss=0.0131]Steps:  10%|▉         | 2467/24850 [54:25<9:17:50,  1.50s/it, lr=7e-5, step_loss=0.0224]Steps:  10%|▉         | 2468/24850 [54:27<9:14:57,  1.49s/it, lr=7e-5, step_loss=0.0224]Steps:  10%|▉         | 2468/24850 [54:27<9:14:57,  1.49s/it, lr=7e-5, step_loss=0.0397]Steps:  10%|▉         | 2469/24850 [54:28<9:10:28,  1.48s/it, lr=7e-5, step_loss=0.0397]Steps:  10%|▉         | 2469/24850 [54:28<9:10:28,  1.48s/it, lr=7e-5, step_loss=0.0373]Steps:  10%|▉         | 2470/24850 [54:30<9:09:18,  1.47s/it, lr=7e-5, step_loss=0.0373]Steps:  10%|▉         | 2470/24850 [54:30<9:09:18,  1.47s/it, lr=7e-5, step_loss=0.0218]Steps:  10%|▉         | 2471/24850 [54:31<9:07:57,  1.47s/it, lr=7e-5, step_loss=0.0218]Steps:  10%|▉         | 2471/24850 [54:31<9:07:57,  1.47s/it, lr=7e-5, step_loss=0.0215]Steps:  10%|▉         | 2472/24850 [54:33<9:07:52,  1.47s/it, lr=7e-5, step_loss=0.0215]Steps:  10%|▉         | 2472/24850 [54:33<9:07:52,  1.47s/it, lr=7e-5, step_loss=0.016] Steps:  10%|▉         | 2473/24850 [54:34<9:08:27,  1.47s/it, lr=7e-5, step_loss=0.016]Steps:  10%|▉         | 2473/24850 [54:34<9:08:27,  1.47s/it, lr=7e-5, step_loss=0.0225]Steps:  10%|▉         | 2474/24850 [54:36<9:08:19,  1.47s/it, lr=7e-5, step_loss=0.0225]Steps:  10%|▉         | 2474/24850 [54:36<9:08:19,  1.47s/it, lr=7e-5, step_loss=0.0103]Steps:  10%|▉         | 2475/24850 [54:37<9:07:00,  1.47s/it, lr=7e-5, step_loss=0.0103]Steps:  10%|▉         | 2475/24850 [54:37<9:07:00,  1.47s/it, lr=7e-5, step_loss=0.0481]Steps:  10%|▉         | 2476/24850 [54:38<9:07:19,  1.47s/it, lr=7e-5, step_loss=0.0481]Steps:  10%|▉         | 2476/24850 [54:38<9:07:19,  1.47s/it, lr=7e-5, step_loss=0.0299]Steps:  10%|▉         | 2477/24850 [54:40<9:09:28,  1.47s/it, lr=7e-5, step_loss=0.0299]Steps:  10%|▉         | 2477/24850 [54:40<9:09:28,  1.47s/it, lr=7e-5, step_loss=0.00537]Steps:  10%|▉         | 2478/24850 [54:41<9:07:56,  1.47s/it, lr=7e-5, step_loss=0.00537]Steps:  10%|▉         | 2478/24850 [54:41<9:07:56,  1.47s/it, lr=7e-5, step_loss=0.00897]Steps:  10%|▉         | 2479/24850 [54:43<9:07:37,  1.47s/it, lr=7e-5, step_loss=0.00897]Steps:  10%|▉         | 2479/24850 [54:43<9:07:37,  1.47s/it, lr=7e-5, step_loss=0.00502]Steps:  10%|▉         | 2480/24850 [54:44<9:15:28,  1.49s/it, lr=7e-5, step_loss=0.00502]Steps:  10%|▉         | 2480/24850 [54:44<9:15:28,  1.49s/it, lr=7e-5, step_loss=0.0376] Steps:  10%|▉         | 2481/24850 [54:46<9:13:45,  1.49s/it, lr=7e-5, step_loss=0.0376]Steps:  10%|▉         | 2481/24850 [54:46<9:13:45,  1.49s/it, lr=7e-5, step_loss=0.0982]Steps:  10%|▉         | 2482/24850 [54:47<9:12:07,  1.48s/it, lr=7e-5, step_loss=0.0982]Steps:  10%|▉         | 2482/24850 [54:47<9:12:07,  1.48s/it, lr=7e-5, step_loss=0.00627]Steps:  10%|▉         | 2483/24850 [54:49<9:10:08,  1.48s/it, lr=7e-5, step_loss=0.00627]Steps:  10%|▉         | 2483/24850 [54:49<9:10:08,  1.48s/it, lr=7e-5, step_loss=0.0128] Steps:  10%|▉         | 2484/24850 [54:50<9:10:44,  1.48s/it, lr=7e-5, step_loss=0.0128]Steps:  10%|▉         | 2484/24850 [54:50<9:10:44,  1.48s/it, lr=7e-5, step_loss=0.0582]Steps:  10%|█         | 2485/24850 [54:52<9:09:43,  1.47s/it, lr=7e-5, step_loss=0.0582]Steps:  10%|█         | 2485/24850 [54:52<9:09:43,  1.47s/it, lr=7e-5, step_loss=0.0868]Steps:  10%|█         | 2486/24850 [54:53<9:08:35,  1.47s/it, lr=7e-5, step_loss=0.0868]Steps:  10%|█         | 2486/24850 [54:53<9:08:35,  1.47s/it, lr=7e-5, step_loss=0.0307]Steps:  10%|█         | 2487/24850 [54:55<9:10:14,  1.48s/it, lr=7e-5, step_loss=0.0307]Steps:  10%|█         | 2487/24850 [54:55<9:10:14,  1.48s/it, lr=7e-5, step_loss=0.0143]Steps:  10%|█         | 2488/24850 [54:56<9:08:09,  1.47s/it, lr=7e-5, step_loss=0.0143]Steps:  10%|█         | 2488/24850 [54:56<9:08:09,  1.47s/it, lr=7e-5, step_loss=0.0148]Steps:  10%|█         | 2489/24850 [54:58<9:09:52,  1.48s/it, lr=7e-5, step_loss=0.0148]Steps:  10%|█         | 2489/24850 [54:58<9:09:52,  1.48s/it, lr=7e-5, step_loss=0.0371]Steps:  10%|█         | 2490/24850 [54:59<9:08:56,  1.47s/it, lr=7e-5, step_loss=0.0371]Steps:  10%|█         | 2490/24850 [54:59<9:08:56,  1.47s/it, lr=7e-5, step_loss=0.065] Steps:  10%|█         | 2491/24850 [55:01<9:07:36,  1.47s/it, lr=7e-5, step_loss=0.065]Steps:  10%|█         | 2491/24850 [55:01<9:07:36,  1.47s/it, lr=7e-5, step_loss=0.00291]torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  Steps:  10%|█         | 2492/24850 [55:02<9:09:11,  1.47s/it, lr=7e-5, step_loss=0.00291]Steps:  10%|█         | 2492/24850 [55:02<9:09:11,  1.47s/it, lr=7e-5, step_loss=0.0233] Steps:  10%|█         | 2493/24850 [55:04<9:07:58,  1.47s/it, lr=7e-5, step_loss=0.0233]Steps:  10%|█         | 2493/24850 [55:04<9:07:58,  1.47s/it, lr=7e-5, step_loss=0.0454]Steps:  10%|█         | 2494/24850 [55:05<9:08:27,  1.47s/it, lr=7e-5, step_loss=0.0454]Steps:  10%|█         | 2494/24850 [55:05<9:08:27,  1.47s/it, lr=7e-5, step_loss=0.047] Steps:  10%|█         | 2495/24850 [55:06<9:07:55,  1.47s/it, lr=7e-5, step_loss=0.047]04/12/2024 11:05:15 - INFO - __main__ - 2 checkpoints already exist, removing 1 checkpoints
04/12/2024 11:05:15 - INFO - __main__ - removing checkpoints: checkpoint-1500
04/12/2024 11:05:16 - INFO - accelerate.accelerator - Saving current state to /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-2500
Configuration saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-2500/unet/config.json
Model weights saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-2500/unet/diffusion_pytorch_model.safetensors
Model weights saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-2500/unet/pytorch_lora_weights.safetensors
04/12/2024 11:05:44 - INFO - accelerate.checkpointing - Optimizer state saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-2500/optimizer.bin
04/12/2024 11:05:44 - INFO - accelerate.checkpointing - Scheduler state saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-2500/scheduler.bin
04/12/2024 11:05:44 - INFO - accelerate.checkpointing - Random states saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-2500/random_states_0.pkl
04/12/2024 11:05:44 - INFO - __main__ - Saved state to /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-2500
Steps:  10%|█         | 2495/24850 [55:35<9:07:55,  1.47s/it, lr=7e-5, step_loss=0.00468]Steps:  10%|█         | 2496/24850 [55:44<76:34:10, 12.33s/it, lr=7e-5, step_loss=0.00468]Steps:  10%|█         | 2496/24850 [55:44<76:34:10, 12.33s/it, lr=7e-5, step_loss=0.00372]Steps:  10%|█         | 2497/24850 [55:46<56:22:45,  9.08s/it, lr=7e-5, step_loss=0.00372]Steps:  10%|█         | 2497/24850 [55:46<56:22:45,  9.08s/it, lr=7e-5, step_loss=0.0188] Steps:  10%|█         | 2498/24850 [55:47<42:10:55,  6.79s/it, lr=7e-5, step_loss=0.0188]Steps:  10%|█         | 2498/24850 [55:47<42:10:55,  6.79s/it, lr=7e-5, step_loss=0.0291]Steps:  10%|█         | 2499/24850 [55:49<32:14:18,  5.19s/it, lr=7e-5, step_loss=0.0291]Steps:  10%|█         | 2499/24850 [55:49<32:14:18,  5.19s/it, lr=7e-5, step_loss=0.000714]Steps:  10%|█         | 2500/24850 [55:50<25:18:34,  4.08s/it, lr=7e-5, step_loss=0.000714]Steps:  10%|█         | 2500/24850 [55:50<25:18:34,  4.08s/it, lr=7e-5, step_loss=0.00176] Steps:  10%|█         | 2501/24850 [55:51<20:27:38,  3.30s/it, lr=7e-5, step_loss=0.00176]Steps:  10%|█         | 2501/24850 [55:51<20:27:38,  3.30s/it, lr=7e-5, step_loss=0.0249] Steps:  10%|█         | 2502/24850 [55:53<17:03:00,  2.75s/it, lr=7e-5, step_loss=0.0249]Steps:  10%|█         | 2502/24850 [55:53<17:03:00,  2.75s/it, lr=7e-5, step_loss=0.0379]Steps:  10%|█         | 2503/24850 [55:54<14:40:51,  2.37s/it, lr=7e-5, step_loss=0.0379]Steps:  10%|█         | 2503/24850 [55:54<14:40:51,  2.37s/it, lr=7e-5, step_loss=0.0225]Steps:  10%|█         | 2504/24850 [55:56<12:59:18,  2.09s/it, lr=7e-5, step_loss=0.0225]Steps:  10%|█         | 2504/24850 [55:56<12:59:18,  2.09s/it, lr=7e-5, step_loss=0.0138]Steps:  10%|█         | 2505/24850 [55:57<11:48:22,  1.90s/it, lr=7e-5, step_loss=0.0138]Steps:  10%|█         | 2505/24850 [55:57<11:48:22,  1.90s/it, lr=7e-5, step_loss=0.0209]Steps:  10%|█         | 2506/24850 [55:59<10:58:00,  1.77s/it, lr=7e-5, step_loss=0.0209]Steps:  10%|█         | 2506/24850 [55:59<10:58:00,  1.77s/it, lr=7e-5, step_loss=0.0437]Steps:  10%|█         | 2507/24850 [56:00<10:22:46,  1.67s/it, lr=7e-5, step_loss=0.0437]Steps:  10%|█         | 2507/24850 [56:00<10:22:46,  1.67s/it, lr=7e-5, step_loss=0.0376]Steps:  10%|█         | 2508/24850 [56:02<9:59:04,  1.61s/it, lr=7e-5, step_loss=0.0376] Steps:  10%|█         | 2508/24850 [56:02<9:59:04,  1.61s/it, lr=7e-5, step_loss=0.022] Steps:  10%|█         | 2509/24850 [56:03<9:42:57,  1.57s/it, lr=7e-5, step_loss=0.022]Steps:  10%|█         | 2509/24850 [56:03<9:42:57,  1.57s/it, lr=7e-5, step_loss=0.0563]Steps:  10%|█         | 2510/24850 [56:05<9:29:43,  1.53s/it, lr=7e-5, step_loss=0.0563]Steps:  10%|█         | 2510/24850 [56:05<9:29:43,  1.53s/it, lr=7e-5, step_loss=0.00754]Steps:  10%|█         | 2511/24850 [56:06<9:21:08,  1.51s/it, lr=7e-5, step_loss=0.00754]Steps:  10%|█         | 2511/24850 [56:06<9:21:08,  1.51s/it, lr=7e-5, step_loss=0.0167] Steps:  10%|█         | 2512/24850 [56:08<9:14:10,  1.49s/it, lr=7e-5, step_loss=0.0167]Steps:  10%|█         | 2512/24850 [56:08<9:14:10,  1.49s/it, lr=7e-5, step_loss=0.0165]Steps:  10%|█         | 2513/24850 [56:09<9:09:01,  1.47s/it, lr=7e-5, step_loss=0.0165]Steps:  10%|█         | 2513/24850 [56:09<9:09:01,  1.47s/it, lr=7e-5, step_loss=0.0117]Steps:  10%|█         | 2514/24850 [56:10<9:06:32,  1.47s/it, lr=7e-5, step_loss=0.0117]Steps:  10%|█         | 2514/24850 [56:10<9:06:32,  1.47s/it, lr=7e-5, step_loss=0.0182]Steps:  10%|█         | 2515/24850 [56:12<9:03:10,  1.46s/it, lr=7e-5, step_loss=0.0182]Steps:  10%|█         | 2515/24850 [56:12<9:03:10,  1.46s/it, lr=7e-5, step_loss=0.0195]Steps:  10%|█         | 2516/24850 [56:13<9:04:49,  1.46s/it, lr=7e-5, step_loss=0.0195]Steps:  10%|█         | 2516/24850 [56:13<9:04:49,  1.46s/it, lr=7e-5, step_loss=0.0659]Steps:  10%|█         | 2517/24850 [56:15<9:04:41,  1.46s/it, lr=7e-5, step_loss=0.0659]Steps:  10%|█         | 2517/24850 [56:15<9:04:41,  1.46s/it, lr=7e-5, step_loss=0.00623]Steps:  10%|█         | 2518/24850 [56:16<9:03:49,  1.46s/it, lr=7e-5, step_loss=0.00623]Steps:  10%|█         | 2518/24850 [56:16<9:03:49,  1.46s/it, lr=7e-5, step_loss=0.0348] Steps:  10%|█         | 2519/24850 [56:18<9:02:07,  1.46s/it, lr=7e-5, step_loss=0.0348]Steps:  10%|█         | 2519/24850 [56:18<9:02:07,  1.46s/it, lr=7e-5, step_loss=0.0261]mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:  10%|█         | 2520/24850 [56:19<9:00:28,  1.45s/it, lr=7e-5, step_loss=0.0261]Steps:  10%|█         | 2520/24850 [56:19<9:00:28,  1.45s/it, lr=7e-5, step_loss=0.0483]Steps:  10%|█         | 2521/24850 [56:21<9:01:00,  1.45s/it, lr=7e-5, step_loss=0.0483]Steps:  10%|█         | 2521/24850 [56:21<9:01:00,  1.45s/it, lr=7e-5, step_loss=0.106] Steps:  10%|█         | 2522/24850 [56:22<9:00:05,  1.45s/it, lr=7e-5, step_loss=0.106]Steps:  10%|█         | 2522/24850 [56:22<9:00:05,  1.45s/it, lr=7e-5, step_loss=0.0348]Steps:  10%|█         | 2523/24850 [56:23<8:58:48,  1.45s/it, lr=7e-5, step_loss=0.0348]Steps:  10%|█         | 2523/24850 [56:23<8:58:48,  1.45s/it, lr=7e-5, step_loss=0.073] Steps:  10%|█         | 2524/24850 [56:25<8:59:55,  1.45s/it, lr=7e-5, step_loss=0.073]Steps:  10%|█         | 2524/24850 [56:25<8:59:55,  1.45s/it, lr=7e-5, step_loss=0.0668]Steps:  10%|█         | 2525/24850 [56:26<8:58:29,  1.45s/it, lr=7e-5, step_loss=0.0668]Steps:  10%|█         | 2525/24850 [56:26<8:58:29,  1.45s/it, lr=7e-5, step_loss=0.294] Steps:  10%|█         | 2526/24850 [56:28<8:58:54,  1.45s/it, lr=7e-5, step_loss=0.294]Steps:  10%|█         | 2526/24850 [56:28<8:58:54,  1.45s/it, lr=7e-5, step_loss=0.0574]Steps:  10%|█         | 2527/24850 [56:29<8:59:34,  1.45s/it, lr=7e-5, step_loss=0.0574]Steps:  10%|█         | 2527/24850 [56:29<8:59:34,  1.45s/it, lr=7e-5, step_loss=0.025] Steps:  10%|█         | 2528/24850 [56:31<8:59:29,  1.45s/it, lr=7e-5, step_loss=0.025]Steps:  10%|█         | 2528/24850 [56:31<8:59:29,  1.45s/it, lr=7e-5, step_loss=0.00757]Steps:  10%|█         | 2529/24850 [56:32<9:00:03,  1.45s/it, lr=7e-5, step_loss=0.00757]Steps:  10%|█         | 2529/24850 [56:32<9:00:03,  1.45s/it, lr=7e-5, step_loss=0.174]  Steps:  10%|█         | 2530/24850 [56:34<9:00:16,  1.45s/it, lr=7e-5, step_loss=0.174]Steps:  10%|█         | 2530/24850 [56:34<9:00:16,  1.45s/it, lr=7e-5, step_loss=0.0275]Steps:  10%|█         | 2531/24850 [56:35<8:59:55,  1.45s/it, lr=7e-5, step_loss=0.0275]Steps:  10%|█         | 2531/24850 [56:35<8:59:55,  1.45s/it, lr=7e-5, step_loss=0.00621]Steps:  10%|█         | 2532/24850 [56:37<9:00:46,  1.45s/it, lr=7e-5, step_loss=0.00621]Steps:  10%|█         | 2532/24850 [56:37<9:00:46,  1.45s/it, lr=7e-5, step_loss=0.00397]Steps:  10%|█         | 2533/24850 [56:38<8:59:13,  1.45s/it, lr=7e-5, step_loss=0.00397]Steps:  10%|█         | 2533/24850 [56:38<8:59:13,  1.45s/it, lr=7e-5, step_loss=0.0597] Steps:  10%|█         | 2534/24850 [56:39<8:59:01,  1.45s/it, lr=7e-5, step_loss=0.0597]Steps:  10%|█         | 2534/24850 [56:39<8:59:01,  1.45s/it, lr=7e-5, step_loss=0.0447]Steps:  10%|█         | 2535/24850 [56:41<9:09:54,  1.48s/it, lr=7e-5, step_loss=0.0447]Steps:  10%|█         | 2535/24850 [56:41<9:09:54,  1.48s/it, lr=7e-5, step_loss=0.0666]04/12/2024 11:06:49 - INFO - __main__ - Running validation...
torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([9, 4, 64, 64])

Loading pipeline components...:   0%|          | 0/7 [00:00<?, ?it/s][A`text_config_dict` is provided which will be used to initialize `CLIPTextConfig`. The value `text_config["id2label"]` will be overriden.
`text_config_dict` is provided which will be used to initialize `CLIPTextConfig`. The value `text_config["bos_token_id"]` will be overriden.
`text_config_dict` is provided which will be used to initialize `CLIPTextConfig`. The value `text_config["eos_token_id"]` will be overriden.
Loaded safety_checker as StableDiffusionSafetyChecker from `safety_checker` subfolder of timbrooks/instruct-pix2pix.

Loading pipeline components...:  14%|█▍        | 1/7 [00:00<00:02,  2.33it/s][ALoaded feature_extractor as CLIPImageProcessor from `feature_extractor` subfolder of timbrooks/instruct-pix2pix.
{'timestep_spacing'} was not found in config. Values will be initialized to default values.
Loaded scheduler as EulerAncestralDiscreteScheduler from `scheduler` subfolder of timbrooks/instruct-pix2pix.
Loaded tokenizer as CLIPTokenizer from `tokenizer` subfolder of timbrooks/instruct-pix2pix.
Loading pipeline components...: 100%|██████████| 7/7 [00:00<00:00, 13.80it/s]
{'timestep_spacing'} was not found in config. Values will be initialized to default values.
conduct do_classifier_free_guidance, text_guidance: 16,image_guidance: 1

  0%|          | 0/50 [00:00<?, ?it/s][A
  2%|▏         | 1/50 [00:00<00:31,  1.55it/s][A
  4%|▍         | 2/50 [00:01<00:24,  1.98it/s][A
  6%|▌         | 3/50 [00:01<00:21,  2.17it/s][A
  8%|▊         | 4/50 [00:01<00:20,  2.26it/s][A
 10%|█         | 5/50 [00:02<00:19,  2.31it/s][A
 12%|█▏        | 6/50 [00:02<00:18,  2.34it/s][A
 14%|█▍        | 7/50 [00:03<00:18,  2.37it/s][A
 16%|█▌        | 8/50 [00:03<00:17,  2.39it/s][A
 18%|█▊        | 9/50 [00:03<00:17,  2.38it/s][A
 20%|██        | 10/50 [00:04<00:16,  2.40it/s][A
 22%|██▏       | 11/50 [00:04<00:16,  2.41it/s][A
 24%|██▍       | 12/50 [00:05<00:15,  2.42it/s][A
 26%|██▌       | 13/50 [00:05<00:15,  2.42it/s][A
 28%|██▊       | 14/50 [00:06<00:14,  2.43it/s][A
 30%|███       | 15/50 [00:06<00:14,  2.43it/s][A
 32%|███▏      | 16/50 [00:06<00:14,  2.43it/s][A
 34%|███▍      | 17/50 [00:07<00:13,  2.43it/s][A
 36%|███▌      | 18/50 [00:07<00:13,  2.43it/s][A
 38%|███▊      | 19/50 [00:08<00:12,  2.43it/s][A
 40%|████      | 20/50 [00:08<00:12,  2.43it/s][A
 42%|████▏     | 21/50 [00:08<00:11,  2.43it/s][A
 44%|████▍     | 22/50 [00:09<00:11,  2.43it/s][A
 46%|████▌     | 23/50 [00:09<00:11,  2.43it/s][A
 48%|████▊     | 24/50 [00:10<00:10,  2.43it/s][A
 50%|█████     | 25/50 [00:10<00:10,  2.42it/s][A
 52%|█████▏    | 26/50 [00:10<00:09,  2.42it/s][A
 54%|█████▍    | 27/50 [00:11<00:09,  2.42it/s][A
 56%|█████▌    | 28/50 [00:11<00:09,  2.42it/s][A
 58%|█████▊    | 29/50 [00:12<00:08,  2.43it/s][A
 60%|██████    | 30/50 [00:12<00:08,  2.43it/s][A
 62%|██████▏   | 31/50 [00:13<00:07,  2.44it/s][A
 64%|██████▍   | 32/50 [00:13<00:07,  2.43it/s][A
 66%|██████▌   | 33/50 [00:13<00:07,  2.43it/s][A(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) 
 68%|██████▊   | 34/50 [00:14<00:06,  2.43it/s][A
 70%|███████   | 35/50 [00:14<00:06,  2.42it/s][A
 72%|███████▏  | 36/50 [00:15<00:05,  2.42it/s][A
 74%|███████▍  | 37/50 [00:15<00:05,  2.43it/s][A
 76%|███████▌  | 38/50 [00:15<00:04,  2.41it/s][A
 78%|███████▊  | 39/50 [00:16<00:04,  2.42it/s][A
 80%|████████  | 40/50 [00:16<00:04,  2.42it/s][A
 82%|████████▏ | 41/50 [00:17<00:03,  2.42it/s][A
 84%|████████▍ | 42/50 [00:17<00:03,  2.43it/s][A
 86%|████████▌ | 43/50 [00:17<00:02,  2.43it/s][A
 88%|████████▊ | 44/50 [00:18<00:02,  2.43it/s][A
 90%|█████████ | 45/50 [00:18<00:02,  2.43it/s][A
 92%|█████████▏| 46/50 [00:19<00:01,  2.44it/s][A
 94%|█████████▍| 47/50 [00:19<00:01,  2.43it/s][A
 96%|█████████▌| 48/50 [00:20<00:00,  2.43it/s][A
 98%|█████████▊| 49/50 [00:20<00:00,  2.42it/s][A
100%|██████████| 50/50 [00:20<00:00,  2.42it/s][A100%|██████████| 50/50 [00:20<00:00,  2.40it/s]
04/12/2024 11:07:14 - INFO - __main__ - Running training...
torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
save img to : /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/images/modify the images for task ['flare']_val_step_2540_0.png modify the images for task ['flare']
writing inference outputs failed [Errno 2] No such file or directory: '/usr/bin/ffmpeg'
Steps:  10%|█         | 2536/24850 [57:13<65:18:37, 10.54s/it, lr=7e-5, step_loss=0.0666]Steps:  10%|█         | 2536/24850 [57:13<65:18:37, 10.54s/it, lr=7e-5, step_loss=0.015] Steps:  10%|█         | 2537/24850 [57:14<48:29:31,  7.82s/it, lr=7e-5, step_loss=0.015]Steps:  10%|█         | 2537/24850 [57:14<48:29:31,  7.82s/it, lr=7e-5, step_loss=0.0623]Steps:  10%|█         | 2538/24850 [57:16<36:39:43,  5.92s/it, lr=7e-5, step_loss=0.0623]Steps:  10%|█         | 2538/24850 [57:16<36:39:43,  5.92s/it, lr=7e-5, step_loss=0.0204]Steps:  10%|█         | 2539/24850 [57:17<28:20:37,  4.57s/it, lr=7e-5, step_loss=0.0204]Steps:  10%|█         | 2539/24850 [57:17<28:20:37,  4.57s/it, lr=7e-5, step_loss=0.00251]Steps:  10%|█         | 2540/24850 [57:19<22:31:17,  3.63s/it, lr=7e-5, step_loss=0.00251]Steps:  10%|█         | 2540/24850 [57:19<22:31:17,  3.63s/it, lr=7e-5, step_loss=0.00652]Steps:  10%|█         | 2541/24850 [57:20<18:27:13,  2.98s/it, lr=7e-5, step_loss=0.00652]Steps:  10%|█         | 2541/24850 [57:20<18:27:13,  2.98s/it, lr=7e-5, step_loss=0.116]  Steps:  10%|█         | 2542/24850 [57:21<15:37:03,  2.52s/it, lr=7e-5, step_loss=0.116]Steps:  10%|█         | 2542/24850 [57:21<15:37:03,  2.52s/it, lr=7e-5, step_loss=0.0149]Steps:  10%|█         | 2543/24850 [57:23<13:40:58,  2.21s/it, lr=7e-5, step_loss=0.0149]Steps:  10%|█         | 2543/24850 [57:23<13:40:58,  2.21s/it, lr=7e-5, step_loss=0.0851]Steps:  10%|█         | 2544/24850 [57:24<12:17:36,  1.98s/it, lr=7e-5, step_loss=0.0851]Steps:  10%|█         | 2544/24850 [57:24<12:17:36,  1.98s/it, lr=7e-5, step_loss=0.00352]Steps:  10%|█         | 2545/24850 [57:27<13:01:55,  2.10s/it, lr=7e-5, step_loss=0.00352]Steps:  10%|█         | 2545/24850 [57:27<13:01:55,  2.10s/it, lr=7e-5, step_loss=0.0474] Steps:  10%|█         | 2546/24850 [57:28<12:20:47,  1.99s/it, lr=7e-5, step_loss=0.0474]Steps:  10%|█         | 2546/24850 [57:28<12:20:47,  1.99s/it, lr=7e-5, step_loss=0.000823]Steps:  10%|█         | 2547/24850 [57:30<11:21:44,  1.83s/it, lr=7e-5, step_loss=0.000823]Steps:  10%|█         | 2547/24850 [57:30<11:21:44,  1.83s/it, lr=7e-5, step_loss=0.0482]  Steps:  10%|█         | 2548/24850 [57:31<10:39:41,  1.72s/it, lr=7e-5, step_loss=0.0482]Steps:  10%|█         | 2548/24850 [57:31<10:39:41,  1.72s/it, lr=7e-5, step_loss=0.172] Steps:  10%|█         | 2549/24850 [57:33<10:09:21,  1.64s/it, lr=7e-5, step_loss=0.172]Steps:  10%|█         | 2549/24850 [57:33<10:09:21,  1.64s/it, lr=7e-5, step_loss=0.00629]Steps:  10%|█         | 2550/24850 [57:34<9:50:00,  1.59s/it, lr=7e-5, step_loss=0.00629] Steps:  10%|█         | 2550/24850 [57:34<9:50:00,  1.59s/it, lr=7e-5, step_loss=0.0152] Steps:  10%|█         | 2551/24850 [57:36<9:36:14,  1.55s/it, lr=7e-5, step_loss=0.0152]Steps:  10%|█         | 2551/24850 [57:36<9:36:14,  1.55s/it, lr=7e-5, step_loss=0.00302]Steps:  10%|█         | 2552/24850 [57:37<9:25:47,  1.52s/it, lr=7e-5, step_loss=0.00302]Steps:  10%|█         | 2552/24850 [57:37<9:25:47,  1.52s/it, lr=7e-5, step_loss=0.00687]Steps:  10%|█         | 2553/24850 [57:39<9:17:39,  1.50s/it, lr=7e-5, step_loss=0.00687]Steps:  10%|█         | 2553/24850 [57:39<9:17:39,  1.50s/it, lr=7e-5, step_loss=0.0273] Steps:  10%|█         | 2554/24850 [57:40<9:13:19,  1.49s/it, lr=7e-5, step_loss=0.0273]Steps:  10%|█         | 2554/24850 [57:40<9:13:19,  1.49s/it, lr=7e-5, step_loss=0.0148]Steps:  10%|█         | 2555/24850 [57:42<9:08:56,  1.48s/it, lr=7e-5, step_loss=0.0148]Steps:  10%|█         | 2555/24850 [57:42<9:08:56,  1.48s/it, lr=7e-5, step_loss=0.00091]Steps:  10%|█         | 2556/24850 [57:43<9:09:46,  1.48s/it, lr=7e-5, step_loss=0.00091]Steps:  10%|█         | 2556/24850 [57:43<9:09:46,  1.48s/it, lr=7e-5, step_loss=0.0233] Steps:  10%|█         | 2557/24850 [57:45<9:08:38,  1.48s/it, lr=7e-5, step_loss=0.0233]Steps:  10%|█         | 2557/24850 [57:45<9:08:38,  1.48s/it, lr=7e-5, step_loss=0.101] Steps:  10%|█         | 2558/24850 [57:46<9:07:49,  1.47s/it, lr=7e-5, step_loss=0.101]Steps:  10%|█         | 2558/24850 [57:46<9:07:49,  1.47s/it, lr=7e-5, step_loss=0.0282]Steps:  10%|█         | 2559/24850 [57:47<9:06:47,  1.47s/it, lr=7e-5, step_loss=0.0282]Steps:  10%|█         | 2559/24850 [57:47<9:06:47,  1.47s/it, lr=7e-5, step_loss=0.0531]Steps:  10%|█         | 2560/24850 [57:49<9:05:06,  1.47s/it, lr=7e-5, step_loss=0.0531]Steps:  10%|█         | 2560/24850 [57:49<9:05:06,  1.47s/it, lr=7e-5, step_loss=0.219] Steps:  10%|█         | 2561/24850 [57:50<9:06:31,  1.47s/it, lr=7e-5, step_loss=0.219]Steps:  10%|█         | 2561/24850 [57:50<9:06:31,  1.47s/it, lr=7e-5, step_loss=0.031]Steps:  10%|█         | 2562/24850 [57:52<9:03:43,  1.46s/it, lr=7e-5, step_loss=0.031]Steps:  10%|█         | 2562/24850 [57:52<9:03:43,  1.46s/it, lr=7e-5, step_loss=0.00534](512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512)Steps:  10%|█         | 2563/24850 [57:53<9:04:38,  1.47s/it, lr=7e-5, step_loss=0.00534]Steps:  10%|█         | 2563/24850 [57:53<9:04:38,  1.47s/it, lr=7e-5, step_loss=0.0388] Steps:  10%|█         | 2564/24850 [57:55<9:05:26,  1.47s/it, lr=7e-5, step_loss=0.0388]Steps:  10%|█         | 2564/24850 [57:55<9:05:26,  1.47s/it, lr=7e-5, step_loss=0.00574]Steps:  10%|█         | 2565/24850 [57:56<9:05:43,  1.47s/it, lr=7e-5, step_loss=0.00574]Steps:  10%|█         | 2565/24850 [57:56<9:05:43,  1.47s/it, lr=7e-5, step_loss=0.0278] Steps:  10%|█         | 2566/24850 [57:58<9:08:00,  1.48s/it, lr=7e-5, step_loss=0.0278]Steps:  10%|█         | 2566/24850 [57:58<9:08:00,  1.48s/it, lr=7e-5, step_loss=0.091] Steps:  10%|█         | 2567/24850 [57:59<9:06:40,  1.47s/it, lr=7e-5, step_loss=0.091]Steps:  10%|█         | 2567/24850 [57:59<9:06:40,  1.47s/it, lr=7e-5, step_loss=0.0158]Steps:  10%|█         | 2568/24850 [58:01<9:04:24,  1.47s/it, lr=7e-5, step_loss=0.0158]Steps:  10%|█         | 2568/24850 [58:01<9:04:24,  1.47s/it, lr=7e-5, step_loss=0.00843]Steps:  10%|█         | 2569/24850 [58:02<9:07:34,  1.47s/it, lr=7e-5, step_loss=0.00843]Steps:  10%|█         | 2569/24850 [58:02<9:07:34,  1.47s/it, lr=7e-5, step_loss=0.0817] Steps:  10%|█         | 2570/24850 [58:04<9:06:45,  1.47s/it, lr=7e-5, step_loss=0.0817]Steps:  10%|█         | 2570/24850 [58:04<9:06:45,  1.47s/it, lr=7e-5, step_loss=0.00915]Steps:  10%|█         | 2571/24850 [58:05<9:05:29,  1.47s/it, lr=7e-5, step_loss=0.00915]Steps:  10%|█         | 2571/24850 [58:05<9:05:29,  1.47s/it, lr=7e-5, step_loss=0.113]  Steps:  10%|█         | 2572/24850 [58:07<9:05:16,  1.47s/it, lr=7e-5, step_loss=0.113]Steps:  10%|█         | 2572/24850 [58:07<9:05:16,  1.47s/it, lr=7e-5, step_loss=0.0457]Steps:  10%|█         | 2573/24850 [58:08<9:04:30,  1.47s/it, lr=7e-5, step_loss=0.0457]Steps:  10%|█         | 2573/24850 [58:08<9:04:30,  1.47s/it, lr=7e-5, step_loss=0.00485]Steps:  10%|█         | 2574/24850 [58:09<9:02:43,  1.46s/it, lr=7e-5, step_loss=0.00485]Steps:  10%|█         | 2574/24850 [58:09<9:02:43,  1.46s/it, lr=7e-5, step_loss=0.0271] Steps:  10%|█         | 2575/24850 [58:11<9:02:44,  1.46s/it, lr=7e-5, step_loss=0.0271]Steps:  10%|█         | 2575/24850 [58:11<9:02:44,  1.46s/it, lr=7e-5, step_loss=0.0175]Steps:  10%|█         | 2576/24850 [58:12<9:02:28,  1.46s/it, lr=7e-5, step_loss=0.0175]Steps:  10%|█         | 2576/24850 [58:12<9:02:28,  1.46s/it, lr=7e-5, step_loss=0.04]  Steps:  10%|█         | 2577/24850 [58:14<9:03:58,  1.47s/it, lr=7e-5, step_loss=0.04]Steps:  10%|█         | 2577/24850 [58:14<9:03:58,  1.47s/it, lr=7e-5, step_loss=0.0507]Steps:  10%|█         | 2578/24850 [58:15<9:03:56,  1.47s/it, lr=7e-5, step_loss=0.0507]Steps:  10%|█         | 2578/24850 [58:15<9:03:56,  1.47s/it, lr=7e-5, step_loss=0.0324]Steps:  10%|█         | 2579/24850 [58:17<9:01:06,  1.46s/it, lr=7e-5, step_loss=0.0324]Steps:  10%|█         | 2579/24850 [58:17<9:01:06,  1.46s/it, lr=7e-5, step_loss=0.02]  Steps:  10%|█         | 2580/24850 [58:18<9:02:01,  1.46s/it, lr=7e-5, step_loss=0.02]Steps:  10%|█         | 2580/24850 [58:18<9:02:01,  1.46s/it, lr=7e-5, step_loss=0.0398]Steps:  10%|█         | 2581/24850 [58:20<9:02:10,  1.46s/it, lr=7e-5, step_loss=0.0398]Steps:  10%|█         | 2581/24850 [58:20<9:02:10,  1.46s/it, lr=7e-5, step_loss=0.0973]Steps:  10%|█         | 2582/24850 [58:21<9:02:55,  1.46s/it, lr=7e-5, step_loss=0.0973]Steps:  10%|█         | 2582/24850 [58:21<9:02:55,  1.46s/it, lr=7e-5, step_loss=0.0209]Steps:  10%|█         | 2583/24850 [58:23<9:02:41,  1.46s/it, lr=7e-5, step_loss=0.0209]Steps:  10%|█         | 2583/24850 [58:23<9:02:41,  1.46s/it, lr=7e-5, step_loss=0.0174]Steps:  10%|█         | 2584/24850 [58:24<9:00:55,  1.46s/it, lr=7e-5, step_loss=0.0174]Steps:  10%|█         | 2584/24850 [58:24<9:00:55,  1.46s/it, lr=7e-5, step_loss=0.0105]Steps:  10%|█         | 2585/24850 [58:26<9:00:31,  1.46s/it, lr=7e-5, step_loss=0.0105]Steps:  10%|█         | 2585/24850 [58:26<9:00:31,  1.46s/it, lr=7e-5, step_loss=0.00593]Steps:  10%|█         | 2586/24850 [58:27<9:00:02,  1.46s/it, lr=7e-5, step_loss=0.00593]Steps:  10%|█         | 2586/24850 [58:27<9:00:02,  1.46s/it, lr=7e-5, step_loss=0.00484]Steps:  10%|█         | 2587/24850 [58:28<9:00:28,  1.46s/it, lr=7e-5, step_loss=0.00484]Steps:  10%|█         | 2587/24850 [58:28<9:00:28,  1.46s/it, lr=7e-5, step_loss=0.0153] Steps:  10%|█         | 2588/24850 [58:30<9:00:04,  1.46s/it, lr=7e-5, step_loss=0.0153]Steps:  10%|█         | 2588/24850 [58:30<9:00:04,  1.46s/it, lr=7e-5, step_loss=0.0393]Steps:  10%|█         | 2589/24850 [58:31<9:01:46,  1.46s/it, lr=7e-5, step_loss=0.0393]Steps:  10%|█         | 2589/24850 [58:31<9:01:46,  1.46s/it, lr=7e-5, step_loss=0.0376] torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:  10%|█         | 2590/24850 [58:33<9:02:23,  1.46s/it, lr=7e-5, step_loss=0.0376]Steps:  10%|█         | 2590/24850 [58:33<9:02:23,  1.46s/it, lr=7e-5, step_loss=0.0279]Steps:  10%|█         | 2591/24850 [58:34<9:01:44,  1.46s/it, lr=7e-5, step_loss=0.0279]Steps:  10%|█         | 2591/24850 [58:34<9:01:44,  1.46s/it, lr=7e-5, step_loss=0.000998]Steps:  10%|█         | 2592/24850 [58:36<9:00:47,  1.46s/it, lr=7e-5, step_loss=0.000998]Steps:  10%|█         | 2592/24850 [58:36<9:00:47,  1.46s/it, lr=7e-5, step_loss=0.0452]  Steps:  10%|█         | 2593/24850 [58:37<9:01:04,  1.46s/it, lr=7e-5, step_loss=0.0452]Steps:  10%|█         | 2593/24850 [58:37<9:01:04,  1.46s/it, lr=7e-5, step_loss=0.00779]Steps:  10%|█         | 2594/24850 [58:39<9:02:23,  1.46s/it, lr=7e-5, step_loss=0.00779]Steps:  10%|█         | 2594/24850 [58:39<9:02:23,  1.46s/it, lr=7e-5, step_loss=0.0496] Steps:  10%|█         | 2595/24850 [58:41<10:55:13,  1.77s/it, lr=7e-5, step_loss=0.0496]Steps:  10%|█         | 2595/24850 [58:41<10:55:13,  1.77s/it, lr=7e-5, step_loss=0.0257]Steps:  10%|█         | 2596/24850 [58:43<10:47:24,  1.75s/it, lr=7e-5, step_loss=0.0257]Steps:  10%|█         | 2596/24850 [58:43<10:47:24,  1.75s/it, lr=7e-5, step_loss=0.0392]Steps:  10%|█         | 2597/24850 [58:44<10:19:49,  1.67s/it, lr=7e-5, step_loss=0.0392]Steps:  10%|█         | 2597/24850 [58:44<10:19:49,  1.67s/it, lr=7e-5, step_loss=0.00683]Steps:  10%|█         | 2598/24850 [58:46<9:57:26,  1.61s/it, lr=7e-5, step_loss=0.00683] Steps:  10%|█         | 2598/24850 [58:46<9:57:26,  1.61s/it, lr=7e-5, step_loss=0.0314] Steps:  10%|█         | 2599/24850 [58:47<9:42:46,  1.57s/it, lr=7e-5, step_loss=0.0314]Steps:  10%|█         | 2599/24850 [58:47<9:42:46,  1.57s/it, lr=7e-5, step_loss=0.019] Steps:  10%|█         | 2600/24850 [58:49<9:29:34,  1.54s/it, lr=7e-5, step_loss=0.019]Steps:  10%|█         | 2600/24850 [58:49<9:29:34,  1.54s/it, lr=7e-5, step_loss=0.0693]Steps:  10%|█         | 2601/24850 [58:50<9:21:47,  1.52s/it, lr=7e-5, step_loss=0.0693]Steps:  10%|█         | 2601/24850 [58:50<9:21:47,  1.52s/it, lr=7e-5, step_loss=0.0199]Steps:  10%|█         | 2602/24850 [58:52<9:17:53,  1.50s/it, lr=7e-5, step_loss=0.0199]Steps:  10%|█         | 2602/24850 [58:52<9:17:53,  1.50s/it, lr=7e-5, step_loss=0.00608]Steps:  10%|█         | 2603/24850 [58:53<9:12:32,  1.49s/it, lr=7e-5, step_loss=0.00608]Steps:  10%|█         | 2603/24850 [58:53<9:12:32,  1.49s/it, lr=7e-5, step_loss=0.0482] Steps:  10%|█         | 2604/24850 [58:55<9:10:52,  1.49s/it, lr=7e-5, step_loss=0.0482]Steps:  10%|█         | 2604/24850 [58:55<9:10:52,  1.49s/it, lr=7e-5, step_loss=0.156] Steps:  10%|█         | 2605/24850 [58:56<9:09:25,  1.48s/it, lr=7e-5, step_loss=0.156]Steps:  10%|█         | 2605/24850 [58:56<9:09:25,  1.48s/it, lr=7e-5, step_loss=0.0258]Steps:  10%|█         | 2606/24850 [58:58<9:08:16,  1.48s/it, lr=7e-5, step_loss=0.0258]Steps:  10%|█         | 2606/24850 [58:58<9:08:16,  1.48s/it, lr=7e-5, step_loss=0.196] Steps:  10%|█         | 2607/24850 [58:59<9:07:41,  1.48s/it, lr=7e-5, step_loss=0.196]Steps:  10%|█         | 2607/24850 [58:59<9:07:41,  1.48s/it, lr=7e-5, step_loss=0.00798]Steps:  10%|█         | 2608/24850 [59:00<9:04:19,  1.47s/it, lr=7e-5, step_loss=0.00798]Steps:  10%|█         | 2608/24850 [59:00<9:04:19,  1.47s/it, lr=7e-5, step_loss=0.00479]Steps:  10%|█         | 2609/24850 [59:02<9:04:38,  1.47s/it, lr=7e-5, step_loss=0.00479]Steps:  10%|█         | 2609/24850 [59:02<9:04:38,  1.47s/it, lr=7e-5, step_loss=0.0419] Steps:  11%|█         | 2610/24850 [59:03<9:03:18,  1.47s/it, lr=7e-5, step_loss=0.0419]Steps:  11%|█         | 2610/24850 [59:03<9:03:18,  1.47s/it, lr=7e-5, step_loss=0.0094]Steps:  11%|█         | 2611/24850 [59:05<9:01:52,  1.46s/it, lr=7e-5, step_loss=0.0094]Steps:  11%|█         | 2611/24850 [59:05<9:01:52,  1.46s/it, lr=7e-5, step_loss=0.00441]Steps:  11%|█         | 2612/24850 [59:06<9:02:12,  1.46s/it, lr=7e-5, step_loss=0.00441]Steps:  11%|█         | 2612/24850 [59:06<9:02:12,  1.46s/it, lr=7e-5, step_loss=0.0437] Steps:  11%|█         | 2613/24850 [59:08<9:02:11,  1.46s/it, lr=7e-5, step_loss=0.0437]Steps:  11%|█         | 2613/24850 [59:08<9:02:11,  1.46s/it, lr=7e-5, step_loss=0.0068]Steps:  11%|█         | 2614/24850 [59:09<9:00:54,  1.46s/it, lr=7e-5, step_loss=0.0068]Steps:  11%|█         | 2614/24850 [59:09<9:00:54,  1.46s/it, lr=7e-5, step_loss=0.091] Steps:  11%|█         | 2615/24850 [59:11<9:02:33,  1.46s/it, lr=7e-5, step_loss=0.091]Steps:  11%|█         | 2615/24850 [59:11<9:02:33,  1.46s/it, lr=7e-5, step_loss=0.00511]Steps:  11%|█         | 2616/24850 [59:12<9:04:12,  1.47s/it, lr=7e-5, step_loss=0.00511]Steps:  11%|█         | 2616/24850 [59:12<9:04:12,  1.47s/it, lr=7e-5, step_loss=0.151]  torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  Steps:  11%|█         | 2617/24850 [59:14<9:02:46,  1.46s/it, lr=7e-5, step_loss=0.151]Steps:  11%|█         | 2617/24850 [59:14<9:02:46,  1.46s/it, lr=7e-5, step_loss=0.00621]Steps:  11%|█         | 2618/24850 [59:15<9:04:40,  1.47s/it, lr=7e-5, step_loss=0.00621]Steps:  11%|█         | 2618/24850 [59:15<9:04:40,  1.47s/it, lr=7e-5, step_loss=0.12]   Steps:  11%|█         | 2619/24850 [59:17<9:03:13,  1.47s/it, lr=7e-5, step_loss=0.12]Steps:  11%|█         | 2619/24850 [59:17<9:03:13,  1.47s/it, lr=7e-5, step_loss=0.00172]Steps:  11%|█         | 2620/24850 [59:18<9:03:16,  1.47s/it, lr=7e-5, step_loss=0.00172]Steps:  11%|█         | 2620/24850 [59:18<9:03:16,  1.47s/it, lr=7e-5, step_loss=0.123]  Steps:  11%|█         | 2621/24850 [59:20<9:04:35,  1.47s/it, lr=7e-5, step_loss=0.123]Steps:  11%|█         | 2621/24850 [59:20<9:04:35,  1.47s/it, lr=7e-5, step_loss=0.028]Steps:  11%|█         | 2622/24850 [59:21<9:06:19,  1.47s/it, lr=7e-5, step_loss=0.028]Steps:  11%|█         | 2622/24850 [59:21<9:06:19,  1.47s/it, lr=7e-5, step_loss=0.0135]Steps:  11%|█         | 2623/24850 [59:22<9:02:50,  1.47s/it, lr=7e-5, step_loss=0.0135]Steps:  11%|█         | 2623/24850 [59:22<9:02:50,  1.47s/it, lr=7e-5, step_loss=0.00688]Steps:  11%|█         | 2624/24850 [59:24<9:02:21,  1.46s/it, lr=7e-5, step_loss=0.00688]Steps:  11%|█         | 2624/24850 [59:24<9:02:21,  1.46s/it, lr=7e-5, step_loss=0.012]  Steps:  11%|█         | 2625/24850 [59:25<9:02:54,  1.47s/it, lr=7e-5, step_loss=0.012]Steps:  11%|█         | 2625/24850 [59:25<9:02:54,  1.47s/it, lr=7e-5, step_loss=0.0324]Steps:  11%|█         | 2626/24850 [59:27<9:03:50,  1.47s/it, lr=7e-5, step_loss=0.0324]Steps:  11%|█         | 2626/24850 [59:27<9:03:50,  1.47s/it, lr=7e-5, step_loss=0.0369]Steps:  11%|█         | 2627/24850 [59:28<9:02:13,  1.46s/it, lr=7e-5, step_loss=0.0369]Steps:  11%|█         | 2627/24850 [59:28<9:02:13,  1.46s/it, lr=7e-5, step_loss=0.00338]Steps:  11%|█         | 2628/24850 [59:30<9:03:35,  1.47s/it, lr=7e-5, step_loss=0.00338]Steps:  11%|█         | 2628/24850 [59:30<9:03:35,  1.47s/it, lr=7e-5, step_loss=0.0154] Steps:  11%|█         | 2629/24850 [59:31<9:03:14,  1.47s/it, lr=7e-5, step_loss=0.0154]Steps:  11%|█         | 2629/24850 [59:31<9:03:14,  1.47s/it, lr=7e-5, step_loss=0.00411]Steps:  11%|█         | 2630/24850 [59:33<9:03:28,  1.47s/it, lr=7e-5, step_loss=0.00411]Steps:  11%|█         | 2630/24850 [59:33<9:03:28,  1.47s/it, lr=7e-5, step_loss=0.0195] Steps:  11%|█         | 2631/24850 [59:34<9:04:48,  1.47s/it, lr=7e-5, step_loss=0.0195]Steps:  11%|█         | 2631/24850 [59:34<9:04:48,  1.47s/it, lr=7e-5, step_loss=0.0186]Steps:  11%|█         | 2632/24850 [59:36<9:03:55,  1.47s/it, lr=7e-5, step_loss=0.0186]Steps:  11%|█         | 2632/24850 [59:36<9:03:55,  1.47s/it, lr=7e-5, step_loss=0.0177]Steps:  11%|█         | 2633/24850 [59:37<9:04:46,  1.47s/it, lr=7e-5, step_loss=0.0177]Steps:  11%|█         | 2633/24850 [59:37<9:04:46,  1.47s/it, lr=7e-5, step_loss=0.0102]Steps:  11%|█         | 2634/24850 [59:39<9:05:03,  1.47s/it, lr=7e-5, step_loss=0.0102]Steps:  11%|█         | 2634/24850 [59:39<9:05:03,  1.47s/it, lr=7e-5, step_loss=0.0103]Steps:  11%|█         | 2635/24850 [59:40<9:02:08,  1.46s/it, lr=7e-5, step_loss=0.0103]Steps:  11%|█         | 2635/24850 [59:40<9:02:08,  1.46s/it, lr=7e-5, step_loss=0.0733]Steps:  11%|█         | 2636/24850 [59:42<9:01:21,  1.46s/it, lr=7e-5, step_loss=0.0733]Steps:  11%|█         | 2636/24850 [59:42<9:01:21,  1.46s/it, lr=7e-5, step_loss=0.0294]Steps:  11%|█         | 2637/24850 [59:43<9:14:13,  1.50s/it, lr=7e-5, step_loss=0.0294]Steps:  11%|█         | 2637/24850 [59:43<9:14:13,  1.50s/it, lr=7e-5, step_loss=0.014] Steps:  11%|█         | 2638/24850 [59:45<9:19:08,  1.51s/it, lr=7e-5, step_loss=0.014]Steps:  11%|█         | 2638/24850 [59:45<9:19:08,  1.51s/it, lr=7e-5, step_loss=0.0281]Steps:  11%|█         | 2639/24850 [59:46<9:15:38,  1.50s/it, lr=7e-5, step_loss=0.0281]Steps:  11%|█         | 2639/24850 [59:46<9:15:38,  1.50s/it, lr=7e-5, step_loss=0.0318]Steps:  11%|█         | 2640/24850 [59:48<9:11:42,  1.49s/it, lr=7e-5, step_loss=0.0318]Steps:  11%|█         | 2640/24850 [59:48<9:11:42,  1.49s/it, lr=7e-5, step_loss=0.0159]Steps:  11%|█         | 2641/24850 [59:49<9:12:08,  1.49s/it, lr=7e-5, step_loss=0.0159]Steps:  11%|█         | 2641/24850 [59:49<9:12:08,  1.49s/it, lr=7e-5, step_loss=0.00381]Steps:  11%|█         | 2642/24850 [59:51<9:09:35,  1.48s/it, lr=7e-5, step_loss=0.00381]Steps:  11%|█         | 2642/24850 [59:51<9:09:35,  1.48s/it, lr=7e-5, step_loss=0.0124] Steps:  11%|█         | 2643/24850 [59:52<9:06:55,  1.48s/it, lr=7e-5, step_loss=0.0124]Steps:  11%|█         | 2643/24850 [59:52<9:06:55,  1.48s/it, lr=7e-5, step_loss=0.128] Steps:  11%|█         | 2644/24850 [59:54<9:05:31,  1.47s/it, lr=7e-5, step_loss=0.128]Steps:  11%|█         | 2644/24850 [59:54<9:05:31,  1.47s/it, lr=7e-5, step_loss=0.0371]mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:  11%|█         | 2645/24850 [59:56<11:00:39,  1.79s/it, lr=7e-5, step_loss=0.0371]Steps:  11%|█         | 2645/24850 [59:56<11:00:39,  1.79s/it, lr=7e-5, step_loss=0.0395]Steps:  11%|█         | 2646/24850 [59:57<10:25:17,  1.69s/it, lr=7e-5, step_loss=0.0395]Steps:  11%|█         | 2646/24850 [59:57<10:25:17,  1.69s/it, lr=7e-5, step_loss=0.00544]Steps:  11%|█         | 2647/24850 [59:59<10:00:55,  1.62s/it, lr=7e-5, step_loss=0.00544]Steps:  11%|█         | 2647/24850 [59:59<10:00:55,  1.62s/it, lr=7e-5, step_loss=0.0204] Steps:  11%|█         | 2648/24850 [1:00:00<9:42:34,  1.57s/it, lr=7e-5, step_loss=0.0204]Steps:  11%|█         | 2648/24850 [1:00:00<9:42:34,  1.57s/it, lr=7e-5, step_loss=0.0252]Steps:  11%|█         | 2649/24850 [1:00:02<9:31:51,  1.55s/it, lr=7e-5, step_loss=0.0252]Steps:  11%|█         | 2649/24850 [1:00:02<9:31:51,  1.55s/it, lr=7e-5, step_loss=0.187] Steps:  11%|█         | 2650/24850 [1:00:03<9:22:44,  1.52s/it, lr=7e-5, step_loss=0.187]Steps:  11%|█         | 2650/24850 [1:00:03<9:22:44,  1.52s/it, lr=7e-5, step_loss=0.0205]Steps:  11%|█         | 2651/24850 [1:00:05<9:16:39,  1.50s/it, lr=7e-5, step_loss=0.0205]Steps:  11%|█         | 2651/24850 [1:00:05<9:16:39,  1.50s/it, lr=7e-5, step_loss=0.0583]Steps:  11%|█         | 2652/24850 [1:00:06<9:13:51,  1.50s/it, lr=7e-5, step_loss=0.0583]Steps:  11%|█         | 2652/24850 [1:00:06<9:13:51,  1.50s/it, lr=7e-5, step_loss=0.0676]Steps:  11%|█         | 2653/24850 [1:00:08<9:12:31,  1.49s/it, lr=7e-5, step_loss=0.0676]Steps:  11%|█         | 2653/24850 [1:00:08<9:12:31,  1.49s/it, lr=7e-5, step_loss=0.00258]Steps:  11%|█         | 2654/24850 [1:00:09<9:11:17,  1.49s/it, lr=7e-5, step_loss=0.00258]Steps:  11%|█         | 2654/24850 [1:00:09<9:11:17,  1.49s/it, lr=7e-5, step_loss=0.0585] Steps:  11%|█         | 2655/24850 [1:00:11<9:08:04,  1.48s/it, lr=7e-5, step_loss=0.0585]Steps:  11%|█         | 2655/24850 [1:00:11<9:08:04,  1.48s/it, lr=7e-5, step_loss=0.0149]Steps:  11%|█         | 2656/24850 [1:00:12<9:06:21,  1.48s/it, lr=7e-5, step_loss=0.0149]Steps:  11%|█         | 2656/24850 [1:00:12<9:06:21,  1.48s/it, lr=7e-5, step_loss=0.0205]Steps:  11%|█         | 2657/24850 [1:00:14<9:05:28,  1.47s/it, lr=7e-5, step_loss=0.0205]Steps:  11%|█         | 2657/24850 [1:00:14<9:05:28,  1.47s/it, lr=7e-5, step_loss=0.0518]Steps:  11%|█         | 2658/24850 [1:00:15<9:03:01,  1.47s/it, lr=7e-5, step_loss=0.0518]Steps:  11%|█         | 2658/24850 [1:00:15<9:03:01,  1.47s/it, lr=7e-5, step_loss=0.0129]Steps:  11%|█         | 2659/24850 [1:00:17<9:01:43,  1.46s/it, lr=7e-5, step_loss=0.0129]Steps:  11%|█         | 2659/24850 [1:00:17<9:01:43,  1.46s/it, lr=7e-5, step_loss=0.021] Steps:  11%|█         | 2660/24850 [1:00:18<9:00:58,  1.46s/it, lr=7e-5, step_loss=0.021]Steps:  11%|█         | 2660/24850 [1:00:18<9:00:58,  1.46s/it, lr=7e-5, step_loss=0.0198]Steps:  11%|█         | 2661/24850 [1:00:20<9:02:01,  1.47s/it, lr=7e-5, step_loss=0.0198]Steps:  11%|█         | 2661/24850 [1:00:20<9:02:01,  1.47s/it, lr=7e-5, step_loss=0.015] Steps:  11%|█         | 2662/24850 [1:00:21<9:02:00,  1.47s/it, lr=7e-5, step_loss=0.015]Steps:  11%|█         | 2662/24850 [1:00:21<9:02:00,  1.47s/it, lr=7e-5, step_loss=0.093]Steps:  11%|█         | 2663/24850 [1:00:22<9:00:19,  1.46s/it, lr=7e-5, step_loss=0.093]Steps:  11%|█         | 2663/24850 [1:00:22<9:00:19,  1.46s/it, lr=7e-5, step_loss=0.000238]Steps:  11%|█         | 2664/24850 [1:00:24<9:01:32,  1.46s/it, lr=7e-5, step_loss=0.000238]Steps:  11%|█         | 2664/24850 [1:00:24<9:01:32,  1.46s/it, lr=7e-5, step_loss=0.014]   Steps:  11%|█         | 2665/24850 [1:00:25<9:00:55,  1.46s/it, lr=7e-5, step_loss=0.014]Steps:  11%|█         | 2665/24850 [1:00:25<9:00:55,  1.46s/it, lr=7e-5, step_loss=0.0202]Steps:  11%|█         | 2666/24850 [1:00:27<9:21:03,  1.52s/it, lr=7e-5, step_loss=0.0202]Steps:  11%|█         | 2666/24850 [1:00:27<9:21:03,  1.52s/it, lr=7e-5, step_loss=0.156] Steps:  11%|█         | 2667/24850 [1:00:28<9:14:06,  1.50s/it, lr=7e-5, step_loss=0.156]Steps:  11%|█         | 2667/24850 [1:00:28<9:14:06,  1.50s/it, lr=7e-5, step_loss=0.035]Steps:  11%|█         | 2668/24850 [1:00:30<9:11:14,  1.49s/it, lr=7e-5, step_loss=0.035]Steps:  11%|█         | 2668/24850 [1:00:30<9:11:14,  1.49s/it, lr=7e-5, step_loss=0.00569]Steps:  11%|█         | 2669/24850 [1:00:31<9:08:47,  1.48s/it, lr=7e-5, step_loss=0.00569]Steps:  11%|█         | 2669/24850 [1:00:31<9:08:47,  1.48s/it, lr=7e-5, step_loss=0.025]  Steps:  11%|█         | 2670/24850 [1:00:33<9:08:42,  1.48s/it, lr=7e-5, step_loss=0.025]Steps:  11%|█         | 2670/24850 [1:00:33<9:08:42,  1.48s/it, lr=7e-5, step_loss=0.0329]Steps:  11%|█         | 2671/24850 [1:00:34<9:05:46,  1.48s/it, lr=7e-5, step_loss=0.0329]Steps:  11%|█         | 2671/24850 [1:00:34<9:05:46,  1.48s/it, lr=7e-5, step_loss=0.00192]torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) Steps:  11%|█         | 2672/24850 [1:00:36<9:03:21,  1.47s/it, lr=7e-5, step_loss=0.00192]Steps:  11%|█         | 2672/24850 [1:00:36<9:03:21,  1.47s/it, lr=7e-5, step_loss=0.0153] Steps:  11%|█         | 2673/24850 [1:00:37<9:02:16,  1.47s/it, lr=7e-5, step_loss=0.0153]Steps:  11%|█         | 2673/24850 [1:00:37<9:02:16,  1.47s/it, lr=7e-5, step_loss=0.0204]Steps:  11%|█         | 2674/24850 [1:00:39<9:01:46,  1.47s/it, lr=7e-5, step_loss=0.0204]Steps:  11%|█         | 2674/24850 [1:00:39<9:01:46,  1.47s/it, lr=7e-5, step_loss=0.0463]Steps:  11%|█         | 2675/24850 [1:00:40<9:01:04,  1.46s/it, lr=7e-5, step_loss=0.0463]Steps:  11%|█         | 2675/24850 [1:00:40<9:01:04,  1.46s/it, lr=7e-5, step_loss=0.00318]Steps:  11%|█         | 2676/24850 [1:00:42<9:01:31,  1.47s/it, lr=7e-5, step_loss=0.00318]Steps:  11%|█         | 2676/24850 [1:00:42<9:01:31,  1.47s/it, lr=7e-5, step_loss=0.0886] Steps:  11%|█         | 2677/24850 [1:00:43<9:05:18,  1.48s/it, lr=7e-5, step_loss=0.0886]Steps:  11%|█         | 2677/24850 [1:00:43<9:05:18,  1.48s/it, lr=7e-5, step_loss=0.0209]Steps:  11%|█         | 2678/24850 [1:00:45<9:11:14,  1.49s/it, lr=7e-5, step_loss=0.0209]Steps:  11%|█         | 2678/24850 [1:00:45<9:11:14,  1.49s/it, lr=7e-5, step_loss=0.0345]Steps:  11%|█         | 2679/24850 [1:00:46<9:09:57,  1.49s/it, lr=7e-5, step_loss=0.0345]Steps:  11%|█         | 2679/24850 [1:00:46<9:09:57,  1.49s/it, lr=7e-5, step_loss=0.04]  Steps:  11%|█         | 2680/24850 [1:00:48<9:08:04,  1.48s/it, lr=7e-5, step_loss=0.04]Steps:  11%|█         | 2680/24850 [1:00:48<9:08:04,  1.48s/it, lr=7e-5, step_loss=0.0692]Steps:  11%|█         | 2681/24850 [1:00:49<9:07:27,  1.48s/it, lr=7e-5, step_loss=0.0692]Steps:  11%|█         | 2681/24850 [1:00:49<9:07:27,  1.48s/it, lr=7e-5, step_loss=0.0629]Steps:  11%|█         | 2682/24850 [1:00:51<9:04:18,  1.47s/it, lr=7e-5, step_loss=0.0629]Steps:  11%|█         | 2682/24850 [1:00:51<9:04:18,  1.47s/it, lr=7e-5, step_loss=0.0543]Steps:  11%|█         | 2683/24850 [1:00:52<9:04:20,  1.47s/it, lr=7e-5, step_loss=0.0543]Steps:  11%|█         | 2683/24850 [1:00:52<9:04:20,  1.47s/it, lr=7e-5, step_loss=0.051] Steps:  11%|█         | 2684/24850 [1:00:53<9:03:28,  1.47s/it, lr=7e-5, step_loss=0.051]Steps:  11%|█         | 2684/24850 [1:00:53<9:03:28,  1.47s/it, lr=7e-5, step_loss=0.0371]Steps:  11%|█         | 2685/24850 [1:00:55<9:02:31,  1.47s/it, lr=7e-5, step_loss=0.0371]Steps:  11%|█         | 2685/24850 [1:00:55<9:02:31,  1.47s/it, lr=7e-5, step_loss=0.0345]Steps:  11%|█         | 2686/24850 [1:00:56<9:02:26,  1.47s/it, lr=7e-5, step_loss=0.0345]Steps:  11%|█         | 2686/24850 [1:00:56<9:02:26,  1.47s/it, lr=7e-5, step_loss=0.0267]Steps:  11%|█         | 2687/24850 [1:00:58<9:01:14,  1.47s/it, lr=7e-5, step_loss=0.0267]Steps:  11%|█         | 2687/24850 [1:00:58<9:01:14,  1.47s/it, lr=7e-5, step_loss=0.0686]Steps:  11%|█         | 2688/24850 [1:00:59<9:00:13,  1.46s/it, lr=7e-5, step_loss=0.0686]Steps:  11%|█         | 2688/24850 [1:00:59<9:00:13,  1.46s/it, lr=7e-5, step_loss=0.00427]Steps:  11%|█         | 2689/24850 [1:01:01<9:04:14,  1.47s/it, lr=7e-5, step_loss=0.00427]Steps:  11%|█         | 2689/24850 [1:01:01<9:04:14,  1.47s/it, lr=7e-5, step_loss=0.0178] Steps:  11%|█         | 2690/24850 [1:01:02<9:03:16,  1.47s/it, lr=7e-5, step_loss=0.0178]Steps:  11%|█         | 2690/24850 [1:01:02<9:03:16,  1.47s/it, lr=7e-5, step_loss=0.0174]Steps:  11%|█         | 2691/24850 [1:01:04<9:11:11,  1.49s/it, lr=7e-5, step_loss=0.0174]Steps:  11%|█         | 2691/24850 [1:01:04<9:11:11,  1.49s/it, lr=7e-5, step_loss=0.0487]Steps:  11%|█         | 2692/24850 [1:01:05<9:08:45,  1.49s/it, lr=7e-5, step_loss=0.0487]Steps:  11%|█         | 2692/24850 [1:01:05<9:08:45,  1.49s/it, lr=7e-5, step_loss=0.0838]Steps:  11%|█         | 2693/24850 [1:01:07<9:06:20,  1.48s/it, lr=7e-5, step_loss=0.0838]Steps:  11%|█         | 2693/24850 [1:01:07<9:06:20,  1.48s/it, lr=7e-5, step_loss=0.00585]Steps:  11%|█         | 2694/24850 [1:01:08<9:05:49,  1.48s/it, lr=7e-5, step_loss=0.00585]Steps:  11%|█         | 2694/24850 [1:01:08<9:05:49,  1.48s/it, lr=7e-5, step_loss=0.0214] Steps:  11%|█         | 2695/24850 [1:01:11<10:52:42,  1.77s/it, lr=7e-5, step_loss=0.0214]Steps:  11%|█         | 2695/24850 [1:01:11<10:52:42,  1.77s/it, lr=7e-5, step_loss=0.00485]Steps:  11%|█         | 2696/24850 [1:01:12<10:17:56,  1.67s/it, lr=7e-5, step_loss=0.00485]Steps:  11%|█         | 2696/24850 [1:01:12<10:17:56,  1.67s/it, lr=7e-5, step_loss=0.0137] Steps:  11%|█         | 2697/24850 [1:01:14<9:54:35,  1.61s/it, lr=7e-5, step_loss=0.0137] Steps:  11%|█         | 2697/24850 [1:01:14<9:54:35,  1.61s/it, lr=7e-5, step_loss=0.000877]Steps:  11%|█         | 2698/24850 [1:01:15<9:37:16,  1.56s/it, lr=7e-5, step_loss=0.000877]Steps:  11%|█         | 2698/24850 [1:01:15<9:37:16,  1.56s/it, lr=7e-5, step_loss=0.0204]  torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:  11%|█         | 2699/24850 [1:01:17<9:27:02,  1.54s/it, lr=7e-5, step_loss=0.0204]Steps:  11%|█         | 2699/24850 [1:01:17<9:27:02,  1.54s/it, lr=7e-5, step_loss=0.0315]Steps:  11%|█         | 2700/24850 [1:01:18<9:20:38,  1.52s/it, lr=7e-5, step_loss=0.0315]Steps:  11%|█         | 2700/24850 [1:01:18<9:20:38,  1.52s/it, lr=7e-5, step_loss=0.00534]Steps:  11%|█         | 2701/24850 [1:01:19<9:14:09,  1.50s/it, lr=7e-5, step_loss=0.00534]Steps:  11%|█         | 2701/24850 [1:01:19<9:14:09,  1.50s/it, lr=7e-5, step_loss=0.441]  Steps:  11%|█         | 2702/24850 [1:01:21<9:11:24,  1.49s/it, lr=7e-5, step_loss=0.441]Steps:  11%|█         | 2702/24850 [1:01:21<9:11:24,  1.49s/it, lr=7e-5, step_loss=0.0587]Steps:  11%|█         | 2703/24850 [1:01:22<9:08:48,  1.49s/it, lr=7e-5, step_loss=0.0587]Steps:  11%|█         | 2703/24850 [1:01:22<9:08:48,  1.49s/it, lr=7e-5, step_loss=0.00906]Steps:  11%|█         | 2704/24850 [1:01:24<9:05:27,  1.48s/it, lr=7e-5, step_loss=0.00906]Steps:  11%|█         | 2704/24850 [1:01:24<9:05:27,  1.48s/it, lr=7e-5, step_loss=0.00729]Steps:  11%|█         | 2705/24850 [1:01:25<9:04:46,  1.48s/it, lr=7e-5, step_loss=0.00729]Steps:  11%|█         | 2705/24850 [1:01:25<9:04:46,  1.48s/it, lr=7e-5, step_loss=0.0132] Steps:  11%|█         | 2706/24850 [1:01:27<9:03:06,  1.47s/it, lr=7e-5, step_loss=0.0132]Steps:  11%|█         | 2706/24850 [1:01:27<9:03:06,  1.47s/it, lr=7e-5, step_loss=0.0509]Steps:  11%|█         | 2707/24850 [1:01:28<9:01:08,  1.47s/it, lr=7e-5, step_loss=0.0509]Steps:  11%|█         | 2707/24850 [1:01:28<9:01:08,  1.47s/it, lr=7e-5, step_loss=0.0267]Steps:  11%|█         | 2708/24850 [1:01:30<9:01:37,  1.47s/it, lr=7e-5, step_loss=0.0267]Steps:  11%|█         | 2708/24850 [1:01:30<9:01:37,  1.47s/it, lr=7e-5, step_loss=0.0619]Steps:  11%|█         | 2709/24850 [1:01:31<9:02:00,  1.47s/it, lr=7e-5, step_loss=0.0619]Steps:  11%|█         | 2709/24850 [1:01:31<9:02:00,  1.47s/it, lr=7e-5, step_loss=0.0409]Steps:  11%|█         | 2710/24850 [1:01:33<9:01:57,  1.47s/it, lr=7e-5, step_loss=0.0409]Steps:  11%|█         | 2710/24850 [1:01:33<9:01:57,  1.47s/it, lr=7e-5, step_loss=0.00251]Steps:  11%|█         | 2711/24850 [1:01:34<9:00:14,  1.46s/it, lr=7e-5, step_loss=0.00251]Steps:  11%|█         | 2711/24850 [1:01:34<9:00:14,  1.46s/it, lr=7e-5, step_loss=0.0187] Steps:  11%|█         | 2712/24850 [1:01:36<8:59:47,  1.46s/it, lr=7e-5, step_loss=0.0187]Steps:  11%|█         | 2712/24850 [1:01:36<8:59:47,  1.46s/it, lr=7e-5, step_loss=0.0031]Steps:  11%|█         | 2713/24850 [1:01:37<9:00:42,  1.47s/it, lr=7e-5, step_loss=0.0031]Steps:  11%|█         | 2713/24850 [1:01:37<9:00:42,  1.47s/it, lr=7e-5, step_loss=0.0116]Steps:  11%|█         | 2714/24850 [1:01:39<9:00:21,  1.46s/it, lr=7e-5, step_loss=0.0116]Steps:  11%|█         | 2714/24850 [1:01:39<9:00:21,  1.46s/it, lr=7e-5, step_loss=0.0292]Steps:  11%|█         | 2715/24850 [1:01:40<8:58:13,  1.46s/it, lr=7e-5, step_loss=0.0292]Steps:  11%|█         | 2715/24850 [1:01:40<8:58:13,  1.46s/it, lr=7e-5, step_loss=0.0424]Steps:  11%|█         | 2716/24850 [1:01:41<8:58:13,  1.46s/it, lr=7e-5, step_loss=0.0424]Steps:  11%|█         | 2716/24850 [1:01:41<8:58:13,  1.46s/it, lr=7e-5, step_loss=0.0358]Steps:  11%|█         | 2717/24850 [1:01:43<8:58:32,  1.46s/it, lr=7e-5, step_loss=0.0358]Steps:  11%|█         | 2717/24850 [1:01:43<8:58:32,  1.46s/it, lr=7e-5, step_loss=0.0008]Steps:  11%|█         | 2718/24850 [1:01:44<8:59:30,  1.46s/it, lr=7e-5, step_loss=0.0008]Steps:  11%|█         | 2718/24850 [1:01:44<8:59:30,  1.46s/it, lr=7e-5, step_loss=0.086] Steps:  11%|█         | 2719/24850 [1:01:46<9:01:03,  1.47s/it, lr=7e-5, step_loss=0.086]Steps:  11%|█         | 2719/24850 [1:01:46<9:01:03,  1.47s/it, lr=7e-5, step_loss=0.0111]Steps:  11%|█         | 2720/24850 [1:01:47<9:01:10,  1.47s/it, lr=7e-5, step_loss=0.0111]Steps:  11%|█         | 2720/24850 [1:01:47<9:01:10,  1.47s/it, lr=7e-5, step_loss=0.132] Steps:  11%|█         | 2721/24850 [1:01:49<9:01:37,  1.47s/it, lr=7e-5, step_loss=0.132]Steps:  11%|█         | 2721/24850 [1:01:49<9:01:37,  1.47s/it, lr=7e-5, step_loss=0.00935]Steps:  11%|█         | 2722/24850 [1:01:50<9:00:41,  1.47s/it, lr=7e-5, step_loss=0.00935]Steps:  11%|█         | 2722/24850 [1:01:50<9:00:41,  1.47s/it, lr=7e-5, step_loss=0.00138]Steps:  11%|█         | 2723/24850 [1:01:52<8:58:42,  1.46s/it, lr=7e-5, step_loss=0.00138]Steps:  11%|█         | 2723/24850 [1:01:52<8:58:42,  1.46s/it, lr=7e-5, step_loss=0.0246] Steps:  11%|█         | 2724/24850 [1:01:53<8:59:25,  1.46s/it, lr=7e-5, step_loss=0.0246]Steps:  11%|█         | 2724/24850 [1:01:53<8:59:25,  1.46s/it, lr=7e-5, step_loss=0.0195]Steps:  11%|█         | 2725/24850 [1:01:55<9:01:39,  1.47s/it, lr=7e-5, step_loss=0.0195]Steps:  11%|█         | 2725/24850 [1:01:55<9:01:39,  1.47s/it, lr=7e-5, step_loss=0.124] Steps:  11%|█         | 2726/24850 [1:01:56<8:59:58,  1.46s/it, lr=7e-5, step_loss=0.124]Steps:  11%|█         | 2726/24850 [1:01:56<8:59:58,  1.46s/it, lr=7e-5, step_loss=0.125]torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
Steps:  11%|█         | 2727/24850 [1:01:58<8:58:48,  1.46s/it, lr=7e-5, step_loss=0.125]Steps:  11%|█         | 2727/24850 [1:01:58<8:58:48,  1.46s/it, lr=7e-5, step_loss=0.0175]Steps:  11%|█         | 2728/24850 [1:01:59<8:58:09,  1.46s/it, lr=7e-5, step_loss=0.0175]Steps:  11%|█         | 2728/24850 [1:01:59<8:58:09,  1.46s/it, lr=7e-5, step_loss=0.0257]Steps:  11%|█         | 2729/24850 [1:02:00<9:00:13,  1.47s/it, lr=7e-5, step_loss=0.0257]Steps:  11%|█         | 2729/24850 [1:02:00<9:00:13,  1.47s/it, lr=7e-5, step_loss=0.0107]Steps:  11%|█         | 2730/24850 [1:02:02<9:00:46,  1.47s/it, lr=7e-5, step_loss=0.0107]Steps:  11%|█         | 2730/24850 [1:02:02<9:00:46,  1.47s/it, lr=7e-5, step_loss=0.446] Steps:  11%|█         | 2731/24850 [1:02:03<8:59:37,  1.46s/it, lr=7e-5, step_loss=0.446]Steps:  11%|█         | 2731/24850 [1:02:03<8:59:37,  1.46s/it, lr=7e-5, step_loss=0.0177]Steps:  11%|█         | 2732/24850 [1:02:05<8:59:08,  1.46s/it, lr=7e-5, step_loss=0.0177]Steps:  11%|█         | 2732/24850 [1:02:05<8:59:08,  1.46s/it, lr=7e-5, step_loss=0.0627]Steps:  11%|█         | 2733/24850 [1:02:06<9:00:48,  1.47s/it, lr=7e-5, step_loss=0.0627]Steps:  11%|█         | 2733/24850 [1:02:06<9:00:48,  1.47s/it, lr=7e-5, step_loss=0.0618]Steps:  11%|█         | 2734/24850 [1:02:08<9:00:38,  1.47s/it, lr=7e-5, step_loss=0.0618]Steps:  11%|█         | 2734/24850 [1:02:08<9:00:38,  1.47s/it, lr=7e-5, step_loss=0.0156]Steps:  11%|█         | 2735/24850 [1:02:09<8:59:04,  1.46s/it, lr=7e-5, step_loss=0.0156]Steps:  11%|█         | 2735/24850 [1:02:09<8:59:04,  1.46s/it, lr=7e-5, step_loss=0.0296]Steps:  11%|█         | 2736/24850 [1:02:11<8:59:03,  1.46s/it, lr=7e-5, step_loss=0.0296]Steps:  11%|█         | 2736/24850 [1:02:11<8:59:03,  1.46s/it, lr=7e-5, step_loss=0.0338]Steps:  11%|█         | 2737/24850 [1:02:12<8:59:20,  1.46s/it, lr=7e-5, step_loss=0.0338]Steps:  11%|█         | 2737/24850 [1:02:12<8:59:20,  1.46s/it, lr=7e-5, step_loss=0.0428]Steps:  11%|█         | 2738/24850 [1:02:14<8:58:23,  1.46s/it, lr=7e-5, step_loss=0.0428]Steps:  11%|█         | 2738/24850 [1:02:14<8:58:23,  1.46s/it, lr=7e-5, step_loss=0.00175]Steps:  11%|█         | 2739/24850 [1:02:15<8:57:48,  1.46s/it, lr=7e-5, step_loss=0.00175]Steps:  11%|█         | 2739/24850 [1:02:15<8:57:48,  1.46s/it, lr=7e-5, step_loss=0.0205] Steps:  11%|█         | 2740/24850 [1:02:17<8:56:44,  1.46s/it, lr=7e-5, step_loss=0.0205]Steps:  11%|█         | 2740/24850 [1:02:17<8:56:44,  1.46s/it, lr=7e-5, step_loss=0.0113]Steps:  11%|█         | 2741/24850 [1:02:18<8:59:49,  1.46s/it, lr=7e-5, step_loss=0.0113]Steps:  11%|█         | 2741/24850 [1:02:18<8:59:49,  1.46s/it, lr=7e-5, step_loss=0.0883]Steps:  11%|█         | 2742/24850 [1:02:20<8:58:49,  1.46s/it, lr=7e-5, step_loss=0.0883]Steps:  11%|█         | 2742/24850 [1:02:20<8:58:49,  1.46s/it, lr=7e-5, step_loss=0.0328]Steps:  11%|█         | 2743/24850 [1:02:21<9:01:52,  1.47s/it, lr=7e-5, step_loss=0.0328]Steps:  11%|█         | 2743/24850 [1:02:21<9:01:52,  1.47s/it, lr=7e-5, step_loss=0.0202]Steps:  11%|█         | 2744/24850 [1:02:22<9:01:31,  1.47s/it, lr=7e-5, step_loss=0.0202]Steps:  11%|█         | 2744/24850 [1:02:22<9:01:31,  1.47s/it, lr=7e-5, step_loss=0.132] Steps:  11%|█         | 2745/24850 [1:02:25<10:41:13,  1.74s/it, lr=7e-5, step_loss=0.132]Steps:  11%|█         | 2745/24850 [1:02:25<10:41:13,  1.74s/it, lr=7e-5, step_loss=0.0056]Steps:  11%|█         | 2746/24850 [1:02:26<10:11:03,  1.66s/it, lr=7e-5, step_loss=0.0056]Steps:  11%|█         | 2746/24850 [1:02:26<10:11:03,  1.66s/it, lr=7e-5, step_loss=0.0116]Steps:  11%|█         | 2747/24850 [1:02:28<9:47:52,  1.60s/it, lr=7e-5, step_loss=0.0116] Steps:  11%|█         | 2747/24850 [1:02:28<9:47:52,  1.60s/it, lr=7e-5, step_loss=0.00689]Steps:  11%|█         | 2748/24850 [1:02:29<9:32:30,  1.55s/it, lr=7e-5, step_loss=0.00689]Steps:  11%|█         | 2748/24850 [1:02:29<9:32:30,  1.55s/it, lr=7e-5, step_loss=0.00684]Steps:  11%|█         | 2749/24850 [1:02:31<9:21:13,  1.52s/it, lr=7e-5, step_loss=0.00684]Steps:  11%|█         | 2749/24850 [1:02:31<9:21:13,  1.52s/it, lr=7e-5, step_loss=0.00179]Steps:  11%|█         | 2750/24850 [1:02:32<9:13:08,  1.50s/it, lr=7e-5, step_loss=0.00179]Steps:  11%|█         | 2750/24850 [1:02:32<9:13:08,  1.50s/it, lr=7e-5, step_loss=0.0208] Steps:  11%|█         | 2751/24850 [1:02:34<9:09:16,  1.49s/it, lr=7e-5, step_loss=0.0208]Steps:  11%|█         | 2751/24850 [1:02:34<9:09:16,  1.49s/it, lr=7e-5, step_loss=0.056] Steps:  11%|█         | 2752/24850 [1:02:35<9:06:05,  1.48s/it, lr=7e-5, step_loss=0.056]Steps:  11%|█         | 2752/24850 [1:02:35<9:06:05,  1.48s/it, lr=7e-5, step_loss=0.011]Steps:  11%|█         | 2753/24850 [1:02:37<9:05:58,  1.48s/it, lr=7e-5, step_loss=0.011]Steps:  11%|█         | 2753/24850 [1:02:37<9:05:58,  1.48s/it, lr=7e-5, step_loss=0.0265](512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512)Steps:  11%|█         | 2754/24850 [1:02:38<9:02:51,  1.47s/it, lr=7e-5, step_loss=0.0265]Steps:  11%|█         | 2754/24850 [1:02:38<9:02:51,  1.47s/it, lr=7e-5, step_loss=0.0162]Steps:  11%|█         | 2755/24850 [1:02:39<9:01:48,  1.47s/it, lr=7e-5, step_loss=0.0162]Steps:  11%|█         | 2755/24850 [1:02:39<9:01:48,  1.47s/it, lr=7e-5, step_loss=0.0891]Steps:  11%|█         | 2756/24850 [1:02:41<8:59:39,  1.47s/it, lr=7e-5, step_loss=0.0891]Steps:  11%|█         | 2756/24850 [1:02:41<8:59:39,  1.47s/it, lr=7e-5, step_loss=0.00408]Steps:  11%|█         | 2757/24850 [1:02:42<8:58:05,  1.46s/it, lr=7e-5, step_loss=0.00408]Steps:  11%|█         | 2757/24850 [1:02:42<8:58:05,  1.46s/it, lr=7e-5, step_loss=0.0264] Steps:  11%|█         | 2758/24850 [1:02:44<8:58:58,  1.46s/it, lr=7e-5, step_loss=0.0264]Steps:  11%|█         | 2758/24850 [1:02:44<8:58:58,  1.46s/it, lr=7e-5, step_loss=0.0253]Steps:  11%|█         | 2759/24850 [1:02:45<8:58:49,  1.46s/it, lr=7e-5, step_loss=0.0253]Steps:  11%|█         | 2759/24850 [1:02:45<8:58:49,  1.46s/it, lr=7e-5, step_loss=0.0042]Steps:  11%|█         | 2760/24850 [1:02:47<8:57:49,  1.46s/it, lr=7e-5, step_loss=0.0042]Steps:  11%|█         | 2760/24850 [1:02:47<8:57:49,  1.46s/it, lr=7e-5, step_loss=0.0838]Steps:  11%|█         | 2761/24850 [1:02:48<8:57:46,  1.46s/it, lr=7e-5, step_loss=0.0838]Steps:  11%|█         | 2761/24850 [1:02:48<8:57:46,  1.46s/it, lr=7e-5, step_loss=0.0122]Steps:  11%|█         | 2762/24850 [1:02:50<8:57:44,  1.46s/it, lr=7e-5, step_loss=0.0122]Steps:  11%|█         | 2762/24850 [1:02:50<8:57:44,  1.46s/it, lr=7e-5, step_loss=0.0264]Steps:  11%|█         | 2763/24850 [1:02:51<8:56:53,  1.46s/it, lr=7e-5, step_loss=0.0264]Steps:  11%|█         | 2763/24850 [1:02:51<8:56:53,  1.46s/it, lr=7e-5, step_loss=0.0351]Steps:  11%|█         | 2764/24850 [1:02:53<8:59:02,  1.46s/it, lr=7e-5, step_loss=0.0351]Steps:  11%|█         | 2764/24850 [1:02:53<8:59:02,  1.46s/it, lr=7e-5, step_loss=0.0549]Steps:  11%|█         | 2765/24850 [1:02:54<9:00:10,  1.47s/it, lr=7e-5, step_loss=0.0549]Steps:  11%|█         | 2765/24850 [1:02:54<9:00:10,  1.47s/it, lr=7e-5, step_loss=0.0215]Steps:  11%|█         | 2766/24850 [1:02:56<9:00:20,  1.47s/it, lr=7e-5, step_loss=0.0215]Steps:  11%|█         | 2766/24850 [1:02:56<9:00:20,  1.47s/it, lr=7e-5, step_loss=0.0614]Steps:  11%|█         | 2767/24850 [1:02:57<8:58:39,  1.46s/it, lr=7e-5, step_loss=0.0614]Steps:  11%|█         | 2767/24850 [1:02:57<8:58:39,  1.46s/it, lr=7e-5, step_loss=0.0608]Steps:  11%|█         | 2768/24850 [1:02:58<8:57:05,  1.46s/it, lr=7e-5, step_loss=0.0608]Steps:  11%|█         | 2768/24850 [1:02:58<8:57:05,  1.46s/it, lr=7e-5, step_loss=0.0364]Steps:  11%|█         | 2769/24850 [1:03:00<8:58:00,  1.46s/it, lr=7e-5, step_loss=0.0364]Steps:  11%|█         | 2769/24850 [1:03:00<8:58:00,  1.46s/it, lr=7e-5, step_loss=0.0253]Steps:  11%|█         | 2770/24850 [1:03:01<8:57:03,  1.46s/it, lr=7e-5, step_loss=0.0253]Steps:  11%|█         | 2770/24850 [1:03:01<8:57:03,  1.46s/it, lr=7e-5, step_loss=0.0331]Steps:  11%|█         | 2771/24850 [1:03:03<8:57:05,  1.46s/it, lr=7e-5, step_loss=0.0331]Steps:  11%|█         | 2771/24850 [1:03:03<8:57:05,  1.46s/it, lr=7e-5, step_loss=0.00687]Steps:  11%|█         | 2772/24850 [1:03:04<9:00:11,  1.47s/it, lr=7e-5, step_loss=0.00687]Steps:  11%|█         | 2772/24850 [1:03:04<9:00:11,  1.47s/it, lr=7e-5, step_loss=0.00566]Steps:  11%|█         | 2773/24850 [1:03:06<8:59:38,  1.47s/it, lr=7e-5, step_loss=0.00566]Steps:  11%|█         | 2773/24850 [1:03:06<8:59:38,  1.47s/it, lr=7e-5, step_loss=0.00959]Steps:  11%|█         | 2774/24850 [1:03:07<8:59:40,  1.47s/it, lr=7e-5, step_loss=0.00959]Steps:  11%|█         | 2774/24850 [1:03:07<8:59:40,  1.47s/it, lr=7e-5, step_loss=0.0515] Steps:  11%|█         | 2775/24850 [1:03:09<8:58:26,  1.46s/it, lr=7e-5, step_loss=0.0515]Steps:  11%|█         | 2775/24850 [1:03:09<8:58:26,  1.46s/it, lr=7e-5, step_loss=0.0631]Steps:  11%|█         | 2776/24850 [1:03:10<8:57:39,  1.46s/it, lr=7e-5, step_loss=0.0631]Steps:  11%|█         | 2776/24850 [1:03:10<8:57:39,  1.46s/it, lr=7e-5, step_loss=0.00233]Steps:  11%|█         | 2777/24850 [1:03:12<8:58:19,  1.46s/it, lr=7e-5, step_loss=0.00233]Steps:  11%|█         | 2777/24850 [1:03:12<8:58:19,  1.46s/it, lr=7e-5, step_loss=0.0165] Steps:  11%|█         | 2778/24850 [1:03:13<9:01:49,  1.47s/it, lr=7e-5, step_loss=0.0165]Steps:  11%|█         | 2778/24850 [1:03:13<9:01:49,  1.47s/it, lr=7e-5, step_loss=0.213] Steps:  11%|█         | 2779/24850 [1:03:15<8:59:35,  1.47s/it, lr=7e-5, step_loss=0.213]Steps:  11%|█         | 2779/24850 [1:03:15<8:59:35,  1.47s/it, lr=7e-5, step_loss=0.0297]Steps:  11%|█         | 2780/24850 [1:03:16<8:59:17,  1.47s/it, lr=7e-5, step_loss=0.0297]Steps:  11%|█         | 2780/24850 [1:03:16<8:59:17,  1.47s/it, lr=7e-5, step_loss=0.074]  torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:  11%|█         | 2781/24850 [1:03:17<8:58:27,  1.46s/it, lr=7e-5, step_loss=0.074]Steps:  11%|█         | 2781/24850 [1:03:17<8:58:27,  1.46s/it, lr=7e-5, step_loss=0.0533]Steps:  11%|█         | 2782/24850 [1:03:19<8:57:12,  1.46s/it, lr=7e-5, step_loss=0.0533]Steps:  11%|█         | 2782/24850 [1:03:19<8:57:12,  1.46s/it, lr=7e-5, step_loss=0.0175]Steps:  11%|█         | 2783/24850 [1:03:20<8:56:52,  1.46s/it, lr=7e-5, step_loss=0.0175]Steps:  11%|█         | 2783/24850 [1:03:20<8:56:52,  1.46s/it, lr=7e-5, step_loss=0.0578]Steps:  11%|█         | 2784/24850 [1:03:22<8:56:07,  1.46s/it, lr=7e-5, step_loss=0.0578]Steps:  11%|█         | 2784/24850 [1:03:22<8:56:07,  1.46s/it, lr=7e-5, step_loss=0.00482]Steps:  11%|█         | 2785/24850 [1:03:23<8:56:49,  1.46s/it, lr=7e-5, step_loss=0.00482]Steps:  11%|█         | 2785/24850 [1:03:23<8:56:49,  1.46s/it, lr=7e-5, step_loss=0.0152] Steps:  11%|█         | 2786/24850 [1:03:25<8:56:12,  1.46s/it, lr=7e-5, step_loss=0.0152]Steps:  11%|█         | 2786/24850 [1:03:25<8:56:12,  1.46s/it, lr=7e-5, step_loss=0.0047]Steps:  11%|█         | 2787/24850 [1:03:26<8:54:34,  1.45s/it, lr=7e-5, step_loss=0.0047]Steps:  11%|█         | 2787/24850 [1:03:26<8:54:34,  1.45s/it, lr=7e-5, step_loss=0.0687]Steps:  11%|█         | 2788/24850 [1:03:28<8:54:26,  1.45s/it, lr=7e-5, step_loss=0.0687]Steps:  11%|█         | 2788/24850 [1:03:28<8:54:26,  1.45s/it, lr=7e-5, step_loss=0.015] Steps:  11%|█         | 2789/24850 [1:03:29<8:59:42,  1.47s/it, lr=7e-5, step_loss=0.015]Steps:  11%|█         | 2789/24850 [1:03:29<8:59:42,  1.47s/it, lr=7e-5, step_loss=0.00187]Steps:  11%|█         | 2790/24850 [1:03:31<9:02:19,  1.48s/it, lr=7e-5, step_loss=0.00187]Steps:  11%|█         | 2790/24850 [1:03:31<9:02:19,  1.48s/it, lr=7e-5, step_loss=0.0162] Steps:  11%|█         | 2791/24850 [1:03:32<9:07:15,  1.49s/it, lr=7e-5, step_loss=0.0162]Steps:  11%|█         | 2791/24850 [1:03:32<9:07:15,  1.49s/it, lr=7e-5, step_loss=0.0221]Steps:  11%|█         | 2792/24850 [1:03:34<9:05:55,  1.48s/it, lr=7e-5, step_loss=0.0221]Steps:  11%|█         | 2792/24850 [1:03:34<9:05:55,  1.48s/it, lr=7e-5, step_loss=0.0631]Steps:  11%|█         | 2793/24850 [1:03:35<9:03:14,  1.48s/it, lr=7e-5, step_loss=0.0631]Steps:  11%|█         | 2793/24850 [1:03:35<9:03:14,  1.48s/it, lr=7e-5, step_loss=0.00791]Steps:  11%|█         | 2794/24850 [1:03:37<9:04:44,  1.48s/it, lr=7e-5, step_loss=0.00791]Steps:  11%|█         | 2794/24850 [1:03:37<9:04:44,  1.48s/it, lr=7e-5, step_loss=0.0195] Steps:  11%|█         | 2795/24850 [1:03:39<10:54:27,  1.78s/it, lr=7e-5, step_loss=0.0195]Steps:  11%|█         | 2795/24850 [1:03:39<10:54:27,  1.78s/it, lr=7e-5, step_loss=0.0199]Steps:  11%|█▏        | 2796/24850 [1:03:41<10:21:27,  1.69s/it, lr=7e-5, step_loss=0.0199]Steps:  11%|█▏        | 2796/24850 [1:03:41<10:21:27,  1.69s/it, lr=7e-5, step_loss=0.0239]Steps:  11%|█▏        | 2797/24850 [1:03:42<9:55:57,  1.62s/it, lr=7e-5, step_loss=0.0239] Steps:  11%|█▏        | 2797/24850 [1:03:42<9:55:57,  1.62s/it, lr=7e-5, step_loss=0.0105]Steps:  11%|█▏        | 2798/24850 [1:03:44<9:45:20,  1.59s/it, lr=7e-5, step_loss=0.0105]Steps:  11%|█▏        | 2798/24850 [1:03:44<9:45:20,  1.59s/it, lr=7e-5, step_loss=0.00832]Steps:  11%|█▏        | 2799/24850 [1:03:45<9:33:42,  1.56s/it, lr=7e-5, step_loss=0.00832]Steps:  11%|█▏        | 2799/24850 [1:03:45<9:33:42,  1.56s/it, lr=7e-5, step_loss=0.0868] Steps:  11%|█▏        | 2800/24850 [1:03:46<9:22:46,  1.53s/it, lr=7e-5, step_loss=0.0868]Steps:  11%|█▏        | 2800/24850 [1:03:46<9:22:46,  1.53s/it, lr=7e-5, step_loss=0.00816]Steps:  11%|█▏        | 2801/24850 [1:03:48<9:15:11,  1.51s/it, lr=7e-5, step_loss=0.00816]Steps:  11%|█▏        | 2801/24850 [1:03:48<9:15:11,  1.51s/it, lr=7e-5, step_loss=0.01]   Steps:  11%|█▏        | 2802/24850 [1:03:49<9:11:05,  1.50s/it, lr=7e-5, step_loss=0.01]Steps:  11%|█▏        | 2802/24850 [1:03:49<9:11:05,  1.50s/it, lr=7e-5, step_loss=0.0151]Steps:  11%|█▏        | 2803/24850 [1:03:51<9:08:23,  1.49s/it, lr=7e-5, step_loss=0.0151]Steps:  11%|█▏        | 2803/24850 [1:03:51<9:08:23,  1.49s/it, lr=7e-5, step_loss=0.0609]Steps:  11%|█▏        | 2804/24850 [1:03:52<9:05:46,  1.49s/it, lr=7e-5, step_loss=0.0609]Steps:  11%|█▏        | 2804/24850 [1:03:52<9:05:46,  1.49s/it, lr=7e-5, step_loss=0.0337]Steps:  11%|█▏        | 2805/24850 [1:03:54<9:04:12,  1.48s/it, lr=7e-5, step_loss=0.0337]Steps:  11%|█▏        | 2805/24850 [1:03:54<9:04:12,  1.48s/it, lr=7e-5, step_loss=0.0297]Steps:  11%|█▏        | 2806/24850 [1:03:55<9:03:13,  1.48s/it, lr=7e-5, step_loss=0.0297]Steps:  11%|█▏        | 2806/24850 [1:03:55<9:03:13,  1.48s/it, lr=7e-5, step_loss=0.103] Steps:  11%|█▏        | 2807/24850 [1:03:57<9:02:26,  1.48s/it, lr=7e-5, step_loss=0.103]Steps:  11%|█▏        | 2807/24850 [1:03:57<9:02:26,  1.48s/it, lr=7e-5, step_loss=0.00788]torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  Steps:  11%|█▏        | 2808/24850 [1:03:58<9:00:33,  1.47s/it, lr=7e-5, step_loss=0.00788]Steps:  11%|█▏        | 2808/24850 [1:03:58<9:00:33,  1.47s/it, lr=7e-5, step_loss=0.000374]Steps:  11%|█▏        | 2809/24850 [1:04:00<8:59:06,  1.47s/it, lr=7e-5, step_loss=0.000374]Steps:  11%|█▏        | 2809/24850 [1:04:00<8:59:06,  1.47s/it, lr=7e-5, step_loss=0.044]   Steps:  11%|█▏        | 2810/24850 [1:04:01<8:59:38,  1.47s/it, lr=7e-5, step_loss=0.044]Steps:  11%|█▏        | 2810/24850 [1:04:01<8:59:38,  1.47s/it, lr=7e-5, step_loss=0.0694]Steps:  11%|█▏        | 2811/24850 [1:04:03<8:58:35,  1.47s/it, lr=7e-5, step_loss=0.0694]Steps:  11%|█▏        | 2811/24850 [1:04:03<8:58:35,  1.47s/it, lr=7e-5, step_loss=0.00275]Steps:  11%|█▏        | 2812/24850 [1:04:04<8:58:25,  1.47s/it, lr=7e-5, step_loss=0.00275]Steps:  11%|█▏        | 2812/24850 [1:04:04<8:58:25,  1.47s/it, lr=7e-5, step_loss=0.00654]Steps:  11%|█▏        | 2813/24850 [1:04:06<8:59:04,  1.47s/it, lr=7e-5, step_loss=0.00654]Steps:  11%|█▏        | 2813/24850 [1:04:06<8:59:04,  1.47s/it, lr=7e-5, step_loss=0.0071] Steps:  11%|█▏        | 2814/24850 [1:04:07<8:59:40,  1.47s/it, lr=7e-5, step_loss=0.0071]Steps:  11%|█▏        | 2814/24850 [1:04:07<8:59:40,  1.47s/it, lr=7e-5, step_loss=0.0231]Steps:  11%|█▏        | 2815/24850 [1:04:09<9:01:08,  1.47s/it, lr=7e-5, step_loss=0.0231]Steps:  11%|█▏        | 2815/24850 [1:04:09<9:01:08,  1.47s/it, lr=7e-5, step_loss=0.0162]Steps:  11%|█▏        | 2816/24850 [1:04:10<8:59:58,  1.47s/it, lr=7e-5, step_loss=0.0162]Steps:  11%|█▏        | 2816/24850 [1:04:10<8:59:58,  1.47s/it, lr=7e-5, step_loss=0.0272]Steps:  11%|█▏        | 2817/24850 [1:04:11<8:58:43,  1.47s/it, lr=7e-5, step_loss=0.0272]Steps:  11%|█▏        | 2817/24850 [1:04:11<8:58:43,  1.47s/it, lr=7e-5, step_loss=0.0378]Steps:  11%|█▏        | 2818/24850 [1:04:13<8:57:50,  1.46s/it, lr=7e-5, step_loss=0.0378]Steps:  11%|█▏        | 2818/24850 [1:04:13<8:57:50,  1.46s/it, lr=7e-5, step_loss=0.00379]Steps:  11%|█▏        | 2819/24850 [1:04:14<8:57:51,  1.46s/it, lr=7e-5, step_loss=0.00379]Steps:  11%|█▏        | 2819/24850 [1:04:14<8:57:51,  1.46s/it, lr=7e-5, step_loss=0.0108] Steps:  11%|█▏        | 2820/24850 [1:04:16<8:57:51,  1.46s/it, lr=7e-5, step_loss=0.0108]Steps:  11%|█▏        | 2820/24850 [1:04:16<8:57:51,  1.46s/it, lr=7e-5, step_loss=0.174] Steps:  11%|█▏        | 2821/24850 [1:04:17<8:56:43,  1.46s/it, lr=7e-5, step_loss=0.174]Steps:  11%|█▏        | 2821/24850 [1:04:17<8:56:43,  1.46s/it, lr=7e-5, step_loss=0.00111]Steps:  11%|█▏        | 2822/24850 [1:04:19<8:57:14,  1.46s/it, lr=7e-5, step_loss=0.00111]Steps:  11%|█▏        | 2822/24850 [1:04:19<8:57:14,  1.46s/it, lr=7e-5, step_loss=0.00864]Steps:  11%|█▏        | 2823/24850 [1:04:20<8:57:10,  1.46s/it, lr=7e-5, step_loss=0.00864]Steps:  11%|█▏        | 2823/24850 [1:04:20<8:57:10,  1.46s/it, lr=7e-5, step_loss=0.0419] Steps:  11%|█▏        | 2824/24850 [1:04:22<9:13:31,  1.51s/it, lr=7e-5, step_loss=0.0419]Steps:  11%|█▏        | 2824/24850 [1:04:22<9:13:31,  1.51s/it, lr=7e-5, step_loss=0.00195]Steps:  11%|█▏        | 2825/24850 [1:04:23<9:05:25,  1.49s/it, lr=7e-5, step_loss=0.00195]Steps:  11%|█▏        | 2825/24850 [1:04:23<9:05:25,  1.49s/it, lr=7e-5, step_loss=0.00372]Steps:  11%|█▏        | 2826/24850 [1:04:25<9:02:34,  1.48s/it, lr=7e-5, step_loss=0.00372]Steps:  11%|█▏        | 2826/24850 [1:04:25<9:02:34,  1.48s/it, lr=7e-5, step_loss=0.0338] Steps:  11%|█▏        | 2827/24850 [1:04:26<9:00:56,  1.47s/it, lr=7e-5, step_loss=0.0338]Steps:  11%|█▏        | 2827/24850 [1:04:26<9:00:56,  1.47s/it, lr=7e-5, step_loss=0.0131]Steps:  11%|█▏        | 2828/24850 [1:04:28<9:00:56,  1.47s/it, lr=7e-5, step_loss=0.0131]Steps:  11%|█▏        | 2828/24850 [1:04:28<9:00:56,  1.47s/it, lr=7e-5, step_loss=0.00725]Steps:  11%|█▏        | 2829/24850 [1:04:29<8:59:22,  1.47s/it, lr=7e-5, step_loss=0.00725]Steps:  11%|█▏        | 2829/24850 [1:04:29<8:59:22,  1.47s/it, lr=7e-5, step_loss=0.0388] Steps:  11%|█▏        | 2830/24850 [1:04:31<8:59:47,  1.47s/it, lr=7e-5, step_loss=0.0388]Steps:  11%|█▏        | 2830/24850 [1:04:31<8:59:47,  1.47s/it, lr=7e-5, step_loss=0.0297]Steps:  11%|█▏        | 2831/24850 [1:04:32<8:58:41,  1.47s/it, lr=7e-5, step_loss=0.0297]Steps:  11%|█▏        | 2831/24850 [1:04:32<8:58:41,  1.47s/it, lr=7e-5, step_loss=0.00283]Steps:  11%|█▏        | 2832/24850 [1:04:34<8:58:59,  1.47s/it, lr=7e-5, step_loss=0.00283]Steps:  11%|█▏        | 2832/24850 [1:04:34<8:58:59,  1.47s/it, lr=7e-5, step_loss=0.0475] Steps:  11%|█▏        | 2833/24850 [1:04:35<8:58:40,  1.47s/it, lr=7e-5, step_loss=0.0475]Steps:  11%|█▏        | 2833/24850 [1:04:35<8:58:40,  1.47s/it, lr=7e-5, step_loss=0.00291]Steps:  11%|█▏        | 2834/24850 [1:04:36<8:57:11,  1.46s/it, lr=7e-5, step_loss=0.00291]Steps:  11%|█▏        | 2834/24850 [1:04:36<8:57:11,  1.46s/it, lr=7e-5, step_loss=0.00364]Steps:  11%|█▏        | 2835/24850 [1:04:38<8:56:34,  1.46s/it, lr=7e-5, step_loss=0.00364]Steps:  11%|█▏        | 2835/24850 [1:04:38<8:56:34,  1.46s/it, lr=7e-5, step_loss=0.00912]mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:  11%|█▏        | 2836/24850 [1:04:39<8:56:23,  1.46s/it, lr=7e-5, step_loss=0.00912]Steps:  11%|█▏        | 2836/24850 [1:04:39<8:56:23,  1.46s/it, lr=7e-5, step_loss=0.00624]Steps:  11%|█▏        | 2837/24850 [1:04:41<8:57:47,  1.47s/it, lr=7e-5, step_loss=0.00624]Steps:  11%|█▏        | 2837/24850 [1:04:41<8:57:47,  1.47s/it, lr=7e-5, step_loss=0.00519]Steps:  11%|█▏        | 2838/24850 [1:04:42<8:58:15,  1.47s/it, lr=7e-5, step_loss=0.00519]Steps:  11%|█▏        | 2838/24850 [1:04:42<8:58:15,  1.47s/it, lr=7e-5, step_loss=0.00786]Steps:  11%|█▏        | 2839/24850 [1:04:48<17:24:38,  2.85s/it, lr=7e-5, step_loss=0.00786]Steps:  11%|█▏        | 2839/24850 [1:04:48<17:24:38,  2.85s/it, lr=7e-5, step_loss=0.0404] Steps:  11%|█▏        | 2840/24850 [1:04:51<16:35:44,  2.71s/it, lr=7e-5, step_loss=0.0404]Steps:  11%|█▏        | 2840/24850 [1:04:51<16:35:44,  2.71s/it, lr=7e-5, step_loss=0.0331]Steps:  11%|█▏        | 2841/24850 [1:04:52<14:39:18,  2.40s/it, lr=7e-5, step_loss=0.0331]Steps:  11%|█▏        | 2841/24850 [1:04:52<14:39:18,  2.40s/it, lr=7e-5, step_loss=0.0449]Steps:  11%|█▏        | 2842/24850 [1:04:54<13:04:48,  2.14s/it, lr=7e-5, step_loss=0.0449]Steps:  11%|█▏        | 2842/24850 [1:04:54<13:04:48,  2.14s/it, lr=7e-5, step_loss=0.0158]Steps:  11%|█▏        | 2843/24850 [1:04:56<11:58:06,  1.96s/it, lr=7e-5, step_loss=0.0158]Steps:  11%|█▏        | 2843/24850 [1:04:56<11:58:06,  1.96s/it, lr=7e-5, step_loss=0.0398]Steps:  11%|█▏        | 2844/24850 [1:04:57<11:09:32,  1.83s/it, lr=7e-5, step_loss=0.0398]Steps:  11%|█▏        | 2844/24850 [1:04:57<11:09:32,  1.83s/it, lr=7e-5, step_loss=0.0124]Steps:  11%|█▏        | 2845/24850 [1:05:00<12:31:55,  2.05s/it, lr=7e-5, step_loss=0.0124]Steps:  11%|█▏        | 2845/24850 [1:05:00<12:31:55,  2.05s/it, lr=7e-5, step_loss=0.00386]Steps:  11%|█▏        | 2846/24850 [1:05:01<11:33:34,  1.89s/it, lr=7e-5, step_loss=0.00386]Steps:  11%|█▏        | 2846/24850 [1:05:01<11:33:34,  1.89s/it, lr=7e-5, step_loss=0.0178] Steps:  11%|█▏        | 2847/24850 [1:05:03<10:51:13,  1.78s/it, lr=7e-5, step_loss=0.0178]Steps:  11%|█▏        | 2847/24850 [1:05:03<10:51:13,  1.78s/it, lr=7e-5, step_loss=0.0814]Steps:  11%|█▏        | 2848/24850 [1:05:04<10:17:50,  1.68s/it, lr=7e-5, step_loss=0.0814]Steps:  11%|█▏        | 2848/24850 [1:05:04<10:17:50,  1.68s/it, lr=7e-5, step_loss=0.00652]Steps:  11%|█▏        | 2849/24850 [1:05:06<9:55:41,  1.62s/it, lr=7e-5, step_loss=0.00652] Steps:  11%|█▏        | 2849/24850 [1:05:06<9:55:41,  1.62s/it, lr=7e-5, step_loss=0.0436] Steps:  11%|█▏        | 2850/24850 [1:05:07<9:41:03,  1.58s/it, lr=7e-5, step_loss=0.0436]Steps:  11%|█▏        | 2850/24850 [1:05:07<9:41:03,  1.58s/it, lr=7e-5, step_loss=0.00301]Steps:  11%|█▏        | 2851/24850 [1:05:09<9:33:11,  1.56s/it, lr=7e-5, step_loss=0.00301]Steps:  11%|█▏        | 2851/24850 [1:05:09<9:33:11,  1.56s/it, lr=7e-5, step_loss=0.00992]Steps:  11%|█▏        | 2852/24850 [1:05:10<9:22:46,  1.53s/it, lr=7e-5, step_loss=0.00992]Steps:  11%|█▏        | 2852/24850 [1:05:10<9:22:46,  1.53s/it, lr=7e-5, step_loss=0.00929]Steps:  11%|█▏        | 2853/24850 [1:05:12<9:15:20,  1.51s/it, lr=7e-5, step_loss=0.00929]Steps:  11%|█▏        | 2853/24850 [1:05:12<9:15:20,  1.51s/it, lr=7e-5, step_loss=0.03]   Steps:  11%|█▏        | 2854/24850 [1:05:13<9:11:20,  1.50s/it, lr=7e-5, step_loss=0.03]Steps:  11%|█▏        | 2854/24850 [1:05:13<9:11:20,  1.50s/it, lr=7e-5, step_loss=0.00227]Steps:  11%|█▏        | 2855/24850 [1:05:15<9:13:59,  1.51s/it, lr=7e-5, step_loss=0.00227]Steps:  11%|█▏        | 2855/24850 [1:05:15<9:13:59,  1.51s/it, lr=7e-5, step_loss=0.0698] Steps:  11%|█▏        | 2856/24850 [1:05:16<9:06:42,  1.49s/it, lr=7e-5, step_loss=0.0698]Steps:  11%|█▏        | 2856/24850 [1:05:16<9:06:42,  1.49s/it, lr=7e-5, step_loss=0.0407]Steps:  11%|█▏        | 2857/24850 [1:05:17<9:02:53,  1.48s/it, lr=7e-5, step_loss=0.0407]Steps:  11%|█▏        | 2857/24850 [1:05:17<9:02:53,  1.48s/it, lr=7e-5, step_loss=0.0153]Steps:  12%|█▏        | 2858/24850 [1:05:19<8:59:59,  1.47s/it, lr=7e-5, step_loss=0.0153]Steps:  12%|█▏        | 2858/24850 [1:05:19<8:59:59,  1.47s/it, lr=7e-5, step_loss=0.0223]Steps:  12%|█▏        | 2859/24850 [1:05:20<8:57:54,  1.47s/it, lr=7e-5, step_loss=0.0223]Steps:  12%|█▏        | 2859/24850 [1:05:20<8:57:54,  1.47s/it, lr=7e-5, step_loss=0.0311]Steps:  12%|█▏        | 2860/24850 [1:05:22<8:57:22,  1.47s/it, lr=7e-5, step_loss=0.0311]Steps:  12%|█▏        | 2860/24850 [1:05:22<8:57:22,  1.47s/it, lr=7e-5, step_loss=0.00767]Steps:  12%|█▏        | 2861/24850 [1:05:23<8:56:27,  1.46s/it, lr=7e-5, step_loss=0.00767]Steps:  12%|█▏        | 2861/24850 [1:05:23<8:56:27,  1.46s/it, lr=7e-5, step_loss=0.0175] Steps:  12%|█▏        | 2862/24850 [1:05:25<8:57:20,  1.47s/it, lr=7e-5, step_loss=0.0175]Steps:  12%|█▏        | 2862/24850 [1:05:25<8:57:20,  1.47s/it, lr=7e-5, step_loss=0.00881]torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) Steps:  12%|█▏        | 2863/24850 [1:05:26<8:58:34,  1.47s/it, lr=7e-5, step_loss=0.00881]Steps:  12%|█▏        | 2863/24850 [1:05:26<8:58:34,  1.47s/it, lr=7e-5, step_loss=0.0228] Steps:  12%|█▏        | 2864/24850 [1:05:28<8:58:26,  1.47s/it, lr=7e-5, step_loss=0.0228]Steps:  12%|█▏        | 2864/24850 [1:05:28<8:58:26,  1.47s/it, lr=7e-5, step_loss=0.00761]Steps:  12%|█▏        | 2865/24850 [1:05:29<8:55:10,  1.46s/it, lr=7e-5, step_loss=0.00761]Steps:  12%|█▏        | 2865/24850 [1:05:29<8:55:10,  1.46s/it, lr=7e-5, step_loss=0.00376]Steps:  12%|█▏        | 2866/24850 [1:05:31<8:55:59,  1.46s/it, lr=7e-5, step_loss=0.00376]Steps:  12%|█▏        | 2866/24850 [1:05:31<8:55:59,  1.46s/it, lr=7e-5, step_loss=0.0161] Steps:  12%|█▏        | 2867/24850 [1:05:32<8:56:10,  1.46s/it, lr=7e-5, step_loss=0.0161]Steps:  12%|█▏        | 2867/24850 [1:05:32<8:56:10,  1.46s/it, lr=7e-5, step_loss=0.0059]Steps:  12%|█▏        | 2868/24850 [1:05:34<8:56:21,  1.46s/it, lr=7e-5, step_loss=0.0059]Steps:  12%|█▏        | 2868/24850 [1:05:34<8:56:21,  1.46s/it, lr=7e-5, step_loss=0.0136]Steps:  12%|█▏        | 2869/24850 [1:05:35<8:55:39,  1.46s/it, lr=7e-5, step_loss=0.0136]Steps:  12%|█▏        | 2869/24850 [1:05:35<8:55:39,  1.46s/it, lr=7e-5, step_loss=0.0517]Steps:  12%|█▏        | 2870/24850 [1:05:36<8:56:19,  1.46s/it, lr=7e-5, step_loss=0.0517]Steps:  12%|█▏        | 2870/24850 [1:05:36<8:56:19,  1.46s/it, lr=7e-5, step_loss=0.00326]Steps:  12%|█▏        | 2871/24850 [1:05:38<8:57:35,  1.47s/it, lr=7e-5, step_loss=0.00326]Steps:  12%|█▏        | 2871/24850 [1:05:38<8:57:35,  1.47s/it, lr=7e-5, step_loss=0.0755] Steps:  12%|█▏        | 2872/24850 [1:05:39<8:55:43,  1.46s/it, lr=7e-5, step_loss=0.0755]Steps:  12%|█▏        | 2872/24850 [1:05:39<8:55:43,  1.46s/it, lr=7e-5, step_loss=0.00957]Steps:  12%|█▏        | 2873/24850 [1:05:41<8:54:23,  1.46s/it, lr=7e-5, step_loss=0.00957]Steps:  12%|█▏        | 2873/24850 [1:05:41<8:54:23,  1.46s/it, lr=7e-5, step_loss=0.0161] Steps:  12%|█▏        | 2874/24850 [1:05:42<8:55:32,  1.46s/it, lr=7e-5, step_loss=0.0161]Steps:  12%|█▏        | 2874/24850 [1:05:42<8:55:32,  1.46s/it, lr=7e-5, step_loss=0.0405]Steps:  12%|█▏        | 2875/24850 [1:05:44<8:55:38,  1.46s/it, lr=7e-5, step_loss=0.0405]Steps:  12%|█▏        | 2875/24850 [1:05:44<8:55:38,  1.46s/it, lr=7e-5, step_loss=0.0144]Steps:  12%|█▏        | 2876/24850 [1:05:45<8:55:27,  1.46s/it, lr=7e-5, step_loss=0.0144]Steps:  12%|█▏        | 2876/24850 [1:05:45<8:55:27,  1.46s/it, lr=7e-5, step_loss=0.00379]Steps:  12%|█▏        | 2877/24850 [1:05:47<8:55:10,  1.46s/it, lr=7e-5, step_loss=0.00379]Steps:  12%|█▏        | 2877/24850 [1:05:47<8:55:10,  1.46s/it, lr=7e-5, step_loss=0.0278] Steps:  12%|█▏        | 2878/24850 [1:05:48<8:56:44,  1.47s/it, lr=7e-5, step_loss=0.0278]Steps:  12%|█▏        | 2878/24850 [1:05:48<8:56:44,  1.47s/it, lr=7e-5, step_loss=0.00915]Steps:  12%|█▏        | 2879/24850 [1:05:50<8:55:56,  1.46s/it, lr=7e-5, step_loss=0.00915]Steps:  12%|█▏        | 2879/24850 [1:05:50<8:55:56,  1.46s/it, lr=7e-5, step_loss=0.026]  Steps:  12%|█▏        | 2880/24850 [1:05:51<8:55:37,  1.46s/it, lr=7e-5, step_loss=0.026]Steps:  12%|█▏        | 2880/24850 [1:05:51<8:55:37,  1.46s/it, lr=7e-5, step_loss=0.0459]Steps:  12%|█▏        | 2881/24850 [1:05:53<8:54:38,  1.46s/it, lr=7e-5, step_loss=0.0459]Steps:  12%|█▏        | 2881/24850 [1:05:53<8:54:38,  1.46s/it, lr=7e-5, step_loss=0.0247]Steps:  12%|█▏        | 2882/24850 [1:05:54<8:55:08,  1.46s/it, lr=7e-5, step_loss=0.0247]Steps:  12%|█▏        | 2882/24850 [1:05:54<8:55:08,  1.46s/it, lr=7e-5, step_loss=0.00271]Steps:  12%|█▏        | 2883/24850 [1:05:55<8:55:19,  1.46s/it, lr=7e-5, step_loss=0.00271]Steps:  12%|█▏        | 2883/24850 [1:05:55<8:55:19,  1.46s/it, lr=7e-5, step_loss=0.0321] Steps:  12%|█▏        | 2884/24850 [1:05:57<8:55:14,  1.46s/it, lr=7e-5, step_loss=0.0321]Steps:  12%|█▏        | 2884/24850 [1:05:57<8:55:14,  1.46s/it, lr=7e-5, step_loss=0.017] Steps:  12%|█▏        | 2885/24850 [1:05:58<8:55:01,  1.46s/it, lr=7e-5, step_loss=0.017]Steps:  12%|█▏        | 2885/24850 [1:05:58<8:55:01,  1.46s/it, lr=7e-5, step_loss=0.0622]Steps:  12%|█▏        | 2886/24850 [1:06:00<8:53:58,  1.46s/it, lr=7e-5, step_loss=0.0622]Steps:  12%|█▏        | 2886/24850 [1:06:00<8:53:58,  1.46s/it, lr=7e-5, step_loss=0.0515]Steps:  12%|█▏        | 2887/24850 [1:06:01<8:55:09,  1.46s/it, lr=7e-5, step_loss=0.0515]Steps:  12%|█▏        | 2887/24850 [1:06:01<8:55:09,  1.46s/it, lr=7e-5, step_loss=0.0268]Steps:  12%|█▏        | 2888/24850 [1:06:03<8:55:57,  1.46s/it, lr=7e-5, step_loss=0.0268]Steps:  12%|█▏        | 2888/24850 [1:06:03<8:55:57,  1.46s/it, lr=7e-5, step_loss=0.0247]Steps:  12%|█▏        | 2889/24850 [1:06:04<8:55:18,  1.46s/it, lr=7e-5, step_loss=0.0247]Steps:  12%|█▏        | 2889/24850 [1:06:04<8:55:18,  1.46s/it, lr=7e-5, step_loss=0.0161]torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:  12%|█▏        | 2890/24850 [1:06:06<8:55:46,  1.46s/it, lr=7e-5, step_loss=0.0161]Steps:  12%|█▏        | 2890/24850 [1:06:06<8:55:46,  1.46s/it, lr=7e-5, step_loss=0.00854]Steps:  12%|█▏        | 2891/24850 [1:06:07<8:55:07,  1.46s/it, lr=7e-5, step_loss=0.00854]Steps:  12%|█▏        | 2891/24850 [1:06:07<8:55:07,  1.46s/it, lr=7e-5, step_loss=0.00625]Steps:  12%|█▏        | 2892/24850 [1:06:09<8:55:42,  1.46s/it, lr=7e-5, step_loss=0.00625]Steps:  12%|█▏        | 2892/24850 [1:06:09<8:55:42,  1.46s/it, lr=7e-5, step_loss=0.0143] Steps:  12%|█▏        | 2893/24850 [1:06:10<8:54:29,  1.46s/it, lr=7e-5, step_loss=0.0143]Steps:  12%|█▏        | 2893/24850 [1:06:10<8:54:29,  1.46s/it, lr=7e-5, step_loss=0.0222]Steps:  12%|█▏        | 2894/24850 [1:06:12<8:54:49,  1.46s/it, lr=7e-5, step_loss=0.0222]Steps:  12%|█▏        | 2894/24850 [1:06:12<8:54:49,  1.46s/it, lr=7e-5, step_loss=0.0297]Steps:  12%|█▏        | 2895/24850 [1:06:14<10:54:46,  1.79s/it, lr=7e-5, step_loss=0.0297]Steps:  12%|█▏        | 2895/24850 [1:06:14<10:54:46,  1.79s/it, lr=7e-5, step_loss=0.0252]Steps:  12%|█▏        | 2896/24850 [1:06:16<10:17:48,  1.69s/it, lr=7e-5, step_loss=0.0252]Steps:  12%|█▏        | 2896/24850 [1:06:16<10:17:48,  1.69s/it, lr=7e-5, step_loss=0.0313]Steps:  12%|█▏        | 2897/24850 [1:06:17<9:52:33,  1.62s/it, lr=7e-5, step_loss=0.0313] Steps:  12%|█▏        | 2897/24850 [1:06:17<9:52:33,  1.62s/it, lr=7e-5, step_loss=0.109] Steps:  12%|█▏        | 2898/24850 [1:06:18<9:33:33,  1.57s/it, lr=7e-5, step_loss=0.109]Steps:  12%|█▏        | 2898/24850 [1:06:18<9:33:33,  1.57s/it, lr=7e-5, step_loss=0.00255]Steps:  12%|█▏        | 2899/24850 [1:06:20<9:21:28,  1.53s/it, lr=7e-5, step_loss=0.00255]Steps:  12%|█▏        | 2899/24850 [1:06:20<9:21:28,  1.53s/it, lr=7e-5, step_loss=0.0118] Steps:  12%|█▏        | 2900/24850 [1:06:21<9:14:16,  1.52s/it, lr=7e-5, step_loss=0.0118]Steps:  12%|█▏        | 2900/24850 [1:06:21<9:14:16,  1.52s/it, lr=7e-5, step_loss=0.00456]Steps:  12%|█▏        | 2901/24850 [1:06:23<9:08:11,  1.50s/it, lr=7e-5, step_loss=0.00456]Steps:  12%|█▏        | 2901/24850 [1:06:23<9:08:11,  1.50s/it, lr=7e-5, step_loss=0.0287] Steps:  12%|█▏        | 2902/24850 [1:06:24<9:08:16,  1.50s/it, lr=7e-5, step_loss=0.0287]Steps:  12%|█▏        | 2902/24850 [1:06:24<9:08:16,  1.50s/it, lr=7e-5, step_loss=0.1]   Steps:  12%|█▏        | 2903/24850 [1:06:26<9:02:57,  1.48s/it, lr=7e-5, step_loss=0.1]Steps:  12%|█▏        | 2903/24850 [1:06:26<9:02:57,  1.48s/it, lr=7e-5, step_loss=0.0613]Steps:  12%|█▏        | 2904/24850 [1:06:27<9:00:02,  1.48s/it, lr=7e-5, step_loss=0.0613]Steps:  12%|█▏        | 2904/24850 [1:06:27<9:00:02,  1.48s/it, lr=7e-5, step_loss=0.0154]Steps:  12%|█▏        | 2905/24850 [1:06:29<8:58:56,  1.47s/it, lr=7e-5, step_loss=0.0154]Steps:  12%|█▏        | 2905/24850 [1:06:29<8:58:56,  1.47s/it, lr=7e-5, step_loss=0.0107]Steps:  12%|█▏        | 2906/24850 [1:06:30<8:58:51,  1.47s/it, lr=7e-5, step_loss=0.0107]Steps:  12%|█▏        | 2906/24850 [1:06:30<8:58:51,  1.47s/it, lr=7e-5, step_loss=0.0371]Steps:  12%|█▏        | 2907/24850 [1:06:32<8:58:13,  1.47s/it, lr=7e-5, step_loss=0.0371]Steps:  12%|█▏        | 2907/24850 [1:06:32<8:58:13,  1.47s/it, lr=7e-5, step_loss=0.1]   Steps:  12%|█▏        | 2908/24850 [1:06:33<8:57:48,  1.47s/it, lr=7e-5, step_loss=0.1]Steps:  12%|█▏        | 2908/24850 [1:06:33<8:57:48,  1.47s/it, lr=7e-5, step_loss=0.0544]Steps:  12%|█▏        | 2909/24850 [1:06:35<8:57:08,  1.47s/it, lr=7e-5, step_loss=0.0544]Steps:  12%|█▏        | 2909/24850 [1:06:35<8:57:08,  1.47s/it, lr=7e-5, step_loss=0.000588]Steps:  12%|█▏        | 2910/24850 [1:06:36<8:56:52,  1.47s/it, lr=7e-5, step_loss=0.000588]Steps:  12%|█▏        | 2910/24850 [1:06:36<8:56:52,  1.47s/it, lr=7e-5, step_loss=0.00656] Steps:  12%|█▏        | 2911/24850 [1:06:38<9:18:56,  1.53s/it, lr=7e-5, step_loss=0.00656]Steps:  12%|█▏        | 2911/24850 [1:06:38<9:18:56,  1.53s/it, lr=7e-5, step_loss=0.0267] Steps:  12%|█▏        | 2912/24850 [1:06:39<9:10:41,  1.51s/it, lr=7e-5, step_loss=0.0267]Steps:  12%|█▏        | 2912/24850 [1:06:39<9:10:41,  1.51s/it, lr=7e-5, step_loss=0.0467]Steps:  12%|█▏        | 2913/24850 [1:06:41<9:06:58,  1.50s/it, lr=7e-5, step_loss=0.0467]Steps:  12%|█▏        | 2913/24850 [1:06:41<9:06:58,  1.50s/it, lr=7e-5, step_loss=0.119] Steps:  12%|█▏        | 2914/24850 [1:06:42<9:04:08,  1.49s/it, lr=7e-5, step_loss=0.119]Steps:  12%|█▏        | 2914/24850 [1:06:42<9:04:08,  1.49s/it, lr=7e-5, step_loss=0.00742]Steps:  12%|█▏        | 2915/24850 [1:06:44<9:08:42,  1.50s/it, lr=7e-5, step_loss=0.00742]Steps:  12%|█▏        | 2915/24850 [1:06:44<9:08:42,  1.50s/it, lr=7e-5, step_loss=0.00553]Steps:  12%|█▏        | 2916/24850 [1:06:45<9:05:53,  1.49s/it, lr=7e-5, step_loss=0.00553]Steps:  12%|█▏        | 2916/24850 [1:06:45<9:05:53,  1.49s/it, lr=7e-5, step_loss=0.00877]Steps:  12%|█▏        | 2917/24850 [1:06:47<9:03:44,  1.49s/it, lr=7e-5, step_loss=0.00877]Steps:  12%|█▏        | 2917/24850 [1:06:47<9:03:44,  1.49s/it, lr=7e-5, step_loss=0.00989]torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
Steps:  12%|█▏        | 2918/24850 [1:06:48<9:06:49,  1.50s/it, lr=7e-5, step_loss=0.00989]Steps:  12%|█▏        | 2918/24850 [1:06:48<9:06:49,  1.50s/it, lr=7e-5, step_loss=0.0216] Steps:  12%|█▏        | 2919/24850 [1:06:50<9:03:37,  1.49s/it, lr=7e-5, step_loss=0.0216]Steps:  12%|█▏        | 2919/24850 [1:06:50<9:03:37,  1.49s/it, lr=7e-5, step_loss=0.0307]Steps:  12%|█▏        | 2920/24850 [1:06:51<9:01:31,  1.48s/it, lr=7e-5, step_loss=0.0307]Steps:  12%|█▏        | 2920/24850 [1:06:51<9:01:31,  1.48s/it, lr=7e-5, step_loss=0.00488]Steps:  12%|█▏        | 2921/24850 [1:06:53<8:59:43,  1.48s/it, lr=7e-5, step_loss=0.00488]Steps:  12%|█▏        | 2921/24850 [1:06:53<8:59:43,  1.48s/it, lr=7e-5, step_loss=0.0745] Steps:  12%|█▏        | 2922/24850 [1:06:54<8:59:02,  1.47s/it, lr=7e-5, step_loss=0.0745]Steps:  12%|█▏        | 2922/24850 [1:06:54<8:59:02,  1.47s/it, lr=7e-5, step_loss=0.00589]Steps:  12%|█▏        | 2923/24850 [1:06:55<8:57:08,  1.47s/it, lr=7e-5, step_loss=0.00589]Steps:  12%|█▏        | 2923/24850 [1:06:55<8:57:08,  1.47s/it, lr=7e-5, step_loss=0.0232] Steps:  12%|█▏        | 2924/24850 [1:06:57<8:57:36,  1.47s/it, lr=7e-5, step_loss=0.0232]Steps:  12%|█▏        | 2924/24850 [1:06:57<8:57:36,  1.47s/it, lr=7e-5, step_loss=0.0185]Steps:  12%|█▏        | 2925/24850 [1:06:58<8:55:40,  1.47s/it, lr=7e-5, step_loss=0.0185]Steps:  12%|█▏        | 2925/24850 [1:06:58<8:55:40,  1.47s/it, lr=7e-5, step_loss=0.00445]Steps:  12%|█▏        | 2926/24850 [1:07:00<8:56:00,  1.47s/it, lr=7e-5, step_loss=0.00445]Steps:  12%|█▏        | 2926/24850 [1:07:00<8:56:00,  1.47s/it, lr=7e-5, step_loss=0.0343] Steps:  12%|█▏        | 2927/24850 [1:07:01<8:56:59,  1.47s/it, lr=7e-5, step_loss=0.0343]Steps:  12%|█▏        | 2927/24850 [1:07:01<8:56:59,  1.47s/it, lr=7e-5, step_loss=0.0128]Steps:  12%|█▏        | 2928/24850 [1:07:03<8:56:54,  1.47s/it, lr=7e-5, step_loss=0.0128]Steps:  12%|█▏        | 2928/24850 [1:07:03<8:56:54,  1.47s/it, lr=7e-5, step_loss=0.00191]Steps:  12%|█▏        | 2929/24850 [1:07:04<8:55:49,  1.47s/it, lr=7e-5, step_loss=0.00191]Steps:  12%|█▏        | 2929/24850 [1:07:04<8:55:49,  1.47s/it, lr=7e-5, step_loss=0.025]  Steps:  12%|█▏        | 2930/24850 [1:07:06<8:55:15,  1.47s/it, lr=7e-5, step_loss=0.025]Steps:  12%|█▏        | 2930/24850 [1:07:06<8:55:15,  1.47s/it, lr=7e-5, step_loss=0.0336]Steps:  12%|█▏        | 2931/24850 [1:07:07<8:54:51,  1.46s/it, lr=7e-5, step_loss=0.0336]Steps:  12%|█▏        | 2931/24850 [1:07:07<8:54:51,  1.46s/it, lr=7e-5, step_loss=0.0516]Steps:  12%|█▏        | 2932/24850 [1:07:09<8:56:12,  1.47s/it, lr=7e-5, step_loss=0.0516]Steps:  12%|█▏        | 2932/24850 [1:07:09<8:56:12,  1.47s/it, lr=7e-5, step_loss=0.0395]Steps:  12%|█▏        | 2933/24850 [1:07:10<8:55:05,  1.46s/it, lr=7e-5, step_loss=0.0395]Steps:  12%|█▏        | 2933/24850 [1:07:10<8:55:05,  1.46s/it, lr=7e-5, step_loss=0.00735]Steps:  12%|█▏        | 2934/24850 [1:07:12<8:54:41,  1.46s/it, lr=7e-5, step_loss=0.00735]Steps:  12%|█▏        | 2934/24850 [1:07:12<8:54:41,  1.46s/it, lr=7e-5, step_loss=0.035]  Steps:  12%|█▏        | 2935/24850 [1:07:13<8:53:15,  1.46s/it, lr=7e-5, step_loss=0.035]Steps:  12%|█▏        | 2935/24850 [1:07:13<8:53:15,  1.46s/it, lr=7e-5, step_loss=0.00129]Steps:  12%|█▏        | 2936/24850 [1:07:15<8:53:34,  1.46s/it, lr=7e-5, step_loss=0.00129]Steps:  12%|█▏        | 2936/24850 [1:07:15<8:53:34,  1.46s/it, lr=7e-5, step_loss=0.0585] Steps:  12%|█▏        | 2937/24850 [1:07:16<8:52:20,  1.46s/it, lr=7e-5, step_loss=0.0585]Steps:  12%|█▏        | 2937/24850 [1:07:16<8:52:20,  1.46s/it, lr=7e-5, step_loss=0.0416]Steps:  12%|█▏        | 2938/24850 [1:07:17<8:51:25,  1.46s/it, lr=7e-5, step_loss=0.0416]Steps:  12%|█▏        | 2938/24850 [1:07:17<8:51:25,  1.46s/it, lr=7e-5, step_loss=0.0236]Steps:  12%|█▏        | 2939/24850 [1:07:19<8:52:36,  1.46s/it, lr=7e-5, step_loss=0.0236]Steps:  12%|█▏        | 2939/24850 [1:07:19<8:52:36,  1.46s/it, lr=7e-5, step_loss=0.0328]Steps:  12%|█▏        | 2940/24850 [1:07:20<8:53:41,  1.46s/it, lr=7e-5, step_loss=0.0328]Steps:  12%|█▏        | 2940/24850 [1:07:20<8:53:41,  1.46s/it, lr=7e-5, step_loss=0.0095]Steps:  12%|█▏        | 2941/24850 [1:07:22<8:53:53,  1.46s/it, lr=7e-5, step_loss=0.0095]Steps:  12%|█▏        | 2941/24850 [1:07:22<8:53:53,  1.46s/it, lr=7e-5, step_loss=0.0263]Steps:  12%|█▏        | 2942/24850 [1:07:23<8:54:37,  1.46s/it, lr=7e-5, step_loss=0.0263]Steps:  12%|█▏        | 2942/24850 [1:07:23<8:54:37,  1.46s/it, lr=7e-5, step_loss=0.00945]Steps:  12%|█▏        | 2943/24850 [1:07:25<8:53:43,  1.46s/it, lr=7e-5, step_loss=0.00945]Steps:  12%|█▏        | 2943/24850 [1:07:25<8:53:43,  1.46s/it, lr=7e-5, step_loss=0.0251] Steps:  12%|█▏        | 2944/24850 [1:07:26<8:52:44,  1.46s/it, lr=7e-5, step_loss=0.0251]Steps:  12%|█▏        | 2944/24850 [1:07:26<8:52:44,  1.46s/it, lr=7e-5, step_loss=0.0407](512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512)Steps:  12%|█▏        | 2945/24850 [1:07:29<10:46:07,  1.77s/it, lr=7e-5, step_loss=0.0407]Steps:  12%|█▏        | 2945/24850 [1:07:29<10:46:07,  1.77s/it, lr=7e-5, step_loss=0.0067]Steps:  12%|█▏        | 2946/24850 [1:07:30<10:13:18,  1.68s/it, lr=7e-5, step_loss=0.0067]Steps:  12%|█▏        | 2946/24850 [1:07:30<10:13:18,  1.68s/it, lr=7e-5, step_loss=0.0107]Steps:  12%|█▏        | 2947/24850 [1:07:32<9:48:00,  1.61s/it, lr=7e-5, step_loss=0.0107] Steps:  12%|█▏        | 2947/24850 [1:07:32<9:48:00,  1.61s/it, lr=7e-5, step_loss=0.0734]Steps:  12%|█▏        | 2948/24850 [1:07:33<9:33:32,  1.57s/it, lr=7e-5, step_loss=0.0734]Steps:  12%|█▏        | 2948/24850 [1:07:33<9:33:32,  1.57s/it, lr=7e-5, step_loss=0.0616]Steps:  12%|█▏        | 2949/24850 [1:07:35<9:20:34,  1.54s/it, lr=7e-5, step_loss=0.0616]Steps:  12%|█▏        | 2949/24850 [1:07:35<9:20:34,  1.54s/it, lr=7e-5, step_loss=0.000841]Steps:  12%|█▏        | 2950/24850 [1:07:36<9:12:17,  1.51s/it, lr=7e-5, step_loss=0.000841]Steps:  12%|█▏        | 2950/24850 [1:07:36<9:12:17,  1.51s/it, lr=7e-5, step_loss=0.0527]  Steps:  12%|█▏        | 2951/24850 [1:07:37<9:06:46,  1.50s/it, lr=7e-5, step_loss=0.0527]Steps:  12%|█▏        | 2951/24850 [1:07:37<9:06:46,  1.50s/it, lr=7e-5, step_loss=0.0639]Steps:  12%|█▏        | 2952/24850 [1:07:39<9:02:17,  1.49s/it, lr=7e-5, step_loss=0.0639]Steps:  12%|█▏        | 2952/24850 [1:07:39<9:02:17,  1.49s/it, lr=7e-5, step_loss=0.00915]Steps:  12%|█▏        | 2953/24850 [1:07:40<8:59:15,  1.48s/it, lr=7e-5, step_loss=0.00915]Steps:  12%|█▏        | 2953/24850 [1:07:40<8:59:15,  1.48s/it, lr=7e-5, step_loss=0.0506] Steps:  12%|█▏        | 2954/24850 [1:07:42<8:58:09,  1.47s/it, lr=7e-5, step_loss=0.0506]Steps:  12%|█▏        | 2954/24850 [1:07:42<8:58:09,  1.47s/it, lr=7e-5, step_loss=0.0522]Steps:  12%|█▏        | 2955/24850 [1:07:49<19:42:23,  3.24s/it, lr=7e-5, step_loss=0.0522]Steps:  12%|█▏        | 2955/24850 [1:07:49<19:42:23,  3.24s/it, lr=7e-5, step_loss=0.0504]Steps:  12%|█▏        | 2956/24850 [1:07:53<21:12:32,  3.49s/it, lr=7e-5, step_loss=0.0504]Steps:  12%|█▏        | 2956/24850 [1:07:53<21:12:32,  3.49s/it, lr=7e-5, step_loss=0.0938]Steps:  12%|█▏        | 2957/24850 [1:07:55<18:56:31,  3.11s/it, lr=7e-5, step_loss=0.0938]Steps:  12%|█▏        | 2957/24850 [1:07:55<18:56:31,  3.11s/it, lr=7e-5, step_loss=0.00841]Steps:  12%|█▏        | 2958/24850 [1:07:57<16:01:09,  2.63s/it, lr=7e-5, step_loss=0.00841]Steps:  12%|█▏        | 2958/24850 [1:07:57<16:01:09,  2.63s/it, lr=7e-5, step_loss=0.0517] Steps:  12%|█▏        | 2959/24850 [1:07:59<14:00:52,  2.30s/it, lr=7e-5, step_loss=0.0517]Steps:  12%|█▏        | 2959/24850 [1:07:59<14:00:52,  2.30s/it, lr=7e-5, step_loss=0.0234]Steps:  12%|█▏        | 2960/24850 [1:08:00<12:33:27,  2.07s/it, lr=7e-5, step_loss=0.0234]Steps:  12%|█▏        | 2960/24850 [1:08:00<12:33:27,  2.07s/it, lr=7e-5, step_loss=0.0299]Steps:  12%|█▏        | 2961/24850 [1:08:02<11:39:20,  1.92s/it, lr=7e-5, step_loss=0.0299]Steps:  12%|█▏        | 2961/24850 [1:08:02<11:39:20,  1.92s/it, lr=7e-5, step_loss=0.0322]Steps:  12%|█▏        | 2962/24850 [1:08:03<10:56:46,  1.80s/it, lr=7e-5, step_loss=0.0322]Steps:  12%|█▏        | 2962/24850 [1:08:03<10:56:46,  1.80s/it, lr=7e-5, step_loss=0.0127]Steps:  12%|█▏        | 2963/24850 [1:08:05<10:21:05,  1.70s/it, lr=7e-5, step_loss=0.0127]Steps:  12%|█▏        | 2963/24850 [1:08:05<10:21:05,  1.70s/it, lr=7e-5, step_loss=0.0335]Steps:  12%|█▏        | 2964/24850 [1:08:06<9:58:50,  1.64s/it, lr=7e-5, step_loss=0.0335] Steps:  12%|█▏        | 2964/24850 [1:08:06<9:58:50,  1.64s/it, lr=7e-5, step_loss=0.0698]Steps:  12%|█▏        | 2965/24850 [1:08:08<9:40:34,  1.59s/it, lr=7e-5, step_loss=0.0698]Steps:  12%|█▏        | 2965/24850 [1:08:08<9:40:34,  1.59s/it, lr=7e-5, step_loss=0.031] Steps:  12%|█▏        | 2966/24850 [1:08:09<9:29:58,  1.56s/it, lr=7e-5, step_loss=0.031]Steps:  12%|█▏        | 2966/24850 [1:08:09<9:29:58,  1.56s/it, lr=7e-5, step_loss=0.0172]Steps:  12%|█▏        | 2967/24850 [1:08:11<9:21:51,  1.54s/it, lr=7e-5, step_loss=0.0172]Steps:  12%|█▏        | 2967/24850 [1:08:11<9:21:51,  1.54s/it, lr=7e-5, step_loss=0.0272]Steps:  12%|█▏        | 2968/24850 [1:08:12<9:12:10,  1.51s/it, lr=7e-5, step_loss=0.0272]Steps:  12%|█▏        | 2968/24850 [1:08:12<9:12:10,  1.51s/it, lr=7e-5, step_loss=0.0172]Steps:  12%|█▏        | 2969/24850 [1:08:13<9:04:47,  1.49s/it, lr=7e-5, step_loss=0.0172]Steps:  12%|█▏        | 2969/24850 [1:08:13<9:04:47,  1.49s/it, lr=7e-5, step_loss=0.157] Steps:  12%|█▏        | 2970/24850 [1:08:15<9:02:10,  1.49s/it, lr=7e-5, step_loss=0.157]Steps:  12%|█▏        | 2970/24850 [1:08:15<9:02:10,  1.49s/it, lr=7e-5, step_loss=0.0277]Steps:  12%|█▏        | 2971/24850 [1:08:17<9:21:30,  1.54s/it, lr=7e-5, step_loss=0.0277]Steps:  12%|█▏        | 2971/24850 [1:08:17<9:21:30,  1.54s/it, lr=7e-5, step_loss=0.0235] torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:  12%|█▏        | 2972/24850 [1:08:18<9:16:06,  1.53s/it, lr=7e-5, step_loss=0.0235]Steps:  12%|█▏        | 2972/24850 [1:08:18<9:16:06,  1.53s/it, lr=7e-5, step_loss=0.0525]Steps:  12%|█▏        | 2973/24850 [1:08:20<9:09:21,  1.51s/it, lr=7e-5, step_loss=0.0525]Steps:  12%|█▏        | 2973/24850 [1:08:20<9:09:21,  1.51s/it, lr=7e-5, step_loss=0.0142]Steps:  12%|█▏        | 2974/24850 [1:08:21<9:05:15,  1.50s/it, lr=7e-5, step_loss=0.0142]Steps:  12%|█▏        | 2974/24850 [1:08:21<9:05:15,  1.50s/it, lr=7e-5, step_loss=0.0187]Steps:  12%|█▏        | 2975/24850 [1:08:23<9:01:10,  1.48s/it, lr=7e-5, step_loss=0.0187]Steps:  12%|█▏        | 2975/24850 [1:08:23<9:01:10,  1.48s/it, lr=7e-5, step_loss=0.0232]Steps:  12%|█▏        | 2976/24850 [1:08:24<8:57:25,  1.47s/it, lr=7e-5, step_loss=0.0232]Steps:  12%|█▏        | 2976/24850 [1:08:24<8:57:25,  1.47s/it, lr=7e-5, step_loss=0.087] Steps:  12%|█▏        | 2977/24850 [1:08:25<8:58:35,  1.48s/it, lr=7e-5, step_loss=0.087]Steps:  12%|█▏        | 2977/24850 [1:08:25<8:58:35,  1.48s/it, lr=7e-5, step_loss=0.0187]Steps:  12%|█▏        | 2978/24850 [1:08:27<8:56:42,  1.47s/it, lr=7e-5, step_loss=0.0187]Steps:  12%|█▏        | 2978/24850 [1:08:27<8:56:42,  1.47s/it, lr=7e-5, step_loss=0.0511]Steps:  12%|█▏        | 2979/24850 [1:08:28<8:56:09,  1.47s/it, lr=7e-5, step_loss=0.0511]Steps:  12%|█▏        | 2979/24850 [1:08:28<8:56:09,  1.47s/it, lr=7e-5, step_loss=0.0166]Steps:  12%|█▏        | 2980/24850 [1:08:30<8:54:51,  1.47s/it, lr=7e-5, step_loss=0.0166]Steps:  12%|█▏        | 2980/24850 [1:08:30<8:54:51,  1.47s/it, lr=7e-5, step_loss=0.00419]Steps:  12%|█▏        | 2981/24850 [1:08:31<8:54:45,  1.47s/it, lr=7e-5, step_loss=0.00419]Steps:  12%|█▏        | 2981/24850 [1:08:31<8:54:45,  1.47s/it, lr=7e-5, step_loss=0.0148] Steps:  12%|█▏        | 2982/24850 [1:08:33<8:54:11,  1.47s/it, lr=7e-5, step_loss=0.0148]Steps:  12%|█▏        | 2982/24850 [1:08:33<8:54:11,  1.47s/it, lr=7e-5, step_loss=0.0704]Steps:  12%|█▏        | 2983/24850 [1:08:34<8:54:48,  1.47s/it, lr=7e-5, step_loss=0.0704]Steps:  12%|█▏        | 2983/24850 [1:08:34<8:54:48,  1.47s/it, lr=7e-5, step_loss=0.0471]Steps:  12%|█▏        | 2984/24850 [1:08:36<8:54:27,  1.47s/it, lr=7e-5, step_loss=0.0471]Steps:  12%|█▏        | 2984/24850 [1:08:36<8:54:27,  1.47s/it, lr=7e-5, step_loss=0.138] Steps:  12%|█▏        | 2985/24850 [1:08:37<8:53:01,  1.46s/it, lr=7e-5, step_loss=0.138]Steps:  12%|█▏        | 2985/24850 [1:08:37<8:53:01,  1.46s/it, lr=7e-5, step_loss=6.41e-5]Steps:  12%|█▏        | 2986/24850 [1:08:39<8:54:01,  1.47s/it, lr=7e-5, step_loss=6.41e-5]Steps:  12%|█▏        | 2986/24850 [1:08:39<8:54:01,  1.47s/it, lr=7e-5, step_loss=0.0334] Steps:  12%|█▏        | 2987/24850 [1:08:40<8:53:35,  1.46s/it, lr=7e-5, step_loss=0.0334]Steps:  12%|█▏        | 2987/24850 [1:08:40<8:53:35,  1.46s/it, lr=7e-5, step_loss=0.00763]Steps:  12%|█▏        | 2988/24850 [1:08:42<8:53:11,  1.46s/it, lr=7e-5, step_loss=0.00763]Steps:  12%|█▏        | 2988/24850 [1:08:42<8:53:11,  1.46s/it, lr=7e-5, step_loss=0.0142] Steps:  12%|█▏        | 2989/24850 [1:08:43<8:57:20,  1.47s/it, lr=7e-5, step_loss=0.0142]Steps:  12%|█▏        | 2989/24850 [1:08:43<8:57:20,  1.47s/it, lr=7e-5, step_loss=0.0107]Steps:  12%|█▏        | 2990/24850 [1:08:45<8:55:59,  1.47s/it, lr=7e-5, step_loss=0.0107]Steps:  12%|█▏        | 2990/24850 [1:08:45<8:55:59,  1.47s/it, lr=7e-5, step_loss=0.00172]Steps:  12%|█▏        | 2991/24850 [1:08:46<8:54:28,  1.47s/it, lr=7e-5, step_loss=0.00172]Steps:  12%|█▏        | 2991/24850 [1:08:46<8:54:28,  1.47s/it, lr=7e-5, step_loss=0.0407] Steps:  12%|█▏        | 2992/24850 [1:08:47<8:53:27,  1.46s/it, lr=7e-5, step_loss=0.0407]Steps:  12%|█▏        | 2992/24850 [1:08:47<8:53:27,  1.46s/it, lr=7e-5, step_loss=0.0391]Steps:  12%|█▏        | 2993/24850 [1:08:49<8:55:40,  1.47s/it, lr=7e-5, step_loss=0.0391]Steps:  12%|█▏        | 2993/24850 [1:08:49<8:55:40,  1.47s/it, lr=7e-5, step_loss=0.0262]Steps:  12%|█▏        | 2994/24850 [1:08:50<8:54:26,  1.47s/it, lr=7e-5, step_loss=0.0262]04/12/2024 11:18:59 - INFO - __main__ - 2 checkpoints already exist, removing 1 checkpoints
04/12/2024 11:18:59 - INFO - __main__ - removing checkpoints: checkpoint-2000
04/12/2024 11:19:00 - INFO - accelerate.accelerator - Saving current state to /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-3000
Configuration saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-3000/unet/config.json
Model weights saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-3000/unet/diffusion_pytorch_model.safetensors
Model weights saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-3000/unet/pytorch_lora_weights.safetensors
04/12/2024 11:19:31 - INFO - accelerate.checkpointing - Optimizer state saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-3000/optimizer.bin
04/12/2024 11:19:31 - INFO - accelerate.checkpointing - Scheduler state saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-3000/scheduler.bin
04/12/2024 11:19:31 - INFO - accelerate.checkpointing - Random states saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-3000/random_states_0.pkl
04/12/2024 11:19:31 - INFO - __main__ - Saved state to /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-3000
Steps:  12%|█▏        | 2994/24850 [1:09:22<8:54:26,  1.47s/it, lr=7e-5, step_loss=0.00701]Steps:  12%|█▏        | 2995/24850 [1:09:31<80:24:01, 13.24s/it, lr=7e-5, step_loss=0.00701]Steps:  12%|█▏        | 2995/24850 [1:09:31<80:24:01, 13.24s/it, lr=7e-5, step_loss=0.0231] Steps:  12%|█▏        | 2996/24850 [1:09:33<58:55:38,  9.71s/it, lr=7e-5, step_loss=0.0231]Steps:  12%|█▏        | 2996/24850 [1:09:33<58:55:38,  9.71s/it, lr=7e-5, step_loss=0.0101]Steps:  12%|█▏        | 2997/24850 [1:09:34<43:52:46,  7.23s/it, lr=7e-5, step_loss=0.0101]Steps:  12%|█▏        | 2997/24850 [1:09:34<43:52:46,  7.23s/it, lr=7e-5, step_loss=0.0266]Steps:  12%|█▏        | 2998/24850 [1:09:35<33:20:13,  5.49s/it, lr=7e-5, step_loss=0.0266]Steps:  12%|█▏        | 2998/24850 [1:09:35<33:20:13,  5.49s/it, lr=7e-5, step_loss=0.0114]torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  Steps:  12%|█▏        | 2999/24850 [1:09:37<25:58:52,  4.28s/it, lr=7e-5, step_loss=0.0114]Steps:  12%|█▏        | 2999/24850 [1:09:37<25:58:52,  4.28s/it, lr=7e-5, step_loss=0.00457]Steps:  12%|█▏        | 3000/24850 [1:09:38<20:50:58,  3.44s/it, lr=7e-5, step_loss=0.00457]Steps:  12%|█▏        | 3000/24850 [1:09:38<20:50:58,  3.44s/it, lr=7e-5, step_loss=0.0319] Steps:  12%|█▏        | 3001/24850 [1:09:40<17:13:09,  2.84s/it, lr=7e-5, step_loss=0.0319]Steps:  12%|█▏        | 3001/24850 [1:09:40<17:13:09,  2.84s/it, lr=7e-5, step_loss=0.11]  Steps:  12%|█▏        | 3002/24850 [1:09:41<14:43:50,  2.43s/it, lr=7e-5, step_loss=0.11]Steps:  12%|█▏        | 3002/24850 [1:09:41<14:43:50,  2.43s/it, lr=7e-5, step_loss=0.014]Steps:  12%|█▏        | 3003/24850 [1:09:43<12:56:09,  2.13s/it, lr=7e-5, step_loss=0.014]Steps:  12%|█▏        | 3003/24850 [1:09:43<12:56:09,  2.13s/it, lr=7e-5, step_loss=0.0284]Steps:  12%|█▏        | 3004/24850 [1:09:44<11:44:24,  1.93s/it, lr=7e-5, step_loss=0.0284]Steps:  12%|█▏        | 3004/24850 [1:09:44<11:44:24,  1.93s/it, lr=7e-5, step_loss=0.00998]Steps:  12%|█▏        | 3005/24850 [1:09:46<10:51:58,  1.79s/it, lr=7e-5, step_loss=0.00998]Steps:  12%|█▏        | 3005/24850 [1:09:46<10:51:58,  1.79s/it, lr=7e-5, step_loss=0.0117] Steps:  12%|█▏        | 3006/24850 [1:09:47<10:14:05,  1.69s/it, lr=7e-5, step_loss=0.0117]Steps:  12%|█▏        | 3006/24850 [1:09:47<10:14:05,  1.69s/it, lr=7e-5, step_loss=0.0216]Steps:  12%|█▏        | 3007/24850 [1:09:49<9:47:52,  1.61s/it, lr=7e-5, step_loss=0.0216] Steps:  12%|█▏        | 3007/24850 [1:09:49<9:47:52,  1.61s/it, lr=7e-5, step_loss=0.0024]Steps:  12%|█▏        | 3008/24850 [1:09:50<9:30:02,  1.57s/it, lr=7e-5, step_loss=0.0024]Steps:  12%|█▏        | 3008/24850 [1:09:50<9:30:02,  1.57s/it, lr=7e-5, step_loss=0.0911]Steps:  12%|█▏        | 3009/24850 [1:09:51<9:18:34,  1.53s/it, lr=7e-5, step_loss=0.0911]Steps:  12%|█▏        | 3009/24850 [1:09:51<9:18:34,  1.53s/it, lr=7e-5, step_loss=0.0308]Steps:  12%|█▏        | 3010/24850 [1:09:53<9:09:55,  1.51s/it, lr=7e-5, step_loss=0.0308]Steps:  12%|█▏        | 3010/24850 [1:09:53<9:09:55,  1.51s/it, lr=7e-5, step_loss=0.0481]Steps:  12%|█▏        | 3011/24850 [1:09:54<9:03:53,  1.49s/it, lr=7e-5, step_loss=0.0481]Steps:  12%|█▏        | 3011/24850 [1:09:54<9:03:53,  1.49s/it, lr=7e-5, step_loss=0.0314]Steps:  12%|█▏        | 3012/24850 [1:09:56<8:59:59,  1.48s/it, lr=7e-5, step_loss=0.0314]Steps:  12%|█▏        | 3012/24850 [1:09:56<8:59:59,  1.48s/it, lr=7e-5, step_loss=0.145] Steps:  12%|█▏        | 3013/24850 [1:09:57<8:57:37,  1.48s/it, lr=7e-5, step_loss=0.145]Steps:  12%|█▏        | 3013/24850 [1:09:57<8:57:37,  1.48s/it, lr=7e-5, step_loss=0.027]Steps:  12%|█▏        | 3014/24850 [1:09:59<8:55:27,  1.47s/it, lr=7e-5, step_loss=0.027]Steps:  12%|█▏        | 3014/24850 [1:09:59<8:55:27,  1.47s/it, lr=7e-5, step_loss=0.0978]Steps:  12%|█▏        | 3015/24850 [1:10:00<8:54:11,  1.47s/it, lr=7e-5, step_loss=0.0978]Steps:  12%|█▏        | 3015/24850 [1:10:00<8:54:11,  1.47s/it, lr=7e-5, step_loss=0.0386]Steps:  12%|█▏        | 3016/24850 [1:10:02<8:52:40,  1.46s/it, lr=7e-5, step_loss=0.0386]Steps:  12%|█▏        | 3016/24850 [1:10:02<8:52:40,  1.46s/it, lr=7e-5, step_loss=0.0176]Steps:  12%|█▏        | 3017/24850 [1:10:03<8:51:55,  1.46s/it, lr=7e-5, step_loss=0.0176]Steps:  12%|█▏        | 3017/24850 [1:10:03<8:51:55,  1.46s/it, lr=7e-5, step_loss=0.0163]Steps:  12%|█▏        | 3018/24850 [1:10:05<8:50:33,  1.46s/it, lr=7e-5, step_loss=0.0163]Steps:  12%|█▏        | 3018/24850 [1:10:05<8:50:33,  1.46s/it, lr=7e-5, step_loss=0.0373]Steps:  12%|█▏        | 3019/24850 [1:10:06<8:49:01,  1.45s/it, lr=7e-5, step_loss=0.0373]Steps:  12%|█▏        | 3019/24850 [1:10:06<8:49:01,  1.45s/it, lr=7e-5, step_loss=0.0119]Steps:  12%|█▏        | 3020/24850 [1:10:07<8:50:34,  1.46s/it, lr=7e-5, step_loss=0.0119]Steps:  12%|█▏        | 3020/24850 [1:10:07<8:50:34,  1.46s/it, lr=7e-5, step_loss=0.00588]Steps:  12%|█▏        | 3021/24850 [1:10:09<8:48:59,  1.45s/it, lr=7e-5, step_loss=0.00588]Steps:  12%|█▏        | 3021/24850 [1:10:09<8:48:59,  1.45s/it, lr=7e-5, step_loss=0.111]  Steps:  12%|█▏        | 3022/24850 [1:10:10<8:49:27,  1.46s/it, lr=7e-5, step_loss=0.111]Steps:  12%|█▏        | 3022/24850 [1:10:10<8:49:27,  1.46s/it, lr=7e-5, step_loss=0.0274]Steps:  12%|█▏        | 3023/24850 [1:10:12<8:49:46,  1.46s/it, lr=7e-5, step_loss=0.0274]Steps:  12%|█▏        | 3023/24850 [1:10:12<8:49:46,  1.46s/it, lr=7e-5, step_loss=0.0296]Steps:  12%|█▏        | 3024/24850 [1:10:13<8:49:48,  1.46s/it, lr=7e-5, step_loss=0.0296]Steps:  12%|█▏        | 3024/24850 [1:10:13<8:49:48,  1.46s/it, lr=7e-5, step_loss=0.017] Steps:  12%|█▏        | 3025/24850 [1:10:15<8:48:57,  1.45s/it, lr=7e-5, step_loss=0.017]Steps:  12%|█▏        | 3025/24850 [1:10:15<8:48:57,  1.45s/it, lr=7e-5, step_loss=0.0078]Steps:  12%|█▏        | 3026/24850 [1:10:16<8:47:59,  1.45s/it, lr=7e-5, step_loss=0.0078]Steps:  12%|█▏        | 3026/24850 [1:10:16<8:47:59,  1.45s/it, lr=7e-5, step_loss=0.00117]mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:  12%|█▏        | 3027/24850 [1:10:18<8:47:17,  1.45s/it, lr=7e-5, step_loss=0.00117]Steps:  12%|█▏        | 3027/24850 [1:10:18<8:47:17,  1.45s/it, lr=7e-5, step_loss=0.00638]Steps:  12%|█▏        | 3028/24850 [1:10:19<8:47:29,  1.45s/it, lr=7e-5, step_loss=0.00638]Steps:  12%|█▏        | 3028/24850 [1:10:19<8:47:29,  1.45s/it, lr=7e-5, step_loss=0.00181]Steps:  12%|█▏        | 3029/24850 [1:10:21<8:49:40,  1.46s/it, lr=7e-5, step_loss=0.00181]Steps:  12%|█▏        | 3029/24850 [1:10:21<8:49:40,  1.46s/it, lr=7e-5, step_loss=0.00728]Steps:  12%|█▏        | 3030/24850 [1:10:22<8:49:23,  1.46s/it, lr=7e-5, step_loss=0.00728]Steps:  12%|█▏        | 3030/24850 [1:10:22<8:49:23,  1.46s/it, lr=7e-5, step_loss=0.063]  Steps:  12%|█▏        | 3031/24850 [1:10:23<8:51:12,  1.46s/it, lr=7e-5, step_loss=0.063]Steps:  12%|█▏        | 3031/24850 [1:10:23<8:51:12,  1.46s/it, lr=7e-5, step_loss=0.0258]Steps:  12%|█▏        | 3032/24850 [1:10:25<8:48:34,  1.45s/it, lr=7e-5, step_loss=0.0258]Steps:  12%|█▏        | 3032/24850 [1:10:25<8:48:34,  1.45s/it, lr=7e-5, step_loss=0.0234]Steps:  12%|█▏        | 3033/24850 [1:10:26<8:51:14,  1.46s/it, lr=7e-5, step_loss=0.0234]Steps:  12%|█▏        | 3033/24850 [1:10:26<8:51:14,  1.46s/it, lr=7e-5, step_loss=0.0306]Steps:  12%|█▏        | 3034/24850 [1:10:28<8:50:05,  1.46s/it, lr=7e-5, step_loss=0.0306]Steps:  12%|█▏        | 3034/24850 [1:10:28<8:50:05,  1.46s/it, lr=7e-5, step_loss=0.0314]Steps:  12%|█▏        | 3035/24850 [1:10:29<8:48:59,  1.45s/it, lr=7e-5, step_loss=0.0314]Steps:  12%|█▏        | 3035/24850 [1:10:29<8:48:59,  1.45s/it, lr=7e-5, step_loss=0.00996]Steps:  12%|█▏        | 3036/24850 [1:10:31<8:52:04,  1.46s/it, lr=7e-5, step_loss=0.00996]Steps:  12%|█▏        | 3036/24850 [1:10:31<8:52:04,  1.46s/it, lr=7e-5, step_loss=0.0977] Steps:  12%|█▏        | 3037/24850 [1:10:32<8:52:47,  1.47s/it, lr=7e-5, step_loss=0.0977]Steps:  12%|█▏        | 3037/24850 [1:10:32<8:52:47,  1.47s/it, lr=7e-5, step_loss=0.0344]Steps:  12%|█▏        | 3038/24850 [1:10:34<8:53:13,  1.47s/it, lr=7e-5, step_loss=0.0344]Steps:  12%|█▏        | 3038/24850 [1:10:34<8:53:13,  1.47s/it, lr=7e-5, step_loss=0.0206]Steps:  12%|█▏        | 3039/24850 [1:10:35<8:51:48,  1.46s/it, lr=7e-5, step_loss=0.0206]Steps:  12%|█▏        | 3039/24850 [1:10:35<8:51:48,  1.46s/it, lr=7e-5, step_loss=0.0483]Steps:  12%|█▏        | 3040/24850 [1:10:37<8:51:13,  1.46s/it, lr=7e-5, step_loss=0.0483]Steps:  12%|█▏        | 3040/24850 [1:10:37<8:51:13,  1.46s/it, lr=7e-5, step_loss=0.0155]Steps:  12%|█▏        | 3041/24850 [1:10:38<8:50:24,  1.46s/it, lr=7e-5, step_loss=0.0155]Steps:  12%|█▏        | 3041/24850 [1:10:38<8:50:24,  1.46s/it, lr=7e-5, step_loss=0.0252]Steps:  12%|█▏        | 3042/24850 [1:10:40<9:06:06,  1.50s/it, lr=7e-5, step_loss=0.0252]Steps:  12%|█▏        | 3042/24850 [1:10:40<9:06:06,  1.50s/it, lr=7e-5, step_loss=0.0585]04/12/2024 11:20:48 - INFO - __main__ - Running validation...
torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([9, 4, 64, 64])

Loading pipeline components...:   0%|          | 0/7 [00:00<?, ?it/s][A`text_config_dict` is provided which will be used to initialize `CLIPTextConfig`. The value `text_config["id2label"]` will be overriden.
`text_config_dict` is provided which will be used to initialize `CLIPTextConfig`. The value `text_config["bos_token_id"]` will be overriden.
`text_config_dict` is provided which will be used to initialize `CLIPTextConfig`. The value `text_config["eos_token_id"]` will be overriden.
Loaded safety_checker as StableDiffusionSafetyChecker from `safety_checker` subfolder of timbrooks/instruct-pix2pix.

Loading pipeline components...:  14%|█▍        | 1/7 [00:00<00:02,  2.36it/s][ALoaded feature_extractor as CLIPImageProcessor from `feature_extractor` subfolder of timbrooks/instruct-pix2pix.
{'timestep_spacing'} was not found in config. Values will be initialized to default values.
Loaded scheduler as EulerAncestralDiscreteScheduler from `scheduler` subfolder of timbrooks/instruct-pix2pix.
Loaded tokenizer as CLIPTokenizer from `tokenizer` subfolder of timbrooks/instruct-pix2pix.
Loading pipeline components...: 100%|██████████| 7/7 [00:00<00:00, 13.87it/s]
{'timestep_spacing'} was not found in config. Values will be initialized to default values.
conduct do_classifier_free_guidance, text_guidance: 16,image_guidance: 1

  0%|          | 0/50 [00:00<?, ?it/s][A
  2%|▏         | 1/50 [00:00<00:21,  2.28it/s][A
  4%|▍         | 2/50 [00:01<00:28,  1.69it/s][A
  6%|▌         | 3/50 [00:01<00:23,  1.97it/s][A
  8%|▊         | 4/50 [00:01<00:21,  2.13it/s][A
 10%|█         | 5/50 [00:02<00:20,  2.23it/s][A
 12%|█▏        | 6/50 [00:02<00:19,  2.30it/s][A
 14%|█▍        | 7/50 [00:03<00:18,  2.34it/s][A
 16%|█▌        | 8/50 [00:03<00:17,  2.35it/s][A
 18%|█▊        | 9/50 [00:04<00:17,  2.38it/s][A
 20%|██        | 10/50 [00:04<00:16,  2.40it/s][A
 22%|██▏       | 11/50 [00:04<00:16,  2.41it/s][A
 24%|██▍       | 12/50 [00:05<00:15,  2.42it/s][A
 26%|██▌       | 13/50 [00:05<00:15,  2.43it/s][A
 28%|██▊       | 14/50 [00:06<00:14,  2.43it/s][A
 30%|███       | 15/50 [00:06<00:14,  2.44it/s][A
 32%|███▏      | 16/50 [00:06<00:13,  2.44it/s][A
 34%|███▍      | 17/50 [00:07<00:13,  2.44it/s][A
 36%|███▌      | 18/50 [00:07<00:13,  2.44it/s][A
 38%|███▊      | 19/50 [00:08<00:12,  2.44it/s][A
 40%|████      | 20/50 [00:08<00:12,  2.44it/s][A
 42%|████▏     | 21/50 [00:08<00:11,  2.43it/s][A
 44%|████▍     | 22/50 [00:09<00:11,  2.43it/s][A
 46%|████▌     | 23/50 [00:09<00:11,  2.43it/s][A
 48%|████▊     | 24/50 [00:10<00:10,  2.43it/s][A
 50%|█████     | 25/50 [00:10<00:10,  2.43it/s][A
 52%|█████▏    | 26/50 [00:10<00:09,  2.44it/s][A
 54%|█████▍    | 27/50 [00:11<00:09,  2.43it/s][A
 56%|█████▌    | 28/50 [00:11<00:09,  2.43it/s][A
 58%|█████▊    | 29/50 [00:12<00:08,  2.43it/s][A
 60%|██████    | 30/50 [00:12<00:08,  2.43it/s][A
 62%|██████▏   | 31/50 [00:13<00:07,  2.43it/s][A
 64%|██████▍   | 32/50 [00:13<00:07,  2.43it/s][A
 66%|██████▌   | 33/50 [00:13<00:06,  2.43it/s][A(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) 
 68%|██████▊   | 34/50 [00:14<00:06,  2.43it/s][A
 70%|███████   | 35/50 [00:14<00:06,  2.43it/s][A
 72%|███████▏  | 36/50 [00:15<00:05,  2.43it/s][A
 74%|███████▍  | 37/50 [00:15<00:05,  2.43it/s][A
 76%|███████▌  | 38/50 [00:15<00:04,  2.42it/s][A
 78%|███████▊  | 39/50 [00:16<00:04,  2.42it/s][A
 80%|████████  | 40/50 [00:16<00:04,  2.42it/s][A
 82%|████████▏ | 41/50 [00:17<00:03,  2.42it/s][A
 84%|████████▍ | 42/50 [00:17<00:03,  2.42it/s][A
 86%|████████▌ | 43/50 [00:18<00:02,  2.42it/s][A
 88%|████████▊ | 44/50 [00:18<00:02,  2.43it/s][A
 90%|█████████ | 45/50 [00:18<00:02,  2.43it/s][A
 92%|█████████▏| 46/50 [00:19<00:01,  2.43it/s][A
 94%|█████████▍| 47/50 [00:19<00:01,  2.41it/s][A
 96%|█████████▌| 48/50 [00:20<00:00,  2.42it/s][A
 98%|█████████▊| 49/50 [00:20<00:00,  2.42it/s][A
100%|██████████| 50/50 [00:20<00:00,  2.42it/s][A100%|██████████| 50/50 [00:20<00:00,  2.39it/s]
04/12/2024 11:21:13 - INFO - __main__ - Running training...
torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
save img to : /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/images/modify the images for task ['flare']_val_step_3048_0.png modify the images for task ['flare']
writing inference outputs failed [Errno 2] No such file or directory: '/usr/bin/ffmpeg'
Steps:  12%|█▏        | 3043/24850 [1:11:11<64:10:25, 10.59s/it, lr=7e-5, step_loss=0.0585]Steps:  12%|█▏        | 3043/24850 [1:11:11<64:10:25, 10.59s/it, lr=7e-5, step_loss=0.0124]Steps:  12%|█▏        | 3044/24850 [1:11:14<49:34:23,  8.18s/it, lr=7e-5, step_loss=0.0124]Steps:  12%|█▏        | 3044/24850 [1:11:14<49:34:23,  8.18s/it, lr=7e-5, step_loss=0.0173]Steps:  12%|█▏        | 3045/24850 [1:11:15<37:20:06,  6.16s/it, lr=7e-5, step_loss=0.0173]Steps:  12%|█▏        | 3045/24850 [1:11:15<37:20:06,  6.16s/it, lr=7e-5, step_loss=0.0749]Steps:  12%|█▏        | 3046/24850 [1:11:17<28:46:50,  4.75s/it, lr=7e-5, step_loss=0.0749]Steps:  12%|█▏        | 3046/24850 [1:11:17<28:46:50,  4.75s/it, lr=7e-5, step_loss=0.00845]Steps:  12%|█▏        | 3047/24850 [1:11:18<22:47:10,  3.76s/it, lr=7e-5, step_loss=0.00845]Steps:  12%|█▏        | 3047/24850 [1:11:18<22:47:10,  3.76s/it, lr=7e-5, step_loss=0.0231] Steps:  12%|█▏        | 3048/24850 [1:11:20<18:34:57,  3.07s/it, lr=7e-5, step_loss=0.0231]Steps:  12%|█▏        | 3048/24850 [1:11:20<18:34:57,  3.07s/it, lr=7e-5, step_loss=0.0172]Steps:  12%|█▏        | 3049/24850 [1:11:21<15:38:26,  2.58s/it, lr=7e-5, step_loss=0.0172]Steps:  12%|█▏        | 3049/24850 [1:11:21<15:38:26,  2.58s/it, lr=7e-5, step_loss=0.111] Steps:  12%|█▏        | 3050/24850 [1:11:23<13:38:21,  2.25s/it, lr=7e-5, step_loss=0.111]Steps:  12%|█▏        | 3050/24850 [1:11:23<13:38:21,  2.25s/it, lr=7e-5, step_loss=0.0275]Steps:  12%|█▏        | 3051/24850 [1:11:24<12:12:31,  2.02s/it, lr=7e-5, step_loss=0.0275]Steps:  12%|█▏        | 3051/24850 [1:11:24<12:12:31,  2.02s/it, lr=7e-5, step_loss=0.0111]Steps:  12%|█▏        | 3052/24850 [1:11:26<11:11:28,  1.85s/it, lr=7e-5, step_loss=0.0111]Steps:  12%|█▏        | 3052/24850 [1:11:26<11:11:28,  1.85s/it, lr=7e-5, step_loss=0.00916]Steps:  12%|█▏        | 3053/24850 [1:11:27<10:30:23,  1.74s/it, lr=7e-5, step_loss=0.00916]Steps:  12%|█▏        | 3053/24850 [1:11:27<10:30:23,  1.74s/it, lr=7e-5, step_loss=0.0249] Steps:  12%|█▏        | 3054/24850 [1:11:29<10:00:49,  1.65s/it, lr=7e-5, step_loss=0.0249]Steps:  12%|█▏        | 3054/24850 [1:11:29<10:00:49,  1.65s/it, lr=7e-5, step_loss=0.00344]Steps:  12%|█▏        | 3055/24850 [1:11:30<9:39:54,  1.60s/it, lr=7e-5, step_loss=0.00344] Steps:  12%|█▏        | 3055/24850 [1:11:30<9:39:54,  1.60s/it, lr=7e-5, step_loss=0.0341] Steps:  12%|█▏        | 3056/24850 [1:11:32<9:26:59,  1.56s/it, lr=7e-5, step_loss=0.0341]Steps:  12%|█▏        | 3056/24850 [1:11:32<9:26:59,  1.56s/it, lr=7e-5, step_loss=0.0777]Steps:  12%|█▏        | 3057/24850 [1:11:33<9:16:29,  1.53s/it, lr=7e-5, step_loss=0.0777]Steps:  12%|█▏        | 3057/24850 [1:11:33<9:16:29,  1.53s/it, lr=7e-5, step_loss=0.0667]Steps:  12%|█▏        | 3058/24850 [1:11:35<9:09:20,  1.51s/it, lr=7e-5, step_loss=0.0667]Steps:  12%|█▏        | 3058/24850 [1:11:35<9:09:20,  1.51s/it, lr=7e-5, step_loss=0.0106]Steps:  12%|█▏        | 3059/24850 [1:11:36<9:02:50,  1.49s/it, lr=7e-5, step_loss=0.0106]Steps:  12%|█▏        | 3059/24850 [1:11:36<9:02:50,  1.49s/it, lr=7e-5, step_loss=0.0157]Steps:  12%|█▏        | 3060/24850 [1:11:37<8:59:49,  1.49s/it, lr=7e-5, step_loss=0.0157]Steps:  12%|█▏        | 3060/24850 [1:11:37<8:59:49,  1.49s/it, lr=7e-5, step_loss=0.0338]Steps:  12%|█▏        | 3061/24850 [1:11:39<8:57:12,  1.48s/it, lr=7e-5, step_loss=0.0338]Steps:  12%|█▏        | 3061/24850 [1:11:39<8:57:12,  1.48s/it, lr=7e-5, step_loss=0.0238]Steps:  12%|█▏        | 3062/24850 [1:11:40<8:56:35,  1.48s/it, lr=7e-5, step_loss=0.0238]Steps:  12%|█▏        | 3062/24850 [1:11:40<8:56:35,  1.48s/it, lr=7e-5, step_loss=0.0404]Steps:  12%|█▏        | 3063/24850 [1:11:42<8:58:25,  1.48s/it, lr=7e-5, step_loss=0.0404]Steps:  12%|█▏        | 3063/24850 [1:11:42<8:58:25,  1.48s/it, lr=7e-5, step_loss=0.03]  Steps:  12%|█▏        | 3064/24850 [1:11:43<9:04:43,  1.50s/it, lr=7e-5, step_loss=0.03]Steps:  12%|█▏        | 3064/24850 [1:11:43<9:04:43,  1.50s/it, lr=7e-5, step_loss=0.0223]Steps:  12%|█▏        | 3065/24850 [1:11:45<9:03:10,  1.50s/it, lr=7e-5, step_loss=0.0223]Steps:  12%|█▏        | 3065/24850 [1:11:45<9:03:10,  1.50s/it, lr=7e-5, step_loss=0.0053]Steps:  12%|█▏        | 3066/24850 [1:11:46<9:03:17,  1.50s/it, lr=7e-5, step_loss=0.0053]Steps:  12%|█▏        | 3066/24850 [1:11:46<9:03:17,  1.50s/it, lr=7e-5, step_loss=0.0256]Steps:  12%|█▏        | 3067/24850 [1:11:48<9:01:05,  1.49s/it, lr=7e-5, step_loss=0.0256]Steps:  12%|█▏        | 3067/24850 [1:11:48<9:01:05,  1.49s/it, lr=7e-5, step_loss=0.0276]Steps:  12%|█▏        | 3068/24850 [1:11:49<8:57:04,  1.48s/it, lr=7e-5, step_loss=0.0276]Steps:  12%|█▏        | 3068/24850 [1:11:49<8:57:04,  1.48s/it, lr=7e-5, step_loss=0.00267]Steps:  12%|█▏        | 3069/24850 [1:11:51<8:56:35,  1.48s/it, lr=7e-5, step_loss=0.00267]Steps:  12%|█▏        | 3069/24850 [1:11:51<8:56:35,  1.48s/it, lr=7e-5, step_loss=0.111]  (512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512)Steps:  12%|█▏        | 3070/24850 [1:11:52<8:58:01,  1.48s/it, lr=7e-5, step_loss=0.111]Steps:  12%|█▏        | 3070/24850 [1:11:52<8:58:01,  1.48s/it, lr=7e-5, step_loss=0.0426]Steps:  12%|█▏        | 3071/24850 [1:11:54<8:57:20,  1.48s/it, lr=7e-5, step_loss=0.0426]Steps:  12%|█▏        | 3071/24850 [1:11:54<8:57:20,  1.48s/it, lr=7e-5, step_loss=0.014] Steps:  12%|█▏        | 3072/24850 [1:11:55<8:53:36,  1.47s/it, lr=7e-5, step_loss=0.014]Steps:  12%|█▏        | 3072/24850 [1:11:55<8:53:36,  1.47s/it, lr=7e-5, step_loss=0.0574]Steps:  12%|█▏        | 3073/24850 [1:11:57<8:55:13,  1.47s/it, lr=7e-5, step_loss=0.0574]Steps:  12%|█▏        | 3073/24850 [1:11:57<8:55:13,  1.47s/it, lr=7e-5, step_loss=0.0241]Steps:  12%|█▏        | 3074/24850 [1:11:58<8:54:45,  1.47s/it, lr=7e-5, step_loss=0.0241]Steps:  12%|█▏        | 3074/24850 [1:11:58<8:54:45,  1.47s/it, lr=7e-5, step_loss=0.0756]Steps:  12%|█▏        | 3075/24850 [1:12:00<8:53:55,  1.47s/it, lr=7e-5, step_loss=0.0756]Steps:  12%|█▏        | 3075/24850 [1:12:00<8:53:55,  1.47s/it, lr=7e-5, step_loss=0.0363]Steps:  12%|█▏        | 3076/24850 [1:12:01<8:55:54,  1.48s/it, lr=7e-5, step_loss=0.0363]Steps:  12%|█▏        | 3076/24850 [1:12:01<8:55:54,  1.48s/it, lr=7e-5, step_loss=0.00414]Steps:  12%|█▏        | 3077/24850 [1:12:03<8:57:32,  1.48s/it, lr=7e-5, step_loss=0.00414]Steps:  12%|█▏        | 3077/24850 [1:12:03<8:57:32,  1.48s/it, lr=7e-5, step_loss=0.0181] Steps:  12%|█▏        | 3078/24850 [1:12:04<8:56:07,  1.48s/it, lr=7e-5, step_loss=0.0181]Steps:  12%|█▏        | 3078/24850 [1:12:04<8:56:07,  1.48s/it, lr=7e-5, step_loss=0.0179]Steps:  12%|█▏        | 3079/24850 [1:12:06<8:55:42,  1.48s/it, lr=7e-5, step_loss=0.0179]Steps:  12%|█▏        | 3079/24850 [1:12:06<8:55:42,  1.48s/it, lr=7e-5, step_loss=0.00692]Steps:  12%|█▏        | 3080/24850 [1:12:07<8:54:19,  1.47s/it, lr=7e-5, step_loss=0.00692]Steps:  12%|█▏        | 3080/24850 [1:12:07<8:54:19,  1.47s/it, lr=7e-5, step_loss=0.00516]Steps:  12%|█▏        | 3081/24850 [1:12:08<8:53:31,  1.47s/it, lr=7e-5, step_loss=0.00516]Steps:  12%|█▏        | 3081/24850 [1:12:08<8:53:31,  1.47s/it, lr=7e-5, step_loss=0.00863]Steps:  12%|█▏        | 3082/24850 [1:12:10<8:53:01,  1.47s/it, lr=7e-5, step_loss=0.00863]Steps:  12%|█▏        | 3082/24850 [1:12:10<8:53:01,  1.47s/it, lr=7e-5, step_loss=0.0653] Steps:  12%|█▏        | 3083/24850 [1:12:11<8:53:41,  1.47s/it, lr=7e-5, step_loss=0.0653]Steps:  12%|█▏        | 3083/24850 [1:12:11<8:53:41,  1.47s/it, lr=7e-5, step_loss=0.0295]Steps:  12%|█▏        | 3084/24850 [1:12:13<8:52:48,  1.47s/it, lr=7e-5, step_loss=0.0295]Steps:  12%|█▏        | 3084/24850 [1:12:13<8:52:48,  1.47s/it, lr=7e-5, step_loss=0.00486]Steps:  12%|█▏        | 3085/24850 [1:12:14<8:52:04,  1.47s/it, lr=7e-5, step_loss=0.00486]Steps:  12%|█▏        | 3085/24850 [1:12:14<8:52:04,  1.47s/it, lr=7e-5, step_loss=0.0166] Steps:  12%|█▏        | 3086/24850 [1:12:16<8:51:59,  1.47s/it, lr=7e-5, step_loss=0.0166]Steps:  12%|█▏        | 3086/24850 [1:12:16<8:51:59,  1.47s/it, lr=7e-5, step_loss=0.0778]Steps:  12%|█▏        | 3087/24850 [1:12:17<8:51:38,  1.47s/it, lr=7e-5, step_loss=0.0778]Steps:  12%|█▏        | 3087/24850 [1:12:17<8:51:38,  1.47s/it, lr=7e-5, step_loss=0.00797]Steps:  12%|█▏        | 3088/24850 [1:12:19<8:51:18,  1.46s/it, lr=7e-5, step_loss=0.00797]Steps:  12%|█▏        | 3088/24850 [1:12:19<8:51:18,  1.46s/it, lr=7e-5, step_loss=0.266]  Steps:  12%|█▏        | 3089/24850 [1:12:20<8:51:40,  1.47s/it, lr=7e-5, step_loss=0.266]Steps:  12%|█▏        | 3089/24850 [1:12:20<8:51:40,  1.47s/it, lr=7e-5, step_loss=0.0611]Steps:  12%|█▏        | 3090/24850 [1:12:22<8:52:21,  1.47s/it, lr=7e-5, step_loss=0.0611]Steps:  12%|█▏        | 3090/24850 [1:12:22<8:52:21,  1.47s/it, lr=7e-5, step_loss=0.0214]Steps:  12%|█▏        | 3091/24850 [1:12:23<8:53:04,  1.47s/it, lr=7e-5, step_loss=0.0214]Steps:  12%|█▏        | 3091/24850 [1:12:23<8:53:04,  1.47s/it, lr=7e-5, step_loss=0.0109]Steps:  12%|█▏        | 3092/24850 [1:12:25<8:52:31,  1.47s/it, lr=7e-5, step_loss=0.0109]Steps:  12%|█▏        | 3092/24850 [1:12:25<8:52:31,  1.47s/it, lr=7e-5, step_loss=0.065] Steps:  12%|█▏        | 3093/24850 [1:12:26<8:52:31,  1.47s/it, lr=7e-5, step_loss=0.065]Steps:  12%|█▏        | 3093/24850 [1:12:26<8:52:31,  1.47s/it, lr=7e-5, step_loss=0.0306]Steps:  12%|█▏        | 3094/24850 [1:12:29<10:39:00,  1.76s/it, lr=7e-5, step_loss=0.0306]Steps:  12%|█▏        | 3094/24850 [1:12:29<10:39:00,  1.76s/it, lr=7e-5, step_loss=0.03]  Steps:  12%|█▏        | 3095/24850 [1:12:30<10:05:11,  1.67s/it, lr=7e-5, step_loss=0.03]Steps:  12%|█▏        | 3095/24850 [1:12:30<10:05:11,  1.67s/it, lr=7e-5, step_loss=0.101]Steps:  12%|█▏        | 3096/24850 [1:12:31<9:42:05,  1.61s/it, lr=7e-5, step_loss=0.101] Steps:  12%|█▏        | 3096/24850 [1:12:31<9:42:05,  1.61s/it, lr=7e-5, step_loss=0.00809] torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:  12%|█▏        | 3097/24850 [1:12:33<9:26:44,  1.56s/it, lr=7e-5, step_loss=0.00809]Steps:  12%|█▏        | 3097/24850 [1:12:33<9:26:44,  1.56s/it, lr=7e-5, step_loss=0.011]  Steps:  12%|█▏        | 3098/24850 [1:12:34<9:16:31,  1.54s/it, lr=7e-5, step_loss=0.011]Steps:  12%|█▏        | 3098/24850 [1:12:34<9:16:31,  1.54s/it, lr=7e-5, step_loss=0.0172]Steps:  12%|█▏        | 3099/24850 [1:12:36<9:09:31,  1.52s/it, lr=7e-5, step_loss=0.0172]Steps:  12%|█▏        | 3099/24850 [1:12:36<9:09:31,  1.52s/it, lr=7e-5, step_loss=0.526] Steps:  12%|█▏        | 3100/24850 [1:12:37<9:07:44,  1.51s/it, lr=7e-5, step_loss=0.526]Steps:  12%|█▏        | 3100/24850 [1:12:37<9:07:44,  1.51s/it, lr=7e-5, step_loss=0.0374]Steps:  12%|█▏        | 3101/24850 [1:12:39<9:03:02,  1.50s/it, lr=7e-5, step_loss=0.0374]Steps:  12%|█▏        | 3101/24850 [1:12:39<9:03:02,  1.50s/it, lr=7e-5, step_loss=0.00575]Steps:  12%|█▏        | 3102/24850 [1:12:40<8:59:29,  1.49s/it, lr=7e-5, step_loss=0.00575]Steps:  12%|█▏        | 3102/24850 [1:12:40<8:59:29,  1.49s/it, lr=7e-5, step_loss=0.00589]Steps:  12%|█▏        | 3103/24850 [1:12:42<9:21:19,  1.55s/it, lr=7e-5, step_loss=0.00589]Steps:  12%|█▏        | 3103/24850 [1:12:42<9:21:19,  1.55s/it, lr=7e-5, step_loss=0.0331] Steps:  12%|█▏        | 3104/24850 [1:12:44<9:20:41,  1.55s/it, lr=7e-5, step_loss=0.0331]Steps:  12%|█▏        | 3104/24850 [1:12:44<9:20:41,  1.55s/it, lr=7e-5, step_loss=0.0741]Steps:  12%|█▏        | 3105/24850 [1:12:45<9:15:55,  1.53s/it, lr=7e-5, step_loss=0.0741]Steps:  12%|█▏        | 3105/24850 [1:12:45<9:15:55,  1.53s/it, lr=7e-5, step_loss=0.0163]Steps:  12%|█▏        | 3106/24850 [1:12:46<9:07:40,  1.51s/it, lr=7e-5, step_loss=0.0163]Steps:  12%|█▏        | 3106/24850 [1:12:46<9:07:40,  1.51s/it, lr=7e-5, step_loss=0.0161]Steps:  13%|█▎        | 3107/24850 [1:12:48<9:01:51,  1.50s/it, lr=7e-5, step_loss=0.0161]Steps:  13%|█▎        | 3107/24850 [1:12:48<9:01:51,  1.50s/it, lr=7e-5, step_loss=0.149] Steps:  13%|█▎        | 3108/24850 [1:12:49<8:58:27,  1.49s/it, lr=7e-5, step_loss=0.149]Steps:  13%|█▎        | 3108/24850 [1:12:49<8:58:27,  1.49s/it, lr=7e-5, step_loss=0.0202]Steps:  13%|█▎        | 3109/24850 [1:12:51<8:55:47,  1.48s/it, lr=7e-5, step_loss=0.0202]Steps:  13%|█▎        | 3109/24850 [1:12:51<8:55:47,  1.48s/it, lr=7e-5, step_loss=0.0582]Steps:  13%|█▎        | 3110/24850 [1:12:52<8:54:22,  1.47s/it, lr=7e-5, step_loss=0.0582]Steps:  13%|█▎        | 3110/24850 [1:12:52<8:54:22,  1.47s/it, lr=7e-5, step_loss=0.00492]Steps:  13%|█▎        | 3111/24850 [1:12:54<8:53:20,  1.47s/it, lr=7e-5, step_loss=0.00492]Steps:  13%|█▎        | 3111/24850 [1:12:54<8:53:20,  1.47s/it, lr=7e-5, step_loss=0.123]  Steps:  13%|█▎        | 3112/24850 [1:12:55<8:52:23,  1.47s/it, lr=7e-5, step_loss=0.123]Steps:  13%|█▎        | 3112/24850 [1:12:55<8:52:23,  1.47s/it, lr=7e-5, step_loss=0.00254]Steps:  13%|█▎        | 3113/24850 [1:12:57<8:54:40,  1.48s/it, lr=7e-5, step_loss=0.00254]Steps:  13%|█▎        | 3113/24850 [1:12:57<8:54:40,  1.48s/it, lr=7e-5, step_loss=0.141]  Steps:  13%|█▎        | 3114/24850 [1:12:58<8:53:28,  1.47s/it, lr=7e-5, step_loss=0.141]Steps:  13%|█▎        | 3114/24850 [1:12:58<8:53:28,  1.47s/it, lr=7e-5, step_loss=0.0183]Steps:  13%|█▎        | 3115/24850 [1:13:00<8:52:50,  1.47s/it, lr=7e-5, step_loss=0.0183]Steps:  13%|█▎        | 3115/24850 [1:13:00<8:52:50,  1.47s/it, lr=7e-5, step_loss=0.0571]Steps:  13%|█▎        | 3116/24850 [1:13:01<8:51:35,  1.47s/it, lr=7e-5, step_loss=0.0571]Steps:  13%|█▎        | 3116/24850 [1:13:01<8:51:35,  1.47s/it, lr=7e-5, step_loss=0.0822]Steps:  13%|█▎        | 3117/24850 [1:13:03<8:51:35,  1.47s/it, lr=7e-5, step_loss=0.0822]Steps:  13%|█▎        | 3117/24850 [1:13:03<8:51:35,  1.47s/it, lr=7e-5, step_loss=0.0135]Steps:  13%|█▎        | 3118/24850 [1:13:04<8:53:13,  1.47s/it, lr=7e-5, step_loss=0.0135]Steps:  13%|█▎        | 3118/24850 [1:13:04<8:53:13,  1.47s/it, lr=7e-5, step_loss=0.0417]Steps:  13%|█▎        | 3119/24850 [1:13:06<8:52:14,  1.47s/it, lr=7e-5, step_loss=0.0417]Steps:  13%|█▎        | 3119/24850 [1:13:06<8:52:14,  1.47s/it, lr=7e-5, step_loss=0.00889]Steps:  13%|█▎        | 3120/24850 [1:13:07<8:51:02,  1.47s/it, lr=7e-5, step_loss=0.00889]Steps:  13%|█▎        | 3120/24850 [1:13:07<8:51:02,  1.47s/it, lr=7e-5, step_loss=0.416]  Steps:  13%|█▎        | 3121/24850 [1:13:08<8:53:18,  1.47s/it, lr=7e-5, step_loss=0.416]Steps:  13%|█▎        | 3121/24850 [1:13:08<8:53:18,  1.47s/it, lr=7e-5, step_loss=0.0748]Steps:  13%|█▎        | 3122/24850 [1:13:10<8:54:09,  1.48s/it, lr=7e-5, step_loss=0.0748]Steps:  13%|█▎        | 3122/24850 [1:13:10<8:54:09,  1.48s/it, lr=7e-5, step_loss=0.0103]Steps:  13%|█▎        | 3123/24850 [1:13:11<8:53:26,  1.47s/it, lr=7e-5, step_loss=0.0103]Steps:  13%|█▎        | 3123/24850 [1:13:11<8:53:26,  1.47s/it, lr=7e-5, step_loss=0.0192]torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  Steps:  13%|█▎        | 3124/24850 [1:13:13<8:52:25,  1.47s/it, lr=7e-5, step_loss=0.0192]Steps:  13%|█▎        | 3124/24850 [1:13:13<8:52:25,  1.47s/it, lr=7e-5, step_loss=0.0348]Steps:  13%|█▎        | 3125/24850 [1:13:14<8:53:47,  1.47s/it, lr=7e-5, step_loss=0.0348]Steps:  13%|█▎        | 3125/24850 [1:13:14<8:53:47,  1.47s/it, lr=7e-5, step_loss=0.00902]Steps:  13%|█▎        | 3126/24850 [1:13:16<8:52:51,  1.47s/it, lr=7e-5, step_loss=0.00902]Steps:  13%|█▎        | 3126/24850 [1:13:16<8:52:51,  1.47s/it, lr=7e-5, step_loss=0.0349] Steps:  13%|█▎        | 3127/24850 [1:13:17<8:52:52,  1.47s/it, lr=7e-5, step_loss=0.0349]Steps:  13%|█▎        | 3127/24850 [1:13:17<8:52:52,  1.47s/it, lr=7e-5, step_loss=0.0172]Steps:  13%|█▎        | 3128/24850 [1:13:19<8:51:56,  1.47s/it, lr=7e-5, step_loss=0.0172]Steps:  13%|█▎        | 3128/24850 [1:13:19<8:51:56,  1.47s/it, lr=7e-5, step_loss=0.0205]Steps:  13%|█▎        | 3129/24850 [1:13:20<8:51:17,  1.47s/it, lr=7e-5, step_loss=0.0205]Steps:  13%|█▎        | 3129/24850 [1:13:20<8:51:17,  1.47s/it, lr=7e-5, step_loss=0.00535]Steps:  13%|█▎        | 3130/24850 [1:13:22<8:53:39,  1.47s/it, lr=7e-5, step_loss=0.00535]Steps:  13%|█▎        | 3130/24850 [1:13:22<8:53:39,  1.47s/it, lr=7e-5, step_loss=0.00868]Steps:  13%|█▎        | 3131/24850 [1:13:23<8:53:55,  1.48s/it, lr=7e-5, step_loss=0.00868]Steps:  13%|█▎        | 3131/24850 [1:13:23<8:53:55,  1.48s/it, lr=7e-5, step_loss=0.00637]Steps:  13%|█▎        | 3132/24850 [1:13:25<8:50:53,  1.47s/it, lr=7e-5, step_loss=0.00637]Steps:  13%|█▎        | 3132/24850 [1:13:25<8:50:53,  1.47s/it, lr=7e-5, step_loss=0.00507]Steps:  13%|█▎        | 3133/24850 [1:13:26<8:50:29,  1.47s/it, lr=7e-5, step_loss=0.00507]Steps:  13%|█▎        | 3133/24850 [1:13:26<8:50:29,  1.47s/it, lr=7e-5, step_loss=0.0437] Steps:  13%|█▎        | 3134/24850 [1:13:28<8:50:22,  1.47s/it, lr=7e-5, step_loss=0.0437]Steps:  13%|█▎        | 3134/24850 [1:13:28<8:50:22,  1.47s/it, lr=7e-5, step_loss=0.0111]Steps:  13%|█▎        | 3135/24850 [1:13:29<8:51:24,  1.47s/it, lr=7e-5, step_loss=0.0111]Steps:  13%|█▎        | 3135/24850 [1:13:29<8:51:24,  1.47s/it, lr=7e-5, step_loss=0.0315]Steps:  13%|█▎        | 3136/24850 [1:13:31<8:50:46,  1.47s/it, lr=7e-5, step_loss=0.0315]Steps:  13%|█▎        | 3136/24850 [1:13:31<8:50:46,  1.47s/it, lr=7e-5, step_loss=0.0144]Steps:  13%|█▎        | 3137/24850 [1:13:32<8:51:01,  1.47s/it, lr=7e-5, step_loss=0.0144]Steps:  13%|█▎        | 3137/24850 [1:13:32<8:51:01,  1.47s/it, lr=7e-5, step_loss=0.00794]Steps:  13%|█▎        | 3138/24850 [1:13:33<8:50:32,  1.47s/it, lr=7e-5, step_loss=0.00794]Steps:  13%|█▎        | 3138/24850 [1:13:33<8:50:32,  1.47s/it, lr=7e-5, step_loss=0.0413] Steps:  13%|█▎        | 3139/24850 [1:13:35<8:49:46,  1.46s/it, lr=7e-5, step_loss=0.0413]Steps:  13%|█▎        | 3139/24850 [1:13:35<8:49:46,  1.46s/it, lr=7e-5, step_loss=0.0137]Steps:  13%|█▎        | 3140/24850 [1:13:36<8:49:18,  1.46s/it, lr=7e-5, step_loss=0.0137]Steps:  13%|█▎        | 3140/24850 [1:13:36<8:49:18,  1.46s/it, lr=7e-5, step_loss=0.159] Steps:  13%|█▎        | 3141/24850 [1:13:38<8:50:52,  1.47s/it, lr=7e-5, step_loss=0.159]Steps:  13%|█▎        | 3141/24850 [1:13:38<8:50:52,  1.47s/it, lr=7e-5, step_loss=0.0504]Steps:  13%|█▎        | 3142/24850 [1:13:39<8:49:50,  1.46s/it, lr=7e-5, step_loss=0.0504]Steps:  13%|█▎        | 3142/24850 [1:13:39<8:49:50,  1.46s/it, lr=7e-5, step_loss=0.0073]Steps:  13%|█▎        | 3143/24850 [1:13:41<8:48:48,  1.46s/it, lr=7e-5, step_loss=0.0073]Steps:  13%|█▎        | 3143/24850 [1:13:41<8:48:48,  1.46s/it, lr=7e-5, step_loss=0.01]  Steps:  13%|█▎        | 3144/24850 [1:13:43<10:40:35,  1.77s/it, lr=7e-5, step_loss=0.01]Steps:  13%|█▎        | 3144/24850 [1:13:43<10:40:35,  1.77s/it, lr=7e-5, step_loss=0.0107]Steps:  13%|█▎        | 3145/24850 [1:13:45<10:08:05,  1.68s/it, lr=7e-5, step_loss=0.0107]Steps:  13%|█▎        | 3145/24850 [1:13:45<10:08:05,  1.68s/it, lr=7e-5, step_loss=0.00379]Steps:  13%|█▎        | 3146/24850 [1:13:46<9:45:19,  1.62s/it, lr=7e-5, step_loss=0.00379] Steps:  13%|█▎        | 3146/24850 [1:13:46<9:45:19,  1.62s/it, lr=7e-5, step_loss=0.00966]Steps:  13%|█▎        | 3147/24850 [1:13:48<9:28:53,  1.57s/it, lr=7e-5, step_loss=0.00966]Steps:  13%|█▎        | 3147/24850 [1:13:48<9:28:53,  1.57s/it, lr=7e-5, step_loss=0.0199] Steps:  13%|█▎        | 3148/24850 [1:13:49<9:15:50,  1.54s/it, lr=7e-5, step_loss=0.0199]Steps:  13%|█▎        | 3148/24850 [1:13:49<9:15:50,  1.54s/it, lr=7e-5, step_loss=0.000499]Steps:  13%|█▎        | 3149/24850 [1:13:51<9:07:00,  1.51s/it, lr=7e-5, step_loss=0.000499]Steps:  13%|█▎        | 3149/24850 [1:13:51<9:07:00,  1.51s/it, lr=7e-5, step_loss=0.0119]  Steps:  13%|█▎        | 3150/24850 [1:13:52<9:01:09,  1.50s/it, lr=7e-5, step_loss=0.0119]Steps:  13%|█▎        | 3150/24850 [1:13:52<9:01:09,  1.50s/it, lr=7e-5, step_loss=0.00683]Steps:  13%|█▎        | 3151/24850 [1:13:53<8:55:41,  1.48s/it, lr=7e-5, step_loss=0.00683]Steps:  13%|█▎        | 3151/24850 [1:13:53<8:55:41,  1.48s/it, lr=7e-5, step_loss=0.0114] mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:  13%|█▎        | 3152/24850 [1:13:55<8:54:00,  1.48s/it, lr=7e-5, step_loss=0.0114]Steps:  13%|█▎        | 3152/24850 [1:13:55<8:54:00,  1.48s/it, lr=7e-5, step_loss=0.0107]Steps:  13%|█▎        | 3153/24850 [1:13:56<8:52:46,  1.47s/it, lr=7e-5, step_loss=0.0107]Steps:  13%|█▎        | 3153/24850 [1:13:56<8:52:46,  1.47s/it, lr=7e-5, step_loss=0.0177]Steps:  13%|█▎        | 3154/24850 [1:13:58<8:50:51,  1.47s/it, lr=7e-5, step_loss=0.0177]Steps:  13%|█▎        | 3154/24850 [1:13:58<8:50:51,  1.47s/it, lr=7e-5, step_loss=0.156] Steps:  13%|█▎        | 3155/24850 [1:13:59<8:49:19,  1.46s/it, lr=7e-5, step_loss=0.156]Steps:  13%|█▎        | 3155/24850 [1:13:59<8:49:19,  1.46s/it, lr=7e-5, step_loss=0.0384]Steps:  13%|█▎        | 3156/24850 [1:14:01<8:47:56,  1.46s/it, lr=7e-5, step_loss=0.0384]Steps:  13%|█▎        | 3156/24850 [1:14:01<8:47:56,  1.46s/it, lr=7e-5, step_loss=0.0671]Steps:  13%|█▎        | 3157/24850 [1:14:02<8:48:39,  1.46s/it, lr=7e-5, step_loss=0.0671]Steps:  13%|█▎        | 3157/24850 [1:14:02<8:48:39,  1.46s/it, lr=7e-5, step_loss=0.0567]Steps:  13%|█▎        | 3158/24850 [1:14:04<8:50:41,  1.47s/it, lr=7e-5, step_loss=0.0567]Steps:  13%|█▎        | 3158/24850 [1:14:04<8:50:41,  1.47s/it, lr=7e-5, step_loss=0.0289]Steps:  13%|█▎        | 3159/24850 [1:14:05<8:52:10,  1.47s/it, lr=7e-5, step_loss=0.0289]Steps:  13%|█▎        | 3159/24850 [1:14:05<8:52:10,  1.47s/it, lr=7e-5, step_loss=0.0937]Steps:  13%|█▎        | 3160/24850 [1:14:07<8:50:00,  1.47s/it, lr=7e-5, step_loss=0.0937]Steps:  13%|█▎        | 3160/24850 [1:14:07<8:50:00,  1.47s/it, lr=7e-5, step_loss=0.125] Steps:  13%|█▎        | 3161/24850 [1:14:08<8:52:01,  1.47s/it, lr=7e-5, step_loss=0.125]Steps:  13%|█▎        | 3161/24850 [1:14:08<8:52:01,  1.47s/it, lr=7e-5, step_loss=0.1]  Steps:  13%|█▎        | 3162/24850 [1:14:10<8:52:37,  1.47s/it, lr=7e-5, step_loss=0.1]Steps:  13%|█▎        | 3162/24850 [1:14:10<8:52:37,  1.47s/it, lr=7e-5, step_loss=0.00887]Steps:  13%|█▎        | 3163/24850 [1:14:11<8:51:28,  1.47s/it, lr=7e-5, step_loss=0.00887]Steps:  13%|█▎        | 3163/24850 [1:14:11<8:51:28,  1.47s/it, lr=7e-5, step_loss=0.0122] Steps:  13%|█▎        | 3164/24850 [1:14:13<8:50:13,  1.47s/it, lr=7e-5, step_loss=0.0122]Steps:  13%|█▎        | 3164/24850 [1:14:13<8:50:13,  1.47s/it, lr=7e-5, step_loss=0.0213]Steps:  13%|█▎        | 3165/24850 [1:14:14<8:51:39,  1.47s/it, lr=7e-5, step_loss=0.0213]Steps:  13%|█▎        | 3165/24850 [1:14:14<8:51:39,  1.47s/it, lr=7e-5, step_loss=0.0116]Steps:  13%|█▎        | 3166/24850 [1:14:16<8:54:24,  1.48s/it, lr=7e-5, step_loss=0.0116]Steps:  13%|█▎        | 3166/24850 [1:14:16<8:54:24,  1.48s/it, lr=7e-5, step_loss=0.00645]Steps:  13%|█▎        | 3167/24850 [1:14:17<8:53:53,  1.48s/it, lr=7e-5, step_loss=0.00645]Steps:  13%|█▎        | 3167/24850 [1:14:17<8:53:53,  1.48s/it, lr=7e-5, step_loss=0.0339] Steps:  13%|█▎        | 3168/24850 [1:14:18<8:54:57,  1.48s/it, lr=7e-5, step_loss=0.0339]Steps:  13%|█▎        | 3168/24850 [1:14:18<8:54:57,  1.48s/it, lr=7e-5, step_loss=0.0251]Steps:  13%|█▎        | 3169/24850 [1:14:20<8:54:06,  1.48s/it, lr=7e-5, step_loss=0.0251]Steps:  13%|█▎        | 3169/24850 [1:14:20<8:54:06,  1.48s/it, lr=7e-5, step_loss=0.0119]Steps:  13%|█▎        | 3170/24850 [1:14:21<8:53:23,  1.48s/it, lr=7e-5, step_loss=0.0119]Steps:  13%|█▎        | 3170/24850 [1:14:21<8:53:23,  1.48s/it, lr=7e-5, step_loss=0.00651]Steps:  13%|█▎        | 3171/24850 [1:14:23<8:50:48,  1.47s/it, lr=7e-5, step_loss=0.00651]Steps:  13%|█▎        | 3171/24850 [1:14:23<8:50:48,  1.47s/it, lr=7e-5, step_loss=0.136]  Steps:  13%|█▎        | 3172/24850 [1:14:24<8:50:43,  1.47s/it, lr=7e-5, step_loss=0.136]Steps:  13%|█▎        | 3172/24850 [1:14:24<8:50:43,  1.47s/it, lr=7e-5, step_loss=0.031]Steps:  13%|█▎        | 3173/24850 [1:14:26<9:11:15,  1.53s/it, lr=7e-5, step_loss=0.031]Steps:  13%|█▎        | 3173/24850 [1:14:26<9:11:15,  1.53s/it, lr=7e-5, step_loss=0.0285]Steps:  13%|█▎        | 3174/24850 [1:14:27<9:05:08,  1.51s/it, lr=7e-5, step_loss=0.0285]Steps:  13%|█▎        | 3174/24850 [1:14:27<9:05:08,  1.51s/it, lr=7e-5, step_loss=0.0218]Steps:  13%|█▎        | 3175/24850 [1:14:29<9:00:54,  1.50s/it, lr=7e-5, step_loss=0.0218]Steps:  13%|█▎        | 3175/24850 [1:14:29<9:00:54,  1.50s/it, lr=7e-5, step_loss=0.0317]Steps:  13%|█▎        | 3176/24850 [1:14:30<8:58:38,  1.49s/it, lr=7e-5, step_loss=0.0317]Steps:  13%|█▎        | 3176/24850 [1:14:30<8:58:38,  1.49s/it, lr=7e-5, step_loss=0.0303]Steps:  13%|█▎        | 3177/24850 [1:14:32<8:57:40,  1.49s/it, lr=7e-5, step_loss=0.0303]Steps:  13%|█▎        | 3177/24850 [1:14:32<8:57:40,  1.49s/it, lr=7e-5, step_loss=0.112] Steps:  13%|█▎        | 3178/24850 [1:14:33<8:57:05,  1.49s/it, lr=7e-5, step_loss=0.112]Steps:  13%|█▎        | 3178/24850 [1:14:33<8:57:05,  1.49s/it, lr=7e-5, step_loss=0.0666]torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) Steps:  13%|█▎        | 3179/24850 [1:14:35<8:54:32,  1.48s/it, lr=7e-5, step_loss=0.0666]Steps:  13%|█▎        | 3179/24850 [1:14:35<8:54:32,  1.48s/it, lr=7e-5, step_loss=0.000994]Steps:  13%|█▎        | 3180/24850 [1:14:36<8:55:01,  1.48s/it, lr=7e-5, step_loss=0.000994]Steps:  13%|█▎        | 3180/24850 [1:14:36<8:55:01,  1.48s/it, lr=7e-5, step_loss=0.0323]  Steps:  13%|█▎        | 3181/24850 [1:14:38<8:54:35,  1.48s/it, lr=7e-5, step_loss=0.0323]Steps:  13%|█▎        | 3181/24850 [1:14:38<8:54:35,  1.48s/it, lr=7e-5, step_loss=0.0204]Steps:  13%|█▎        | 3182/24850 [1:14:39<8:54:02,  1.48s/it, lr=7e-5, step_loss=0.0204]Steps:  13%|█▎        | 3182/24850 [1:14:39<8:54:02,  1.48s/it, lr=7e-5, step_loss=0.00216]Steps:  13%|█▎        | 3183/24850 [1:14:41<8:53:43,  1.48s/it, lr=7e-5, step_loss=0.00216]Steps:  13%|█▎        | 3183/24850 [1:14:41<8:53:43,  1.48s/it, lr=7e-5, step_loss=0.0161] Steps:  13%|█▎        | 3184/24850 [1:14:42<8:52:35,  1.47s/it, lr=7e-5, step_loss=0.0161]Steps:  13%|█▎        | 3184/24850 [1:14:42<8:52:35,  1.47s/it, lr=7e-5, step_loss=0.0715]Steps:  13%|█▎        | 3185/24850 [1:14:44<8:52:22,  1.47s/it, lr=7e-5, step_loss=0.0715]Steps:  13%|█▎        | 3185/24850 [1:14:44<8:52:22,  1.47s/it, lr=7e-5, step_loss=0.000837]Steps:  13%|█▎        | 3186/24850 [1:14:45<8:52:39,  1.48s/it, lr=7e-5, step_loss=0.000837]Steps:  13%|█▎        | 3186/24850 [1:14:45<8:52:39,  1.48s/it, lr=7e-5, step_loss=0.0821]  Steps:  13%|█▎        | 3187/24850 [1:14:47<8:51:51,  1.47s/it, lr=7e-5, step_loss=0.0821]Steps:  13%|█▎        | 3187/24850 [1:14:47<8:51:51,  1.47s/it, lr=7e-5, step_loss=0.0365]Steps:  13%|█▎        | 3188/24850 [1:14:48<8:51:08,  1.47s/it, lr=7e-5, step_loss=0.0365]Steps:  13%|█▎        | 3188/24850 [1:14:48<8:51:08,  1.47s/it, lr=7e-5, step_loss=0.0111]Steps:  13%|█▎        | 3189/24850 [1:14:50<8:51:42,  1.47s/it, lr=7e-5, step_loss=0.0111]Steps:  13%|█▎        | 3189/24850 [1:14:50<8:51:42,  1.47s/it, lr=7e-5, step_loss=0.0105]Steps:  13%|█▎        | 3190/24850 [1:14:51<8:52:58,  1.48s/it, lr=7e-5, step_loss=0.0105]Steps:  13%|█▎        | 3190/24850 [1:14:51<8:52:58,  1.48s/it, lr=7e-5, step_loss=0.0233]Steps:  13%|█▎        | 3191/24850 [1:14:53<8:54:37,  1.48s/it, lr=7e-5, step_loss=0.0233]Steps:  13%|█▎        | 3191/24850 [1:14:53<8:54:37,  1.48s/it, lr=7e-5, step_loss=0.0195]Steps:  13%|█▎        | 3192/24850 [1:14:54<8:53:41,  1.48s/it, lr=7e-5, step_loss=0.0195]Steps:  13%|█▎        | 3192/24850 [1:14:54<8:53:41,  1.48s/it, lr=7e-5, step_loss=0.0307]Steps:  13%|█▎        | 3193/24850 [1:14:56<8:52:47,  1.48s/it, lr=7e-5, step_loss=0.0307]Steps:  13%|█▎        | 3193/24850 [1:14:56<8:52:47,  1.48s/it, lr=7e-5, step_loss=0.003] Steps:  13%|█▎        | 3194/24850 [1:14:58<10:37:31,  1.77s/it, lr=7e-5, step_loss=0.003]Steps:  13%|█▎        | 3194/24850 [1:14:58<10:37:31,  1.77s/it, lr=7e-5, step_loss=0.0164]Steps:  13%|█▎        | 3195/24850 [1:14:59<10:07:25,  1.68s/it, lr=7e-5, step_loss=0.0164]Steps:  13%|█▎        | 3195/24850 [1:14:59<10:07:25,  1.68s/it, lr=7e-5, step_loss=0.0129]Steps:  13%|█▎        | 3196/24850 [1:15:01<9:43:46,  1.62s/it, lr=7e-5, step_loss=0.0129] Steps:  13%|█▎        | 3196/24850 [1:15:01<9:43:46,  1.62s/it, lr=7e-5, step_loss=0.0377]Steps:  13%|█▎        | 3197/24850 [1:15:02<9:28:36,  1.58s/it, lr=7e-5, step_loss=0.0377]Steps:  13%|█▎        | 3197/24850 [1:15:02<9:28:36,  1.58s/it, lr=7e-5, step_loss=0.00141]Steps:  13%|█▎        | 3198/24850 [1:15:04<9:15:46,  1.54s/it, lr=7e-5, step_loss=0.00141]Steps:  13%|█▎        | 3198/24850 [1:15:04<9:15:46,  1.54s/it, lr=7e-5, step_loss=0.0687] Steps:  13%|█▎        | 3199/24850 [1:15:05<9:09:17,  1.52s/it, lr=7e-5, step_loss=0.0687]Steps:  13%|█▎        | 3199/24850 [1:15:05<9:09:17,  1.52s/it, lr=7e-5, step_loss=0.0287]Steps:  13%|█▎        | 3200/24850 [1:15:07<9:01:34,  1.50s/it, lr=7e-5, step_loss=0.0287]Steps:  13%|█▎        | 3200/24850 [1:15:07<9:01:34,  1.50s/it, lr=7e-5, step_loss=0.000461]Steps:  13%|█▎        | 3201/24850 [1:15:08<8:57:12,  1.49s/it, lr=7e-5, step_loss=0.000461]Steps:  13%|█▎        | 3201/24850 [1:15:08<8:57:12,  1.49s/it, lr=7e-5, step_loss=0.0113]  Steps:  13%|█▎        | 3202/24850 [1:15:10<8:56:07,  1.49s/it, lr=7e-5, step_loss=0.0113]Steps:  13%|█▎        | 3202/24850 [1:15:10<8:56:07,  1.49s/it, lr=7e-5, step_loss=0.0853]Steps:  13%|█▎        | 3203/24850 [1:15:11<8:55:08,  1.48s/it, lr=7e-5, step_loss=0.0853]Steps:  13%|█▎        | 3203/24850 [1:15:11<8:55:08,  1.48s/it, lr=7e-5, step_loss=0.027] Steps:  13%|█▎        | 3204/24850 [1:15:13<8:50:57,  1.47s/it, lr=7e-5, step_loss=0.027]Steps:  13%|█▎        | 3204/24850 [1:15:13<8:50:57,  1.47s/it, lr=7e-5, step_loss=0.0304]Steps:  13%|█▎        | 3205/24850 [1:15:14<8:51:51,  1.47s/it, lr=7e-5, step_loss=0.0304]Steps:  13%|█▎        | 3205/24850 [1:15:14<8:51:51,  1.47s/it, lr=7e-5, step_loss=0.0451]torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:  13%|█▎        | 3206/24850 [1:15:16<8:52:01,  1.47s/it, lr=7e-5, step_loss=0.0451]Steps:  13%|█▎        | 3206/24850 [1:15:16<8:52:01,  1.47s/it, lr=7e-5, step_loss=0.00659]Steps:  13%|█▎        | 3207/24850 [1:15:17<8:53:24,  1.48s/it, lr=7e-5, step_loss=0.00659]Steps:  13%|█▎        | 3207/24850 [1:15:17<8:53:24,  1.48s/it, lr=7e-5, step_loss=0.0124] Steps:  13%|█▎        | 3208/24850 [1:15:19<8:51:34,  1.47s/it, lr=7e-5, step_loss=0.0124]Steps:  13%|█▎        | 3208/24850 [1:15:19<8:51:34,  1.47s/it, lr=7e-5, step_loss=0.0331]Steps:  13%|█▎        | 3209/24850 [1:15:20<8:52:27,  1.48s/it, lr=7e-5, step_loss=0.0331]Steps:  13%|█▎        | 3209/24850 [1:15:20<8:52:27,  1.48s/it, lr=7e-5, step_loss=0.0348]Steps:  13%|█▎        | 3210/24850 [1:15:22<8:50:46,  1.47s/it, lr=7e-5, step_loss=0.0348]Steps:  13%|█▎        | 3210/24850 [1:15:22<8:50:46,  1.47s/it, lr=7e-5, step_loss=0.0604]Steps:  13%|█▎        | 3211/24850 [1:15:23<8:50:09,  1.47s/it, lr=7e-5, step_loss=0.0604]Steps:  13%|█▎        | 3211/24850 [1:15:23<8:50:09,  1.47s/it, lr=7e-5, step_loss=0.0701]Steps:  13%|█▎        | 3212/24850 [1:15:24<8:49:25,  1.47s/it, lr=7e-5, step_loss=0.0701]Steps:  13%|█▎        | 3212/24850 [1:15:24<8:49:25,  1.47s/it, lr=7e-5, step_loss=0.00532]Steps:  13%|█▎        | 3213/24850 [1:15:26<8:49:26,  1.47s/it, lr=7e-5, step_loss=0.00532]Steps:  13%|█▎        | 3213/24850 [1:15:26<8:49:26,  1.47s/it, lr=7e-5, step_loss=0.0194] Steps:  13%|█▎        | 3214/24850 [1:15:27<8:49:22,  1.47s/it, lr=7e-5, step_loss=0.0194]Steps:  13%|█▎        | 3214/24850 [1:15:27<8:49:22,  1.47s/it, lr=7e-5, step_loss=0.0154]Steps:  13%|█▎        | 3215/24850 [1:15:29<8:49:23,  1.47s/it, lr=7e-5, step_loss=0.0154]Steps:  13%|█▎        | 3215/24850 [1:15:29<8:49:23,  1.47s/it, lr=7e-5, step_loss=0.0335]Steps:  13%|█▎        | 3216/24850 [1:15:30<8:48:26,  1.47s/it, lr=7e-5, step_loss=0.0335]Steps:  13%|█▎        | 3216/24850 [1:15:30<8:48:26,  1.47s/it, lr=7e-5, step_loss=0.0201]Steps:  13%|█▎        | 3217/24850 [1:15:32<8:46:27,  1.46s/it, lr=7e-5, step_loss=0.0201]Steps:  13%|█▎        | 3217/24850 [1:15:32<8:46:27,  1.46s/it, lr=7e-5, step_loss=0.0222]Steps:  13%|█▎        | 3218/24850 [1:15:33<8:47:55,  1.46s/it, lr=7e-5, step_loss=0.0222]Steps:  13%|█▎        | 3218/24850 [1:15:33<8:47:55,  1.46s/it, lr=7e-5, step_loss=0.004] Steps:  13%|█▎        | 3219/24850 [1:15:35<8:49:02,  1.47s/it, lr=7e-5, step_loss=0.004]Steps:  13%|█▎        | 3219/24850 [1:15:35<8:49:02,  1.47s/it, lr=7e-5, step_loss=0.14] Steps:  13%|█▎        | 3220/24850 [1:15:36<8:48:47,  1.47s/it, lr=7e-5, step_loss=0.14]Steps:  13%|█▎        | 3220/24850 [1:15:36<8:48:47,  1.47s/it, lr=7e-5, step_loss=0.0815]Steps:  13%|█▎        | 3221/24850 [1:15:38<8:49:00,  1.47s/it, lr=7e-5, step_loss=0.0815]Steps:  13%|█▎        | 3221/24850 [1:15:38<8:49:00,  1.47s/it, lr=7e-5, step_loss=0.00538]Steps:  13%|█▎        | 3222/24850 [1:15:39<8:48:00,  1.46s/it, lr=7e-5, step_loss=0.00538]Steps:  13%|█▎        | 3222/24850 [1:15:39<8:48:00,  1.46s/it, lr=7e-5, step_loss=0.00308]Steps:  13%|█▎        | 3223/24850 [1:15:41<8:48:40,  1.47s/it, lr=7e-5, step_loss=0.00308]Steps:  13%|█▎        | 3223/24850 [1:15:41<8:48:40,  1.47s/it, lr=7e-5, step_loss=0.0531] Steps:  13%|█▎        | 3224/24850 [1:15:42<8:48:13,  1.47s/it, lr=7e-5, step_loss=0.0531]Steps:  13%|█▎        | 3224/24850 [1:15:42<8:48:13,  1.47s/it, lr=7e-5, step_loss=0.0214]Steps:  13%|█▎        | 3225/24850 [1:15:43<8:48:31,  1.47s/it, lr=7e-5, step_loss=0.0214]Steps:  13%|█▎        | 3225/24850 [1:15:43<8:48:31,  1.47s/it, lr=7e-5, step_loss=0.0195]Steps:  13%|█▎        | 3226/24850 [1:15:45<8:48:53,  1.47s/it, lr=7e-5, step_loss=0.0195]Steps:  13%|█▎        | 3226/24850 [1:15:45<8:48:53,  1.47s/it, lr=7e-5, step_loss=0.00323]Steps:  13%|█▎        | 3227/24850 [1:15:46<8:47:42,  1.46s/it, lr=7e-5, step_loss=0.00323]Steps:  13%|█▎        | 3227/24850 [1:15:46<8:47:42,  1.46s/it, lr=7e-5, step_loss=0.0123] Steps:  13%|█▎        | 3228/24850 [1:15:48<8:49:35,  1.47s/it, lr=7e-5, step_loss=0.0123]Steps:  13%|█▎        | 3228/24850 [1:15:48<8:49:35,  1.47s/it, lr=7e-5, step_loss=0.0184]Steps:  13%|█▎        | 3229/24850 [1:15:49<8:51:13,  1.47s/it, lr=7e-5, step_loss=0.0184]Steps:  13%|█▎        | 3229/24850 [1:15:49<8:51:13,  1.47s/it, lr=7e-5, step_loss=0.0917]Steps:  13%|█▎        | 3230/24850 [1:15:51<8:50:24,  1.47s/it, lr=7e-5, step_loss=0.0917]Steps:  13%|█▎        | 3230/24850 [1:15:51<8:50:24,  1.47s/it, lr=7e-5, step_loss=0.0304]Steps:  13%|█▎        | 3231/24850 [1:15:52<8:50:04,  1.47s/it, lr=7e-5, step_loss=0.0304]Steps:  13%|█▎        | 3231/24850 [1:15:52<8:50:04,  1.47s/it, lr=7e-5, step_loss=0.0853]Steps:  13%|█▎        | 3232/24850 [1:15:54<8:49:22,  1.47s/it, lr=7e-5, step_loss=0.0853]Steps:  13%|█▎        | 3232/24850 [1:15:54<8:49:22,  1.47s/it, lr=7e-5, step_loss=0.00661]Steps:  13%|█▎        | 3233/24850 [1:15:55<8:49:26,  1.47s/it, lr=7e-5, step_loss=0.00661]Steps:  13%|█▎        | 3233/24850 [1:15:55<8:49:26,  1.47s/it, lr=7e-5, step_loss=0.0118] torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
Steps:  13%|█▎        | 3234/24850 [1:15:57<8:49:42,  1.47s/it, lr=7e-5, step_loss=0.0118]Steps:  13%|█▎        | 3234/24850 [1:15:57<8:49:42,  1.47s/it, lr=7e-5, step_loss=0.0301]Steps:  13%|█▎        | 3235/24850 [1:15:58<8:49:27,  1.47s/it, lr=7e-5, step_loss=0.0301]Steps:  13%|█▎        | 3235/24850 [1:15:58<8:49:27,  1.47s/it, lr=7e-5, step_loss=0.0421]Steps:  13%|█▎        | 3236/24850 [1:16:00<8:48:49,  1.47s/it, lr=7e-5, step_loss=0.0421]Steps:  13%|█▎        | 3236/24850 [1:16:00<8:48:49,  1.47s/it, lr=7e-5, step_loss=0.00532]Steps:  13%|█▎        | 3237/24850 [1:16:01<8:49:32,  1.47s/it, lr=7e-5, step_loss=0.00532]Steps:  13%|█▎        | 3237/24850 [1:16:01<8:49:32,  1.47s/it, lr=7e-5, step_loss=0.017]  Steps:  13%|█▎        | 3238/24850 [1:16:03<8:51:03,  1.47s/it, lr=7e-5, step_loss=0.017]Steps:  13%|█▎        | 3238/24850 [1:16:03<8:51:03,  1.47s/it, lr=7e-5, step_loss=0.0181]Steps:  13%|█▎        | 3239/24850 [1:16:04<8:51:52,  1.48s/it, lr=7e-5, step_loss=0.0181]Steps:  13%|█▎        | 3239/24850 [1:16:04<8:51:52,  1.48s/it, lr=7e-5, step_loss=0.0248]Steps:  13%|█▎        | 3240/24850 [1:16:06<8:50:17,  1.47s/it, lr=7e-5, step_loss=0.0248]Steps:  13%|█▎        | 3240/24850 [1:16:06<8:50:17,  1.47s/it, lr=7e-5, step_loss=0.00329]Steps:  13%|█▎        | 3241/24850 [1:16:07<8:49:05,  1.47s/it, lr=7e-5, step_loss=0.00329]Steps:  13%|█▎        | 3241/24850 [1:16:07<8:49:05,  1.47s/it, lr=7e-5, step_loss=0.0128] Steps:  13%|█▎        | 3242/24850 [1:16:08<8:48:39,  1.47s/it, lr=7e-5, step_loss=0.0128]Steps:  13%|█▎        | 3242/24850 [1:16:08<8:48:39,  1.47s/it, lr=7e-5, step_loss=0.0151]Steps:  13%|█▎        | 3243/24850 [1:16:10<8:47:19,  1.46s/it, lr=7e-5, step_loss=0.0151]Steps:  13%|█▎        | 3243/24850 [1:16:10<8:47:19,  1.46s/it, lr=7e-5, step_loss=0.0867]Steps:  13%|█▎        | 3244/24850 [1:16:12<10:32:53,  1.76s/it, lr=7e-5, step_loss=0.0867]Steps:  13%|█▎        | 3244/24850 [1:16:12<10:32:53,  1.76s/it, lr=7e-5, step_loss=0.0612]Steps:  13%|█▎        | 3245/24850 [1:16:14<10:03:01,  1.67s/it, lr=7e-5, step_loss=0.0612]Steps:  13%|█▎        | 3245/24850 [1:16:14<10:03:01,  1.67s/it, lr=7e-5, step_loss=0.0345]Steps:  13%|█▎        | 3246/24850 [1:16:15<9:41:40,  1.62s/it, lr=7e-5, step_loss=0.0345] Steps:  13%|█▎        | 3246/24850 [1:16:15<9:41:40,  1.62s/it, lr=7e-5, step_loss=0.0778]Steps:  13%|█▎        | 3247/24850 [1:16:17<9:25:55,  1.57s/it, lr=7e-5, step_loss=0.0778]Steps:  13%|█▎        | 3247/24850 [1:16:17<9:25:55,  1.57s/it, lr=7e-5, step_loss=0.025] Steps:  13%|█▎        | 3248/24850 [1:16:18<9:14:56,  1.54s/it, lr=7e-5, step_loss=0.025]Steps:  13%|█▎        | 3248/24850 [1:16:18<9:14:56,  1.54s/it, lr=7e-5, step_loss=0.00652]Steps:  13%|█▎        | 3249/24850 [1:16:20<9:05:27,  1.52s/it, lr=7e-5, step_loss=0.00652]Steps:  13%|█▎        | 3249/24850 [1:16:20<9:05:27,  1.52s/it, lr=7e-5, step_loss=0.0179] Steps:  13%|█▎        | 3250/24850 [1:16:21<9:00:37,  1.50s/it, lr=7e-5, step_loss=0.0179]Steps:  13%|█▎        | 3250/24850 [1:16:21<9:00:37,  1.50s/it, lr=7e-5, step_loss=0.00957]Steps:  13%|█▎        | 3251/24850 [1:16:23<8:56:22,  1.49s/it, lr=7e-5, step_loss=0.00957]Steps:  13%|█▎        | 3251/24850 [1:16:23<8:56:22,  1.49s/it, lr=7e-5, step_loss=0.00643]Steps:  13%|█▎        | 3252/24850 [1:16:24<8:53:54,  1.48s/it, lr=7e-5, step_loss=0.00643]Steps:  13%|█▎        | 3252/24850 [1:16:24<8:53:54,  1.48s/it, lr=7e-5, step_loss=0.146]  Steps:  13%|█▎        | 3253/24850 [1:16:26<8:52:22,  1.48s/it, lr=7e-5, step_loss=0.146]Steps:  13%|█▎        | 3253/24850 [1:16:26<8:52:22,  1.48s/it, lr=7e-5, step_loss=0.028]Steps:  13%|█▎        | 3254/24850 [1:16:27<8:48:50,  1.47s/it, lr=7e-5, step_loss=0.028]Steps:  13%|█▎        | 3254/24850 [1:16:27<8:48:50,  1.47s/it, lr=7e-5, step_loss=0.00271]Steps:  13%|█▎        | 3255/24850 [1:16:29<8:48:58,  1.47s/it, lr=7e-5, step_loss=0.00271]Steps:  13%|█▎        | 3255/24850 [1:16:29<8:48:58,  1.47s/it, lr=7e-5, step_loss=0.029]  Steps:  13%|█▎        | 3256/24850 [1:16:30<8:46:51,  1.46s/it, lr=7e-5, step_loss=0.029]Steps:  13%|█▎        | 3256/24850 [1:16:30<8:46:51,  1.46s/it, lr=7e-5, step_loss=0.0276]Steps:  13%|█▎        | 3257/24850 [1:16:31<8:46:56,  1.46s/it, lr=7e-5, step_loss=0.0276]Steps:  13%|█▎        | 3257/24850 [1:16:31<8:46:56,  1.46s/it, lr=7e-5, step_loss=0.0312]Steps:  13%|█▎        | 3258/24850 [1:16:33<8:49:42,  1.47s/it, lr=7e-5, step_loss=0.0312]Steps:  13%|█▎        | 3258/24850 [1:16:33<8:49:42,  1.47s/it, lr=7e-5, step_loss=0.00987]Steps:  13%|█▎        | 3259/24850 [1:16:34<8:47:57,  1.47s/it, lr=7e-5, step_loss=0.00987]Steps:  13%|█▎        | 3259/24850 [1:16:34<8:47:57,  1.47s/it, lr=7e-5, step_loss=0.0116] Steps:  13%|█▎        | 3260/24850 [1:16:36<8:49:54,  1.47s/it, lr=7e-5, step_loss=0.0116]Steps:  13%|█▎        | 3260/24850 [1:16:36<8:49:54,  1.47s/it, lr=7e-5, step_loss=0.014] (512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512)Steps:  13%|█▎        | 3261/24850 [1:16:37<8:48:51,  1.47s/it, lr=7e-5, step_loss=0.014]Steps:  13%|█▎        | 3261/24850 [1:16:37<8:48:51,  1.47s/it, lr=7e-5, step_loss=0.022]Steps:  13%|█▎        | 3262/24850 [1:16:39<8:48:55,  1.47s/it, lr=7e-5, step_loss=0.022]Steps:  13%|█▎        | 3262/24850 [1:16:39<8:48:55,  1.47s/it, lr=7e-5, step_loss=0.0346]Steps:  13%|█▎        | 3263/24850 [1:16:40<8:48:45,  1.47s/it, lr=7e-5, step_loss=0.0346]Steps:  13%|█▎        | 3263/24850 [1:16:40<8:48:45,  1.47s/it, lr=7e-5, step_loss=0.0106]Steps:  13%|█▎        | 3264/24850 [1:16:42<8:48:05,  1.47s/it, lr=7e-5, step_loss=0.0106]Steps:  13%|█▎        | 3264/24850 [1:16:42<8:48:05,  1.47s/it, lr=7e-5, step_loss=0.0108]Steps:  13%|█▎        | 3265/24850 [1:16:43<8:47:46,  1.47s/it, lr=7e-5, step_loss=0.0108]Steps:  13%|█▎        | 3265/24850 [1:16:43<8:47:46,  1.47s/it, lr=7e-5, step_loss=0.0788]Steps:  13%|█▎        | 3266/24850 [1:16:45<8:47:20,  1.47s/it, lr=7e-5, step_loss=0.0788]Steps:  13%|█▎        | 3266/24850 [1:16:45<8:47:20,  1.47s/it, lr=7e-5, step_loss=0.0274]Steps:  13%|█▎        | 3267/24850 [1:16:46<8:47:29,  1.47s/it, lr=7e-5, step_loss=0.0274]Steps:  13%|█▎        | 3267/24850 [1:16:46<8:47:29,  1.47s/it, lr=7e-5, step_loss=0.0137]Steps:  13%|█▎        | 3268/24850 [1:16:48<8:46:31,  1.46s/it, lr=7e-5, step_loss=0.0137]Steps:  13%|█▎        | 3268/24850 [1:16:48<8:46:31,  1.46s/it, lr=7e-5, step_loss=0.00962]Steps:  13%|█▎        | 3269/24850 [1:16:49<8:45:49,  1.46s/it, lr=7e-5, step_loss=0.00962]Steps:  13%|█▎        | 3269/24850 [1:16:49<8:45:49,  1.46s/it, lr=7e-5, step_loss=0.0502] Steps:  13%|█▎        | 3270/24850 [1:16:51<8:47:00,  1.47s/it, lr=7e-5, step_loss=0.0502]Steps:  13%|█▎        | 3270/24850 [1:16:51<8:47:00,  1.47s/it, lr=7e-5, step_loss=0.00948]Steps:  13%|█▎        | 3271/24850 [1:16:52<8:48:20,  1.47s/it, lr=7e-5, step_loss=0.00948]Steps:  13%|█▎        | 3271/24850 [1:16:52<8:48:20,  1.47s/it, lr=7e-5, step_loss=0.0355] Steps:  13%|█▎        | 3272/24850 [1:16:53<8:48:26,  1.47s/it, lr=7e-5, step_loss=0.0355]Steps:  13%|█▎        | 3272/24850 [1:16:53<8:48:26,  1.47s/it, lr=7e-5, step_loss=0.115] Steps:  13%|█▎        | 3273/24850 [1:16:55<8:48:32,  1.47s/it, lr=7e-5, step_loss=0.115]Steps:  13%|█▎        | 3273/24850 [1:16:55<8:48:32,  1.47s/it, lr=7e-5, step_loss=0.014]Steps:  13%|█▎        | 3274/24850 [1:16:56<8:47:57,  1.47s/it, lr=7e-5, step_loss=0.014]Steps:  13%|█▎        | 3274/24850 [1:16:56<8:47:57,  1.47s/it, lr=7e-5, step_loss=0.00761]Steps:  13%|█▎        | 3275/24850 [1:16:58<8:47:56,  1.47s/it, lr=7e-5, step_loss=0.00761]Steps:  13%|█▎        | 3275/24850 [1:16:58<8:47:56,  1.47s/it, lr=7e-5, step_loss=0.0178] Steps:  13%|█▎        | 3276/24850 [1:16:59<8:46:02,  1.46s/it, lr=7e-5, step_loss=0.0178]Steps:  13%|█▎        | 3276/24850 [1:16:59<8:46:02,  1.46s/it, lr=7e-5, step_loss=0.013] Steps:  13%|█▎        | 3277/24850 [1:17:01<8:47:07,  1.47s/it, lr=7e-5, step_loss=0.013]Steps:  13%|█▎        | 3277/24850 [1:17:01<8:47:07,  1.47s/it, lr=7e-5, step_loss=0.0107]Steps:  13%|█▎        | 3278/24850 [1:17:02<8:47:49,  1.47s/it, lr=7e-5, step_loss=0.0107]Steps:  13%|█▎        | 3278/24850 [1:17:02<8:47:49,  1.47s/it, lr=7e-5, step_loss=0.0244]Steps:  13%|█▎        | 3279/24850 [1:17:04<8:47:19,  1.47s/it, lr=7e-5, step_loss=0.0244]Steps:  13%|█▎        | 3279/24850 [1:17:04<8:47:19,  1.47s/it, lr=7e-5, step_loss=0.0462]Steps:  13%|█▎        | 3280/24850 [1:17:05<8:47:30,  1.47s/it, lr=7e-5, step_loss=0.0462]Steps:  13%|█▎        | 3280/24850 [1:17:05<8:47:30,  1.47s/it, lr=7e-5, step_loss=0.624] Steps:  13%|█▎        | 3281/24850 [1:17:07<8:46:34,  1.46s/it, lr=7e-5, step_loss=0.624]Steps:  13%|█▎        | 3281/24850 [1:17:07<8:46:34,  1.46s/it, lr=7e-5, step_loss=0.00152]Steps:  13%|█▎        | 3282/24850 [1:17:08<8:47:03,  1.47s/it, lr=7e-5, step_loss=0.00152]Steps:  13%|█▎        | 3282/24850 [1:17:08<8:47:03,  1.47s/it, lr=7e-5, step_loss=0.00621]Steps:  13%|█▎        | 3283/24850 [1:17:10<8:46:31,  1.46s/it, lr=7e-5, step_loss=0.00621]Steps:  13%|█▎        | 3283/24850 [1:17:10<8:46:31,  1.46s/it, lr=7e-5, step_loss=0.0565] Steps:  13%|█▎        | 3284/24850 [1:17:11<8:46:21,  1.46s/it, lr=7e-5, step_loss=0.0565]Steps:  13%|█▎        | 3284/24850 [1:17:11<8:46:21,  1.46s/it, lr=7e-5, step_loss=0.0289]Steps:  13%|█▎        | 3285/24850 [1:17:13<8:47:42,  1.47s/it, lr=7e-5, step_loss=0.0289]Steps:  13%|█▎        | 3285/24850 [1:17:13<8:47:42,  1.47s/it, lr=7e-5, step_loss=0.0307]Steps:  13%|█▎        | 3286/24850 [1:17:14<8:46:56,  1.47s/it, lr=7e-5, step_loss=0.0307]Steps:  13%|█▎        | 3286/24850 [1:17:14<8:46:56,  1.47s/it, lr=7e-5, step_loss=0.0611]Steps:  13%|█▎        | 3287/24850 [1:17:15<8:48:23,  1.47s/it, lr=7e-5, step_loss=0.0611]Steps:  13%|█▎        | 3287/24850 [1:17:15<8:48:23,  1.47s/it, lr=7e-5, step_loss=0.0141] torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:  13%|█▎        | 3288/24850 [1:17:17<8:50:06,  1.48s/it, lr=7e-5, step_loss=0.0141]Steps:  13%|█▎        | 3288/24850 [1:17:17<8:50:06,  1.48s/it, lr=7e-5, step_loss=0.422] Steps:  13%|█▎        | 3289/24850 [1:17:18<8:47:00,  1.47s/it, lr=7e-5, step_loss=0.422]Steps:  13%|█▎        | 3289/24850 [1:17:18<8:47:00,  1.47s/it, lr=7e-5, step_loss=0.0134]Steps:  13%|█▎        | 3290/24850 [1:17:20<8:48:11,  1.47s/it, lr=7e-5, step_loss=0.0134]Steps:  13%|█▎        | 3290/24850 [1:17:20<8:48:11,  1.47s/it, lr=7e-5, step_loss=0.0113]Steps:  13%|█▎        | 3291/24850 [1:17:21<8:47:04,  1.47s/it, lr=7e-5, step_loss=0.0113]Steps:  13%|█▎        | 3291/24850 [1:17:21<8:47:04,  1.47s/it, lr=7e-5, step_loss=0.0215]Steps:  13%|█▎        | 3292/24850 [1:17:23<8:46:11,  1.46s/it, lr=7e-5, step_loss=0.0215]Steps:  13%|█▎        | 3292/24850 [1:17:23<8:46:11,  1.46s/it, lr=7e-5, step_loss=0.0219]Steps:  13%|█▎        | 3293/24850 [1:17:24<8:49:03,  1.47s/it, lr=7e-5, step_loss=0.0219]Steps:  13%|█▎        | 3293/24850 [1:17:24<8:49:03,  1.47s/it, lr=7e-5, step_loss=0.031] Steps:  13%|█▎        | 3294/24850 [1:17:27<10:35:24,  1.77s/it, lr=7e-5, step_loss=0.031]Steps:  13%|█▎        | 3294/24850 [1:17:27<10:35:24,  1.77s/it, lr=7e-5, step_loss=0.0781]Steps:  13%|█▎        | 3295/24850 [1:17:28<10:01:43,  1.67s/it, lr=7e-5, step_loss=0.0781]Steps:  13%|█▎        | 3295/24850 [1:17:28<10:01:43,  1.67s/it, lr=7e-5, step_loss=0.00931]Steps:  13%|█▎        | 3296/24850 [1:17:30<9:38:19,  1.61s/it, lr=7e-5, step_loss=0.00931] Steps:  13%|█▎        | 3296/24850 [1:17:30<9:38:19,  1.61s/it, lr=7e-5, step_loss=0.0294] Steps:  13%|█▎        | 3297/24850 [1:17:31<9:22:22,  1.57s/it, lr=7e-5, step_loss=0.0294]Steps:  13%|█▎        | 3297/24850 [1:17:31<9:22:22,  1.57s/it, lr=7e-5, step_loss=0.0701]Steps:  13%|█▎        | 3298/24850 [1:17:33<9:11:50,  1.54s/it, lr=7e-5, step_loss=0.0701]Steps:  13%|█▎        | 3298/24850 [1:17:33<9:11:50,  1.54s/it, lr=7e-5, step_loss=0.0429]Steps:  13%|█▎        | 3299/24850 [1:17:34<9:04:02,  1.51s/it, lr=7e-5, step_loss=0.0429]Steps:  13%|█▎        | 3299/24850 [1:17:34<9:04:02,  1.51s/it, lr=7e-5, step_loss=0.0567]Steps:  13%|█▎        | 3300/24850 [1:17:36<8:59:13,  1.50s/it, lr=7e-5, step_loss=0.0567]Steps:  13%|█▎        | 3300/24850 [1:17:36<8:59:13,  1.50s/it, lr=7e-5, step_loss=0.01]  Steps:  13%|█▎        | 3301/24850 [1:17:37<8:55:36,  1.49s/it, lr=7e-5, step_loss=0.01]Steps:  13%|█▎        | 3301/24850 [1:17:37<8:55:36,  1.49s/it, lr=7e-5, step_loss=0.02]Steps:  13%|█▎        | 3302/24850 [1:17:38<8:51:17,  1.48s/it, lr=7e-5, step_loss=0.02]Steps:  13%|█▎        | 3302/24850 [1:17:38<8:51:17,  1.48s/it, lr=7e-5, step_loss=0.0737]Steps:  13%|█▎        | 3303/24850 [1:17:40<8:50:11,  1.48s/it, lr=7e-5, step_loss=0.0737]Steps:  13%|█▎        | 3303/24850 [1:17:40<8:50:11,  1.48s/it, lr=7e-5, step_loss=0.0639]Steps:  13%|█▎        | 3304/24850 [1:17:41<8:48:31,  1.47s/it, lr=7e-5, step_loss=0.0639]Steps:  13%|█▎        | 3304/24850 [1:17:41<8:48:31,  1.47s/it, lr=7e-5, step_loss=0.0142]Steps:  13%|█▎        | 3305/24850 [1:17:43<8:46:50,  1.47s/it, lr=7e-5, step_loss=0.0142]Steps:  13%|█▎        | 3305/24850 [1:17:43<8:46:50,  1.47s/it, lr=7e-5, step_loss=0.0244]Steps:  13%|█▎        | 3306/24850 [1:17:44<8:47:02,  1.47s/it, lr=7e-5, step_loss=0.0244]Steps:  13%|█▎        | 3306/24850 [1:17:44<8:47:02,  1.47s/it, lr=7e-5, step_loss=0.131] Steps:  13%|█▎        | 3307/24850 [1:17:46<8:46:54,  1.47s/it, lr=7e-5, step_loss=0.131]Steps:  13%|█▎        | 3307/24850 [1:17:46<8:46:54,  1.47s/it, lr=7e-5, step_loss=0.0965]Steps:  13%|█▎        | 3308/24850 [1:17:47<8:44:56,  1.46s/it, lr=7e-5, step_loss=0.0965]Steps:  13%|█▎        | 3308/24850 [1:17:47<8:44:56,  1.46s/it, lr=7e-5, step_loss=0.00182]Steps:  13%|█▎        | 3309/24850 [1:17:49<8:46:49,  1.47s/it, lr=7e-5, step_loss=0.00182]Steps:  13%|█▎        | 3309/24850 [1:17:49<8:46:49,  1.47s/it, lr=7e-5, step_loss=0.0315] Steps:  13%|█▎        | 3310/24850 [1:17:50<8:48:16,  1.47s/it, lr=7e-5, step_loss=0.0315]Steps:  13%|█▎        | 3310/24850 [1:17:50<8:48:16,  1.47s/it, lr=7e-5, step_loss=0.163] Steps:  13%|█▎        | 3311/24850 [1:17:52<8:48:11,  1.47s/it, lr=7e-5, step_loss=0.163]Steps:  13%|█▎        | 3311/24850 [1:17:52<8:48:11,  1.47s/it, lr=7e-5, step_loss=0.0329]Steps:  13%|█▎        | 3312/24850 [1:17:53<8:48:59,  1.47s/it, lr=7e-5, step_loss=0.0329]Steps:  13%|█▎        | 3312/24850 [1:17:53<8:48:59,  1.47s/it, lr=7e-5, step_loss=0.0219]Steps:  13%|█▎        | 3313/24850 [1:17:55<8:48:15,  1.47s/it, lr=7e-5, step_loss=0.0219]Steps:  13%|█▎        | 3313/24850 [1:17:55<8:48:15,  1.47s/it, lr=7e-5, step_loss=0.0137]Steps:  13%|█▎        | 3314/24850 [1:17:56<8:49:46,  1.48s/it, lr=7e-5, step_loss=0.0137]Steps:  13%|█▎        | 3314/24850 [1:17:56<8:49:46,  1.48s/it, lr=7e-5, step_loss=0.0164]torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  Steps:  13%|█▎        | 3315/24850 [1:17:58<8:51:04,  1.48s/it, lr=7e-5, step_loss=0.0164]Steps:  13%|█▎        | 3315/24850 [1:17:58<8:51:04,  1.48s/it, lr=7e-5, step_loss=0.0116]Steps:  13%|█▎        | 3316/24850 [1:17:59<8:49:27,  1.48s/it, lr=7e-5, step_loss=0.0116]Steps:  13%|█▎        | 3316/24850 [1:17:59<8:49:27,  1.48s/it, lr=7e-5, step_loss=0.346] Steps:  13%|█▎        | 3317/24850 [1:18:01<8:48:54,  1.47s/it, lr=7e-5, step_loss=0.346]Steps:  13%|█▎        | 3317/24850 [1:18:01<8:48:54,  1.47s/it, lr=7e-5, step_loss=0.192]Steps:  13%|█▎        | 3318/24850 [1:18:02<8:50:55,  1.48s/it, lr=7e-5, step_loss=0.192]Steps:  13%|█▎        | 3318/24850 [1:18:02<8:50:55,  1.48s/it, lr=7e-5, step_loss=0.0257]Steps:  13%|█▎        | 3319/24850 [1:18:03<8:48:34,  1.47s/it, lr=7e-5, step_loss=0.0257]Steps:  13%|█▎        | 3319/24850 [1:18:03<8:48:34,  1.47s/it, lr=7e-5, step_loss=0.0059]Steps:  13%|█▎        | 3320/24850 [1:18:05<8:46:51,  1.47s/it, lr=7e-5, step_loss=0.0059]Steps:  13%|█▎        | 3320/24850 [1:18:05<8:46:51,  1.47s/it, lr=7e-5, step_loss=0.00846]Steps:  13%|█▎        | 3321/24850 [1:18:06<8:45:39,  1.46s/it, lr=7e-5, step_loss=0.00846]Steps:  13%|█▎        | 3321/24850 [1:18:06<8:45:39,  1.46s/it, lr=7e-5, step_loss=0.00343]Steps:  13%|█▎        | 3322/24850 [1:18:08<8:46:25,  1.47s/it, lr=7e-5, step_loss=0.00343]Steps:  13%|█▎        | 3322/24850 [1:18:08<8:46:25,  1.47s/it, lr=7e-5, step_loss=0.0365] Steps:  13%|█▎        | 3323/24850 [1:18:09<8:45:57,  1.47s/it, lr=7e-5, step_loss=0.0365]Steps:  13%|█▎        | 3323/24850 [1:18:09<8:45:57,  1.47s/it, lr=7e-5, step_loss=0.0547]Steps:  13%|█▎        | 3324/24850 [1:18:11<8:45:34,  1.46s/it, lr=7e-5, step_loss=0.0547]Steps:  13%|█▎        | 3324/24850 [1:18:11<8:45:34,  1.46s/it, lr=7e-5, step_loss=0.0108]Steps:  13%|█▎        | 3325/24850 [1:18:12<8:45:16,  1.46s/it, lr=7e-5, step_loss=0.0108]Steps:  13%|█▎        | 3325/24850 [1:18:12<8:45:16,  1.46s/it, lr=7e-5, step_loss=0.132] Steps:  13%|█▎        | 3326/24850 [1:18:14<8:44:56,  1.46s/it, lr=7e-5, step_loss=0.132]Steps:  13%|█▎        | 3326/24850 [1:18:14<8:44:56,  1.46s/it, lr=7e-5, step_loss=0.0202]Steps:  13%|█▎        | 3327/24850 [1:18:15<8:46:18,  1.47s/it, lr=7e-5, step_loss=0.0202]Steps:  13%|█▎        | 3327/24850 [1:18:15<8:46:18,  1.47s/it, lr=7e-5, step_loss=0.112] Steps:  13%|█▎        | 3328/24850 [1:18:17<8:47:39,  1.47s/it, lr=7e-5, step_loss=0.112]Steps:  13%|█▎        | 3328/24850 [1:18:17<8:47:39,  1.47s/it, lr=7e-5, step_loss=0.0989]Steps:  13%|█▎        | 3329/24850 [1:18:18<8:47:50,  1.47s/it, lr=7e-5, step_loss=0.0989]Steps:  13%|█▎        | 3329/24850 [1:18:18<8:47:50,  1.47s/it, lr=7e-5, step_loss=0.0371]Steps:  13%|█▎        | 3330/24850 [1:18:20<8:48:03,  1.47s/it, lr=7e-5, step_loss=0.0371]Steps:  13%|█▎        | 3330/24850 [1:18:20<8:48:03,  1.47s/it, lr=7e-5, step_loss=0.0409]Steps:  13%|█▎        | 3331/24850 [1:18:21<9:05:50,  1.52s/it, lr=7e-5, step_loss=0.0409]Steps:  13%|█▎        | 3331/24850 [1:18:21<9:05:50,  1.52s/it, lr=7e-5, step_loss=0.0779]Steps:  13%|█▎        | 3332/24850 [1:18:23<8:59:25,  1.50s/it, lr=7e-5, step_loss=0.0779]Steps:  13%|█▎        | 3332/24850 [1:18:23<8:59:25,  1.50s/it, lr=7e-5, step_loss=0.0172]Steps:  13%|█▎        | 3333/24850 [1:18:24<8:55:28,  1.49s/it, lr=7e-5, step_loss=0.0172]Steps:  13%|█▎        | 3333/24850 [1:18:24<8:55:28,  1.49s/it, lr=7e-5, step_loss=0.0248]Steps:  13%|█▎        | 3334/24850 [1:18:26<8:52:56,  1.49s/it, lr=7e-5, step_loss=0.0248]Steps:  13%|█▎        | 3334/24850 [1:18:26<8:52:56,  1.49s/it, lr=7e-5, step_loss=0.0207]Steps:  13%|█▎        | 3335/24850 [1:18:27<8:49:35,  1.48s/it, lr=7e-5, step_loss=0.0207]Steps:  13%|█▎        | 3335/24850 [1:18:27<8:49:35,  1.48s/it, lr=7e-5, step_loss=0.0342]Steps:  13%|█▎        | 3336/24850 [1:18:29<8:49:28,  1.48s/it, lr=7e-5, step_loss=0.0342]Steps:  13%|█▎        | 3336/24850 [1:18:29<8:49:28,  1.48s/it, lr=7e-5, step_loss=0.0172]Steps:  13%|█▎        | 3337/24850 [1:18:30<8:47:31,  1.47s/it, lr=7e-5, step_loss=0.0172]Steps:  13%|█▎        | 3337/24850 [1:18:30<8:47:31,  1.47s/it, lr=7e-5, step_loss=0.0664]Steps:  13%|█▎        | 3338/24850 [1:18:32<8:48:13,  1.47s/it, lr=7e-5, step_loss=0.0664]Steps:  13%|█▎        | 3338/24850 [1:18:32<8:48:13,  1.47s/it, lr=7e-5, step_loss=0.00256]Steps:  13%|█▎        | 3339/24850 [1:18:33<8:48:08,  1.47s/it, lr=7e-5, step_loss=0.00256]Steps:  13%|█▎        | 3339/24850 [1:18:33<8:48:08,  1.47s/it, lr=7e-5, step_loss=0.00244]Steps:  13%|█▎        | 3340/24850 [1:18:34<8:51:57,  1.48s/it, lr=7e-5, step_loss=0.00244]Steps:  13%|█▎        | 3340/24850 [1:18:34<8:51:57,  1.48s/it, lr=7e-5, step_loss=0.00447]Steps:  13%|█▎        | 3341/24850 [1:18:36<8:50:22,  1.48s/it, lr=7e-5, step_loss=0.00447]Steps:  13%|█▎        | 3341/24850 [1:18:36<8:50:22,  1.48s/it, lr=7e-5, step_loss=0.0124] Steps:  13%|█▎        | 3342/24850 [1:18:37<8:48:47,  1.48s/it, lr=7e-5, step_loss=0.0124]Steps:  13%|█▎        | 3342/24850 [1:18:37<8:48:47,  1.48s/it, lr=7e-5, step_loss=0.0159]mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:  13%|█▎        | 3343/24850 [1:18:39<8:49:15,  1.48s/it, lr=7e-5, step_loss=0.0159]Steps:  13%|█▎        | 3343/24850 [1:18:39<8:49:15,  1.48s/it, lr=7e-5, step_loss=0.0124]Steps:  13%|█▎        | 3344/24850 [1:18:41<10:31:53,  1.76s/it, lr=7e-5, step_loss=0.0124]Steps:  13%|█▎        | 3344/24850 [1:18:41<10:31:53,  1.76s/it, lr=7e-5, step_loss=0.0147]Steps:  13%|█▎        | 3345/24850 [1:18:43<10:04:02,  1.69s/it, lr=7e-5, step_loss=0.0147]Steps:  13%|█▎        | 3345/24850 [1:18:43<10:04:02,  1.69s/it, lr=7e-5, step_loss=0.0038]Steps:  13%|█▎        | 3346/24850 [1:18:44<9:43:30,  1.63s/it, lr=7e-5, step_loss=0.0038] Steps:  13%|█▎        | 3346/24850 [1:18:44<9:43:30,  1.63s/it, lr=7e-5, step_loss=0.037] Steps:  13%|█▎        | 3347/24850 [1:18:46<9:28:45,  1.59s/it, lr=7e-5, step_loss=0.037]Steps:  13%|█▎        | 3347/24850 [1:18:46<9:28:45,  1.59s/it, lr=7e-5, step_loss=0.0212]Steps:  13%|█▎        | 3348/24850 [1:18:47<9:15:38,  1.55s/it, lr=7e-5, step_loss=0.0212]Steps:  13%|█▎        | 3348/24850 [1:18:47<9:15:38,  1.55s/it, lr=7e-5, step_loss=0.177] Steps:  13%|█▎        | 3349/24850 [1:18:49<9:07:15,  1.53s/it, lr=7e-5, step_loss=0.177]Steps:  13%|█▎        | 3349/24850 [1:18:49<9:07:15,  1.53s/it, lr=7e-5, step_loss=0.0021]Steps:  13%|█▎        | 3350/24850 [1:18:50<9:01:39,  1.51s/it, lr=7e-5, step_loss=0.0021]Steps:  13%|█▎        | 3350/24850 [1:18:50<9:01:39,  1.51s/it, lr=7e-5, step_loss=0.0113]Steps:  13%|█▎        | 3351/24850 [1:18:52<8:57:00,  1.50s/it, lr=7e-5, step_loss=0.0113]Steps:  13%|█▎        | 3351/24850 [1:18:52<8:57:00,  1.50s/it, lr=7e-5, step_loss=0.18]  Steps:  13%|█▎        | 3352/24850 [1:18:53<8:54:10,  1.49s/it, lr=7e-5, step_loss=0.18]Steps:  13%|█▎        | 3352/24850 [1:18:53<8:54:10,  1.49s/it, lr=7e-5, step_loss=0.0258]Steps:  13%|█▎        | 3353/24850 [1:18:55<8:51:04,  1.48s/it, lr=7e-5, step_loss=0.0258]Steps:  13%|█▎        | 3353/24850 [1:18:55<8:51:04,  1.48s/it, lr=7e-5, step_loss=0.00272]Steps:  13%|█▎        | 3354/24850 [1:18:56<8:48:57,  1.48s/it, lr=7e-5, step_loss=0.00272]Steps:  13%|█▎        | 3354/24850 [1:18:56<8:48:57,  1.48s/it, lr=7e-5, step_loss=0.119]  Steps:  14%|█▎        | 3355/24850 [1:18:58<8:47:58,  1.47s/it, lr=7e-5, step_loss=0.119]Steps:  14%|█▎        | 3355/24850 [1:18:58<8:47:58,  1.47s/it, lr=7e-5, step_loss=0.0565]Steps:  14%|█▎        | 3356/24850 [1:18:59<8:45:49,  1.47s/it, lr=7e-5, step_loss=0.0565]Steps:  14%|█▎        | 3356/24850 [1:18:59<8:45:49,  1.47s/it, lr=7e-5, step_loss=0.00105]Steps:  14%|█▎        | 3357/24850 [1:19:00<8:45:23,  1.47s/it, lr=7e-5, step_loss=0.00105]Steps:  14%|█▎        | 3357/24850 [1:19:00<8:45:23,  1.47s/it, lr=7e-5, step_loss=0.00725]Steps:  14%|█▎        | 3358/24850 [1:19:02<8:45:37,  1.47s/it, lr=7e-5, step_loss=0.00725]Steps:  14%|█▎        | 3358/24850 [1:19:02<8:45:37,  1.47s/it, lr=7e-5, step_loss=0.0791] Steps:  14%|█▎        | 3359/24850 [1:19:03<8:45:55,  1.47s/it, lr=7e-5, step_loss=0.0791]Steps:  14%|█▎        | 3359/24850 [1:19:03<8:45:55,  1.47s/it, lr=7e-5, step_loss=0.0694]Steps:  14%|█▎        | 3360/24850 [1:19:05<8:45:42,  1.47s/it, lr=7e-5, step_loss=0.0694]Steps:  14%|█▎        | 3360/24850 [1:19:05<8:45:42,  1.47s/it, lr=7e-5, step_loss=0.00401]Steps:  14%|█▎        | 3361/24850 [1:19:06<8:44:33,  1.46s/it, lr=7e-5, step_loss=0.00401]Steps:  14%|█▎        | 3361/24850 [1:19:06<8:44:33,  1.46s/it, lr=7e-5, step_loss=0.0267] Steps:  14%|█▎        | 3362/24850 [1:19:08<8:45:03,  1.47s/it, lr=7e-5, step_loss=0.0267]Steps:  14%|█▎        | 3362/24850 [1:19:08<8:45:03,  1.47s/it, lr=7e-5, step_loss=0.0338]Steps:  14%|█▎        | 3363/24850 [1:19:09<8:45:50,  1.47s/it, lr=7e-5, step_loss=0.0338]Steps:  14%|█▎        | 3363/24850 [1:19:09<8:45:50,  1.47s/it, lr=7e-5, step_loss=0.0317]Steps:  14%|█▎        | 3364/24850 [1:19:11<8:45:17,  1.47s/it, lr=7e-5, step_loss=0.0317]Steps:  14%|█▎        | 3364/24850 [1:19:11<8:45:17,  1.47s/it, lr=7e-5, step_loss=0.0723]Steps:  14%|█▎        | 3365/24850 [1:19:12<8:46:39,  1.47s/it, lr=7e-5, step_loss=0.0723]Steps:  14%|█▎        | 3365/24850 [1:19:12<8:46:39,  1.47s/it, lr=7e-5, step_loss=0.0175]Steps:  14%|█▎        | 3366/24850 [1:19:14<8:46:19,  1.47s/it, lr=7e-5, step_loss=0.0175]Steps:  14%|█▎        | 3366/24850 [1:19:14<8:46:19,  1.47s/it, lr=7e-5, step_loss=0.108] Steps:  14%|█▎        | 3367/24850 [1:19:15<8:45:52,  1.47s/it, lr=7e-5, step_loss=0.108]Steps:  14%|█▎        | 3367/24850 [1:19:15<8:45:52,  1.47s/it, lr=7e-5, step_loss=0.0489]Steps:  14%|█▎        | 3368/24850 [1:19:17<8:44:52,  1.47s/it, lr=7e-5, step_loss=0.0489]Steps:  14%|█▎        | 3368/24850 [1:19:17<8:44:52,  1.47s/it, lr=7e-5, step_loss=0.0129]Steps:  14%|█▎        | 3369/24850 [1:19:18<8:45:45,  1.47s/it, lr=7e-5, step_loss=0.0129]Steps:  14%|█▎        | 3369/24850 [1:19:18<8:45:45,  1.47s/it, lr=7e-5, step_loss=0.0305]torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) Steps:  14%|█▎        | 3370/24850 [1:19:20<8:46:51,  1.47s/it, lr=7e-5, step_loss=0.0305]Steps:  14%|█▎        | 3370/24850 [1:19:20<8:46:51,  1.47s/it, lr=7e-5, step_loss=0.0586]Steps:  14%|█▎        | 3371/24850 [1:19:21<8:46:52,  1.47s/it, lr=7e-5, step_loss=0.0586]Steps:  14%|█▎        | 3371/24850 [1:19:21<8:46:52,  1.47s/it, lr=7e-5, step_loss=0.00678]Steps:  14%|█▎        | 3372/24850 [1:19:23<8:46:30,  1.47s/it, lr=7e-5, step_loss=0.00678]Steps:  14%|█▎        | 3372/24850 [1:19:23<8:46:30,  1.47s/it, lr=7e-5, step_loss=0.0417] Steps:  14%|█▎        | 3373/24850 [1:19:24<8:45:57,  1.47s/it, lr=7e-5, step_loss=0.0417]Steps:  14%|█▎        | 3373/24850 [1:19:24<8:45:57,  1.47s/it, lr=7e-5, step_loss=0.036] Steps:  14%|█▎        | 3374/24850 [1:19:25<8:45:43,  1.47s/it, lr=7e-5, step_loss=0.036]Steps:  14%|█▎        | 3374/24850 [1:19:25<8:45:43,  1.47s/it, lr=7e-5, step_loss=0.0533]Steps:  14%|█▎        | 3375/24850 [1:19:27<8:47:55,  1.47s/it, lr=7e-5, step_loss=0.0533]Steps:  14%|█▎        | 3375/24850 [1:19:27<8:47:55,  1.47s/it, lr=7e-5, step_loss=0.0555]Steps:  14%|█▎        | 3376/24850 [1:19:28<8:46:22,  1.47s/it, lr=7e-5, step_loss=0.0555]Steps:  14%|█▎        | 3376/24850 [1:19:28<8:46:22,  1.47s/it, lr=7e-5, step_loss=0.0591]Steps:  14%|█▎        | 3377/24850 [1:19:30<8:46:23,  1.47s/it, lr=7e-5, step_loss=0.0591]Steps:  14%|█▎        | 3377/24850 [1:19:30<8:46:23,  1.47s/it, lr=7e-5, step_loss=0.0214]Steps:  14%|█▎        | 3378/24850 [1:19:31<8:44:52,  1.47s/it, lr=7e-5, step_loss=0.0214]Steps:  14%|█▎        | 3378/24850 [1:19:31<8:44:52,  1.47s/it, lr=7e-5, step_loss=0.0167]Steps:  14%|█▎        | 3379/24850 [1:19:33<8:45:15,  1.47s/it, lr=7e-5, step_loss=0.0167]Steps:  14%|█▎        | 3379/24850 [1:19:33<8:45:15,  1.47s/it, lr=7e-5, step_loss=0.02]  Steps:  14%|█▎        | 3380/24850 [1:19:34<8:44:31,  1.47s/it, lr=7e-5, step_loss=0.02]Steps:  14%|█▎        | 3380/24850 [1:19:34<8:44:31,  1.47s/it, lr=7e-5, step_loss=0.224]Steps:  14%|█▎        | 3381/24850 [1:19:36<8:45:07,  1.47s/it, lr=7e-5, step_loss=0.224]Steps:  14%|█▎        | 3381/24850 [1:19:36<8:45:07,  1.47s/it, lr=7e-5, step_loss=0.0726]Steps:  14%|█▎        | 3382/24850 [1:19:37<8:46:00,  1.47s/it, lr=7e-5, step_loss=0.0726]Steps:  14%|█▎        | 3382/24850 [1:19:37<8:46:00,  1.47s/it, lr=7e-5, step_loss=0.00108]Steps:  14%|█▎        | 3383/24850 [1:19:39<8:46:45,  1.47s/it, lr=7e-5, step_loss=0.00108]Steps:  14%|█▎        | 3383/24850 [1:19:39<8:46:45,  1.47s/it, lr=7e-5, step_loss=0.0377] Steps:  14%|█▎        | 3384/24850 [1:19:40<8:48:46,  1.48s/it, lr=7e-5, step_loss=0.0377]Steps:  14%|█▎        | 3384/24850 [1:19:40<8:48:46,  1.48s/it, lr=7e-5, step_loss=0.0571]Steps:  14%|█▎        | 3385/24850 [1:19:42<8:48:18,  1.48s/it, lr=7e-5, step_loss=0.0571]Steps:  14%|█▎        | 3385/24850 [1:19:42<8:48:18,  1.48s/it, lr=7e-5, step_loss=0.107] Steps:  14%|█▎        | 3386/24850 [1:19:43<8:53:45,  1.49s/it, lr=7e-5, step_loss=0.107]Steps:  14%|█▎        | 3386/24850 [1:19:43<8:53:45,  1.49s/it, lr=7e-5, step_loss=0.02] Steps:  14%|█▎        | 3387/24850 [1:19:45<8:51:31,  1.49s/it, lr=7e-5, step_loss=0.02]Steps:  14%|█▎        | 3387/24850 [1:19:45<8:51:31,  1.49s/it, lr=7e-5, step_loss=0.00688]Steps:  14%|█▎        | 3388/24850 [1:19:46<8:50:32,  1.48s/it, lr=7e-5, step_loss=0.00688]Steps:  14%|█▎        | 3388/24850 [1:19:46<8:50:32,  1.48s/it, lr=7e-5, step_loss=0.088]  Steps:  14%|█▎        | 3389/24850 [1:19:48<8:50:29,  1.48s/it, lr=7e-5, step_loss=0.088]Steps:  14%|█▎        | 3389/24850 [1:19:48<8:50:29,  1.48s/it, lr=7e-5, step_loss=0.00857]Steps:  14%|█▎        | 3390/24850 [1:19:49<8:49:12,  1.48s/it, lr=7e-5, step_loss=0.00857]Steps:  14%|█▎        | 3390/24850 [1:19:49<8:49:12,  1.48s/it, lr=7e-5, step_loss=0.0157] Steps:  14%|█▎        | 3391/24850 [1:19:51<8:48:26,  1.48s/it, lr=7e-5, step_loss=0.0157]Steps:  14%|█▎        | 3391/24850 [1:19:51<8:48:26,  1.48s/it, lr=7e-5, step_loss=0.0411]Steps:  14%|█▎        | 3392/24850 [1:19:52<8:45:25,  1.47s/it, lr=7e-5, step_loss=0.0411]Steps:  14%|█▎        | 3392/24850 [1:19:52<8:45:25,  1.47s/it, lr=7e-5, step_loss=0.00163]Steps:  14%|█▎        | 3393/24850 [1:19:53<8:45:26,  1.47s/it, lr=7e-5, step_loss=0.00163]Steps:  14%|█▎        | 3393/24850 [1:19:53<8:45:26,  1.47s/it, lr=7e-5, step_loss=0.0129] Steps:  14%|█▎        | 3394/24850 [1:19:56<10:32:00,  1.77s/it, lr=7e-5, step_loss=0.0129]Steps:  14%|█▎        | 3394/24850 [1:19:56<10:32:00,  1.77s/it, lr=7e-5, step_loss=0.026] Steps:  14%|█▎        | 3395/24850 [1:19:57<9:59:14,  1.68s/it, lr=7e-5, step_loss=0.026] Steps:  14%|█▎        | 3395/24850 [1:19:57<9:59:14,  1.68s/it, lr=7e-5, step_loss=0.0109]Steps:  14%|█▎        | 3396/24850 [1:19:59<9:37:12,  1.61s/it, lr=7e-5, step_loss=0.0109]Steps:  14%|█▎        | 3396/24850 [1:19:59<9:37:12,  1.61s/it, lr=7e-5, step_loss=0.0142]torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:  14%|█▎        | 3397/24850 [1:20:00<9:22:46,  1.57s/it, lr=7e-5, step_loss=0.0142]Steps:  14%|█▎        | 3397/24850 [1:20:00<9:22:46,  1.57s/it, lr=7e-5, step_loss=0.379] Steps:  14%|█▎        | 3398/24850 [1:20:02<9:14:36,  1.55s/it, lr=7e-5, step_loss=0.379]Steps:  14%|█▎        | 3398/24850 [1:20:02<9:14:36,  1.55s/it, lr=7e-5, step_loss=0.175]Steps:  14%|█▎        | 3399/24850 [1:20:03<9:08:28,  1.53s/it, lr=7e-5, step_loss=0.175]Steps:  14%|█▎        | 3399/24850 [1:20:03<9:08:28,  1.53s/it, lr=7e-5, step_loss=0.0212]Steps:  14%|█▎        | 3400/24850 [1:20:05<9:02:04,  1.52s/it, lr=7e-5, step_loss=0.0212]Steps:  14%|█▎        | 3400/24850 [1:20:05<9:02:04,  1.52s/it, lr=7e-5, step_loss=0.0172]Steps:  14%|█▎        | 3401/24850 [1:20:06<8:56:20,  1.50s/it, lr=7e-5, step_loss=0.0172]Steps:  14%|█▎        | 3401/24850 [1:20:06<8:56:20,  1.50s/it, lr=7e-5, step_loss=0.00654]Steps:  14%|█▎        | 3402/24850 [1:20:08<8:52:19,  1.49s/it, lr=7e-5, step_loss=0.00654]Steps:  14%|█▎        | 3402/24850 [1:20:08<8:52:19,  1.49s/it, lr=7e-5, step_loss=0.0618] Steps:  14%|█▎        | 3403/24850 [1:20:09<8:50:43,  1.48s/it, lr=7e-5, step_loss=0.0618]Steps:  14%|█▎        | 3403/24850 [1:20:09<8:50:43,  1.48s/it, lr=7e-5, step_loss=0.00971]Steps:  14%|█▎        | 3404/24850 [1:20:11<8:48:06,  1.48s/it, lr=7e-5, step_loss=0.00971]Steps:  14%|█▎        | 3404/24850 [1:20:11<8:48:06,  1.48s/it, lr=7e-5, step_loss=0.000471]Steps:  14%|█▎        | 3405/24850 [1:20:12<8:46:32,  1.47s/it, lr=7e-5, step_loss=0.000471]Steps:  14%|█▎        | 3405/24850 [1:20:12<8:46:32,  1.47s/it, lr=7e-5, step_loss=0.0417]  Steps:  14%|█▎        | 3406/24850 [1:20:14<8:48:02,  1.48s/it, lr=7e-5, step_loss=0.0417]Steps:  14%|█▎        | 3406/24850 [1:20:14<8:48:02,  1.48s/it, lr=7e-5, step_loss=0.02]  Steps:  14%|█▎        | 3407/24850 [1:20:15<8:47:25,  1.48s/it, lr=7e-5, step_loss=0.02]Steps:  14%|█▎        | 3407/24850 [1:20:15<8:47:25,  1.48s/it, lr=7e-5, step_loss=0.191]Steps:  14%|█▎        | 3408/24850 [1:20:17<8:47:13,  1.48s/it, lr=7e-5, step_loss=0.191]Steps:  14%|█▎        | 3408/24850 [1:20:17<8:47:13,  1.48s/it, lr=7e-5, step_loss=0.1]  Steps:  14%|█▎        | 3409/24850 [1:20:18<8:47:48,  1.48s/it, lr=7e-5, step_loss=0.1]Steps:  14%|█▎        | 3409/24850 [1:20:18<8:47:48,  1.48s/it, lr=7e-5, step_loss=0.0012]Steps:  14%|█▎        | 3410/24850 [1:20:20<8:45:37,  1.47s/it, lr=7e-5, step_loss=0.0012]Steps:  14%|█▎        | 3410/24850 [1:20:20<8:45:37,  1.47s/it, lr=7e-5, step_loss=0.000448]Steps:  14%|█▎        | 3411/24850 [1:20:21<8:44:21,  1.47s/it, lr=7e-5, step_loss=0.000448]Steps:  14%|█▎        | 3411/24850 [1:20:21<8:44:21,  1.47s/it, lr=7e-5, step_loss=0.00446] Steps:  14%|█▎        | 3412/24850 [1:20:22<8:42:29,  1.46s/it, lr=7e-5, step_loss=0.00446]Steps:  14%|█▎        | 3412/24850 [1:20:22<8:42:29,  1.46s/it, lr=7e-5, step_loss=0.00323]Steps:  14%|█▎        | 3413/24850 [1:20:24<8:44:13,  1.47s/it, lr=7e-5, step_loss=0.00323]Steps:  14%|█▎        | 3413/24850 [1:20:24<8:44:13,  1.47s/it, lr=7e-5, step_loss=0.0434] Steps:  14%|█▎        | 3414/24850 [1:20:25<8:45:19,  1.47s/it, lr=7e-5, step_loss=0.0434]Steps:  14%|█▎        | 3414/24850 [1:20:25<8:45:19,  1.47s/it, lr=7e-5, step_loss=0.0344]Steps:  14%|█▎        | 3415/24850 [1:20:27<8:45:59,  1.47s/it, lr=7e-5, step_loss=0.0344]Steps:  14%|█▎        | 3415/24850 [1:20:27<8:45:59,  1.47s/it, lr=7e-5, step_loss=0.0827]Steps:  14%|█▎        | 3416/24850 [1:20:28<8:46:24,  1.47s/it, lr=7e-5, step_loss=0.0827]Steps:  14%|█▎        | 3416/24850 [1:20:28<8:46:24,  1.47s/it, lr=7e-5, step_loss=0.0366]Steps:  14%|█▍        | 3417/24850 [1:20:30<8:45:19,  1.47s/it, lr=7e-5, step_loss=0.0366]Steps:  14%|█▍        | 3417/24850 [1:20:30<8:45:19,  1.47s/it, lr=7e-5, step_loss=0.0257]Steps:  14%|█▍        | 3418/24850 [1:20:31<9:03:39,  1.52s/it, lr=7e-5, step_loss=0.0257]Steps:  14%|█▍        | 3418/24850 [1:20:31<9:03:39,  1.52s/it, lr=7e-5, step_loss=0.0111]Steps:  14%|█▍        | 3419/24850 [1:20:33<8:58:23,  1.51s/it, lr=7e-5, step_loss=0.0111]Steps:  14%|█▍        | 3419/24850 [1:20:33<8:58:23,  1.51s/it, lr=7e-5, step_loss=0.0173]Steps:  14%|█▍        | 3420/24850 [1:20:34<8:53:40,  1.49s/it, lr=7e-5, step_loss=0.0173]Steps:  14%|█▍        | 3420/24850 [1:20:34<8:53:40,  1.49s/it, lr=7e-5, step_loss=0.0379]Steps:  14%|█▍        | 3421/24850 [1:20:36<8:50:00,  1.48s/it, lr=7e-5, step_loss=0.0379]Steps:  14%|█▍        | 3421/24850 [1:20:36<8:50:00,  1.48s/it, lr=7e-5, step_loss=0.0038]Steps:  14%|█▍        | 3422/24850 [1:20:37<8:49:20,  1.48s/it, lr=7e-5, step_loss=0.0038]Steps:  14%|█▍        | 3422/24850 [1:20:37<8:49:20,  1.48s/it, lr=7e-5, step_loss=0.041] Steps:  14%|█▍        | 3423/24850 [1:20:39<8:50:12,  1.48s/it, lr=7e-5, step_loss=0.041]Steps:  14%|█▍        | 3423/24850 [1:20:39<8:50:12,  1.48s/it, lr=7e-5, step_loss=0.0201]Steps:  14%|█▍        | 3424/24850 [1:20:40<8:48:31,  1.48s/it, lr=7e-5, step_loss=0.0201]Steps:  14%|█▍        | 3424/24850 [1:20:40<8:48:31,  1.48s/it, lr=7e-5, step_loss=0.0385]torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
Steps:  14%|█▍        | 3425/24850 [1:20:42<8:47:07,  1.48s/it, lr=7e-5, step_loss=0.0385]Steps:  14%|█▍        | 3425/24850 [1:20:42<8:47:07,  1.48s/it, lr=7e-5, step_loss=0.0419]Steps:  14%|█▍        | 3426/24850 [1:20:43<8:47:24,  1.48s/it, lr=7e-5, step_loss=0.0419]Steps:  14%|█▍        | 3426/24850 [1:20:43<8:47:24,  1.48s/it, lr=7e-5, step_loss=0.00133]Steps:  14%|█▍        | 3427/24850 [1:20:45<8:46:22,  1.47s/it, lr=7e-5, step_loss=0.00133]Steps:  14%|█▍        | 3427/24850 [1:20:45<8:46:22,  1.47s/it, lr=7e-5, step_loss=0.025]  Steps:  14%|█▍        | 3428/24850 [1:20:46<8:45:44,  1.47s/it, lr=7e-5, step_loss=0.025]Steps:  14%|█▍        | 3428/24850 [1:20:46<8:45:44,  1.47s/it, lr=7e-5, step_loss=0.0199]Steps:  14%|█▍        | 3429/24850 [1:20:48<8:47:17,  1.48s/it, lr=7e-5, step_loss=0.0199]Steps:  14%|█▍        | 3429/24850 [1:20:48<8:47:17,  1.48s/it, lr=7e-5, step_loss=0.0169]Steps:  14%|█▍        | 3430/24850 [1:20:49<8:45:40,  1.47s/it, lr=7e-5, step_loss=0.0169]Steps:  14%|█▍        | 3430/24850 [1:20:49<8:45:40,  1.47s/it, lr=7e-5, step_loss=0.0564]Steps:  14%|█▍        | 3431/24850 [1:20:51<8:44:59,  1.47s/it, lr=7e-5, step_loss=0.0564]Steps:  14%|█▍        | 3431/24850 [1:20:51<8:44:59,  1.47s/it, lr=7e-5, step_loss=0.0378]Steps:  14%|█▍        | 3432/24850 [1:20:52<8:45:07,  1.47s/it, lr=7e-5, step_loss=0.0378]Steps:  14%|█▍        | 3432/24850 [1:20:52<8:45:07,  1.47s/it, lr=7e-5, step_loss=0.113] Steps:  14%|█▍        | 3433/24850 [1:20:54<8:44:06,  1.47s/it, lr=7e-5, step_loss=0.113]Steps:  14%|█▍        | 3433/24850 [1:20:54<8:44:06,  1.47s/it, lr=7e-5, step_loss=0.0777]Steps:  14%|█▍        | 3434/24850 [1:20:55<8:48:38,  1.48s/it, lr=7e-5, step_loss=0.0777]Steps:  14%|█▍        | 3434/24850 [1:20:55<8:48:38,  1.48s/it, lr=7e-5, step_loss=0.0674]Steps:  14%|█▍        | 3435/24850 [1:20:57<8:49:26,  1.48s/it, lr=7e-5, step_loss=0.0674]Steps:  14%|█▍        | 3435/24850 [1:20:57<8:49:26,  1.48s/it, lr=7e-5, step_loss=0.0454]Steps:  14%|█▍        | 3436/24850 [1:20:58<8:48:00,  1.48s/it, lr=7e-5, step_loss=0.0454]Steps:  14%|█▍        | 3436/24850 [1:20:58<8:48:00,  1.48s/it, lr=7e-5, step_loss=0.00561]Steps:  14%|█▍        | 3437/24850 [1:20:59<8:46:30,  1.48s/it, lr=7e-5, step_loss=0.00561]Steps:  14%|█▍        | 3437/24850 [1:20:59<8:46:30,  1.48s/it, lr=7e-5, step_loss=0.135]  Steps:  14%|█▍        | 3438/24850 [1:21:01<8:46:12,  1.47s/it, lr=7e-5, step_loss=0.135]Steps:  14%|█▍        | 3438/24850 [1:21:01<8:46:12,  1.47s/it, lr=7e-5, step_loss=0.0587]Steps:  14%|█▍        | 3439/24850 [1:21:02<8:46:32,  1.48s/it, lr=7e-5, step_loss=0.0587]Steps:  14%|█▍        | 3439/24850 [1:21:02<8:46:32,  1.48s/it, lr=7e-5, step_loss=0.00751]Steps:  14%|█▍        | 3440/24850 [1:21:04<8:46:18,  1.47s/it, lr=7e-5, step_loss=0.00751]Steps:  14%|█▍        | 3440/24850 [1:21:04<8:46:18,  1.47s/it, lr=7e-5, step_loss=0.00593]Steps:  14%|█▍        | 3441/24850 [1:21:05<8:45:07,  1.47s/it, lr=7e-5, step_loss=0.00593]Steps:  14%|█▍        | 3441/24850 [1:21:05<8:45:07,  1.47s/it, lr=7e-5, step_loss=0.0223] Steps:  14%|█▍        | 3442/24850 [1:21:07<8:45:41,  1.47s/it, lr=7e-5, step_loss=0.0223]Steps:  14%|█▍        | 3442/24850 [1:21:07<8:45:41,  1.47s/it, lr=7e-5, step_loss=0.0748]Steps:  14%|█▍        | 3443/24850 [1:21:08<8:46:05,  1.47s/it, lr=7e-5, step_loss=0.0748]Steps:  14%|█▍        | 3443/24850 [1:21:08<8:46:05,  1.47s/it, lr=7e-5, step_loss=0.0267]Steps:  14%|█▍        | 3444/24850 [1:21:11<10:27:52,  1.76s/it, lr=7e-5, step_loss=0.0267]Steps:  14%|█▍        | 3444/24850 [1:21:11<10:27:52,  1.76s/it, lr=7e-5, step_loss=0.0198]Steps:  14%|█▍        | 3445/24850 [1:21:12<10:01:49,  1.69s/it, lr=7e-5, step_loss=0.0198]Steps:  14%|█▍        | 3445/24850 [1:21:12<10:01:49,  1.69s/it, lr=7e-5, step_loss=0.1]   Steps:  14%|█▍        | 3446/24850 [1:21:14<9:37:40,  1.62s/it, lr=7e-5, step_loss=0.1] Steps:  14%|█▍        | 3446/24850 [1:21:14<9:37:40,  1.62s/it, lr=7e-5, step_loss=0.00212]Steps:  14%|█▍        | 3447/24850 [1:21:15<9:22:17,  1.58s/it, lr=7e-5, step_loss=0.00212]Steps:  14%|█▍        | 3447/24850 [1:21:15<9:22:17,  1.58s/it, lr=7e-5, step_loss=0.0119] Steps:  14%|█▍        | 3448/24850 [1:21:17<9:09:38,  1.54s/it, lr=7e-5, step_loss=0.0119]Steps:  14%|█▍        | 3448/24850 [1:21:17<9:09:38,  1.54s/it, lr=7e-5, step_loss=0.0207]Steps:  14%|█▍        | 3449/24850 [1:21:18<9:00:53,  1.52s/it, lr=7e-5, step_loss=0.0207]Steps:  14%|█▍        | 3449/24850 [1:21:18<9:00:53,  1.52s/it, lr=7e-5, step_loss=0.0297]Steps:  14%|█▍        | 3450/24850 [1:21:20<8:56:36,  1.50s/it, lr=7e-5, step_loss=0.0297]Steps:  14%|█▍        | 3450/24850 [1:21:20<8:56:36,  1.50s/it, lr=7e-5, step_loss=0.00715]Steps:  14%|█▍        | 3451/24850 [1:21:21<8:53:03,  1.49s/it, lr=7e-5, step_loss=0.00715]Steps:  14%|█▍        | 3451/24850 [1:21:21<8:53:03,  1.49s/it, lr=7e-5, step_loss=0.137]  (512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512)Steps:  14%|█▍        | 3452/24850 [1:21:23<8:51:40,  1.49s/it, lr=7e-5, step_loss=0.137]Steps:  14%|█▍        | 3452/24850 [1:21:23<8:51:40,  1.49s/it, lr=7e-5, step_loss=0.00653]Steps:  14%|█▍        | 3453/24850 [1:21:24<8:49:49,  1.49s/it, lr=7e-5, step_loss=0.00653]Steps:  14%|█▍        | 3453/24850 [1:21:24<8:49:49,  1.49s/it, lr=7e-5, step_loss=0.0288] Steps:  14%|█▍        | 3454/24850 [1:21:25<8:47:24,  1.48s/it, lr=7e-5, step_loss=0.0288]Steps:  14%|█▍        | 3454/24850 [1:21:25<8:47:24,  1.48s/it, lr=7e-5, step_loss=0.0223]Steps:  14%|█▍        | 3455/24850 [1:21:27<8:46:36,  1.48s/it, lr=7e-5, step_loss=0.0223]Steps:  14%|█▍        | 3455/24850 [1:21:27<8:46:36,  1.48s/it, lr=7e-5, step_loss=0.0674]Steps:  14%|█▍        | 3456/24850 [1:21:28<8:45:23,  1.47s/it, lr=7e-5, step_loss=0.0674]Steps:  14%|█▍        | 3456/24850 [1:21:28<8:45:23,  1.47s/it, lr=7e-5, step_loss=0.0344]Steps:  14%|█▍        | 3457/24850 [1:21:30<8:44:31,  1.47s/it, lr=7e-5, step_loss=0.0344]Steps:  14%|█▍        | 3457/24850 [1:21:30<8:44:31,  1.47s/it, lr=7e-5, step_loss=0.0439]Steps:  14%|█▍        | 3458/24850 [1:21:31<8:45:07,  1.47s/it, lr=7e-5, step_loss=0.0439]Steps:  14%|█▍        | 3458/24850 [1:21:31<8:45:07,  1.47s/it, lr=7e-5, step_loss=0.0265]Steps:  14%|█▍        | 3459/24850 [1:21:33<8:44:58,  1.47s/it, lr=7e-5, step_loss=0.0265]Steps:  14%|█▍        | 3459/24850 [1:21:33<8:44:58,  1.47s/it, lr=7e-5, step_loss=0.028] Steps:  14%|█▍        | 3460/24850 [1:21:34<8:46:56,  1.48s/it, lr=7e-5, step_loss=0.028]Steps:  14%|█▍        | 3460/24850 [1:21:34<8:46:56,  1.48s/it, lr=7e-5, step_loss=0.0189]Steps:  14%|█▍        | 3461/24850 [1:21:36<8:47:04,  1.48s/it, lr=7e-5, step_loss=0.0189]Steps:  14%|█▍        | 3461/24850 [1:21:36<8:47:04,  1.48s/it, lr=7e-5, step_loss=0.0238]Steps:  14%|█▍        | 3462/24850 [1:21:37<8:45:55,  1.48s/it, lr=7e-5, step_loss=0.0238]Steps:  14%|█▍        | 3462/24850 [1:21:37<8:45:55,  1.48s/it, lr=7e-5, step_loss=0.0296]Steps:  14%|█▍        | 3463/24850 [1:21:39<8:44:20,  1.47s/it, lr=7e-5, step_loss=0.0296]Steps:  14%|█▍        | 3463/24850 [1:21:39<8:44:20,  1.47s/it, lr=7e-5, step_loss=0.0192]Steps:  14%|█▍        | 3464/24850 [1:21:40<8:45:55,  1.48s/it, lr=7e-5, step_loss=0.0192]Steps:  14%|█▍        | 3464/24850 [1:21:40<8:45:55,  1.48s/it, lr=7e-5, step_loss=0.00834]Steps:  14%|█▍        | 3465/24850 [1:21:42<8:44:29,  1.47s/it, lr=7e-5, step_loss=0.00834]Steps:  14%|█▍        | 3465/24850 [1:21:42<8:44:29,  1.47s/it, lr=7e-5, step_loss=0.00662]Steps:  14%|█▍        | 3466/24850 [1:21:43<9:04:42,  1.53s/it, lr=7e-5, step_loss=0.00662]Steps:  14%|█▍        | 3466/24850 [1:21:43<9:04:42,  1.53s/it, lr=7e-5, step_loss=0.0624] Steps:  14%|█▍        | 3467/24850 [1:21:45<9:04:45,  1.53s/it, lr=7e-5, step_loss=0.0624]Steps:  14%|█▍        | 3467/24850 [1:21:45<9:04:45,  1.53s/it, lr=7e-5, step_loss=0.0118]Steps:  14%|█▍        | 3468/24850 [1:21:46<9:01:28,  1.52s/it, lr=7e-5, step_loss=0.0118]Steps:  14%|█▍        | 3468/24850 [1:21:46<9:01:28,  1.52s/it, lr=7e-5, step_loss=0.0598]Steps:  14%|█▍        | 3469/24850 [1:21:48<8:59:17,  1.51s/it, lr=7e-5, step_loss=0.0598]Steps:  14%|█▍        | 3469/24850 [1:21:48<8:59:17,  1.51s/it, lr=7e-5, step_loss=0.0303]Steps:  14%|█▍        | 3470/24850 [1:21:49<8:56:01,  1.50s/it, lr=7e-5, step_loss=0.0303]Steps:  14%|█▍        | 3470/24850 [1:21:49<8:56:01,  1.50s/it, lr=7e-5, step_loss=0.00702]Steps:  14%|█▍        | 3471/24850 [1:21:51<8:52:40,  1.49s/it, lr=7e-5, step_loss=0.00702]Steps:  14%|█▍        | 3471/24850 [1:21:51<8:52:40,  1.49s/it, lr=7e-5, step_loss=0.0488] Steps:  14%|█▍        | 3472/24850 [1:21:52<8:50:54,  1.49s/it, lr=7e-5, step_loss=0.0488]Steps:  14%|█▍        | 3472/24850 [1:21:52<8:50:54,  1.49s/it, lr=7e-5, step_loss=0.00589]Steps:  14%|█▍        | 3473/24850 [1:21:54<8:49:21,  1.49s/it, lr=7e-5, step_loss=0.00589]Steps:  14%|█▍        | 3473/24850 [1:21:54<8:49:21,  1.49s/it, lr=7e-5, step_loss=0.0326] Steps:  14%|█▍        | 3474/24850 [1:21:55<8:49:02,  1.48s/it, lr=7e-5, step_loss=0.0326]Steps:  14%|█▍        | 3474/24850 [1:21:55<8:49:02,  1.48s/it, lr=7e-5, step_loss=0.161] Steps:  14%|█▍        | 3475/24850 [1:21:57<8:46:43,  1.48s/it, lr=7e-5, step_loss=0.161]Steps:  14%|█▍        | 3475/24850 [1:21:57<8:46:43,  1.48s/it, lr=7e-5, step_loss=0.0183]Steps:  14%|█▍        | 3476/24850 [1:21:58<8:49:40,  1.49s/it, lr=7e-5, step_loss=0.0183]Steps:  14%|█▍        | 3476/24850 [1:21:58<8:49:40,  1.49s/it, lr=7e-5, step_loss=0.00247]Steps:  14%|█▍        | 3477/24850 [1:22:00<8:50:13,  1.49s/it, lr=7e-5, step_loss=0.00247]Steps:  14%|█▍        | 3477/24850 [1:22:00<8:50:13,  1.49s/it, lr=7e-5, step_loss=0.00586]Steps:  14%|█▍        | 3478/24850 [1:22:01<9:08:56,  1.54s/it, lr=7e-5, step_loss=0.00586]Steps:  14%|█▍        | 3478/24850 [1:22:01<9:08:56,  1.54s/it, lr=7e-5, step_loss=0.00365] torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:  14%|█▍        | 3479/24850 [1:22:03<9:02:22,  1.52s/it, lr=7e-5, step_loss=0.00365]Steps:  14%|█▍        | 3479/24850 [1:22:03<9:02:22,  1.52s/it, lr=7e-5, step_loss=0.0842] Steps:  14%|█▍        | 3480/24850 [1:22:04<8:56:57,  1.51s/it, lr=7e-5, step_loss=0.0842]Steps:  14%|█▍        | 3480/24850 [1:22:04<8:56:57,  1.51s/it, lr=7e-5, step_loss=0.00686]Steps:  14%|█▍        | 3481/24850 [1:22:06<8:53:13,  1.50s/it, lr=7e-5, step_loss=0.00686]Steps:  14%|█▍        | 3481/24850 [1:22:06<8:53:13,  1.50s/it, lr=7e-5, step_loss=0.0181] Steps:  14%|█▍        | 3482/24850 [1:22:07<8:53:21,  1.50s/it, lr=7e-5, step_loss=0.0181]Steps:  14%|█▍        | 3482/24850 [1:22:07<8:53:21,  1.50s/it, lr=7e-5, step_loss=0.0304]Steps:  14%|█▍        | 3483/24850 [1:22:09<8:51:11,  1.49s/it, lr=7e-5, step_loss=0.0304]Steps:  14%|█▍        | 3483/24850 [1:22:09<8:51:11,  1.49s/it, lr=7e-5, step_loss=0.0188]Steps:  14%|█▍        | 3484/24850 [1:22:10<8:47:33,  1.48s/it, lr=7e-5, step_loss=0.0188]Steps:  14%|█▍        | 3484/24850 [1:22:10<8:47:33,  1.48s/it, lr=7e-5, step_loss=0.0189]Steps:  14%|█▍        | 3485/24850 [1:22:12<8:47:21,  1.48s/it, lr=7e-5, step_loss=0.0189]Steps:  14%|█▍        | 3485/24850 [1:22:12<8:47:21,  1.48s/it, lr=7e-5, step_loss=0.0553]Steps:  14%|█▍        | 3486/24850 [1:22:13<8:48:01,  1.48s/it, lr=7e-5, step_loss=0.0553]Steps:  14%|█▍        | 3486/24850 [1:22:13<8:48:01,  1.48s/it, lr=7e-5, step_loss=0.0307]Steps:  14%|█▍        | 3487/24850 [1:22:15<8:46:05,  1.48s/it, lr=7e-5, step_loss=0.0307]Steps:  14%|█▍        | 3487/24850 [1:22:15<8:46:05,  1.48s/it, lr=7e-5, step_loss=0.00944]Steps:  14%|█▍        | 3488/24850 [1:22:16<8:45:05,  1.47s/it, lr=7e-5, step_loss=0.00944]Steps:  14%|█▍        | 3488/24850 [1:22:16<8:45:05,  1.47s/it, lr=7e-5, step_loss=0.0139] Steps:  14%|█▍        | 3489/24850 [1:22:18<8:45:22,  1.48s/it, lr=7e-5, step_loss=0.0139]Steps:  14%|█▍        | 3489/24850 [1:22:18<8:45:22,  1.48s/it, lr=7e-5, step_loss=0.06]  Steps:  14%|█▍        | 3490/24850 [1:22:19<8:45:22,  1.48s/it, lr=7e-5, step_loss=0.06]Steps:  14%|█▍        | 3490/24850 [1:22:19<8:45:22,  1.48s/it, lr=7e-5, step_loss=0.0151]Steps:  14%|█▍        | 3491/24850 [1:22:21<8:44:28,  1.47s/it, lr=7e-5, step_loss=0.0151]Steps:  14%|█▍        | 3491/24850 [1:22:21<8:44:28,  1.47s/it, lr=7e-5, step_loss=0.0354]Steps:  14%|█▍        | 3492/24850 [1:22:22<8:44:42,  1.47s/it, lr=7e-5, step_loss=0.0354]Steps:  14%|█▍        | 3492/24850 [1:22:22<8:44:42,  1.47s/it, lr=7e-5, step_loss=0.04]  Steps:  14%|█▍        | 3493/24850 [1:22:23<8:44:05,  1.47s/it, lr=7e-5, step_loss=0.04]04/12/2024 11:32:32 - INFO - __main__ - 2 checkpoints already exist, removing 1 checkpoints
04/12/2024 11:32:32 - INFO - __main__ - removing checkpoints: checkpoint-2500
04/12/2024 11:32:33 - INFO - accelerate.accelerator - Saving current state to /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-3500
Configuration saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-3500/unet/config.json
Model weights saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-3500/unet/diffusion_pytorch_model.safetensors
Model weights saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-3500/unet/pytorch_lora_weights.safetensors
04/12/2024 11:33:06 - INFO - accelerate.checkpointing - Optimizer state saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-3500/optimizer.bin
04/12/2024 11:33:06 - INFO - accelerate.checkpointing - Scheduler state saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-3500/scheduler.bin
04/12/2024 11:33:06 - INFO - accelerate.checkpointing - Random states saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-3500/random_states_0.pkl
04/12/2024 11:33:06 - INFO - __main__ - Saved state to /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-3500
Steps:  14%|█▍        | 3493/24850 [1:22:58<8:44:05,  1.47s/it, lr=7e-5, step_loss=0.00464]Steps:  14%|█▍        | 3494/24850 [1:23:07<82:45:18, 13.95s/it, lr=7e-5, step_loss=0.00464]Steps:  14%|█▍        | 3494/24850 [1:23:07<82:45:18, 13.95s/it, lr=7e-5, step_loss=0.0601] Steps:  14%|█▍        | 3495/24850 [1:23:08<60:32:26, 10.21s/it, lr=7e-5, step_loss=0.0601]Steps:  14%|█▍        | 3495/24850 [1:23:08<60:32:26, 10.21s/it, lr=7e-5, step_loss=0.025] Steps:  14%|█▍        | 3496/24850 [1:23:09<44:57:54,  7.58s/it, lr=7e-5, step_loss=0.025]Steps:  14%|█▍        | 3496/24850 [1:23:09<44:57:54,  7.58s/it, lr=7e-5, step_loss=0.0149]Steps:  14%|█▍        | 3497/24850 [1:23:11<34:01:38,  5.74s/it, lr=7e-5, step_loss=0.0149]Steps:  14%|█▍        | 3497/24850 [1:23:11<34:01:38,  5.74s/it, lr=7e-5, step_loss=0.0127]Steps:  14%|█▍        | 3498/24850 [1:23:12<26:25:39,  4.46s/it, lr=7e-5, step_loss=0.0127]Steps:  14%|█▍        | 3498/24850 [1:23:12<26:25:39,  4.46s/it, lr=7e-5, step_loss=0.00948]Steps:  14%|█▍        | 3499/24850 [1:23:14<21:05:57,  3.56s/it, lr=7e-5, step_loss=0.00948]Steps:  14%|█▍        | 3499/24850 [1:23:14<21:05:57,  3.56s/it, lr=7e-5, step_loss=0.0191] Steps:  14%|█▍        | 3500/24850 [1:23:15<17:21:38,  2.93s/it, lr=7e-5, step_loss=0.0191]Steps:  14%|█▍        | 3500/24850 [1:23:15<17:21:38,  2.93s/it, lr=7e-5, step_loss=0.0551]Steps:  14%|█▍        | 3501/24850 [1:23:17<14:46:23,  2.49s/it, lr=7e-5, step_loss=0.0551]Steps:  14%|█▍        | 3501/24850 [1:23:17<14:46:23,  2.49s/it, lr=7e-5, step_loss=0.118] Steps:  14%|█▍        | 3502/24850 [1:23:18<12:59:09,  2.19s/it, lr=7e-5, step_loss=0.118]Steps:  14%|█▍        | 3502/24850 [1:23:18<12:59:09,  2.19s/it, lr=7e-5, step_loss=0.000983]Steps:  14%|█▍        | 3503/24850 [1:23:20<11:41:30,  1.97s/it, lr=7e-5, step_loss=0.000983]Steps:  14%|█▍        | 3503/24850 [1:23:20<11:41:30,  1.97s/it, lr=7e-5, step_loss=0.0087]  Steps:  14%|█▍        | 3504/24850 [1:23:21<10:46:57,  1.82s/it, lr=7e-5, step_loss=0.0087]Steps:  14%|█▍        | 3504/24850 [1:23:21<10:46:57,  1.82s/it, lr=7e-5, step_loss=0.0122]Steps:  14%|█▍        | 3505/24850 [1:23:23<10:06:26,  1.70s/it, lr=7e-5, step_loss=0.0122]Steps:  14%|█▍        | 3505/24850 [1:23:23<10:06:26,  1.70s/it, lr=7e-5, step_loss=0.00309]torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  Steps:  14%|█▍        | 3506/24850 [1:23:24<9:39:23,  1.63s/it, lr=7e-5, step_loss=0.00309] Steps:  14%|█▍        | 3506/24850 [1:23:24<9:39:23,  1.63s/it, lr=7e-5, step_loss=0.00669]Steps:  14%|█▍        | 3507/24850 [1:23:26<9:22:33,  1.58s/it, lr=7e-5, step_loss=0.00669]Steps:  14%|█▍        | 3507/24850 [1:23:26<9:22:33,  1.58s/it, lr=7e-5, step_loss=0.0458] Steps:  14%|█▍        | 3508/24850 [1:23:27<9:08:47,  1.54s/it, lr=7e-5, step_loss=0.0458]Steps:  14%|█▍        | 3508/24850 [1:23:27<9:08:47,  1.54s/it, lr=7e-5, step_loss=0.00707]Steps:  14%|█▍        | 3509/24850 [1:23:28<9:03:49,  1.53s/it, lr=7e-5, step_loss=0.00707]Steps:  14%|█▍        | 3509/24850 [1:23:28<9:03:49,  1.53s/it, lr=7e-5, step_loss=0.0266] Steps:  14%|█▍        | 3510/24850 [1:23:30<8:54:33,  1.50s/it, lr=7e-5, step_loss=0.0266]Steps:  14%|█▍        | 3510/24850 [1:23:30<8:54:33,  1.50s/it, lr=7e-5, step_loss=0.00181]Steps:  14%|█▍        | 3511/24850 [1:23:31<8:51:44,  1.50s/it, lr=7e-5, step_loss=0.00181]Steps:  14%|█▍        | 3511/24850 [1:23:31<8:51:44,  1.50s/it, lr=7e-5, step_loss=0.0133] Steps:  14%|█▍        | 3512/24850 [1:23:33<8:48:03,  1.48s/it, lr=7e-5, step_loss=0.0133]Steps:  14%|█▍        | 3512/24850 [1:23:33<8:48:03,  1.48s/it, lr=7e-5, step_loss=0.0587]Steps:  14%|█▍        | 3513/24850 [1:23:34<8:44:39,  1.48s/it, lr=7e-5, step_loss=0.0587]Steps:  14%|█▍        | 3513/24850 [1:23:34<8:44:39,  1.48s/it, lr=7e-5, step_loss=0.0364]Steps:  14%|█▍        | 3514/24850 [1:23:36<8:43:22,  1.47s/it, lr=7e-5, step_loss=0.0364]Steps:  14%|█▍        | 3514/24850 [1:23:36<8:43:22,  1.47s/it, lr=7e-5, step_loss=0.0227]Steps:  14%|█▍        | 3515/24850 [1:23:37<8:40:26,  1.46s/it, lr=7e-5, step_loss=0.0227]Steps:  14%|█▍        | 3515/24850 [1:23:37<8:40:26,  1.46s/it, lr=7e-5, step_loss=0.00815]Steps:  14%|█▍        | 3516/24850 [1:23:39<8:40:20,  1.46s/it, lr=7e-5, step_loss=0.00815]Steps:  14%|█▍        | 3516/24850 [1:23:39<8:40:20,  1.46s/it, lr=7e-5, step_loss=0.0115] Steps:  14%|█▍        | 3517/24850 [1:23:40<8:40:55,  1.47s/it, lr=7e-5, step_loss=0.0115]Steps:  14%|█▍        | 3517/24850 [1:23:40<8:40:55,  1.47s/it, lr=7e-5, step_loss=0.0194]Steps:  14%|█▍        | 3518/24850 [1:23:42<8:40:02,  1.46s/it, lr=7e-5, step_loss=0.0194]Steps:  14%|█▍        | 3518/24850 [1:23:42<8:40:02,  1.46s/it, lr=7e-5, step_loss=0.0218]Steps:  14%|█▍        | 3519/24850 [1:23:43<8:40:21,  1.46s/it, lr=7e-5, step_loss=0.0218]Steps:  14%|█▍        | 3519/24850 [1:23:43<8:40:21,  1.46s/it, lr=7e-5, step_loss=0.0236]Steps:  14%|█▍        | 3520/24850 [1:23:45<8:43:10,  1.47s/it, lr=7e-5, step_loss=0.0236]Steps:  14%|█▍        | 3520/24850 [1:23:45<8:43:10,  1.47s/it, lr=7e-5, step_loss=0.00834]Steps:  14%|█▍        | 3521/24850 [1:23:46<8:41:49,  1.47s/it, lr=7e-5, step_loss=0.00834]Steps:  14%|█▍        | 3521/24850 [1:23:46<8:41:49,  1.47s/it, lr=7e-5, step_loss=0.0888] Steps:  14%|█▍        | 3522/24850 [1:23:48<8:41:44,  1.47s/it, lr=7e-5, step_loss=0.0888]Steps:  14%|█▍        | 3522/24850 [1:23:48<8:41:44,  1.47s/it, lr=7e-5, step_loss=0.0173]Steps:  14%|█▍        | 3523/24850 [1:23:49<8:40:21,  1.46s/it, lr=7e-5, step_loss=0.0173]Steps:  14%|█▍        | 3523/24850 [1:23:49<8:40:21,  1.46s/it, lr=7e-5, step_loss=0.0313]Steps:  14%|█▍        | 3524/24850 [1:23:50<8:38:30,  1.46s/it, lr=7e-5, step_loss=0.0313]Steps:  14%|█▍        | 3524/24850 [1:23:50<8:38:30,  1.46s/it, lr=7e-5, step_loss=0.0508]Steps:  14%|█▍        | 3525/24850 [1:23:52<8:40:31,  1.46s/it, lr=7e-5, step_loss=0.0508]Steps:  14%|█▍        | 3525/24850 [1:23:52<8:40:31,  1.46s/it, lr=7e-5, step_loss=0.0617]Steps:  14%|█▍        | 3526/24850 [1:23:54<8:56:27,  1.51s/it, lr=7e-5, step_loss=0.0617]Steps:  14%|█▍        | 3526/24850 [1:23:54<8:56:27,  1.51s/it, lr=7e-5, step_loss=0.0123]Steps:  14%|█▍        | 3527/24850 [1:23:55<8:51:24,  1.50s/it, lr=7e-5, step_loss=0.0123]Steps:  14%|█▍        | 3527/24850 [1:23:55<8:51:24,  1.50s/it, lr=7e-5, step_loss=0.0257]Steps:  14%|█▍        | 3528/24850 [1:23:56<8:45:55,  1.48s/it, lr=7e-5, step_loss=0.0257]Steps:  14%|█▍        | 3528/24850 [1:23:56<8:45:55,  1.48s/it, lr=7e-5, step_loss=0.0141]Steps:  14%|█▍        | 3529/24850 [1:23:58<8:42:08,  1.47s/it, lr=7e-5, step_loss=0.0141]Steps:  14%|█▍        | 3529/24850 [1:23:58<8:42:08,  1.47s/it, lr=7e-5, step_loss=0.000765]Steps:  14%|█▍        | 3530/24850 [1:23:59<8:41:24,  1.47s/it, lr=7e-5, step_loss=0.000765]Steps:  14%|█▍        | 3530/24850 [1:23:59<8:41:24,  1.47s/it, lr=7e-5, step_loss=0.0889]  Steps:  14%|█▍        | 3531/24850 [1:24:01<8:41:34,  1.47s/it, lr=7e-5, step_loss=0.0889]Steps:  14%|█▍        | 3531/24850 [1:24:01<8:41:34,  1.47s/it, lr=7e-5, step_loss=0.0179]Steps:  14%|█▍        | 3532/24850 [1:24:02<8:41:27,  1.47s/it, lr=7e-5, step_loss=0.0179]Steps:  14%|█▍        | 3532/24850 [1:24:02<8:41:27,  1.47s/it, lr=7e-5, step_loss=0.00495]Steps:  14%|█▍        | 3533/24850 [1:24:04<8:40:07,  1.46s/it, lr=7e-5, step_loss=0.00495]Steps:  14%|█▍        | 3533/24850 [1:24:04<8:40:07,  1.46s/it, lr=7e-5, step_loss=0.0651] mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:  14%|█▍        | 3534/24850 [1:24:05<8:38:45,  1.46s/it, lr=7e-5, step_loss=0.0651]Steps:  14%|█▍        | 3534/24850 [1:24:05<8:38:45,  1.46s/it, lr=7e-5, step_loss=0.00934]Steps:  14%|█▍        | 3535/24850 [1:24:07<8:36:45,  1.45s/it, lr=7e-5, step_loss=0.00934]Steps:  14%|█▍        | 3535/24850 [1:24:07<8:36:45,  1.45s/it, lr=7e-5, step_loss=0.00493]Steps:  14%|█▍        | 3536/24850 [1:24:08<8:36:42,  1.45s/it, lr=7e-5, step_loss=0.00493]Steps:  14%|█▍        | 3536/24850 [1:24:08<8:36:42,  1.45s/it, lr=7e-5, step_loss=0.02]   Steps:  14%|█▍        | 3537/24850 [1:24:10<8:36:43,  1.45s/it, lr=7e-5, step_loss=0.02]Steps:  14%|█▍        | 3537/24850 [1:24:10<8:36:43,  1.45s/it, lr=7e-5, step_loss=0.0352]Steps:  14%|█▍        | 3538/24850 [1:24:11<8:36:56,  1.46s/it, lr=7e-5, step_loss=0.0352]Steps:  14%|█▍        | 3538/24850 [1:24:11<8:36:56,  1.46s/it, lr=7e-5, step_loss=0.0302]Steps:  14%|█▍        | 3539/24850 [1:24:12<8:36:14,  1.45s/it, lr=7e-5, step_loss=0.0302]Steps:  14%|█▍        | 3539/24850 [1:24:12<8:36:14,  1.45s/it, lr=7e-5, step_loss=0.0223]Steps:  14%|█▍        | 3540/24850 [1:24:14<8:36:38,  1.45s/it, lr=7e-5, step_loss=0.0223]Steps:  14%|█▍        | 3540/24850 [1:24:14<8:36:38,  1.45s/it, lr=7e-5, step_loss=0.0283]Steps:  14%|█▍        | 3541/24850 [1:24:15<8:36:24,  1.45s/it, lr=7e-5, step_loss=0.0283]Steps:  14%|█▍        | 3541/24850 [1:24:15<8:36:24,  1.45s/it, lr=7e-5, step_loss=0.0197]Steps:  14%|█▍        | 3542/24850 [1:24:17<8:36:26,  1.45s/it, lr=7e-5, step_loss=0.0197]Steps:  14%|█▍        | 3542/24850 [1:24:17<8:36:26,  1.45s/it, lr=7e-5, step_loss=0.0245]Steps:  14%|█▍        | 3543/24850 [1:24:18<8:36:14,  1.45s/it, lr=7e-5, step_loss=0.0245]Steps:  14%|█▍        | 3543/24850 [1:24:18<8:36:14,  1.45s/it, lr=7e-5, step_loss=0.00779]Steps:  14%|█▍        | 3544/24850 [1:24:21<10:19:47,  1.75s/it, lr=7e-5, step_loss=0.00779]Steps:  14%|█▍        | 3544/24850 [1:24:21<10:19:47,  1.75s/it, lr=7e-5, step_loss=0.0197] Steps:  14%|█▍        | 3545/24850 [1:24:22<9:51:06,  1.66s/it, lr=7e-5, step_loss=0.0197] Steps:  14%|█▍        | 3545/24850 [1:24:22<9:51:06,  1.66s/it, lr=7e-5, step_loss=0.0331]Steps:  14%|█▍        | 3546/24850 [1:24:24<9:28:51,  1.60s/it, lr=7e-5, step_loss=0.0331]Steps:  14%|█▍        | 3546/24850 [1:24:24<9:28:51,  1.60s/it, lr=7e-5, step_loss=0.0178]Steps:  14%|█▍        | 3547/24850 [1:24:25<9:11:59,  1.55s/it, lr=7e-5, step_loss=0.0178]Steps:  14%|█▍        | 3547/24850 [1:24:25<9:11:59,  1.55s/it, lr=7e-5, step_loss=0.00864]Steps:  14%|█▍        | 3548/24850 [1:24:26<9:01:24,  1.52s/it, lr=7e-5, step_loss=0.00864]Steps:  14%|█▍        | 3548/24850 [1:24:26<9:01:24,  1.52s/it, lr=7e-5, step_loss=0.0608] Steps:  14%|█▍        | 3549/24850 [1:24:28<9:11:37,  1.55s/it, lr=7e-5, step_loss=0.0608]Steps:  14%|█▍        | 3549/24850 [1:24:28<9:11:37,  1.55s/it, lr=7e-5, step_loss=0.0143]04/12/2024 11:34:37 - INFO - __main__ - Running validation...
torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([9, 4, 64, 64])

Loading pipeline components...:   0%|          | 0/7 [00:00<?, ?it/s][A`text_config_dict` is provided which will be used to initialize `CLIPTextConfig`. The value `text_config["id2label"]` will be overriden.
`text_config_dict` is provided which will be used to initialize `CLIPTextConfig`. The value `text_config["bos_token_id"]` will be overriden.
`text_config_dict` is provided which will be used to initialize `CLIPTextConfig`. The value `text_config["eos_token_id"]` will be overriden.
Loaded safety_checker as StableDiffusionSafetyChecker from `safety_checker` subfolder of timbrooks/instruct-pix2pix.

Loading pipeline components...:  14%|█▍        | 1/7 [00:00<00:02,  2.43it/s][ALoaded feature_extractor as CLIPImageProcessor from `feature_extractor` subfolder of timbrooks/instruct-pix2pix.
{'timestep_spacing'} was not found in config. Values will be initialized to default values.
Loaded scheduler as EulerAncestralDiscreteScheduler from `scheduler` subfolder of timbrooks/instruct-pix2pix.
Loaded tokenizer as CLIPTokenizer from `tokenizer` subfolder of timbrooks/instruct-pix2pix.
Loading pipeline components...: 100%|██████████| 7/7 [00:00<00:00, 14.43it/s]
{'timestep_spacing'} was not found in config. Values will be initialized to default values.
conduct do_classifier_free_guidance, text_guidance: 16,image_guidance: 1

  0%|          | 0/50 [00:00<?, ?it/s][A
  2%|▏         | 1/50 [00:00<00:20,  2.36it/s][A
  4%|▍         | 2/50 [00:00<00:19,  2.42it/s][A
  6%|▌         | 3/50 [00:01<00:19,  2.43it/s][A
  8%|▊         | 4/50 [00:01<00:18,  2.43it/s][A
 10%|█         | 5/50 [00:02<00:18,  2.43it/s][A
 12%|█▏        | 6/50 [00:02<00:18,  2.42it/s][A
 14%|█▍        | 7/50 [00:02<00:17,  2.42it/s][A
 16%|█▌        | 8/50 [00:03<00:17,  2.42it/s][A
 18%|█▊        | 9/50 [00:03<00:16,  2.43it/s][A
 20%|██        | 10/50 [00:04<00:16,  2.42it/s][A
 22%|██▏       | 11/50 [00:04<00:16,  2.43it/s][A
 24%|██▍       | 12/50 [00:04<00:15,  2.43it/s][A
 26%|██▌       | 13/50 [00:05<00:15,  2.43it/s][A
 28%|██▊       | 14/50 [00:05<00:14,  2.43it/s][A
 30%|███       | 15/50 [00:06<00:14,  2.43it/s][A
 32%|███▏      | 16/50 [00:06<00:13,  2.43it/s][A
 34%|███▍      | 17/50 [00:07<00:13,  2.42it/s][A
 36%|███▌      | 18/50 [00:07<00:13,  2.42it/s][A
 38%|███▊      | 19/50 [00:07<00:12,  2.42it/s][A
 40%|████      | 20/50 [00:08<00:12,  2.42it/s][A
 42%|████▏     | 21/50 [00:08<00:11,  2.42it/s][A
 44%|████▍     | 22/50 [00:09<00:11,  2.42it/s][A
 46%|████▌     | 23/50 [00:09<00:11,  2.43it/s][A
 48%|████▊     | 24/50 [00:09<00:10,  2.43it/s][A
 50%|█████     | 25/50 [00:10<00:10,  2.43it/s][A
 52%|█████▏    | 26/50 [00:10<00:09,  2.43it/s][A
 54%|█████▍    | 27/50 [00:11<00:09,  2.42it/s][A
 56%|█████▌    | 28/50 [00:11<00:09,  2.42it/s][A
 58%|█████▊    | 29/50 [00:11<00:08,  2.42it/s][A
 60%|██████    | 30/50 [00:12<00:08,  2.42it/s][A
 62%|██████▏   | 31/50 [00:12<00:07,  2.42it/s][A
 64%|██████▍   | 32/50 [00:13<00:07,  2.43it/s][A
 66%|██████▌   | 33/50 [00:13<00:07,  2.43it/s][A(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) 
 68%|██████▊   | 34/50 [00:14<00:06,  2.42it/s][A
 70%|███████   | 35/50 [00:14<00:06,  2.42it/s][A
 72%|███████▏  | 36/50 [00:14<00:05,  2.40it/s][A
 74%|███████▍  | 37/50 [00:15<00:05,  2.40it/s][A
 76%|███████▌  | 38/50 [00:15<00:04,  2.40it/s][A
 78%|███████▊  | 39/50 [00:16<00:04,  2.41it/s][A
 80%|████████  | 40/50 [00:16<00:04,  2.42it/s][A
 82%|████████▏ | 41/50 [00:16<00:03,  2.42it/s][A
 84%|████████▍ | 42/50 [00:17<00:03,  2.42it/s][A
 86%|████████▌ | 43/50 [00:17<00:02,  2.43it/s][A
 88%|████████▊ | 44/50 [00:18<00:02,  2.43it/s][A
 90%|█████████ | 45/50 [00:18<00:02,  2.43it/s][A
 92%|█████████▏| 46/50 [00:18<00:01,  2.43it/s][A
 94%|█████████▍| 47/50 [00:19<00:01,  2.43it/s][A
 96%|█████████▌| 48/50 [00:19<00:00,  2.43it/s][A
 98%|█████████▊| 49/50 [00:20<00:00,  2.43it/s][A
100%|██████████| 50/50 [00:20<00:00,  2.43it/s][A100%|██████████| 50/50 [00:20<00:00,  2.42it/s]
04/12/2024 11:35:01 - INFO - __main__ - Running training...
torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
save img to : /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/images/modify the images for task ['flare']_val_step_3556_0.png modify the images for task ['flare']
writing inference outputs failed [Errno 2] No such file or directory: '/usr/bin/ffmpeg'
Steps:  14%|█▍        | 3550/24850 [1:25:00<62:33:04, 10.57s/it, lr=7e-5, step_loss=0.0143]Steps:  14%|█▍        | 3550/24850 [1:25:00<62:33:04, 10.57s/it, lr=7e-5, step_loss=0.0382]Steps:  14%|█▍        | 3551/24850 [1:25:01<46:27:46,  7.85s/it, lr=7e-5, step_loss=0.0382]Steps:  14%|█▍        | 3551/24850 [1:25:01<46:27:46,  7.85s/it, lr=7e-5, step_loss=0.044] Steps:  14%|█▍        | 3552/24850 [1:25:03<35:10:20,  5.95s/it, lr=7e-5, step_loss=0.044]Steps:  14%|█▍        | 3552/24850 [1:25:03<35:10:20,  5.95s/it, lr=7e-5, step_loss=0.111]Steps:  14%|█▍        | 3553/24850 [1:25:04<27:22:23,  4.63s/it, lr=7e-5, step_loss=0.111]Steps:  14%|█▍        | 3553/24850 [1:25:04<27:22:23,  4.63s/it, lr=7e-5, step_loss=0.0472]Steps:  14%|█▍        | 3554/24850 [1:25:06<21:45:26,  3.68s/it, lr=7e-5, step_loss=0.0472]Steps:  14%|█▍        | 3554/24850 [1:25:06<21:45:26,  3.68s/it, lr=7e-5, step_loss=0.0178]Steps:  14%|█▍        | 3555/24850 [1:25:07<17:49:38,  3.01s/it, lr=7e-5, step_loss=0.0178]Steps:  14%|█▍        | 3555/24850 [1:25:07<17:49:38,  3.01s/it, lr=7e-5, step_loss=0.0207]Steps:  14%|█▍        | 3556/24850 [1:25:09<15:02:45,  2.54s/it, lr=7e-5, step_loss=0.0207]Steps:  14%|█▍        | 3556/24850 [1:25:09<15:02:45,  2.54s/it, lr=7e-5, step_loss=0.00309]Steps:  14%|█▍        | 3557/24850 [1:25:10<13:10:09,  2.23s/it, lr=7e-5, step_loss=0.00309]Steps:  14%|█▍        | 3557/24850 [1:25:10<13:10:09,  2.23s/it, lr=7e-5, step_loss=0.0079] Steps:  14%|█▍        | 3558/24850 [1:25:12<11:50:18,  2.00s/it, lr=7e-5, step_loss=0.0079]Steps:  14%|█▍        | 3558/24850 [1:25:12<11:50:18,  2.00s/it, lr=7e-5, step_loss=0.0071]Steps:  14%|█▍        | 3559/24850 [1:25:13<10:52:47,  1.84s/it, lr=7e-5, step_loss=0.0071]Steps:  14%|█▍        | 3559/24850 [1:25:13<10:52:47,  1.84s/it, lr=7e-5, step_loss=0.0564]Steps:  14%|█▍        | 3560/24850 [1:25:15<10:11:11,  1.72s/it, lr=7e-5, step_loss=0.0564]Steps:  14%|█▍        | 3560/24850 [1:25:15<10:11:11,  1.72s/it, lr=7e-5, step_loss=0.00702]Steps:  14%|█▍        | 3561/24850 [1:25:16<9:43:54,  1.65s/it, lr=7e-5, step_loss=0.00702] Steps:  14%|█▍        | 3561/24850 [1:25:16<9:43:54,  1.65s/it, lr=7e-5, step_loss=0.154]  Steps:  14%|█▍        | 3562/24850 [1:25:17<9:25:41,  1.59s/it, lr=7e-5, step_loss=0.154]Steps:  14%|█▍        | 3562/24850 [1:25:17<9:25:41,  1.59s/it, lr=7e-5, step_loss=0.0224]Steps:  14%|█▍        | 3563/24850 [1:25:19<9:11:49,  1.56s/it, lr=7e-5, step_loss=0.0224]Steps:  14%|█▍        | 3563/24850 [1:25:19<9:11:49,  1.56s/it, lr=7e-5, step_loss=0.0265]Steps:  14%|█▍        | 3564/24850 [1:25:20<9:02:38,  1.53s/it, lr=7e-5, step_loss=0.0265]Steps:  14%|█▍        | 3564/24850 [1:25:20<9:02:38,  1.53s/it, lr=7e-5, step_loss=0.0317]Steps:  14%|█▍        | 3565/24850 [1:25:22<8:54:03,  1.51s/it, lr=7e-5, step_loss=0.0317]Steps:  14%|█▍        | 3565/24850 [1:25:22<8:54:03,  1.51s/it, lr=7e-5, step_loss=0.00879]Steps:  14%|█▍        | 3566/24850 [1:25:23<8:49:01,  1.49s/it, lr=7e-5, step_loss=0.00879]Steps:  14%|█▍        | 3566/24850 [1:25:23<8:49:01,  1.49s/it, lr=7e-5, step_loss=0.00795]Steps:  14%|█▍        | 3567/24850 [1:25:25<8:46:33,  1.48s/it, lr=7e-5, step_loss=0.00795]Steps:  14%|█▍        | 3567/24850 [1:25:25<8:46:33,  1.48s/it, lr=7e-5, step_loss=0.0782] Steps:  14%|█▍        | 3568/24850 [1:25:26<8:43:58,  1.48s/it, lr=7e-5, step_loss=0.0782]Steps:  14%|█▍        | 3568/24850 [1:25:26<8:43:58,  1.48s/it, lr=7e-5, step_loss=0.0106]Steps:  14%|█▍        | 3569/24850 [1:25:28<8:42:59,  1.47s/it, lr=7e-5, step_loss=0.0106]Steps:  14%|█▍        | 3569/24850 [1:25:28<8:42:59,  1.47s/it, lr=7e-5, step_loss=0.0316]Steps:  14%|█▍        | 3570/24850 [1:25:29<8:42:49,  1.47s/it, lr=7e-5, step_loss=0.0316]Steps:  14%|█▍        | 3570/24850 [1:25:29<8:42:49,  1.47s/it, lr=7e-5, step_loss=0.0118]Steps:  14%|█▍        | 3571/24850 [1:25:31<8:44:17,  1.48s/it, lr=7e-5, step_loss=0.0118]Steps:  14%|█▍        | 3571/24850 [1:25:31<8:44:17,  1.48s/it, lr=7e-5, step_loss=0.0185]Steps:  14%|█▍        | 3572/24850 [1:25:32<8:42:33,  1.47s/it, lr=7e-5, step_loss=0.0185]Steps:  14%|█▍        | 3572/24850 [1:25:32<8:42:33,  1.47s/it, lr=7e-5, step_loss=0.0101]Steps:  14%|█▍        | 3573/24850 [1:25:34<8:44:48,  1.48s/it, lr=7e-5, step_loss=0.0101]Steps:  14%|█▍        | 3573/24850 [1:25:34<8:44:48,  1.48s/it, lr=7e-5, step_loss=0.00853]Steps:  14%|█▍        | 3574/24850 [1:25:35<8:42:44,  1.47s/it, lr=7e-5, step_loss=0.00853]Steps:  14%|█▍        | 3574/24850 [1:25:35<8:42:44,  1.47s/it, lr=7e-5, step_loss=0.0178] Steps:  14%|█▍        | 3575/24850 [1:25:37<8:44:42,  1.48s/it, lr=7e-5, step_loss=0.0178]Steps:  14%|█▍        | 3575/24850 [1:25:37<8:44:42,  1.48s/it, lr=7e-5, step_loss=0.0102]Steps:  14%|█▍        | 3576/24850 [1:25:38<8:42:52,  1.47s/it, lr=7e-5, step_loss=0.0102]Steps:  14%|█▍        | 3576/24850 [1:25:38<8:42:52,  1.47s/it, lr=7e-5, step_loss=0.0414](512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512)Steps:  14%|█▍        | 3577/24850 [1:25:40<8:42:30,  1.47s/it, lr=7e-5, step_loss=0.0414]Steps:  14%|█▍        | 3577/24850 [1:25:40<8:42:30,  1.47s/it, lr=7e-5, step_loss=0.0431]Steps:  14%|█▍        | 3578/24850 [1:25:41<8:42:47,  1.47s/it, lr=7e-5, step_loss=0.0431]Steps:  14%|█▍        | 3578/24850 [1:25:41<8:42:47,  1.47s/it, lr=7e-5, step_loss=0.0418]Steps:  14%|█▍        | 3579/24850 [1:25:42<8:41:41,  1.47s/it, lr=7e-5, step_loss=0.0418]Steps:  14%|█▍        | 3579/24850 [1:25:42<8:41:41,  1.47s/it, lr=7e-5, step_loss=0.000626]Steps:  14%|█▍        | 3580/24850 [1:25:44<8:41:17,  1.47s/it, lr=7e-5, step_loss=0.000626]Steps:  14%|█▍        | 3580/24850 [1:25:44<8:41:17,  1.47s/it, lr=7e-5, step_loss=0.0307]  Steps:  14%|█▍        | 3581/24850 [1:25:45<8:41:03,  1.47s/it, lr=7e-5, step_loss=0.0307]Steps:  14%|█▍        | 3581/24850 [1:25:45<8:41:03,  1.47s/it, lr=7e-5, step_loss=0.0535]Steps:  14%|█▍        | 3582/24850 [1:25:47<8:40:41,  1.47s/it, lr=7e-5, step_loss=0.0535]Steps:  14%|█▍        | 3582/24850 [1:25:47<8:40:41,  1.47s/it, lr=7e-5, step_loss=0.00968]Steps:  14%|█▍        | 3583/24850 [1:25:48<8:39:48,  1.47s/it, lr=7e-5, step_loss=0.00968]Steps:  14%|█▍        | 3583/24850 [1:25:48<8:39:48,  1.47s/it, lr=7e-5, step_loss=0.0609] Steps:  14%|█▍        | 3584/24850 [1:25:50<8:39:25,  1.47s/it, lr=7e-5, step_loss=0.0609]Steps:  14%|█▍        | 3584/24850 [1:25:50<8:39:25,  1.47s/it, lr=7e-5, step_loss=0.0324]Steps:  14%|█▍        | 3585/24850 [1:25:51<8:40:21,  1.47s/it, lr=7e-5, step_loss=0.0324]Steps:  14%|█▍        | 3585/24850 [1:25:51<8:40:21,  1.47s/it, lr=7e-5, step_loss=0.00951]Steps:  14%|█▍        | 3586/24850 [1:25:53<8:41:14,  1.47s/it, lr=7e-5, step_loss=0.00951]Steps:  14%|█▍        | 3586/24850 [1:25:53<8:41:14,  1.47s/it, lr=7e-5, step_loss=0.0733] Steps:  14%|█▍        | 3587/24850 [1:25:54<8:40:04,  1.47s/it, lr=7e-5, step_loss=0.0733]Steps:  14%|█▍        | 3587/24850 [1:25:54<8:40:04,  1.47s/it, lr=7e-5, step_loss=0.0326]Steps:  14%|█▍        | 3588/24850 [1:25:56<8:44:33,  1.48s/it, lr=7e-5, step_loss=0.0326]Steps:  14%|█▍        | 3588/24850 [1:25:56<8:44:33,  1.48s/it, lr=7e-5, step_loss=0.000676]Steps:  14%|█▍        | 3589/24850 [1:25:57<8:43:55,  1.48s/it, lr=7e-5, step_loss=0.000676]Steps:  14%|█▍        | 3589/24850 [1:25:57<8:43:55,  1.48s/it, lr=7e-5, step_loss=0.025]   Steps:  14%|█▍        | 3590/24850 [1:25:59<8:41:50,  1.47s/it, lr=7e-5, step_loss=0.025]Steps:  14%|█▍        | 3590/24850 [1:25:59<8:41:50,  1.47s/it, lr=7e-5, step_loss=0.0243]Steps:  14%|█▍        | 3591/24850 [1:26:00<8:40:18,  1.47s/it, lr=7e-5, step_loss=0.0243]Steps:  14%|█▍        | 3591/24850 [1:26:00<8:40:18,  1.47s/it, lr=7e-5, step_loss=0.0187]Steps:  14%|█▍        | 3592/24850 [1:26:02<8:39:57,  1.47s/it, lr=7e-5, step_loss=0.0187]Steps:  14%|█▍        | 3592/24850 [1:26:02<8:39:57,  1.47s/it, lr=7e-5, step_loss=0.00432]Steps:  14%|█▍        | 3593/24850 [1:26:04<10:24:13,  1.76s/it, lr=7e-5, step_loss=0.00432]Steps:  14%|█▍        | 3593/24850 [1:26:04<10:24:13,  1.76s/it, lr=7e-5, step_loss=0.0167] Steps:  14%|█▍        | 3594/24850 [1:26:05<9:53:34,  1.68s/it, lr=7e-5, step_loss=0.0167] Steps:  14%|█▍        | 3594/24850 [1:26:05<9:53:34,  1.68s/it, lr=7e-5, step_loss=0.00161]Steps:  14%|█▍        | 3595/24850 [1:26:07<9:30:40,  1.61s/it, lr=7e-5, step_loss=0.00161]Steps:  14%|█▍        | 3595/24850 [1:26:07<9:30:40,  1.61s/it, lr=7e-5, step_loss=0.0242] Steps:  14%|█▍        | 3596/24850 [1:26:08<9:16:06,  1.57s/it, lr=7e-5, step_loss=0.0242]Steps:  14%|█▍        | 3596/24850 [1:26:08<9:16:06,  1.57s/it, lr=7e-5, step_loss=0.0914]Steps:  14%|█▍        | 3597/24850 [1:26:10<9:05:42,  1.54s/it, lr=7e-5, step_loss=0.0914]Steps:  14%|█▍        | 3597/24850 [1:26:10<9:05:42,  1.54s/it, lr=7e-5, step_loss=0.0202]Steps:  14%|█▍        | 3598/24850 [1:26:11<8:57:36,  1.52s/it, lr=7e-5, step_loss=0.0202]Steps:  14%|█▍        | 3598/24850 [1:26:11<8:57:36,  1.52s/it, lr=7e-5, step_loss=0.0183]Steps:  14%|█▍        | 3599/24850 [1:26:13<8:52:31,  1.50s/it, lr=7e-5, step_loss=0.0183]Steps:  14%|█▍        | 3599/24850 [1:26:13<8:52:31,  1.50s/it, lr=7e-5, step_loss=0.0266]Steps:  14%|█▍        | 3600/24850 [1:26:14<8:48:30,  1.49s/it, lr=7e-5, step_loss=0.0266]Steps:  14%|█▍        | 3600/24850 [1:26:14<8:48:30,  1.49s/it, lr=7e-5, step_loss=0.33]  Steps:  14%|█▍        | 3601/24850 [1:26:16<8:46:04,  1.49s/it, lr=7e-5, step_loss=0.33]Steps:  14%|█▍        | 3601/24850 [1:26:16<8:46:04,  1.49s/it, lr=7e-5, step_loss=0.0842]Steps:  14%|█▍        | 3602/24850 [1:26:17<8:45:35,  1.48s/it, lr=7e-5, step_loss=0.0842]Steps:  14%|█▍        | 3602/24850 [1:26:17<8:45:35,  1.48s/it, lr=7e-5, step_loss=0.04]  Steps:  14%|█▍        | 3603/24850 [1:26:19<8:42:24,  1.48s/it, lr=7e-5, step_loss=0.04]Steps:  14%|█▍        | 3603/24850 [1:26:19<8:42:24,  1.48s/it, lr=7e-5, step_loss=0.00719] torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:  15%|█▍        | 3604/24850 [1:26:20<8:41:58,  1.47s/it, lr=7e-5, step_loss=0.00719]Steps:  15%|█▍        | 3604/24850 [1:26:20<8:41:58,  1.47s/it, lr=7e-5, step_loss=0.107]  Steps:  15%|█▍        | 3605/24850 [1:26:22<8:39:55,  1.47s/it, lr=7e-5, step_loss=0.107]Steps:  15%|█▍        | 3605/24850 [1:26:22<8:39:55,  1.47s/it, lr=7e-5, step_loss=0.0053]Steps:  15%|█▍        | 3606/24850 [1:26:23<8:42:19,  1.48s/it, lr=7e-5, step_loss=0.0053]Steps:  15%|█▍        | 3606/24850 [1:26:23<8:42:19,  1.48s/it, lr=7e-5, step_loss=0.00782]Steps:  15%|█▍        | 3607/24850 [1:26:25<8:44:23,  1.48s/it, lr=7e-5, step_loss=0.00782]Steps:  15%|█▍        | 3607/24850 [1:26:25<8:44:23,  1.48s/it, lr=7e-5, step_loss=0.109]  Steps:  15%|█▍        | 3608/24850 [1:26:26<8:43:38,  1.48s/it, lr=7e-5, step_loss=0.109]Steps:  15%|█▍        | 3608/24850 [1:26:26<8:43:38,  1.48s/it, lr=7e-5, step_loss=0.0617]Steps:  15%|█▍        | 3609/24850 [1:26:28<8:44:55,  1.48s/it, lr=7e-5, step_loss=0.0617]Steps:  15%|█▍        | 3609/24850 [1:26:28<8:44:55,  1.48s/it, lr=7e-5, step_loss=0.0726]Steps:  15%|█▍        | 3610/24850 [1:26:29<9:08:19,  1.55s/it, lr=7e-5, step_loss=0.0726]Steps:  15%|█▍        | 3610/24850 [1:26:29<9:08:19,  1.55s/it, lr=7e-5, step_loss=0.0216]Steps:  15%|█▍        | 3611/24850 [1:26:31<8:59:49,  1.52s/it, lr=7e-5, step_loss=0.0216]Steps:  15%|█▍        | 3611/24850 [1:26:31<8:59:49,  1.52s/it, lr=7e-5, step_loss=0.0538]Steps:  15%|█▍        | 3612/24850 [1:26:32<8:54:23,  1.51s/it, lr=7e-5, step_loss=0.0538]Steps:  15%|█▍        | 3612/24850 [1:26:32<8:54:23,  1.51s/it, lr=7e-5, step_loss=0.038] Steps:  15%|█▍        | 3613/24850 [1:26:34<8:51:53,  1.50s/it, lr=7e-5, step_loss=0.038]Steps:  15%|█▍        | 3613/24850 [1:26:34<8:51:53,  1.50s/it, lr=7e-5, step_loss=0.0249]Steps:  15%|█▍        | 3614/24850 [1:26:35<8:47:18,  1.49s/it, lr=7e-5, step_loss=0.0249]Steps:  15%|█▍        | 3614/24850 [1:26:35<8:47:18,  1.49s/it, lr=7e-5, step_loss=0.00759]Steps:  15%|█▍        | 3615/24850 [1:26:37<8:44:28,  1.48s/it, lr=7e-5, step_loss=0.00759]Steps:  15%|█▍        | 3615/24850 [1:26:37<8:44:28,  1.48s/it, lr=7e-5, step_loss=0.0195] Steps:  15%|█▍        | 3616/24850 [1:26:38<8:43:02,  1.48s/it, lr=7e-5, step_loss=0.0195]Steps:  15%|█▍        | 3616/24850 [1:26:38<8:43:02,  1.48s/it, lr=7e-5, step_loss=0.0742]Steps:  15%|█▍        | 3617/24850 [1:26:40<8:41:51,  1.47s/it, lr=7e-5, step_loss=0.0742]Steps:  15%|█▍        | 3617/24850 [1:26:40<8:41:51,  1.47s/it, lr=7e-5, step_loss=0.0161]Steps:  15%|█▍        | 3618/24850 [1:26:41<8:40:47,  1.47s/it, lr=7e-5, step_loss=0.0161]Steps:  15%|█▍        | 3618/24850 [1:26:41<8:40:47,  1.47s/it, lr=7e-5, step_loss=0.0504]Steps:  15%|█▍        | 3619/24850 [1:26:43<8:42:40,  1.48s/it, lr=7e-5, step_loss=0.0504]Steps:  15%|█▍        | 3619/24850 [1:26:43<8:42:40,  1.48s/it, lr=7e-5, step_loss=0.0675]Steps:  15%|█▍        | 3620/24850 [1:26:44<8:41:13,  1.47s/it, lr=7e-5, step_loss=0.0675]Steps:  15%|█▍        | 3620/24850 [1:26:44<8:41:13,  1.47s/it, lr=7e-5, step_loss=0.0358]Steps:  15%|█▍        | 3621/24850 [1:26:45<8:41:05,  1.47s/it, lr=7e-5, step_loss=0.0358]Steps:  15%|█▍        | 3621/24850 [1:26:45<8:41:05,  1.47s/it, lr=7e-5, step_loss=0.00758]Steps:  15%|█▍        | 3622/24850 [1:26:47<8:41:02,  1.47s/it, lr=7e-5, step_loss=0.00758]Steps:  15%|█▍        | 3622/24850 [1:26:47<8:41:02,  1.47s/it, lr=7e-5, step_loss=0.016]  Steps:  15%|█▍        | 3623/24850 [1:26:48<8:40:33,  1.47s/it, lr=7e-5, step_loss=0.016]Steps:  15%|█▍        | 3623/24850 [1:26:48<8:40:33,  1.47s/it, lr=7e-5, step_loss=0.0023]Steps:  15%|█▍        | 3624/24850 [1:26:50<8:40:08,  1.47s/it, lr=7e-5, step_loss=0.0023]Steps:  15%|█▍        | 3624/24850 [1:26:50<8:40:08,  1.47s/it, lr=7e-5, step_loss=0.0177]Steps:  15%|█▍        | 3625/24850 [1:26:51<8:39:16,  1.47s/it, lr=7e-5, step_loss=0.0177]Steps:  15%|█▍        | 3625/24850 [1:26:51<8:39:16,  1.47s/it, lr=7e-5, step_loss=0.0184]Steps:  15%|█▍        | 3626/24850 [1:26:53<8:39:43,  1.47s/it, lr=7e-5, step_loss=0.0184]Steps:  15%|█▍        | 3626/24850 [1:26:53<8:39:43,  1.47s/it, lr=7e-5, step_loss=0.0579]Steps:  15%|█▍        | 3627/24850 [1:26:54<8:39:04,  1.47s/it, lr=7e-5, step_loss=0.0579]Steps:  15%|█▍        | 3627/24850 [1:26:54<8:39:04,  1.47s/it, lr=7e-5, step_loss=0.0161]Steps:  15%|█▍        | 3628/24850 [1:26:56<8:39:23,  1.47s/it, lr=7e-5, step_loss=0.0161]Steps:  15%|█▍        | 3628/24850 [1:26:56<8:39:23,  1.47s/it, lr=7e-5, step_loss=0.0192]Steps:  15%|█▍        | 3629/24850 [1:26:57<8:40:37,  1.47s/it, lr=7e-5, step_loss=0.0192]Steps:  15%|█▍        | 3629/24850 [1:26:57<8:40:37,  1.47s/it, lr=7e-5, step_loss=0.0606]Steps:  15%|█▍        | 3630/24850 [1:26:59<8:40:27,  1.47s/it, lr=7e-5, step_loss=0.0606]Steps:  15%|█▍        | 3630/24850 [1:26:59<8:40:27,  1.47s/it, lr=7e-5, step_loss=0.157] torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  Steps:  15%|█▍        | 3631/24850 [1:27:00<8:40:09,  1.47s/it, lr=7e-5, step_loss=0.157]Steps:  15%|█▍        | 3631/24850 [1:27:00<8:40:09,  1.47s/it, lr=7e-5, step_loss=0.00714]Steps:  15%|█▍        | 3632/24850 [1:27:02<8:40:00,  1.47s/it, lr=7e-5, step_loss=0.00714]Steps:  15%|█▍        | 3632/24850 [1:27:02<8:40:00,  1.47s/it, lr=7e-5, step_loss=0.206]  Steps:  15%|█▍        | 3633/24850 [1:27:03<8:41:14,  1.47s/it, lr=7e-5, step_loss=0.206]Steps:  15%|█▍        | 3633/24850 [1:27:03<8:41:14,  1.47s/it, lr=7e-5, step_loss=0.266]Steps:  15%|█▍        | 3634/24850 [1:27:05<8:41:43,  1.48s/it, lr=7e-5, step_loss=0.266]Steps:  15%|█▍        | 3634/24850 [1:27:05<8:41:43,  1.48s/it, lr=7e-5, step_loss=0.064]Steps:  15%|█▍        | 3635/24850 [1:27:06<8:41:02,  1.47s/it, lr=7e-5, step_loss=0.064]Steps:  15%|█▍        | 3635/24850 [1:27:06<8:41:02,  1.47s/it, lr=7e-5, step_loss=0.00553]Steps:  15%|█▍        | 3636/24850 [1:27:08<8:40:28,  1.47s/it, lr=7e-5, step_loss=0.00553]Steps:  15%|█▍        | 3636/24850 [1:27:08<8:40:28,  1.47s/it, lr=7e-5, step_loss=0.0129] Steps:  15%|█▍        | 3637/24850 [1:27:09<8:39:50,  1.47s/it, lr=7e-5, step_loss=0.0129]Steps:  15%|█▍        | 3637/24850 [1:27:09<8:39:50,  1.47s/it, lr=7e-5, step_loss=0.0746]Steps:  15%|█▍        | 3638/24850 [1:27:10<8:39:34,  1.47s/it, lr=7e-5, step_loss=0.0746]Steps:  15%|█▍        | 3638/24850 [1:27:10<8:39:34,  1.47s/it, lr=7e-5, step_loss=0.016] Steps:  15%|█▍        | 3639/24850 [1:27:12<8:42:16,  1.48s/it, lr=7e-5, step_loss=0.016]Steps:  15%|█▍        | 3639/24850 [1:27:12<8:42:16,  1.48s/it, lr=7e-5, step_loss=0.0899]Steps:  15%|█▍        | 3640/24850 [1:27:13<8:44:54,  1.48s/it, lr=7e-5, step_loss=0.0899]Steps:  15%|█▍        | 3640/24850 [1:27:13<8:44:54,  1.48s/it, lr=7e-5, step_loss=0.0057]Steps:  15%|█▍        | 3641/24850 [1:27:15<8:43:26,  1.48s/it, lr=7e-5, step_loss=0.0057]Steps:  15%|█▍        | 3641/24850 [1:27:15<8:43:26,  1.48s/it, lr=7e-5, step_loss=0.0141]Steps:  15%|█▍        | 3642/24850 [1:27:16<8:42:30,  1.48s/it, lr=7e-5, step_loss=0.0141]Steps:  15%|█▍        | 3642/24850 [1:27:16<8:42:30,  1.48s/it, lr=7e-5, step_loss=0.0145]Steps:  15%|█▍        | 3643/24850 [1:27:19<10:26:19,  1.77s/it, lr=7e-5, step_loss=0.0145]Steps:  15%|█▍        | 3643/24850 [1:27:19<10:26:19,  1.77s/it, lr=7e-5, step_loss=0.0331]Steps:  15%|█▍        | 3644/24850 [1:27:20<9:55:31,  1.68s/it, lr=7e-5, step_loss=0.0331] Steps:  15%|█▍        | 3644/24850 [1:27:20<9:55:31,  1.68s/it, lr=7e-5, step_loss=0.00584]Steps:  15%|█▍        | 3645/24850 [1:27:22<9:31:19,  1.62s/it, lr=7e-5, step_loss=0.00584]Steps:  15%|█▍        | 3645/24850 [1:27:22<9:31:19,  1.62s/it, lr=7e-5, step_loss=0.0095] Steps:  15%|█▍        | 3646/24850 [1:27:23<9:16:27,  1.57s/it, lr=7e-5, step_loss=0.0095]Steps:  15%|█▍        | 3646/24850 [1:27:23<9:16:27,  1.57s/it, lr=7e-5, step_loss=0.0127]Steps:  15%|█▍        | 3647/24850 [1:27:25<9:07:21,  1.55s/it, lr=7e-5, step_loss=0.0127]Steps:  15%|█▍        | 3647/24850 [1:27:25<9:07:21,  1.55s/it, lr=7e-5, step_loss=0.0265]Steps:  15%|█▍        | 3648/24850 [1:27:26<8:59:04,  1.53s/it, lr=7e-5, step_loss=0.0265]Steps:  15%|█▍        | 3648/24850 [1:27:26<8:59:04,  1.53s/it, lr=7e-5, step_loss=0.00597]Steps:  15%|█▍        | 3649/24850 [1:27:28<8:53:44,  1.51s/it, lr=7e-5, step_loss=0.00597]Steps:  15%|█▍        | 3649/24850 [1:27:28<8:53:44,  1.51s/it, lr=7e-5, step_loss=0.0336] Steps:  15%|█▍        | 3650/24850 [1:27:29<8:48:52,  1.50s/it, lr=7e-5, step_loss=0.0336]Steps:  15%|█▍        | 3650/24850 [1:27:29<8:48:52,  1.50s/it, lr=7e-5, step_loss=0.0181]Steps:  15%|█▍        | 3651/24850 [1:27:31<8:43:52,  1.48s/it, lr=7e-5, step_loss=0.0181]Steps:  15%|█▍        | 3651/24850 [1:27:31<8:43:52,  1.48s/it, lr=7e-5, step_loss=0.00318]Steps:  15%|█▍        | 3652/24850 [1:27:32<8:41:18,  1.48s/it, lr=7e-5, step_loss=0.00318]Steps:  15%|█▍        | 3652/24850 [1:27:32<8:41:18,  1.48s/it, lr=7e-5, step_loss=0.014]  Steps:  15%|█▍        | 3653/24850 [1:27:34<8:39:40,  1.47s/it, lr=7e-5, step_loss=0.014]Steps:  15%|█▍        | 3653/24850 [1:27:34<8:39:40,  1.47s/it, lr=7e-5, step_loss=0.0314]Steps:  15%|█▍        | 3654/24850 [1:27:35<8:38:44,  1.47s/it, lr=7e-5, step_loss=0.0314]Steps:  15%|█▍        | 3654/24850 [1:27:35<8:38:44,  1.47s/it, lr=7e-5, step_loss=0.0291]Steps:  15%|█▍        | 3655/24850 [1:27:36<8:37:30,  1.46s/it, lr=7e-5, step_loss=0.0291]Steps:  15%|█▍        | 3655/24850 [1:27:36<8:37:30,  1.46s/it, lr=7e-5, step_loss=0.000688]Steps:  15%|█▍        | 3656/24850 [1:27:38<8:35:53,  1.46s/it, lr=7e-5, step_loss=0.000688]Steps:  15%|█▍        | 3656/24850 [1:27:38<8:35:53,  1.46s/it, lr=7e-5, step_loss=0.00206] Steps:  15%|█▍        | 3657/24850 [1:27:39<8:36:58,  1.46s/it, lr=7e-5, step_loss=0.00206]Steps:  15%|█▍        | 3657/24850 [1:27:39<8:36:58,  1.46s/it, lr=7e-5, step_loss=0.0758] Steps:  15%|█▍        | 3658/24850 [1:27:41<8:37:33,  1.47s/it, lr=7e-5, step_loss=0.0758]Steps:  15%|█▍        | 3658/24850 [1:27:41<8:37:33,  1.47s/it, lr=7e-5, step_loss=0.198] mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:  15%|█▍        | 3659/24850 [1:27:42<8:37:45,  1.47s/it, lr=7e-5, step_loss=0.198]Steps:  15%|█▍        | 3659/24850 [1:27:42<8:37:45,  1.47s/it, lr=7e-5, step_loss=0.0102]Steps:  15%|█▍        | 3660/24850 [1:27:44<8:38:08,  1.47s/it, lr=7e-5, step_loss=0.0102]Steps:  15%|█▍        | 3660/24850 [1:27:44<8:38:08,  1.47s/it, lr=7e-5, step_loss=0.13]  Steps:  15%|█▍        | 3661/24850 [1:27:45<8:39:22,  1.47s/it, lr=7e-5, step_loss=0.13]Steps:  15%|█▍        | 3661/24850 [1:27:45<8:39:22,  1.47s/it, lr=7e-5, step_loss=0.0247]Steps:  15%|█▍        | 3662/24850 [1:27:47<8:39:45,  1.47s/it, lr=7e-5, step_loss=0.0247]Steps:  15%|█▍        | 3662/24850 [1:27:47<8:39:45,  1.47s/it, lr=7e-5, step_loss=0.011] Steps:  15%|█▍        | 3663/24850 [1:27:48<8:39:17,  1.47s/it, lr=7e-5, step_loss=0.011]Steps:  15%|█▍        | 3663/24850 [1:27:48<8:39:17,  1.47s/it, lr=7e-5, step_loss=0.176]Steps:  15%|█▍        | 3664/24850 [1:27:50<8:38:31,  1.47s/it, lr=7e-5, step_loss=0.176]Steps:  15%|█▍        | 3664/24850 [1:27:50<8:38:31,  1.47s/it, lr=7e-5, step_loss=0.0192]Steps:  15%|█▍        | 3665/24850 [1:27:51<8:39:21,  1.47s/it, lr=7e-5, step_loss=0.0192]Steps:  15%|█▍        | 3665/24850 [1:27:51<8:39:21,  1.47s/it, lr=7e-5, step_loss=0.0255]Steps:  15%|█▍        | 3666/24850 [1:27:53<8:38:25,  1.47s/it, lr=7e-5, step_loss=0.0255]Steps:  15%|█▍        | 3666/24850 [1:27:53<8:38:25,  1.47s/it, lr=7e-5, step_loss=0.00464]Steps:  15%|█▍        | 3667/24850 [1:27:54<8:38:43,  1.47s/it, lr=7e-5, step_loss=0.00464]Steps:  15%|█▍        | 3667/24850 [1:27:54<8:38:43,  1.47s/it, lr=7e-5, step_loss=0.0277] Steps:  15%|█▍        | 3668/24850 [1:27:56<8:37:44,  1.47s/it, lr=7e-5, step_loss=0.0277]Steps:  15%|█▍        | 3668/24850 [1:27:56<8:37:44,  1.47s/it, lr=7e-5, step_loss=0.00351]Steps:  15%|█▍        | 3669/24850 [1:27:57<8:36:59,  1.46s/it, lr=7e-5, step_loss=0.00351]Steps:  15%|█▍        | 3669/24850 [1:27:57<8:36:59,  1.46s/it, lr=7e-5, step_loss=0.00558]Steps:  15%|█▍        | 3670/24850 [1:27:58<8:37:32,  1.47s/it, lr=7e-5, step_loss=0.00558]Steps:  15%|█▍        | 3670/24850 [1:27:58<8:37:32,  1.47s/it, lr=7e-5, step_loss=0.00499]Steps:  15%|█▍        | 3671/24850 [1:28:00<8:37:54,  1.47s/it, lr=7e-5, step_loss=0.00499]Steps:  15%|█▍        | 3671/24850 [1:28:00<8:37:54,  1.47s/it, lr=7e-5, step_loss=0.00908]Steps:  15%|█▍        | 3672/24850 [1:28:01<8:39:01,  1.47s/it, lr=7e-5, step_loss=0.00908]Steps:  15%|█▍        | 3672/24850 [1:28:01<8:39:01,  1.47s/it, lr=7e-5, step_loss=0.0224] Steps:  15%|█▍        | 3673/24850 [1:28:03<8:40:06,  1.47s/it, lr=7e-5, step_loss=0.0224]Steps:  15%|█▍        | 3673/24850 [1:28:03<8:40:06,  1.47s/it, lr=7e-5, step_loss=0.0183]Steps:  15%|█▍        | 3674/24850 [1:28:04<8:39:45,  1.47s/it, lr=7e-5, step_loss=0.0183]Steps:  15%|█▍        | 3674/24850 [1:28:04<8:39:45,  1.47s/it, lr=7e-5, step_loss=0.0288]Steps:  15%|█▍        | 3675/24850 [1:28:06<8:40:44,  1.48s/it, lr=7e-5, step_loss=0.0288]Steps:  15%|█▍        | 3675/24850 [1:28:06<8:40:44,  1.48s/it, lr=7e-5, step_loss=0.0635]Steps:  15%|█▍        | 3676/24850 [1:28:07<8:42:22,  1.48s/it, lr=7e-5, step_loss=0.0635]Steps:  15%|█▍        | 3676/24850 [1:28:07<8:42:22,  1.48s/it, lr=7e-5, step_loss=0.0539]Steps:  15%|█▍        | 3677/24850 [1:28:09<8:42:22,  1.48s/it, lr=7e-5, step_loss=0.0539]Steps:  15%|█▍        | 3677/24850 [1:28:09<8:42:22,  1.48s/it, lr=7e-5, step_loss=0.0428]Steps:  15%|█▍        | 3678/24850 [1:28:10<8:41:11,  1.48s/it, lr=7e-5, step_loss=0.0428]Steps:  15%|█▍        | 3678/24850 [1:28:10<8:41:11,  1.48s/it, lr=7e-5, step_loss=0.00663]Steps:  15%|█▍        | 3679/24850 [1:28:12<8:39:54,  1.47s/it, lr=7e-5, step_loss=0.00663]Steps:  15%|█▍        | 3679/24850 [1:28:12<8:39:54,  1.47s/it, lr=7e-5, step_loss=0.119]  Steps:  15%|█▍        | 3680/24850 [1:28:13<8:59:45,  1.53s/it, lr=7e-5, step_loss=0.119]Steps:  15%|█▍        | 3680/24850 [1:28:13<8:59:45,  1.53s/it, lr=7e-5, step_loss=0.00479]Steps:  15%|█▍        | 3681/24850 [1:28:15<8:53:36,  1.51s/it, lr=7e-5, step_loss=0.00479]Steps:  15%|█▍        | 3681/24850 [1:28:15<8:53:36,  1.51s/it, lr=7e-5, step_loss=0.0107] Steps:  15%|█▍        | 3682/24850 [1:28:16<8:49:41,  1.50s/it, lr=7e-5, step_loss=0.0107]Steps:  15%|█▍        | 3682/24850 [1:28:16<8:49:41,  1.50s/it, lr=7e-5, step_loss=0.00516]Steps:  15%|█▍        | 3683/24850 [1:28:18<8:50:54,  1.50s/it, lr=7e-5, step_loss=0.00516]Steps:  15%|█▍        | 3683/24850 [1:28:18<8:50:54,  1.50s/it, lr=7e-5, step_loss=0.00184]Steps:  15%|█▍        | 3684/24850 [1:28:19<8:46:33,  1.49s/it, lr=7e-5, step_loss=0.00184]Steps:  15%|█▍        | 3684/24850 [1:28:19<8:46:33,  1.49s/it, lr=7e-5, step_loss=0.00927]Steps:  15%|█▍        | 3685/24850 [1:28:21<8:43:13,  1.48s/it, lr=7e-5, step_loss=0.00927]Steps:  15%|█▍        | 3685/24850 [1:28:21<8:43:13,  1.48s/it, lr=7e-5, step_loss=0.0563] torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) Steps:  15%|█▍        | 3686/24850 [1:28:22<8:42:28,  1.48s/it, lr=7e-5, step_loss=0.0563]Steps:  15%|█▍        | 3686/24850 [1:28:22<8:42:28,  1.48s/it, lr=7e-5, step_loss=0.00762]Steps:  15%|█▍        | 3687/24850 [1:28:24<8:41:07,  1.48s/it, lr=7e-5, step_loss=0.00762]Steps:  15%|█▍        | 3687/24850 [1:28:24<8:41:07,  1.48s/it, lr=7e-5, step_loss=0.0405] Steps:  15%|█▍        | 3688/24850 [1:28:25<8:40:42,  1.48s/it, lr=7e-5, step_loss=0.0405]Steps:  15%|█▍        | 3688/24850 [1:28:25<8:40:42,  1.48s/it, lr=7e-5, step_loss=0.0441]Steps:  15%|█▍        | 3689/24850 [1:28:27<8:38:02,  1.47s/it, lr=7e-5, step_loss=0.0441]Steps:  15%|█▍        | 3689/24850 [1:28:27<8:38:02,  1.47s/it, lr=7e-5, step_loss=0.00755]Steps:  15%|█▍        | 3690/24850 [1:28:28<8:38:42,  1.47s/it, lr=7e-5, step_loss=0.00755]Steps:  15%|█▍        | 3690/24850 [1:28:28<8:38:42,  1.47s/it, lr=7e-5, step_loss=0.0311] Steps:  15%|█▍        | 3691/24850 [1:28:30<8:37:47,  1.47s/it, lr=7e-5, step_loss=0.0311]Steps:  15%|█▍        | 3691/24850 [1:28:30<8:37:47,  1.47s/it, lr=7e-5, step_loss=0.00556]Steps:  15%|█▍        | 3692/24850 [1:28:31<8:37:41,  1.47s/it, lr=7e-5, step_loss=0.00556]Steps:  15%|█▍        | 3692/24850 [1:28:31<8:37:41,  1.47s/it, lr=7e-5, step_loss=0.0525] Steps:  15%|█▍        | 3693/24850 [1:28:34<10:20:48,  1.76s/it, lr=7e-5, step_loss=0.0525]Steps:  15%|█▍        | 3693/24850 [1:28:34<10:20:48,  1.76s/it, lr=7e-5, step_loss=0.038] Steps:  15%|█▍        | 3694/24850 [1:28:35<9:50:45,  1.68s/it, lr=7e-5, step_loss=0.038] Steps:  15%|█▍        | 3694/24850 [1:28:35<9:50:45,  1.68s/it, lr=7e-5, step_loss=0.0376]Steps:  15%|█▍        | 3695/24850 [1:28:36<9:28:43,  1.61s/it, lr=7e-5, step_loss=0.0376]Steps:  15%|█▍        | 3695/24850 [1:28:36<9:28:43,  1.61s/it, lr=7e-5, step_loss=0.226] Steps:  15%|█▍        | 3696/24850 [1:28:38<9:12:47,  1.57s/it, lr=7e-5, step_loss=0.226]Steps:  15%|█▍        | 3696/24850 [1:28:38<9:12:47,  1.57s/it, lr=7e-5, step_loss=0.0435]Steps:  15%|█▍        | 3697/24850 [1:28:39<9:00:39,  1.53s/it, lr=7e-5, step_loss=0.0435]Steps:  15%|█▍        | 3697/24850 [1:28:39<9:00:39,  1.53s/it, lr=7e-5, step_loss=0.000551]Steps:  15%|█▍        | 3698/24850 [1:28:41<8:54:04,  1.51s/it, lr=7e-5, step_loss=0.000551]Steps:  15%|█▍        | 3698/24850 [1:28:41<8:54:04,  1.51s/it, lr=7e-5, step_loss=0.0156]  Steps:  15%|█▍        | 3699/24850 [1:28:42<8:49:34,  1.50s/it, lr=7e-5, step_loss=0.0156]Steps:  15%|█▍        | 3699/24850 [1:28:42<8:49:34,  1.50s/it, lr=7e-5, step_loss=0.0109]Steps:  15%|█▍        | 3700/24850 [1:28:44<8:49:06,  1.50s/it, lr=7e-5, step_loss=0.0109]Steps:  15%|█▍        | 3700/24850 [1:28:44<8:49:06,  1.50s/it, lr=7e-5, step_loss=0.0101]Steps:  15%|█▍        | 3701/24850 [1:28:45<8:46:25,  1.49s/it, lr=7e-5, step_loss=0.0101]Steps:  15%|█▍        | 3701/24850 [1:28:45<8:46:25,  1.49s/it, lr=7e-5, step_loss=0.0341]Steps:  15%|█▍        | 3702/24850 [1:28:47<8:45:21,  1.49s/it, lr=7e-5, step_loss=0.0341]Steps:  15%|█▍        | 3702/24850 [1:28:47<8:45:21,  1.49s/it, lr=7e-5, step_loss=0.0111]Steps:  15%|█▍        | 3703/24850 [1:28:48<8:45:01,  1.49s/it, lr=7e-5, step_loss=0.0111]Steps:  15%|█▍        | 3703/24850 [1:28:48<8:45:01,  1.49s/it, lr=7e-5, step_loss=0.00831]Steps:  15%|█▍        | 3704/24850 [1:28:50<8:44:55,  1.49s/it, lr=7e-5, step_loss=0.00831]Steps:  15%|█▍        | 3704/24850 [1:28:50<8:44:55,  1.49s/it, lr=7e-5, step_loss=0.113]  Steps:  15%|█▍        | 3705/24850 [1:28:51<8:41:59,  1.48s/it, lr=7e-5, step_loss=0.113]Steps:  15%|█▍        | 3705/24850 [1:28:51<8:41:59,  1.48s/it, lr=7e-5, step_loss=0.00934]Steps:  15%|█▍        | 3706/24850 [1:28:53<8:44:50,  1.49s/it, lr=7e-5, step_loss=0.00934]Steps:  15%|█▍        | 3706/24850 [1:28:53<8:44:50,  1.49s/it, lr=7e-5, step_loss=0.0496] Steps:  15%|█▍        | 3707/24850 [1:28:54<8:44:04,  1.49s/it, lr=7e-5, step_loss=0.0496]Steps:  15%|█▍        | 3707/24850 [1:28:54<8:44:04,  1.49s/it, lr=7e-5, step_loss=0.0756]Steps:  15%|█▍        | 3708/24850 [1:28:56<8:41:10,  1.48s/it, lr=7e-5, step_loss=0.0756]Steps:  15%|█▍        | 3708/24850 [1:28:56<8:41:10,  1.48s/it, lr=7e-5, step_loss=0.00779]Steps:  15%|█▍        | 3709/24850 [1:28:57<8:40:00,  1.48s/it, lr=7e-5, step_loss=0.00779]Steps:  15%|█▍        | 3709/24850 [1:28:57<8:40:00,  1.48s/it, lr=7e-5, step_loss=0.0328] Steps:  15%|█▍        | 3710/24850 [1:28:59<8:39:26,  1.47s/it, lr=7e-5, step_loss=0.0328]Steps:  15%|█▍        | 3710/24850 [1:28:59<8:39:26,  1.47s/it, lr=7e-5, step_loss=0.0494]Steps:  15%|█▍        | 3711/24850 [1:29:00<8:42:21,  1.48s/it, lr=7e-5, step_loss=0.0494]Steps:  15%|█▍        | 3711/24850 [1:29:00<8:42:21,  1.48s/it, lr=7e-5, step_loss=0.00393]Steps:  15%|█▍        | 3712/24850 [1:29:02<8:41:27,  1.48s/it, lr=7e-5, step_loss=0.00393]Steps:  15%|█▍        | 3712/24850 [1:29:02<8:41:27,  1.48s/it, lr=7e-5, step_loss=0.0183] torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:  15%|█▍        | 3713/24850 [1:29:03<8:43:44,  1.49s/it, lr=7e-5, step_loss=0.0183]Steps:  15%|█▍        | 3713/24850 [1:29:03<8:43:44,  1.49s/it, lr=7e-5, step_loss=0.058] Steps:  15%|█▍        | 3714/24850 [1:29:05<8:42:28,  1.48s/it, lr=7e-5, step_loss=0.058]Steps:  15%|█▍        | 3714/24850 [1:29:05<8:42:28,  1.48s/it, lr=7e-5, step_loss=0.0433]Steps:  15%|█▍        | 3715/24850 [1:29:06<8:41:01,  1.48s/it, lr=7e-5, step_loss=0.0433]Steps:  15%|█▍        | 3715/24850 [1:29:06<8:41:01,  1.48s/it, lr=7e-5, step_loss=0.0208]Steps:  15%|█▍        | 3716/24850 [1:29:08<8:43:57,  1.49s/it, lr=7e-5, step_loss=0.0208]Steps:  15%|█▍        | 3716/24850 [1:29:08<8:43:57,  1.49s/it, lr=7e-5, step_loss=0.0111]Steps:  15%|█▍        | 3717/24850 [1:29:09<8:42:13,  1.48s/it, lr=7e-5, step_loss=0.0111]Steps:  15%|█▍        | 3717/24850 [1:29:09<8:42:13,  1.48s/it, lr=7e-5, step_loss=0.00259]Steps:  15%|█▍        | 3718/24850 [1:29:10<8:40:53,  1.48s/it, lr=7e-5, step_loss=0.00259]Steps:  15%|█▍        | 3718/24850 [1:29:10<8:40:53,  1.48s/it, lr=7e-5, step_loss=0.00903]Steps:  15%|█▍        | 3719/24850 [1:29:12<8:40:51,  1.48s/it, lr=7e-5, step_loss=0.00903]Steps:  15%|█▍        | 3719/24850 [1:29:12<8:40:51,  1.48s/it, lr=7e-5, step_loss=0.0099] Steps:  15%|█▍        | 3720/24850 [1:29:13<8:39:19,  1.47s/it, lr=7e-5, step_loss=0.0099]Steps:  15%|█▍        | 3720/24850 [1:29:13<8:39:19,  1.47s/it, lr=7e-5, step_loss=0.00915]Steps:  15%|█▍        | 3721/24850 [1:29:15<8:38:05,  1.47s/it, lr=7e-5, step_loss=0.00915]Steps:  15%|█▍        | 3721/24850 [1:29:15<8:38:05,  1.47s/it, lr=7e-5, step_loss=0.00199]Steps:  15%|█▍        | 3722/24850 [1:29:16<8:37:59,  1.47s/it, lr=7e-5, step_loss=0.00199]Steps:  15%|█▍        | 3722/24850 [1:29:16<8:37:59,  1.47s/it, lr=7e-5, step_loss=0.0196] Steps:  15%|█▍        | 3723/24850 [1:29:18<8:40:04,  1.48s/it, lr=7e-5, step_loss=0.0196]Steps:  15%|█▍        | 3723/24850 [1:29:18<8:40:04,  1.48s/it, lr=7e-5, step_loss=0.00332]Steps:  15%|█▍        | 3724/24850 [1:29:19<8:38:51,  1.47s/it, lr=7e-5, step_loss=0.00332]Steps:  15%|█▍        | 3724/24850 [1:29:19<8:38:51,  1.47s/it, lr=7e-5, step_loss=0.0653] Steps:  15%|█▍        | 3725/24850 [1:29:21<8:37:11,  1.47s/it, lr=7e-5, step_loss=0.0653]Steps:  15%|█▍        | 3725/24850 [1:29:21<8:37:11,  1.47s/it, lr=7e-5, step_loss=0.000909]Steps:  15%|█▍        | 3726/24850 [1:29:22<8:36:00,  1.47s/it, lr=7e-5, step_loss=0.000909]Steps:  15%|█▍        | 3726/24850 [1:29:22<8:36:00,  1.47s/it, lr=7e-5, step_loss=0.00424] Steps:  15%|█▍        | 3727/24850 [1:29:24<8:36:47,  1.47s/it, lr=7e-5, step_loss=0.00424]Steps:  15%|█▍        | 3727/24850 [1:29:24<8:36:47,  1.47s/it, lr=7e-5, step_loss=0.0635] Steps:  15%|█▌        | 3728/24850 [1:29:25<8:36:58,  1.47s/it, lr=7e-5, step_loss=0.0635]Steps:  15%|█▌        | 3728/24850 [1:29:25<8:36:58,  1.47s/it, lr=7e-5, step_loss=0.0821]Steps:  15%|█▌        | 3729/24850 [1:29:27<8:35:57,  1.47s/it, lr=7e-5, step_loss=0.0821]Steps:  15%|█▌        | 3729/24850 [1:29:27<8:35:57,  1.47s/it, lr=7e-5, step_loss=0.0124]Steps:  15%|█▌        | 3730/24850 [1:29:28<8:37:38,  1.47s/it, lr=7e-5, step_loss=0.0124]Steps:  15%|█▌        | 3730/24850 [1:29:28<8:37:38,  1.47s/it, lr=7e-5, step_loss=0.00257]Steps:  15%|█▌        | 3731/24850 [1:29:30<8:37:35,  1.47s/it, lr=7e-5, step_loss=0.00257]Steps:  15%|█▌        | 3731/24850 [1:29:30<8:37:35,  1.47s/it, lr=7e-5, step_loss=0.0031] Steps:  15%|█▌        | 3732/24850 [1:29:31<8:35:03,  1.46s/it, lr=7e-5, step_loss=0.0031]Steps:  15%|█▌        | 3732/24850 [1:29:31<8:35:03,  1.46s/it, lr=7e-5, step_loss=0.00451]Steps:  15%|█▌        | 3733/24850 [1:29:33<8:35:11,  1.46s/it, lr=7e-5, step_loss=0.00451]Steps:  15%|█▌        | 3733/24850 [1:29:33<8:35:11,  1.46s/it, lr=7e-5, step_loss=0.0376] Steps:  15%|█▌        | 3734/24850 [1:29:34<8:35:56,  1.47s/it, lr=7e-5, step_loss=0.0376]Steps:  15%|█▌        | 3734/24850 [1:29:34<8:35:56,  1.47s/it, lr=7e-5, step_loss=0.019] Steps:  15%|█▌        | 3735/24850 [1:29:35<8:36:17,  1.47s/it, lr=7e-5, step_loss=0.019]Steps:  15%|█▌        | 3735/24850 [1:29:35<8:36:17,  1.47s/it, lr=7e-5, step_loss=0.00702]Steps:  15%|█▌        | 3736/24850 [1:29:37<8:36:03,  1.47s/it, lr=7e-5, step_loss=0.00702]Steps:  15%|█▌        | 3736/24850 [1:29:37<8:36:03,  1.47s/it, lr=7e-5, step_loss=0.0273] Steps:  15%|█▌        | 3737/24850 [1:29:38<8:37:55,  1.47s/it, lr=7e-5, step_loss=0.0273]Steps:  15%|█▌        | 3737/24850 [1:29:38<8:37:55,  1.47s/it, lr=7e-5, step_loss=0.0312]Steps:  15%|█▌        | 3738/24850 [1:29:40<8:37:37,  1.47s/it, lr=7e-5, step_loss=0.0312]Steps:  15%|█▌        | 3738/24850 [1:29:40<8:37:37,  1.47s/it, lr=7e-5, step_loss=0.0575]Steps:  15%|█▌        | 3739/24850 [1:29:41<8:37:36,  1.47s/it, lr=7e-5, step_loss=0.0575]Steps:  15%|█▌        | 3739/24850 [1:29:41<8:37:36,  1.47s/it, lr=7e-5, step_loss=0.01]  Steps:  15%|█▌        | 3740/24850 [1:29:43<8:36:46,  1.47s/it, lr=7e-5, step_loss=0.01]Steps:  15%|█▌        | 3740/24850 [1:29:43<8:36:46,  1.47s/it, lr=7e-5, step_loss=0.0266]torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
Steps:  15%|█▌        | 3741/24850 [1:29:44<8:38:10,  1.47s/it, lr=7e-5, step_loss=0.0266]Steps:  15%|█▌        | 3741/24850 [1:29:44<8:38:10,  1.47s/it, lr=7e-5, step_loss=0.0121]Steps:  15%|█▌        | 3742/24850 [1:29:46<8:38:49,  1.47s/it, lr=7e-5, step_loss=0.0121]Steps:  15%|█▌        | 3742/24850 [1:29:46<8:38:49,  1.47s/it, lr=7e-5, step_loss=0.019] Steps:  15%|█▌        | 3743/24850 [1:29:48<10:29:55,  1.79s/it, lr=7e-5, step_loss=0.019]Steps:  15%|█▌        | 3743/24850 [1:29:48<10:29:55,  1.79s/it, lr=7e-5, step_loss=0.0106]Steps:  15%|█▌        | 3744/24850 [1:29:50<9:57:01,  1.70s/it, lr=7e-5, step_loss=0.0106] Steps:  15%|█▌        | 3744/24850 [1:29:50<9:57:01,  1.70s/it, lr=7e-5, step_loss=0.0242]Steps:  15%|█▌        | 3745/24850 [1:29:51<9:33:09,  1.63s/it, lr=7e-5, step_loss=0.0242]Steps:  15%|█▌        | 3745/24850 [1:29:51<9:33:09,  1.63s/it, lr=7e-5, step_loss=0.00929]Steps:  15%|█▌        | 3746/24850 [1:29:53<9:16:02,  1.58s/it, lr=7e-5, step_loss=0.00929]Steps:  15%|█▌        | 3746/24850 [1:29:53<9:16:02,  1.58s/it, lr=7e-5, step_loss=0.00446]Steps:  15%|█▌        | 3747/24850 [1:29:54<9:04:42,  1.55s/it, lr=7e-5, step_loss=0.00446]Steps:  15%|█▌        | 3747/24850 [1:29:54<9:04:42,  1.55s/it, lr=7e-5, step_loss=0.00949]Steps:  15%|█▌        | 3748/24850 [1:29:56<8:55:51,  1.52s/it, lr=7e-5, step_loss=0.00949]Steps:  15%|█▌        | 3748/24850 [1:29:56<8:55:51,  1.52s/it, lr=7e-5, step_loss=0.121]  Steps:  15%|█▌        | 3749/24850 [1:29:57<8:50:13,  1.51s/it, lr=7e-5, step_loss=0.121]Steps:  15%|█▌        | 3749/24850 [1:29:57<8:50:13,  1.51s/it, lr=7e-5, step_loss=0.0384]Steps:  15%|█▌        | 3750/24850 [1:29:59<8:46:41,  1.50s/it, lr=7e-5, step_loss=0.0384]Steps:  15%|█▌        | 3750/24850 [1:29:59<8:46:41,  1.50s/it, lr=7e-5, step_loss=0.0533]Steps:  15%|█▌        | 3751/24850 [1:30:00<8:43:39,  1.49s/it, lr=7e-5, step_loss=0.0533]Steps:  15%|█▌        | 3751/24850 [1:30:00<8:43:39,  1.49s/it, lr=7e-5, step_loss=0.0414]Steps:  15%|█▌        | 3752/24850 [1:30:02<8:41:52,  1.48s/it, lr=7e-5, step_loss=0.0414]Steps:  15%|█▌        | 3752/24850 [1:30:02<8:41:52,  1.48s/it, lr=7e-5, step_loss=0.0295]Steps:  15%|█▌        | 3753/24850 [1:30:03<8:41:01,  1.48s/it, lr=7e-5, step_loss=0.0295]Steps:  15%|█▌        | 3753/24850 [1:30:03<8:41:01,  1.48s/it, lr=7e-5, step_loss=0.0754]Steps:  15%|█▌        | 3754/24850 [1:30:04<8:41:03,  1.48s/it, lr=7e-5, step_loss=0.0754]Steps:  15%|█▌        | 3754/24850 [1:30:04<8:41:03,  1.48s/it, lr=7e-5, step_loss=0.0133]Steps:  15%|█▌        | 3755/24850 [1:30:06<8:40:37,  1.48s/it, lr=7e-5, step_loss=0.0133]Steps:  15%|█▌        | 3755/24850 [1:30:06<8:40:37,  1.48s/it, lr=7e-5, step_loss=0.0296]Steps:  15%|█▌        | 3756/24850 [1:30:07<8:39:12,  1.48s/it, lr=7e-5, step_loss=0.0296]Steps:  15%|█▌        | 3756/24850 [1:30:07<8:39:12,  1.48s/it, lr=7e-5, step_loss=0.0601]Steps:  15%|█▌        | 3757/24850 [1:30:09<8:38:30,  1.47s/it, lr=7e-5, step_loss=0.0601]Steps:  15%|█▌        | 3757/24850 [1:30:09<8:38:30,  1.47s/it, lr=7e-5, step_loss=0.0184]Steps:  15%|█▌        | 3758/24850 [1:30:10<8:37:54,  1.47s/it, lr=7e-5, step_loss=0.0184]Steps:  15%|█▌        | 3758/24850 [1:30:10<8:37:54,  1.47s/it, lr=7e-5, step_loss=0.0249]Steps:  15%|█▌        | 3759/24850 [1:30:12<8:40:16,  1.48s/it, lr=7e-5, step_loss=0.0249]Steps:  15%|█▌        | 3759/24850 [1:30:12<8:40:16,  1.48s/it, lr=7e-5, step_loss=0.0323]Steps:  15%|█▌        | 3760/24850 [1:30:13<8:39:18,  1.48s/it, lr=7e-5, step_loss=0.0323]Steps:  15%|█▌        | 3760/24850 [1:30:13<8:39:18,  1.48s/it, lr=7e-5, step_loss=0.0124]Steps:  15%|█▌        | 3761/24850 [1:30:15<8:37:26,  1.47s/it, lr=7e-5, step_loss=0.0124]Steps:  15%|█▌        | 3761/24850 [1:30:15<8:37:26,  1.47s/it, lr=7e-5, step_loss=0.0039]Steps:  15%|█▌        | 3762/24850 [1:30:16<8:36:46,  1.47s/it, lr=7e-5, step_loss=0.0039]Steps:  15%|█▌        | 3762/24850 [1:30:16<8:36:46,  1.47s/it, lr=7e-5, step_loss=0.194] Steps:  15%|█▌        | 3763/24850 [1:30:18<8:36:49,  1.47s/it, lr=7e-5, step_loss=0.194]Steps:  15%|█▌        | 3763/24850 [1:30:18<8:36:49,  1.47s/it, lr=7e-5, step_loss=0.0576]Steps:  15%|█▌        | 3764/24850 [1:30:19<8:35:34,  1.47s/it, lr=7e-5, step_loss=0.0576]Steps:  15%|█▌        | 3764/24850 [1:30:19<8:35:34,  1.47s/it, lr=7e-5, step_loss=0.0215]Steps:  15%|█▌        | 3765/24850 [1:30:21<8:33:59,  1.46s/it, lr=7e-5, step_loss=0.0215]Steps:  15%|█▌        | 3765/24850 [1:30:21<8:33:59,  1.46s/it, lr=7e-5, step_loss=0.00189]Steps:  15%|█▌        | 3766/24850 [1:30:22<8:33:48,  1.46s/it, lr=7e-5, step_loss=0.00189]Steps:  15%|█▌        | 3766/24850 [1:30:22<8:33:48,  1.46s/it, lr=7e-5, step_loss=0.00322]Steps:  15%|█▌        | 3767/24850 [1:30:24<8:35:27,  1.47s/it, lr=7e-5, step_loss=0.00322]Steps:  15%|█▌        | 3767/24850 [1:30:24<8:35:27,  1.47s/it, lr=7e-5, step_loss=0.00484](512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512)Steps:  15%|█▌        | 3768/24850 [1:30:25<8:35:34,  1.47s/it, lr=7e-5, step_loss=0.00484]Steps:  15%|█▌        | 3768/24850 [1:30:25<8:35:34,  1.47s/it, lr=7e-5, step_loss=0.0527] Steps:  15%|█▌        | 3769/24850 [1:30:27<8:36:49,  1.47s/it, lr=7e-5, step_loss=0.0527]Steps:  15%|█▌        | 3769/24850 [1:30:27<8:36:49,  1.47s/it, lr=7e-5, step_loss=0.0163]Steps:  15%|█▌        | 3770/24850 [1:30:28<8:36:23,  1.47s/it, lr=7e-5, step_loss=0.0163]Steps:  15%|█▌        | 3770/24850 [1:30:28<8:36:23,  1.47s/it, lr=7e-5, step_loss=0.00683]Steps:  15%|█▌        | 3771/24850 [1:30:29<8:34:35,  1.46s/it, lr=7e-5, step_loss=0.00683]Steps:  15%|█▌        | 3771/24850 [1:30:29<8:34:35,  1.46s/it, lr=7e-5, step_loss=0.0063] Steps:  15%|█▌        | 3772/24850 [1:30:31<8:34:54,  1.47s/it, lr=7e-5, step_loss=0.0063]Steps:  15%|█▌        | 3772/24850 [1:30:31<8:34:54,  1.47s/it, lr=7e-5, step_loss=0.0269]Steps:  15%|█▌        | 3773/24850 [1:30:32<8:35:06,  1.47s/it, lr=7e-5, step_loss=0.0269]Steps:  15%|█▌        | 3773/24850 [1:30:32<8:35:06,  1.47s/it, lr=7e-5, step_loss=0.00147]Steps:  15%|█▌        | 3774/24850 [1:30:34<8:35:46,  1.47s/it, lr=7e-5, step_loss=0.00147]Steps:  15%|█▌        | 3774/24850 [1:30:34<8:35:46,  1.47s/it, lr=7e-5, step_loss=0.101]  Steps:  15%|█▌        | 3775/24850 [1:30:35<8:36:36,  1.47s/it, lr=7e-5, step_loss=0.101]Steps:  15%|█▌        | 3775/24850 [1:30:35<8:36:36,  1.47s/it, lr=7e-5, step_loss=0.0797]Steps:  15%|█▌        | 3776/24850 [1:30:37<8:37:13,  1.47s/it, lr=7e-5, step_loss=0.0797]Steps:  15%|█▌        | 3776/24850 [1:30:37<8:37:13,  1.47s/it, lr=7e-5, step_loss=0.0439]Steps:  15%|█▌        | 3777/24850 [1:30:38<8:36:54,  1.47s/it, lr=7e-5, step_loss=0.0439]Steps:  15%|█▌        | 3777/24850 [1:30:38<8:36:54,  1.47s/it, lr=7e-5, step_loss=0.076] Steps:  15%|█▌        | 3778/24850 [1:30:40<8:36:08,  1.47s/it, lr=7e-5, step_loss=0.076]Steps:  15%|█▌        | 3778/24850 [1:30:40<8:36:08,  1.47s/it, lr=7e-5, step_loss=0.00819]Steps:  15%|█▌        | 3779/24850 [1:30:41<8:35:53,  1.47s/it, lr=7e-5, step_loss=0.00819]Steps:  15%|█▌        | 3779/24850 [1:30:41<8:35:53,  1.47s/it, lr=7e-5, step_loss=0.186]  Steps:  15%|█▌        | 3780/24850 [1:30:43<8:34:42,  1.47s/it, lr=7e-5, step_loss=0.186]Steps:  15%|█▌        | 3780/24850 [1:30:43<8:34:42,  1.47s/it, lr=7e-5, step_loss=0.0368]Steps:  15%|█▌        | 3781/24850 [1:30:44<8:37:35,  1.47s/it, lr=7e-5, step_loss=0.0368]Steps:  15%|█▌        | 3781/24850 [1:30:44<8:37:35,  1.47s/it, lr=7e-5, step_loss=0.124] Steps:  15%|█▌        | 3782/24850 [1:30:46<8:40:59,  1.48s/it, lr=7e-5, step_loss=0.124]Steps:  15%|█▌        | 3782/24850 [1:30:46<8:40:59,  1.48s/it, lr=7e-5, step_loss=0.0253]Steps:  15%|█▌        | 3783/24850 [1:30:47<8:41:55,  1.49s/it, lr=7e-5, step_loss=0.0253]Steps:  15%|█▌        | 3783/24850 [1:30:47<8:41:55,  1.49s/it, lr=7e-5, step_loss=0.0165]Steps:  15%|█▌        | 3784/24850 [1:30:49<8:38:27,  1.48s/it, lr=7e-5, step_loss=0.0165]Steps:  15%|█▌        | 3784/24850 [1:30:49<8:38:27,  1.48s/it, lr=7e-5, step_loss=0.0151]Steps:  15%|█▌        | 3785/24850 [1:30:50<8:38:01,  1.48s/it, lr=7e-5, step_loss=0.0151]Steps:  15%|█▌        | 3785/24850 [1:30:50<8:38:01,  1.48s/it, lr=7e-5, step_loss=0.0405]Steps:  15%|█▌        | 3786/24850 [1:30:52<8:37:38,  1.47s/it, lr=7e-5, step_loss=0.0405]Steps:  15%|█▌        | 3786/24850 [1:30:52<8:37:38,  1.47s/it, lr=7e-5, step_loss=0.0222]Steps:  15%|█▌        | 3787/24850 [1:30:53<8:36:05,  1.47s/it, lr=7e-5, step_loss=0.0222]Steps:  15%|█▌        | 3787/24850 [1:30:53<8:36:05,  1.47s/it, lr=7e-5, step_loss=0.0287]Steps:  15%|█▌        | 3788/24850 [1:30:54<8:34:55,  1.47s/it, lr=7e-5, step_loss=0.0287]Steps:  15%|█▌        | 3788/24850 [1:30:54<8:34:55,  1.47s/it, lr=7e-5, step_loss=0.00332]Steps:  15%|█▌        | 3789/24850 [1:30:56<8:36:01,  1.47s/it, lr=7e-5, step_loss=0.00332]Steps:  15%|█▌        | 3789/24850 [1:30:56<8:36:01,  1.47s/it, lr=7e-5, step_loss=0.0319] Steps:  15%|█▌        | 3790/24850 [1:30:57<8:35:46,  1.47s/it, lr=7e-5, step_loss=0.0319]Steps:  15%|█▌        | 3790/24850 [1:30:57<8:35:46,  1.47s/it, lr=7e-5, step_loss=0.0151]Steps:  15%|█▌        | 3791/24850 [1:30:59<8:36:23,  1.47s/it, lr=7e-5, step_loss=0.0151]Steps:  15%|█▌        | 3791/24850 [1:30:59<8:36:23,  1.47s/it, lr=7e-5, step_loss=0.0143]Steps:  15%|█▌        | 3792/24850 [1:31:00<8:35:03,  1.47s/it, lr=7e-5, step_loss=0.0143]Steps:  15%|█▌        | 3792/24850 [1:31:00<8:35:03,  1.47s/it, lr=7e-5, step_loss=0.0227]Steps:  15%|█▌        | 3793/24850 [1:31:03<10:21:58,  1.77s/it, lr=7e-5, step_loss=0.0227]Steps:  15%|█▌        | 3793/24850 [1:31:03<10:21:58,  1.77s/it, lr=7e-5, step_loss=0.00471]Steps:  15%|█▌        | 3794/24850 [1:31:04<9:48:37,  1.68s/it, lr=7e-5, step_loss=0.00471] Steps:  15%|█▌        | 3794/24850 [1:31:04<9:48:37,  1.68s/it, lr=7e-5, step_loss=0.00917] torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:  15%|█▌        | 3795/24850 [1:31:06<9:25:37,  1.61s/it, lr=7e-5, step_loss=0.00917]Steps:  15%|█▌        | 3795/24850 [1:31:06<9:25:37,  1.61s/it, lr=7e-5, step_loss=0.0487] Steps:  15%|█▌        | 3796/24850 [1:31:07<9:09:41,  1.57s/it, lr=7e-5, step_loss=0.0487]Steps:  15%|█▌        | 3796/24850 [1:31:07<9:09:41,  1.57s/it, lr=7e-5, step_loss=0.00726]Steps:  15%|█▌        | 3797/24850 [1:31:09<8:59:04,  1.54s/it, lr=7e-5, step_loss=0.00726]Steps:  15%|█▌        | 3797/24850 [1:31:09<8:59:04,  1.54s/it, lr=7e-5, step_loss=0.0489] Steps:  15%|█▌        | 3798/24850 [1:31:10<8:51:32,  1.51s/it, lr=7e-5, step_loss=0.0489]Steps:  15%|█▌        | 3798/24850 [1:31:10<8:51:32,  1.51s/it, lr=7e-5, step_loss=0.123] Steps:  15%|█▌        | 3799/24850 [1:31:12<8:45:55,  1.50s/it, lr=7e-5, step_loss=0.123]Steps:  15%|█▌        | 3799/24850 [1:31:12<8:45:55,  1.50s/it, lr=7e-5, step_loss=0.0103]Steps:  15%|█▌        | 3800/24850 [1:31:13<8:42:24,  1.49s/it, lr=7e-5, step_loss=0.0103]Steps:  15%|█▌        | 3800/24850 [1:31:13<8:42:24,  1.49s/it, lr=7e-5, step_loss=0.0487]Steps:  15%|█▌        | 3801/24850 [1:31:15<8:39:11,  1.48s/it, lr=7e-5, step_loss=0.0487]Steps:  15%|█▌        | 3801/24850 [1:31:15<8:39:11,  1.48s/it, lr=7e-5, step_loss=0.0137]Steps:  15%|█▌        | 3802/24850 [1:31:16<8:38:13,  1.48s/it, lr=7e-5, step_loss=0.0137]Steps:  15%|█▌        | 3802/24850 [1:31:16<8:38:13,  1.48s/it, lr=7e-5, step_loss=0.1]   Steps:  15%|█▌        | 3803/24850 [1:31:17<8:36:28,  1.47s/it, lr=7e-5, step_loss=0.1]Steps:  15%|█▌        | 3803/24850 [1:31:17<8:36:28,  1.47s/it, lr=7e-5, step_loss=0.00039]Steps:  15%|█▌        | 3804/24850 [1:31:19<8:36:51,  1.47s/it, lr=7e-5, step_loss=0.00039]Steps:  15%|█▌        | 3804/24850 [1:31:19<8:36:51,  1.47s/it, lr=7e-5, step_loss=0.0328] Steps:  15%|█▌        | 3805/24850 [1:31:20<8:39:04,  1.48s/it, lr=7e-5, step_loss=0.0328]Steps:  15%|█▌        | 3805/24850 [1:31:20<8:39:04,  1.48s/it, lr=7e-5, step_loss=0.00495]Steps:  15%|█▌        | 3806/24850 [1:31:22<8:38:24,  1.48s/it, lr=7e-5, step_loss=0.00495]Steps:  15%|█▌        | 3806/24850 [1:31:22<8:38:24,  1.48s/it, lr=7e-5, step_loss=0.0571] Steps:  15%|█▌        | 3807/24850 [1:31:23<8:36:43,  1.47s/it, lr=7e-5, step_loss=0.0571]Steps:  15%|█▌        | 3807/24850 [1:31:23<8:36:43,  1.47s/it, lr=7e-5, step_loss=0.0623]Steps:  15%|█▌        | 3808/24850 [1:31:25<8:35:51,  1.47s/it, lr=7e-5, step_loss=0.0623]Steps:  15%|█▌        | 3808/24850 [1:31:25<8:35:51,  1.47s/it, lr=7e-5, step_loss=0.0177]Steps:  15%|█▌        | 3809/24850 [1:31:26<8:35:53,  1.47s/it, lr=7e-5, step_loss=0.0177]Steps:  15%|█▌        | 3809/24850 [1:31:26<8:35:53,  1.47s/it, lr=7e-5, step_loss=0.00758]Steps:  15%|█▌        | 3810/24850 [1:31:28<8:35:22,  1.47s/it, lr=7e-5, step_loss=0.00758]Steps:  15%|█▌        | 3810/24850 [1:31:28<8:35:22,  1.47s/it, lr=7e-5, step_loss=0.00889]Steps:  15%|█▌        | 3811/24850 [1:31:29<8:33:41,  1.46s/it, lr=7e-5, step_loss=0.00889]Steps:  15%|█▌        | 3811/24850 [1:31:29<8:33:41,  1.46s/it, lr=7e-5, step_loss=8.71e-5]Steps:  15%|█▌        | 3812/24850 [1:31:31<8:32:58,  1.46s/it, lr=7e-5, step_loss=8.71e-5]Steps:  15%|█▌        | 3812/24850 [1:31:31<8:32:58,  1.46s/it, lr=7e-5, step_loss=0.0283] Steps:  15%|█▌        | 3813/24850 [1:31:32<8:32:41,  1.46s/it, lr=7e-5, step_loss=0.0283]Steps:  15%|█▌        | 3813/24850 [1:31:32<8:32:41,  1.46s/it, lr=7e-5, step_loss=0.0486]Steps:  15%|█▌        | 3814/24850 [1:31:34<8:32:26,  1.46s/it, lr=7e-5, step_loss=0.0486]Steps:  15%|█▌        | 3814/24850 [1:31:34<8:32:26,  1.46s/it, lr=7e-5, step_loss=0.0533]Steps:  15%|█▌        | 3815/24850 [1:31:35<8:32:46,  1.46s/it, lr=7e-5, step_loss=0.0533]Steps:  15%|█▌        | 3815/24850 [1:31:35<8:32:46,  1.46s/it, lr=7e-5, step_loss=0.0343]Steps:  15%|█▌        | 3816/24850 [1:31:37<8:33:15,  1.46s/it, lr=7e-5, step_loss=0.0343]Steps:  15%|█▌        | 3816/24850 [1:31:37<8:33:15,  1.46s/it, lr=7e-5, step_loss=0.0199]Steps:  15%|█▌        | 3817/24850 [1:31:38<8:33:11,  1.46s/it, lr=7e-5, step_loss=0.0199]Steps:  15%|█▌        | 3817/24850 [1:31:38<8:33:11,  1.46s/it, lr=7e-5, step_loss=0.0163]Steps:  15%|█▌        | 3818/24850 [1:31:39<8:33:44,  1.47s/it, lr=7e-5, step_loss=0.0163]Steps:  15%|█▌        | 3818/24850 [1:31:39<8:33:44,  1.47s/it, lr=7e-5, step_loss=0.0102]Steps:  15%|█▌        | 3819/24850 [1:31:41<8:35:48,  1.47s/it, lr=7e-5, step_loss=0.0102]Steps:  15%|█▌        | 3819/24850 [1:31:41<8:35:48,  1.47s/it, lr=7e-5, step_loss=0.0125]Steps:  15%|█▌        | 3820/24850 [1:31:42<8:33:56,  1.47s/it, lr=7e-5, step_loss=0.0125]Steps:  15%|█▌        | 3820/24850 [1:31:42<8:33:56,  1.47s/it, lr=7e-5, step_loss=0.0365]Steps:  15%|█▌        | 3821/24850 [1:31:44<8:37:26,  1.48s/it, lr=7e-5, step_loss=0.0365]Steps:  15%|█▌        | 3821/24850 [1:31:44<8:37:26,  1.48s/it, lr=7e-5, step_loss=0.0454]torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  Steps:  15%|█▌        | 3822/24850 [1:31:45<8:38:06,  1.48s/it, lr=7e-5, step_loss=0.0454]Steps:  15%|█▌        | 3822/24850 [1:31:45<8:38:06,  1.48s/it, lr=7e-5, step_loss=0.105] Steps:  15%|█▌        | 3823/24850 [1:31:47<8:37:57,  1.48s/it, lr=7e-5, step_loss=0.105]Steps:  15%|█▌        | 3823/24850 [1:31:47<8:37:57,  1.48s/it, lr=7e-5, step_loss=0.0371]Steps:  15%|█▌        | 3824/24850 [1:31:48<8:36:38,  1.47s/it, lr=7e-5, step_loss=0.0371]Steps:  15%|█▌        | 3824/24850 [1:31:48<8:36:38,  1.47s/it, lr=7e-5, step_loss=0.0219]Steps:  15%|█▌        | 3825/24850 [1:31:50<8:36:18,  1.47s/it, lr=7e-5, step_loss=0.0219]Steps:  15%|█▌        | 3825/24850 [1:31:50<8:36:18,  1.47s/it, lr=7e-5, step_loss=0.022] Steps:  15%|█▌        | 3826/24850 [1:31:51<8:35:29,  1.47s/it, lr=7e-5, step_loss=0.022]Steps:  15%|█▌        | 3826/24850 [1:31:51<8:35:29,  1.47s/it, lr=7e-5, step_loss=0.00719]Steps:  15%|█▌        | 3827/24850 [1:31:53<8:38:21,  1.48s/it, lr=7e-5, step_loss=0.00719]Steps:  15%|█▌        | 3827/24850 [1:31:53<8:38:21,  1.48s/it, lr=7e-5, step_loss=0.00416]Steps:  15%|█▌        | 3828/24850 [1:31:54<8:38:05,  1.48s/it, lr=7e-5, step_loss=0.00416]Steps:  15%|█▌        | 3828/24850 [1:31:54<8:38:05,  1.48s/it, lr=7e-5, step_loss=0.0167] Steps:  15%|█▌        | 3829/24850 [1:31:56<8:36:15,  1.47s/it, lr=7e-5, step_loss=0.0167]Steps:  15%|█▌        | 3829/24850 [1:31:56<8:36:15,  1.47s/it, lr=7e-5, step_loss=0.0113]Steps:  15%|█▌        | 3830/24850 [1:31:57<8:35:29,  1.47s/it, lr=7e-5, step_loss=0.0113]Steps:  15%|█▌        | 3830/24850 [1:31:57<8:35:29,  1.47s/it, lr=7e-5, step_loss=0.0199]Steps:  15%|█▌        | 3831/24850 [1:31:59<8:34:39,  1.47s/it, lr=7e-5, step_loss=0.0199]Steps:  15%|█▌        | 3831/24850 [1:31:59<8:34:39,  1.47s/it, lr=7e-5, step_loss=0.00296]Steps:  15%|█▌        | 3832/24850 [1:32:00<8:34:24,  1.47s/it, lr=7e-5, step_loss=0.00296]Steps:  15%|█▌        | 3832/24850 [1:32:00<8:34:24,  1.47s/it, lr=7e-5, step_loss=0.0123] Steps:  15%|█▌        | 3833/24850 [1:32:02<8:35:48,  1.47s/it, lr=7e-5, step_loss=0.0123]Steps:  15%|█▌        | 3833/24850 [1:32:02<8:35:48,  1.47s/it, lr=7e-5, step_loss=0.00274]Steps:  15%|█▌        | 3834/24850 [1:32:03<8:36:11,  1.47s/it, lr=7e-5, step_loss=0.00274]Steps:  15%|█▌        | 3834/24850 [1:32:03<8:36:11,  1.47s/it, lr=7e-5, step_loss=0.0114] Steps:  15%|█▌        | 3835/24850 [1:32:05<8:35:56,  1.47s/it, lr=7e-5, step_loss=0.0114]Steps:  15%|█▌        | 3835/24850 [1:32:05<8:35:56,  1.47s/it, lr=7e-5, step_loss=0.0849]Steps:  15%|█▌        | 3836/24850 [1:32:06<8:34:33,  1.47s/it, lr=7e-5, step_loss=0.0849]Steps:  15%|█▌        | 3836/24850 [1:32:06<8:34:33,  1.47s/it, lr=7e-5, step_loss=0.0223]Steps:  15%|█▌        | 3837/24850 [1:32:08<8:36:26,  1.47s/it, lr=7e-5, step_loss=0.0223]Steps:  15%|█▌        | 3837/24850 [1:32:08<8:36:26,  1.47s/it, lr=7e-5, step_loss=0.101] Steps:  15%|█▌        | 3838/24850 [1:32:09<8:52:41,  1.52s/it, lr=7e-5, step_loss=0.101]Steps:  15%|█▌        | 3838/24850 [1:32:09<8:52:41,  1.52s/it, lr=7e-5, step_loss=0.0387]Steps:  15%|█▌        | 3839/24850 [1:32:11<8:48:01,  1.51s/it, lr=7e-5, step_loss=0.0387]Steps:  15%|█▌        | 3839/24850 [1:32:11<8:48:01,  1.51s/it, lr=7e-5, step_loss=0.00382]Steps:  15%|█▌        | 3840/24850 [1:32:12<8:44:26,  1.50s/it, lr=7e-5, step_loss=0.00382]Steps:  15%|█▌        | 3840/24850 [1:32:12<8:44:26,  1.50s/it, lr=7e-5, step_loss=0.0322] Steps:  15%|█▌        | 3841/24850 [1:32:14<8:41:57,  1.49s/it, lr=7e-5, step_loss=0.0322]Steps:  15%|█▌        | 3841/24850 [1:32:14<8:41:57,  1.49s/it, lr=7e-5, step_loss=0.00437]Steps:  15%|█▌        | 3842/24850 [1:32:15<8:40:19,  1.49s/it, lr=7e-5, step_loss=0.00437]Steps:  15%|█▌        | 3842/24850 [1:32:15<8:40:19,  1.49s/it, lr=7e-5, step_loss=0.0134] Steps:  15%|█▌        | 3843/24850 [1:32:17<10:21:16,  1.77s/it, lr=7e-5, step_loss=0.0134]Steps:  15%|█▌        | 3843/24850 [1:32:17<10:21:16,  1.77s/it, lr=7e-5, step_loss=0.0278]Steps:  15%|█▌        | 3844/24850 [1:32:19<9:48:43,  1.68s/it, lr=7e-5, step_loss=0.0278] Steps:  15%|█▌        | 3844/24850 [1:32:19<9:48:43,  1.68s/it, lr=7e-5, step_loss=0.0395]Steps:  15%|█▌        | 3845/24850 [1:32:20<9:26:29,  1.62s/it, lr=7e-5, step_loss=0.0395]Steps:  15%|█▌        | 3845/24850 [1:32:20<9:26:29,  1.62s/it, lr=7e-5, step_loss=0.0882]Steps:  15%|█▌        | 3846/24850 [1:32:22<9:09:20,  1.57s/it, lr=7e-5, step_loss=0.0882]Steps:  15%|█▌        | 3846/24850 [1:32:22<9:09:20,  1.57s/it, lr=7e-5, step_loss=0.00694]Steps:  15%|█▌        | 3847/24850 [1:32:23<9:01:54,  1.55s/it, lr=7e-5, step_loss=0.00694]Steps:  15%|█▌        | 3847/24850 [1:32:23<9:01:54,  1.55s/it, lr=7e-5, step_loss=0.0222] Steps:  15%|█▌        | 3848/24850 [1:32:25<8:54:25,  1.53s/it, lr=7e-5, step_loss=0.0222]Steps:  15%|█▌        | 3848/24850 [1:32:25<8:54:25,  1.53s/it, lr=7e-5, step_loss=0.0232]Steps:  15%|█▌        | 3849/24850 [1:32:26<8:47:37,  1.51s/it, lr=7e-5, step_loss=0.0232]Steps:  15%|█▌        | 3849/24850 [1:32:26<8:47:37,  1.51s/it, lr=7e-5, step_loss=0.0137]mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:  15%|█▌        | 3850/24850 [1:32:28<8:44:39,  1.50s/it, lr=7e-5, step_loss=0.0137]Steps:  15%|█▌        | 3850/24850 [1:32:28<8:44:39,  1.50s/it, lr=7e-5, step_loss=0.026] Steps:  15%|█▌        | 3851/24850 [1:32:29<8:41:58,  1.49s/it, lr=7e-5, step_loss=0.026]Steps:  15%|█▌        | 3851/24850 [1:32:29<8:41:58,  1.49s/it, lr=7e-5, step_loss=0.0424]Steps:  16%|█▌        | 3852/24850 [1:32:31<8:39:40,  1.48s/it, lr=7e-5, step_loss=0.0424]Steps:  16%|█▌        | 3852/24850 [1:32:31<8:39:40,  1.48s/it, lr=7e-5, step_loss=0.0102]Steps:  16%|█▌        | 3853/24850 [1:32:32<8:37:49,  1.48s/it, lr=7e-5, step_loss=0.0102]Steps:  16%|█▌        | 3853/24850 [1:32:32<8:37:49,  1.48s/it, lr=7e-5, step_loss=0.014] Steps:  16%|█▌        | 3854/24850 [1:32:34<8:39:23,  1.48s/it, lr=7e-5, step_loss=0.014]Steps:  16%|█▌        | 3854/24850 [1:32:34<8:39:23,  1.48s/it, lr=7e-5, step_loss=0.0558]Steps:  16%|█▌        | 3855/24850 [1:32:35<8:37:37,  1.48s/it, lr=7e-5, step_loss=0.0558]Steps:  16%|█▌        | 3855/24850 [1:32:35<8:37:37,  1.48s/it, lr=7e-5, step_loss=0.0256]Steps:  16%|█▌        | 3856/24850 [1:32:37<8:36:28,  1.48s/it, lr=7e-5, step_loss=0.0256]Steps:  16%|█▌        | 3856/24850 [1:32:37<8:36:28,  1.48s/it, lr=7e-5, step_loss=0.0107]Steps:  16%|█▌        | 3857/24850 [1:32:38<8:34:52,  1.47s/it, lr=7e-5, step_loss=0.0107]Steps:  16%|█▌        | 3857/24850 [1:32:38<8:34:52,  1.47s/it, lr=7e-5, step_loss=0.00188]Steps:  16%|█▌        | 3858/24850 [1:32:40<8:35:10,  1.47s/it, lr=7e-5, step_loss=0.00188]Steps:  16%|█▌        | 3858/24850 [1:32:40<8:35:10,  1.47s/it, lr=7e-5, step_loss=0.0301] Steps:  16%|█▌        | 3859/24850 [1:32:41<8:37:07,  1.48s/it, lr=7e-5, step_loss=0.0301]Steps:  16%|█▌        | 3859/24850 [1:32:41<8:37:07,  1.48s/it, lr=7e-5, step_loss=0.00967]Steps:  16%|█▌        | 3860/24850 [1:32:43<8:35:45,  1.47s/it, lr=7e-5, step_loss=0.00967]Steps:  16%|█▌        | 3860/24850 [1:32:43<8:35:45,  1.47s/it, lr=7e-5, step_loss=0.0386] Steps:  16%|█▌        | 3861/24850 [1:32:44<8:39:31,  1.49s/it, lr=7e-5, step_loss=0.0386]Steps:  16%|█▌        | 3861/24850 [1:32:44<8:39:31,  1.49s/it, lr=7e-5, step_loss=0.03]  Steps:  16%|█▌        | 3862/24850 [1:32:46<8:37:06,  1.48s/it, lr=7e-5, step_loss=0.03]Steps:  16%|█▌        | 3862/24850 [1:32:46<8:37:06,  1.48s/it, lr=7e-5, step_loss=0.163]Steps:  16%|█▌        | 3863/24850 [1:32:47<8:34:42,  1.47s/it, lr=7e-5, step_loss=0.163]Steps:  16%|█▌        | 3863/24850 [1:32:47<8:34:42,  1.47s/it, lr=7e-5, step_loss=0.00367]Steps:  16%|█▌        | 3864/24850 [1:32:48<8:34:59,  1.47s/it, lr=7e-5, step_loss=0.00367]Steps:  16%|█▌        | 3864/24850 [1:32:48<8:34:59,  1.47s/it, lr=7e-5, step_loss=0.0115] Steps:  16%|█▌        | 3865/24850 [1:32:50<8:34:16,  1.47s/it, lr=7e-5, step_loss=0.0115]Steps:  16%|█▌        | 3865/24850 [1:32:50<8:34:16,  1.47s/it, lr=7e-5, step_loss=0.0147]Steps:  16%|█▌        | 3866/24850 [1:32:51<8:33:58,  1.47s/it, lr=7e-5, step_loss=0.0147]Steps:  16%|█▌        | 3866/24850 [1:32:51<8:33:58,  1.47s/it, lr=7e-5, step_loss=0.0586]Steps:  16%|█▌        | 3867/24850 [1:32:53<8:32:45,  1.47s/it, lr=7e-5, step_loss=0.0586]Steps:  16%|█▌        | 3867/24850 [1:32:53<8:32:45,  1.47s/it, lr=7e-5, step_loss=0.00158]Steps:  16%|█▌        | 3868/24850 [1:32:54<8:32:36,  1.47s/it, lr=7e-5, step_loss=0.00158]Steps:  16%|█▌        | 3868/24850 [1:32:54<8:32:36,  1.47s/it, lr=7e-5, step_loss=0.0417] Steps:  16%|█▌        | 3869/24850 [1:32:56<8:33:06,  1.47s/it, lr=7e-5, step_loss=0.0417]Steps:  16%|█▌        | 3869/24850 [1:32:56<8:33:06,  1.47s/it, lr=7e-5, step_loss=0.0861]Steps:  16%|█▌        | 3870/24850 [1:32:57<8:33:20,  1.47s/it, lr=7e-5, step_loss=0.0861]Steps:  16%|█▌        | 3870/24850 [1:32:57<8:33:20,  1.47s/it, lr=7e-5, step_loss=0.0389]Steps:  16%|█▌        | 3871/24850 [1:32:59<8:35:06,  1.47s/it, lr=7e-5, step_loss=0.0389]Steps:  16%|█▌        | 3871/24850 [1:32:59<8:35:06,  1.47s/it, lr=7e-5, step_loss=0.0233]Steps:  16%|█▌        | 3872/24850 [1:33:00<8:35:39,  1.47s/it, lr=7e-5, step_loss=0.0233]Steps:  16%|█▌        | 3872/24850 [1:33:00<8:35:39,  1.47s/it, lr=7e-5, step_loss=0.0264]Steps:  16%|█▌        | 3873/24850 [1:33:02<8:36:18,  1.48s/it, lr=7e-5, step_loss=0.0264]Steps:  16%|█▌        | 3873/24850 [1:33:02<8:36:18,  1.48s/it, lr=7e-5, step_loss=0.0133]Steps:  16%|█▌        | 3874/24850 [1:33:03<8:36:28,  1.48s/it, lr=7e-5, step_loss=0.0133]Steps:  16%|█▌        | 3874/24850 [1:33:03<8:36:28,  1.48s/it, lr=7e-5, step_loss=0.0292]Steps:  16%|█▌        | 3875/24850 [1:33:05<8:34:26,  1.47s/it, lr=7e-5, step_loss=0.0292]Steps:  16%|█▌        | 3875/24850 [1:33:05<8:34:26,  1.47s/it, lr=7e-5, step_loss=0.0074]Steps:  16%|█▌        | 3876/24850 [1:33:06<8:34:20,  1.47s/it, lr=7e-5, step_loss=0.0074]Steps:  16%|█▌        | 3876/24850 [1:33:06<8:34:20,  1.47s/it, lr=7e-5, step_loss=0.0165]torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) Steps:  16%|█▌        | 3877/24850 [1:33:08<8:33:40,  1.47s/it, lr=7e-5, step_loss=0.0165]Steps:  16%|█▌        | 3877/24850 [1:33:08<8:33:40,  1.47s/it, lr=7e-5, step_loss=0.0142]Steps:  16%|█▌        | 3878/24850 [1:33:09<8:34:52,  1.47s/it, lr=7e-5, step_loss=0.0142]Steps:  16%|█▌        | 3878/24850 [1:33:09<8:34:52,  1.47s/it, lr=7e-5, step_loss=0.0459]Steps:  16%|█▌        | 3879/24850 [1:33:11<8:35:20,  1.47s/it, lr=7e-5, step_loss=0.0459]Steps:  16%|█▌        | 3879/24850 [1:33:11<8:35:20,  1.47s/it, lr=7e-5, step_loss=0.0379]Steps:  16%|█▌        | 3880/24850 [1:33:12<8:34:08,  1.47s/it, lr=7e-5, step_loss=0.0379]Steps:  16%|█▌        | 3880/24850 [1:33:12<8:34:08,  1.47s/it, lr=7e-5, step_loss=0.0154]Steps:  16%|█▌        | 3881/24850 [1:33:13<8:34:09,  1.47s/it, lr=7e-5, step_loss=0.0154]Steps:  16%|█▌        | 3881/24850 [1:33:13<8:34:09,  1.47s/it, lr=7e-5, step_loss=0.022] Steps:  16%|█▌        | 3882/24850 [1:33:15<8:32:58,  1.47s/it, lr=7e-5, step_loss=0.022]Steps:  16%|█▌        | 3882/24850 [1:33:15<8:32:58,  1.47s/it, lr=7e-5, step_loss=0.00137]Steps:  16%|█▌        | 3883/24850 [1:33:16<8:32:36,  1.47s/it, lr=7e-5, step_loss=0.00137]Steps:  16%|█▌        | 3883/24850 [1:33:16<8:32:36,  1.47s/it, lr=7e-5, step_loss=0.0331] Steps:  16%|█▌        | 3884/24850 [1:33:18<8:32:33,  1.47s/it, lr=7e-5, step_loss=0.0331]Steps:  16%|█▌        | 3884/24850 [1:33:18<8:32:33,  1.47s/it, lr=7e-5, step_loss=0.00998]Steps:  16%|█▌        | 3885/24850 [1:33:19<8:32:51,  1.47s/it, lr=7e-5, step_loss=0.00998]Steps:  16%|█▌        | 3885/24850 [1:33:19<8:32:51,  1.47s/it, lr=7e-5, step_loss=0.0421] Steps:  16%|█▌        | 3886/24850 [1:33:21<8:31:46,  1.46s/it, lr=7e-5, step_loss=0.0421]Steps:  16%|█▌        | 3886/24850 [1:33:21<8:31:46,  1.46s/it, lr=7e-5, step_loss=0.00646]Steps:  16%|█▌        | 3887/24850 [1:33:22<8:30:43,  1.46s/it, lr=7e-5, step_loss=0.00646]Steps:  16%|█▌        | 3887/24850 [1:33:22<8:30:43,  1.46s/it, lr=7e-5, step_loss=0.0154] Steps:  16%|█▌        | 3888/24850 [1:33:24<8:30:33,  1.46s/it, lr=7e-5, step_loss=0.0154]Steps:  16%|█▌        | 3888/24850 [1:33:24<8:30:33,  1.46s/it, lr=7e-5, step_loss=0.0133]Steps:  16%|█▌        | 3889/24850 [1:33:25<8:36:27,  1.48s/it, lr=7e-5, step_loss=0.0133]Steps:  16%|█▌        | 3889/24850 [1:33:25<8:36:27,  1.48s/it, lr=7e-5, step_loss=0.0453]Steps:  16%|█▌        | 3890/24850 [1:33:27<8:34:54,  1.47s/it, lr=7e-5, step_loss=0.0453]Steps:  16%|█▌        | 3890/24850 [1:33:27<8:34:54,  1.47s/it, lr=7e-5, step_loss=0.00797]Steps:  16%|█▌        | 3891/24850 [1:33:28<8:35:08,  1.47s/it, lr=7e-5, step_loss=0.00797]Steps:  16%|█▌        | 3891/24850 [1:33:28<8:35:08,  1.47s/it, lr=7e-5, step_loss=0.115]  Steps:  16%|█▌        | 3892/24850 [1:33:30<8:33:28,  1.47s/it, lr=7e-5, step_loss=0.115]Steps:  16%|█▌        | 3892/24850 [1:33:30<8:33:28,  1.47s/it, lr=7e-5, step_loss=0.00274]Steps:  16%|█▌        | 3893/24850 [1:33:32<10:13:18,  1.76s/it, lr=7e-5, step_loss=0.00274]Steps:  16%|█▌        | 3893/24850 [1:33:32<10:13:18,  1.76s/it, lr=7e-5, step_loss=0.00938]Steps:  16%|█▌        | 3894/24850 [1:33:33<9:43:48,  1.67s/it, lr=7e-5, step_loss=0.00938] Steps:  16%|█▌        | 3894/24850 [1:33:33<9:43:48,  1.67s/it, lr=7e-5, step_loss=0.00992]Steps:  16%|█▌        | 3895/24850 [1:33:35<9:22:00,  1.61s/it, lr=7e-5, step_loss=0.00992]Steps:  16%|█▌        | 3895/24850 [1:33:35<9:22:00,  1.61s/it, lr=7e-5, step_loss=0.00963]Steps:  16%|█▌        | 3896/24850 [1:33:36<9:05:53,  1.56s/it, lr=7e-5, step_loss=0.00963]Steps:  16%|█▌        | 3896/24850 [1:33:36<9:05:53,  1.56s/it, lr=7e-5, step_loss=0.0529] Steps:  16%|█▌        | 3897/24850 [1:33:38<8:55:11,  1.53s/it, lr=7e-5, step_loss=0.0529]Steps:  16%|█▌        | 3897/24850 [1:33:38<8:55:11,  1.53s/it, lr=7e-5, step_loss=0.128] Steps:  16%|█▌        | 3898/24850 [1:33:39<8:48:58,  1.51s/it, lr=7e-5, step_loss=0.128]Steps:  16%|█▌        | 3898/24850 [1:33:39<8:48:58,  1.51s/it, lr=7e-5, step_loss=0.0161]Steps:  16%|█▌        | 3899/24850 [1:33:41<8:44:32,  1.50s/it, lr=7e-5, step_loss=0.0161]Steps:  16%|█▌        | 3899/24850 [1:33:41<8:44:32,  1.50s/it, lr=7e-5, step_loss=0.00243]Steps:  16%|█▌        | 3900/24850 [1:33:42<8:40:48,  1.49s/it, lr=7e-5, step_loss=0.00243]Steps:  16%|█▌        | 3900/24850 [1:33:42<8:40:48,  1.49s/it, lr=7e-5, step_loss=0.00247]Steps:  16%|█▌        | 3901/24850 [1:33:44<8:44:58,  1.50s/it, lr=7e-5, step_loss=0.00247]Steps:  16%|█▌        | 3901/24850 [1:33:44<8:44:58,  1.50s/it, lr=7e-5, step_loss=0.0412] Steps:  16%|█▌        | 3902/24850 [1:33:45<8:43:28,  1.50s/it, lr=7e-5, step_loss=0.0412]Steps:  16%|█▌        | 3902/24850 [1:33:45<8:43:28,  1.50s/it, lr=7e-5, step_loss=0.105] Steps:  16%|█▌        | 3903/24850 [1:33:47<8:43:56,  1.50s/it, lr=7e-5, step_loss=0.105]Steps:  16%|█▌        | 3903/24850 [1:33:47<8:43:56,  1.50s/it, lr=7e-5, step_loss=0.0565]torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:  16%|█▌        | 3904/24850 [1:33:48<8:43:03,  1.50s/it, lr=7e-5, step_loss=0.0565]Steps:  16%|█▌        | 3904/24850 [1:33:48<8:43:03,  1.50s/it, lr=7e-5, step_loss=0.00464]Steps:  16%|█▌        | 3905/24850 [1:33:50<8:40:35,  1.49s/it, lr=7e-5, step_loss=0.00464]Steps:  16%|█▌        | 3905/24850 [1:33:50<8:40:35,  1.49s/it, lr=7e-5, step_loss=0.00531]Steps:  16%|█▌        | 3906/24850 [1:33:51<8:39:26,  1.49s/it, lr=7e-5, step_loss=0.00531]Steps:  16%|█▌        | 3906/24850 [1:33:51<8:39:26,  1.49s/it, lr=7e-5, step_loss=0.0204] Steps:  16%|█▌        | 3907/24850 [1:33:53<8:38:41,  1.49s/it, lr=7e-5, step_loss=0.0204]Steps:  16%|█▌        | 3907/24850 [1:33:53<8:38:41,  1.49s/it, lr=7e-5, step_loss=0.00238]Steps:  16%|█▌        | 3908/24850 [1:33:54<8:35:56,  1.48s/it, lr=7e-5, step_loss=0.00238]Steps:  16%|█▌        | 3908/24850 [1:33:54<8:35:56,  1.48s/it, lr=7e-5, step_loss=0.00344]Steps:  16%|█▌        | 3909/24850 [1:33:56<8:36:00,  1.48s/it, lr=7e-5, step_loss=0.00344]Steps:  16%|█▌        | 3909/24850 [1:33:56<8:36:00,  1.48s/it, lr=7e-5, step_loss=0.0398] Steps:  16%|█▌        | 3910/24850 [1:33:57<8:36:06,  1.48s/it, lr=7e-5, step_loss=0.0398]Steps:  16%|█▌        | 3910/24850 [1:33:57<8:36:06,  1.48s/it, lr=7e-5, step_loss=0.256] Steps:  16%|█▌        | 3911/24850 [1:33:59<8:34:32,  1.47s/it, lr=7e-5, step_loss=0.256]Steps:  16%|█▌        | 3911/24850 [1:33:59<8:34:32,  1.47s/it, lr=7e-5, step_loss=0.204]Steps:  16%|█▌        | 3912/24850 [1:34:00<8:34:59,  1.48s/it, lr=7e-5, step_loss=0.204]Steps:  16%|█▌        | 3912/24850 [1:34:00<8:34:59,  1.48s/it, lr=7e-5, step_loss=0.00651]Steps:  16%|█▌        | 3913/24850 [1:34:02<8:34:13,  1.47s/it, lr=7e-5, step_loss=0.00651]Steps:  16%|█▌        | 3913/24850 [1:34:02<8:34:13,  1.47s/it, lr=7e-5, step_loss=0.082]  Steps:  16%|█▌        | 3914/24850 [1:34:03<8:34:04,  1.47s/it, lr=7e-5, step_loss=0.082]Steps:  16%|█▌        | 3914/24850 [1:34:03<8:34:04,  1.47s/it, lr=7e-5, step_loss=0.0352]Steps:  16%|█▌        | 3915/24850 [1:34:05<8:33:54,  1.47s/it, lr=7e-5, step_loss=0.0352]Steps:  16%|█▌        | 3915/24850 [1:34:05<8:33:54,  1.47s/it, lr=7e-5, step_loss=0.00304]Steps:  16%|█▌        | 3916/24850 [1:34:06<8:33:05,  1.47s/it, lr=7e-5, step_loss=0.00304]Steps:  16%|█▌        | 3916/24850 [1:34:06<8:33:05,  1.47s/it, lr=7e-5, step_loss=0.00247]Steps:  16%|█▌        | 3917/24850 [1:34:07<8:31:42,  1.47s/it, lr=7e-5, step_loss=0.00247]Steps:  16%|█▌        | 3917/24850 [1:34:07<8:31:42,  1.47s/it, lr=7e-5, step_loss=0.00635]Steps:  16%|█▌        | 3918/24850 [1:34:09<8:31:25,  1.47s/it, lr=7e-5, step_loss=0.00635]Steps:  16%|█▌        | 3918/24850 [1:34:09<8:31:25,  1.47s/it, lr=7e-5, step_loss=0.0208] Steps:  16%|█▌        | 3919/24850 [1:34:10<8:32:01,  1.47s/it, lr=7e-5, step_loss=0.0208]Steps:  16%|█▌        | 3919/24850 [1:34:10<8:32:01,  1.47s/it, lr=7e-5, step_loss=0.00741]Steps:  16%|█▌        | 3920/24850 [1:34:12<8:31:00,  1.46s/it, lr=7e-5, step_loss=0.00741]Steps:  16%|█▌        | 3920/24850 [1:34:12<8:31:00,  1.46s/it, lr=7e-5, step_loss=0.00618]Steps:  16%|█▌        | 3921/24850 [1:34:13<8:30:34,  1.46s/it, lr=7e-5, step_loss=0.00618]Steps:  16%|█▌        | 3921/24850 [1:34:13<8:30:34,  1.46s/it, lr=7e-5, step_loss=0.00206]Steps:  16%|█▌        | 3922/24850 [1:34:15<8:31:22,  1.47s/it, lr=7e-5, step_loss=0.00206]Steps:  16%|█▌        | 3922/24850 [1:34:15<8:31:22,  1.47s/it, lr=7e-5, step_loss=0.0318] Steps:  16%|█▌        | 3923/24850 [1:34:16<8:32:01,  1.47s/it, lr=7e-5, step_loss=0.0318]Steps:  16%|█▌        | 3923/24850 [1:34:16<8:32:01,  1.47s/it, lr=7e-5, step_loss=0.0126]Steps:  16%|█▌        | 3924/24850 [1:34:18<8:32:24,  1.47s/it, lr=7e-5, step_loss=0.0126]Steps:  16%|█▌        | 3924/24850 [1:34:18<8:32:24,  1.47s/it, lr=7e-5, step_loss=0.00529]Steps:  16%|█▌        | 3925/24850 [1:34:19<8:50:26,  1.52s/it, lr=7e-5, step_loss=0.00529]Steps:  16%|█▌        | 3925/24850 [1:34:19<8:50:26,  1.52s/it, lr=7e-5, step_loss=0.0175] Steps:  16%|█▌        | 3926/24850 [1:34:21<8:45:41,  1.51s/it, lr=7e-5, step_loss=0.0175]Steps:  16%|█▌        | 3926/24850 [1:34:21<8:45:41,  1.51s/it, lr=7e-5, step_loss=0.0603]Steps:  16%|█▌        | 3927/24850 [1:34:22<8:43:08,  1.50s/it, lr=7e-5, step_loss=0.0603]Steps:  16%|█▌        | 3927/24850 [1:34:22<8:43:08,  1.50s/it, lr=7e-5, step_loss=0.0404]Steps:  16%|█▌        | 3928/24850 [1:34:24<8:41:48,  1.50s/it, lr=7e-5, step_loss=0.0404]Steps:  16%|█▌        | 3928/24850 [1:34:24<8:41:48,  1.50s/it, lr=7e-5, step_loss=0.0516]Steps:  16%|█▌        | 3929/24850 [1:34:25<8:39:57,  1.49s/it, lr=7e-5, step_loss=0.0516]Steps:  16%|█▌        | 3929/24850 [1:34:25<8:39:57,  1.49s/it, lr=7e-5, step_loss=0.0357]Steps:  16%|█▌        | 3930/24850 [1:34:27<8:38:35,  1.49s/it, lr=7e-5, step_loss=0.0357]Steps:  16%|█▌        | 3930/24850 [1:34:27<8:38:35,  1.49s/it, lr=7e-5, step_loss=0.00163]Steps:  16%|█▌        | 3931/24850 [1:34:28<8:39:41,  1.49s/it, lr=7e-5, step_loss=0.00163]Steps:  16%|█▌        | 3931/24850 [1:34:28<8:39:41,  1.49s/it, lr=7e-5, step_loss=0.0139] torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
Steps:  16%|█▌        | 3932/24850 [1:34:30<8:36:09,  1.48s/it, lr=7e-5, step_loss=0.0139]Steps:  16%|█▌        | 3932/24850 [1:34:30<8:36:09,  1.48s/it, lr=7e-5, step_loss=0.0913]Steps:  16%|█▌        | 3933/24850 [1:34:31<8:33:56,  1.47s/it, lr=7e-5, step_loss=0.0913]Steps:  16%|█▌        | 3933/24850 [1:34:31<8:33:56,  1.47s/it, lr=7e-5, step_loss=0.0437]Steps:  16%|█▌        | 3934/24850 [1:34:33<8:34:33,  1.48s/it, lr=7e-5, step_loss=0.0437]Steps:  16%|█▌        | 3934/24850 [1:34:33<8:34:33,  1.48s/it, lr=7e-5, step_loss=0.0435]Steps:  16%|█▌        | 3935/24850 [1:34:34<8:32:43,  1.47s/it, lr=7e-5, step_loss=0.0435]Steps:  16%|█▌        | 3935/24850 [1:34:34<8:32:43,  1.47s/it, lr=7e-5, step_loss=0.0345]Steps:  16%|█▌        | 3936/24850 [1:34:36<8:32:40,  1.47s/it, lr=7e-5, step_loss=0.0345]Steps:  16%|█▌        | 3936/24850 [1:34:36<8:32:40,  1.47s/it, lr=7e-5, step_loss=0.0158]Steps:  16%|█▌        | 3937/24850 [1:34:37<8:32:07,  1.47s/it, lr=7e-5, step_loss=0.0158]Steps:  16%|█▌        | 3937/24850 [1:34:37<8:32:07,  1.47s/it, lr=7e-5, step_loss=0.0536]Steps:  16%|█▌        | 3938/24850 [1:34:39<8:31:20,  1.47s/it, lr=7e-5, step_loss=0.0536]Steps:  16%|█▌        | 3938/24850 [1:34:39<8:31:20,  1.47s/it, lr=7e-5, step_loss=0.0116]Steps:  16%|█▌        | 3939/24850 [1:34:40<8:30:08,  1.46s/it, lr=7e-5, step_loss=0.0116]Steps:  16%|█▌        | 3939/24850 [1:34:40<8:30:08,  1.46s/it, lr=7e-5, step_loss=0.0292]Steps:  16%|█▌        | 3940/24850 [1:34:41<8:28:40,  1.46s/it, lr=7e-5, step_loss=0.0292]Steps:  16%|█▌        | 3940/24850 [1:34:41<8:28:40,  1.46s/it, lr=7e-5, step_loss=0.00919]Steps:  16%|█▌        | 3941/24850 [1:34:43<8:44:31,  1.51s/it, lr=7e-5, step_loss=0.00919]Steps:  16%|█▌        | 3941/24850 [1:34:43<8:44:31,  1.51s/it, lr=7e-5, step_loss=0.396]  Steps:  16%|█▌        | 3942/24850 [1:34:45<8:52:09,  1.53s/it, lr=7e-5, step_loss=0.396]Steps:  16%|█▌        | 3942/24850 [1:34:45<8:52:09,  1.53s/it, lr=7e-5, step_loss=0.0121]Steps:  16%|█▌        | 3943/24850 [1:34:47<10:21:58,  1.78s/it, lr=7e-5, step_loss=0.0121]Steps:  16%|█▌        | 3943/24850 [1:34:47<10:21:58,  1.78s/it, lr=7e-5, step_loss=0.0332]Steps:  16%|█▌        | 3944/24850 [1:34:48<9:50:04,  1.69s/it, lr=7e-5, step_loss=0.0332] Steps:  16%|█▌        | 3944/24850 [1:34:48<9:50:04,  1.69s/it, lr=7e-5, step_loss=0.136] Steps:  16%|█▌        | 3945/24850 [1:34:50<9:25:40,  1.62s/it, lr=7e-5, step_loss=0.136]Steps:  16%|█▌        | 3945/24850 [1:34:50<9:25:40,  1.62s/it, lr=7e-5, step_loss=0.0204]Steps:  16%|█▌        | 3946/24850 [1:34:51<9:09:12,  1.58s/it, lr=7e-5, step_loss=0.0204]Steps:  16%|█▌        | 3946/24850 [1:34:51<9:09:12,  1.58s/it, lr=7e-5, step_loss=0.0431]Steps:  16%|█▌        | 3947/24850 [1:34:53<8:58:20,  1.55s/it, lr=7e-5, step_loss=0.0431]Steps:  16%|█▌        | 3947/24850 [1:34:53<8:58:20,  1.55s/it, lr=7e-5, step_loss=0.0275]Steps:  16%|█▌        | 3948/24850 [1:34:54<8:51:19,  1.53s/it, lr=7e-5, step_loss=0.0275]Steps:  16%|█▌        | 3948/24850 [1:34:54<8:51:19,  1.53s/it, lr=7e-5, step_loss=0.0215]Steps:  16%|█▌        | 3949/24850 [1:34:56<8:45:49,  1.51s/it, lr=7e-5, step_loss=0.0215]Steps:  16%|█▌        | 3949/24850 [1:34:56<8:45:49,  1.51s/it, lr=7e-5, step_loss=0.014] Steps:  16%|█▌        | 3950/24850 [1:34:57<8:40:53,  1.50s/it, lr=7e-5, step_loss=0.014]Steps:  16%|█▌        | 3950/24850 [1:34:57<8:40:53,  1.50s/it, lr=7e-5, step_loss=0.00865]Steps:  16%|█▌        | 3951/24850 [1:34:59<8:38:34,  1.49s/it, lr=7e-5, step_loss=0.00865]Steps:  16%|█▌        | 3951/24850 [1:34:59<8:38:34,  1.49s/it, lr=7e-5, step_loss=0.0484] Steps:  16%|█▌        | 3952/24850 [1:35:00<8:36:49,  1.48s/it, lr=7e-5, step_loss=0.0484]Steps:  16%|█▌        | 3952/24850 [1:35:00<8:36:49,  1.48s/it, lr=7e-5, step_loss=0.0722]Steps:  16%|█▌        | 3953/24850 [1:35:02<8:38:44,  1.49s/it, lr=7e-5, step_loss=0.0722]Steps:  16%|█▌        | 3953/24850 [1:35:02<8:38:44,  1.49s/it, lr=7e-5, step_loss=0.041] Steps:  16%|█▌        | 3954/24850 [1:35:03<8:36:07,  1.48s/it, lr=7e-5, step_loss=0.041]Steps:  16%|█▌        | 3954/24850 [1:35:03<8:36:07,  1.48s/it, lr=7e-5, step_loss=0.0287]Steps:  16%|█▌        | 3955/24850 [1:35:05<8:33:54,  1.48s/it, lr=7e-5, step_loss=0.0287]Steps:  16%|█▌        | 3955/24850 [1:35:05<8:33:54,  1.48s/it, lr=7e-5, step_loss=0.0101]Steps:  16%|█▌        | 3956/24850 [1:35:06<8:31:55,  1.47s/it, lr=7e-5, step_loss=0.0101]Steps:  16%|█▌        | 3956/24850 [1:35:06<8:31:55,  1.47s/it, lr=7e-5, step_loss=0.0466]Steps:  16%|█▌        | 3957/24850 [1:35:08<8:31:43,  1.47s/it, lr=7e-5, step_loss=0.0466]Steps:  16%|█▌        | 3957/24850 [1:35:08<8:31:43,  1.47s/it, lr=7e-5, step_loss=0.0153]Steps:  16%|█▌        | 3958/24850 [1:35:09<8:32:12,  1.47s/it, lr=7e-5, step_loss=0.0153]Steps:  16%|█▌        | 3958/24850 [1:35:09<8:32:12,  1.47s/it, lr=7e-5, step_loss=0.0398](512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512)Steps:  16%|█▌        | 3959/24850 [1:35:11<8:32:04,  1.47s/it, lr=7e-5, step_loss=0.0398]Steps:  16%|█▌        | 3959/24850 [1:35:11<8:32:04,  1.47s/it, lr=7e-5, step_loss=0.0548]Steps:  16%|█▌        | 3960/24850 [1:35:12<8:32:17,  1.47s/it, lr=7e-5, step_loss=0.0548]Steps:  16%|█▌        | 3960/24850 [1:35:12<8:32:17,  1.47s/it, lr=7e-5, step_loss=0.0107]Steps:  16%|█▌        | 3961/24850 [1:35:13<8:32:24,  1.47s/it, lr=7e-5, step_loss=0.0107]Steps:  16%|█▌        | 3961/24850 [1:35:13<8:32:24,  1.47s/it, lr=7e-5, step_loss=0.0228]Steps:  16%|█▌        | 3962/24850 [1:35:15<8:30:59,  1.47s/it, lr=7e-5, step_loss=0.0228]Steps:  16%|█▌        | 3962/24850 [1:35:15<8:30:59,  1.47s/it, lr=7e-5, step_loss=0.0749]Steps:  16%|█▌        | 3963/24850 [1:35:16<8:30:31,  1.47s/it, lr=7e-5, step_loss=0.0749]Steps:  16%|█▌        | 3963/24850 [1:35:16<8:30:31,  1.47s/it, lr=7e-5, step_loss=0.0121]Steps:  16%|█▌        | 3964/24850 [1:35:18<8:30:53,  1.47s/it, lr=7e-5, step_loss=0.0121]Steps:  16%|█▌        | 3964/24850 [1:35:18<8:30:53,  1.47s/it, lr=7e-5, step_loss=0.0169]Steps:  16%|█▌        | 3965/24850 [1:35:19<8:30:04,  1.47s/it, lr=7e-5, step_loss=0.0169]Steps:  16%|█▌        | 3965/24850 [1:35:19<8:30:04,  1.47s/it, lr=7e-5, step_loss=0.0093]Steps:  16%|█▌        | 3966/24850 [1:35:21<8:31:11,  1.47s/it, lr=7e-5, step_loss=0.0093]Steps:  16%|█▌        | 3966/24850 [1:35:21<8:31:11,  1.47s/it, lr=7e-5, step_loss=0.0905]Steps:  16%|█▌        | 3967/24850 [1:35:22<8:30:15,  1.47s/it, lr=7e-5, step_loss=0.0905]Steps:  16%|█▌        | 3967/24850 [1:35:22<8:30:15,  1.47s/it, lr=7e-5, step_loss=0.0715]Steps:  16%|█▌        | 3968/24850 [1:35:24<8:30:15,  1.47s/it, lr=7e-5, step_loss=0.0715]Steps:  16%|█▌        | 3968/24850 [1:35:24<8:30:15,  1.47s/it, lr=7e-5, step_loss=0.0643]Steps:  16%|█▌        | 3969/24850 [1:35:25<8:30:50,  1.47s/it, lr=7e-5, step_loss=0.0643]Steps:  16%|█▌        | 3969/24850 [1:35:25<8:30:50,  1.47s/it, lr=7e-5, step_loss=0.0259]Steps:  16%|█▌        | 3970/24850 [1:35:27<8:29:36,  1.46s/it, lr=7e-5, step_loss=0.0259]Steps:  16%|█▌        | 3970/24850 [1:35:27<8:29:36,  1.46s/it, lr=7e-5, step_loss=0.0537]Steps:  16%|█▌        | 3971/24850 [1:35:28<8:28:47,  1.46s/it, lr=7e-5, step_loss=0.0537]Steps:  16%|█▌        | 3971/24850 [1:35:28<8:28:47,  1.46s/it, lr=7e-5, step_loss=0.0141]Steps:  16%|█▌        | 3972/24850 [1:35:30<8:28:49,  1.46s/it, lr=7e-5, step_loss=0.0141]Steps:  16%|█▌        | 3972/24850 [1:35:30<8:28:49,  1.46s/it, lr=7e-5, step_loss=0.00245]Steps:  16%|█▌        | 3973/24850 [1:35:31<8:29:04,  1.46s/it, lr=7e-5, step_loss=0.00245]Steps:  16%|█▌        | 3973/24850 [1:35:31<8:29:04,  1.46s/it, lr=7e-5, step_loss=0.0389] Steps:  16%|█▌        | 3974/24850 [1:35:33<8:30:25,  1.47s/it, lr=7e-5, step_loss=0.0389]Steps:  16%|█▌        | 3974/24850 [1:35:33<8:30:25,  1.47s/it, lr=7e-5, step_loss=0.0163]Steps:  16%|█▌        | 3975/24850 [1:35:34<8:28:32,  1.46s/it, lr=7e-5, step_loss=0.0163]Steps:  16%|█▌        | 3975/24850 [1:35:34<8:28:32,  1.46s/it, lr=7e-5, step_loss=0.00131]Steps:  16%|█▌        | 3976/24850 [1:35:35<8:27:37,  1.46s/it, lr=7e-5, step_loss=0.00131]Steps:  16%|█▌        | 3976/24850 [1:35:35<8:27:37,  1.46s/it, lr=7e-5, step_loss=0.0483] Steps:  16%|█▌        | 3977/24850 [1:35:37<8:27:21,  1.46s/it, lr=7e-5, step_loss=0.0483]Steps:  16%|█▌        | 3977/24850 [1:35:37<8:27:21,  1.46s/it, lr=7e-5, step_loss=0.00242]Steps:  16%|█▌        | 3978/24850 [1:35:38<8:28:16,  1.46s/it, lr=7e-5, step_loss=0.00242]Steps:  16%|█▌        | 3978/24850 [1:35:38<8:28:16,  1.46s/it, lr=7e-5, step_loss=0.0105] Steps:  16%|█▌        | 3979/24850 [1:35:40<8:28:56,  1.46s/it, lr=7e-5, step_loss=0.0105]Steps:  16%|█▌        | 3979/24850 [1:35:40<8:28:56,  1.46s/it, lr=7e-5, step_loss=0.00437]Steps:  16%|█▌        | 3980/24850 [1:35:41<8:28:54,  1.46s/it, lr=7e-5, step_loss=0.00437]Steps:  16%|█▌        | 3980/24850 [1:35:41<8:28:54,  1.46s/it, lr=7e-5, step_loss=0.0112] Steps:  16%|█▌        | 3981/24850 [1:35:43<8:29:53,  1.47s/it, lr=7e-5, step_loss=0.0112]Steps:  16%|█▌        | 3981/24850 [1:35:43<8:29:53,  1.47s/it, lr=7e-5, step_loss=0.104] Steps:  16%|█▌        | 3982/24850 [1:35:44<8:33:54,  1.48s/it, lr=7e-5, step_loss=0.104]Steps:  16%|█▌        | 3982/24850 [1:35:44<8:33:54,  1.48s/it, lr=7e-5, step_loss=0.0141]Steps:  16%|█▌        | 3983/24850 [1:35:46<8:33:44,  1.48s/it, lr=7e-5, step_loss=0.0141]Steps:  16%|█▌        | 3983/24850 [1:35:46<8:33:44,  1.48s/it, lr=7e-5, step_loss=0.0212]Steps:  16%|█▌        | 3984/24850 [1:35:47<8:33:19,  1.48s/it, lr=7e-5, step_loss=0.0212]Steps:  16%|█▌        | 3984/24850 [1:35:47<8:33:19,  1.48s/it, lr=7e-5, step_loss=0.047] Steps:  16%|█▌        | 3985/24850 [1:35:49<8:58:37,  1.55s/it, lr=7e-5, step_loss=0.047]Steps:  16%|█▌        | 3985/24850 [1:35:49<8:58:37,  1.55s/it, lr=7e-5, step_loss=0.0219] torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:  16%|█▌        | 3986/24850 [1:35:50<8:49:00,  1.52s/it, lr=7e-5, step_loss=0.0219]Steps:  16%|█▌        | 3986/24850 [1:35:50<8:49:00,  1.52s/it, lr=7e-5, step_loss=0.00678]Steps:  16%|█▌        | 3987/24850 [1:35:52<8:44:18,  1.51s/it, lr=7e-5, step_loss=0.00678]Steps:  16%|█▌        | 3987/24850 [1:35:52<8:44:18,  1.51s/it, lr=7e-5, step_loss=0.017]  Steps:  16%|█▌        | 3988/24850 [1:35:53<8:41:52,  1.50s/it, lr=7e-5, step_loss=0.017]Steps:  16%|█▌        | 3988/24850 [1:35:53<8:41:52,  1.50s/it, lr=7e-5, step_loss=0.00555]Steps:  16%|█▌        | 3989/24850 [1:35:55<8:38:34,  1.49s/it, lr=7e-5, step_loss=0.00555]Steps:  16%|█▌        | 3989/24850 [1:35:55<8:38:34,  1.49s/it, lr=7e-5, step_loss=0.00233]Steps:  16%|█▌        | 3990/24850 [1:35:56<8:36:24,  1.49s/it, lr=7e-5, step_loss=0.00233]Steps:  16%|█▌        | 3990/24850 [1:35:56<8:36:24,  1.49s/it, lr=7e-5, step_loss=0.00351]Steps:  16%|█▌        | 3991/24850 [1:35:58<8:34:19,  1.48s/it, lr=7e-5, step_loss=0.00351]Steps:  16%|█▌        | 3991/24850 [1:35:58<8:34:19,  1.48s/it, lr=7e-5, step_loss=0.0226] Steps:  16%|█▌        | 3992/24850 [1:35:59<8:34:04,  1.48s/it, lr=7e-5, step_loss=0.0226]04/12/2024 11:46:08 - INFO - __main__ - 2 checkpoints already exist, removing 1 checkpoints
04/12/2024 11:46:08 - INFO - __main__ - removing checkpoints: checkpoint-3000
04/12/2024 11:46:08 - INFO - accelerate.accelerator - Saving current state to /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-4000
Configuration saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-4000/unet/config.json
Model weights saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-4000/unet/diffusion_pytorch_model.safetensors
Model weights saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-4000/unet/pytorch_lora_weights.safetensors
04/12/2024 11:46:37 - INFO - accelerate.checkpointing - Optimizer state saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-4000/optimizer.bin
04/12/2024 11:46:37 - INFO - accelerate.checkpointing - Scheduler state saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-4000/scheduler.bin
04/12/2024 11:46:37 - INFO - accelerate.checkpointing - Random states saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-4000/random_states_0.pkl
04/12/2024 11:46:37 - INFO - __main__ - Saved state to /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-4000
Steps:  16%|█▌        | 3992/24850 [1:36:29<8:34:04,  1.48s/it, lr=7e-5, step_loss=0.0185]Steps:  16%|█▌        | 3993/24850 [1:36:37<72:02:45, 12.44s/it, lr=7e-5, step_loss=0.0185]Steps:  16%|█▌        | 3993/24850 [1:36:37<72:02:45, 12.44s/it, lr=7e-5, step_loss=0.02]  Steps:  16%|█▌        | 3994/24850 [1:36:39<52:54:38,  9.13s/it, lr=7e-5, step_loss=0.02]Steps:  16%|█▌        | 3994/24850 [1:36:39<52:54:38,  9.13s/it, lr=7e-5, step_loss=0.0221]Steps:  16%|█▌        | 3995/24850 [1:36:40<39:32:20,  6.83s/it, lr=7e-5, step_loss=0.0221]Steps:  16%|█▌        | 3995/24850 [1:36:40<39:32:20,  6.83s/it, lr=7e-5, step_loss=0.0258]Steps:  16%|█▌        | 3996/24850 [1:36:42<30:11:50,  5.21s/it, lr=7e-5, step_loss=0.0258]Steps:  16%|█▌        | 3996/24850 [1:36:42<30:11:50,  5.21s/it, lr=7e-5, step_loss=0.0429]Steps:  16%|█▌        | 3997/24850 [1:36:43<23:42:25,  4.09s/it, lr=7e-5, step_loss=0.0429]Steps:  16%|█▌        | 3997/24850 [1:36:43<23:42:25,  4.09s/it, lr=7e-5, step_loss=0.00779]Steps:  16%|█▌        | 3998/24850 [1:36:45<19:13:33,  3.32s/it, lr=7e-5, step_loss=0.00779]Steps:  16%|█▌        | 3998/24850 [1:36:45<19:13:33,  3.32s/it, lr=7e-5, step_loss=0.00902]Steps:  16%|█▌        | 3999/24850 [1:36:46<15:58:28,  2.76s/it, lr=7e-5, step_loss=0.00902]Steps:  16%|█▌        | 3999/24850 [1:36:46<15:58:28,  2.76s/it, lr=7e-5, step_loss=0.00333]Steps:  16%|█▌        | 4000/24850 [1:36:47<13:43:44,  2.37s/it, lr=7e-5, step_loss=0.00333]Steps:  16%|█▌        | 4000/24850 [1:36:47<13:43:44,  2.37s/it, lr=7e-5, step_loss=0.0192] Steps:  16%|█▌        | 4001/24850 [1:36:49<12:09:25,  2.10s/it, lr=7e-5, step_loss=0.0192]Steps:  16%|█▌        | 4001/24850 [1:36:49<12:09:25,  2.10s/it, lr=7e-5, step_loss=0.0138]Steps:  16%|█▌        | 4002/24850 [1:36:50<11:02:53,  1.91s/it, lr=7e-5, step_loss=0.0138]Steps:  16%|█▌        | 4002/24850 [1:36:50<11:02:53,  1.91s/it, lr=7e-5, step_loss=0.0459]Steps:  16%|█▌        | 4003/24850 [1:36:52<10:15:03,  1.77s/it, lr=7e-5, step_loss=0.0459]Steps:  16%|█▌        | 4003/24850 [1:36:52<10:15:03,  1.77s/it, lr=7e-5, step_loss=0.0404]Steps:  16%|█▌        | 4004/24850 [1:36:53<9:42:16,  1.68s/it, lr=7e-5, step_loss=0.0404] Steps:  16%|█▌        | 4004/24850 [1:36:53<9:42:16,  1.68s/it, lr=7e-5, step_loss=0.0188]Steps:  16%|█▌        | 4005/24850 [1:36:55<9:19:35,  1.61s/it, lr=7e-5, step_loss=0.0188]Steps:  16%|█▌        | 4005/24850 [1:36:55<9:19:35,  1.61s/it, lr=7e-5, step_loss=0.00906]Steps:  16%|█▌        | 4006/24850 [1:36:56<9:02:35,  1.56s/it, lr=7e-5, step_loss=0.00906]Steps:  16%|█▌        | 4006/24850 [1:36:56<9:02:35,  1.56s/it, lr=7e-5, step_loss=0.00441]Steps:  16%|█▌        | 4007/24850 [1:36:58<8:52:58,  1.53s/it, lr=7e-5, step_loss=0.00441]Steps:  16%|█▌        | 4007/24850 [1:36:58<8:52:58,  1.53s/it, lr=7e-5, step_loss=0.354]  Steps:  16%|█▌        | 4008/24850 [1:36:59<8:42:37,  1.50s/it, lr=7e-5, step_loss=0.354]Steps:  16%|█▌        | 4008/24850 [1:36:59<8:42:37,  1.50s/it, lr=7e-5, step_loss=0.000842]Steps:  16%|█▌        | 4009/24850 [1:37:01<8:37:36,  1.49s/it, lr=7e-5, step_loss=0.000842]Steps:  16%|█▌        | 4009/24850 [1:37:01<8:37:36,  1.49s/it, lr=7e-5, step_loss=0.00316] Steps:  16%|█▌        | 4010/24850 [1:37:02<8:36:30,  1.49s/it, lr=7e-5, step_loss=0.00316]Steps:  16%|█▌        | 4010/24850 [1:37:02<8:36:30,  1.49s/it, lr=7e-5, step_loss=0.0065] Steps:  16%|█▌        | 4011/24850 [1:37:03<8:33:55,  1.48s/it, lr=7e-5, step_loss=0.0065]Steps:  16%|█▌        | 4011/24850 [1:37:03<8:33:55,  1.48s/it, lr=7e-5, step_loss=0.00735]Steps:  16%|█▌        | 4012/24850 [1:37:05<8:31:18,  1.47s/it, lr=7e-5, step_loss=0.00735]Steps:  16%|█▌        | 4012/24850 [1:37:05<8:31:18,  1.47s/it, lr=7e-5, step_loss=0.00326]torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  Steps:  16%|█▌        | 4013/24850 [1:37:06<8:30:31,  1.47s/it, lr=7e-5, step_loss=0.00326]Steps:  16%|█▌        | 4013/24850 [1:37:06<8:30:31,  1.47s/it, lr=7e-5, step_loss=0.0193] Steps:  16%|█▌        | 4014/24850 [1:37:08<8:29:08,  1.47s/it, lr=7e-5, step_loss=0.0193]Steps:  16%|█▌        | 4014/24850 [1:37:08<8:29:08,  1.47s/it, lr=7e-5, step_loss=0.00407]Steps:  16%|█▌        | 4015/24850 [1:37:09<8:29:17,  1.47s/it, lr=7e-5, step_loss=0.00407]Steps:  16%|█▌        | 4015/24850 [1:37:09<8:29:17,  1.47s/it, lr=7e-5, step_loss=0.0486] Steps:  16%|█▌        | 4016/24850 [1:37:11<8:28:16,  1.46s/it, lr=7e-5, step_loss=0.0486]Steps:  16%|█▌        | 4016/24850 [1:37:11<8:28:16,  1.46s/it, lr=7e-5, step_loss=0.0405]Steps:  16%|█▌        | 4017/24850 [1:37:12<8:27:16,  1.46s/it, lr=7e-5, step_loss=0.0405]Steps:  16%|█▌        | 4017/24850 [1:37:12<8:27:16,  1.46s/it, lr=7e-5, step_loss=0.0377]Steps:  16%|█▌        | 4018/24850 [1:37:14<8:27:19,  1.46s/it, lr=7e-5, step_loss=0.0377]Steps:  16%|█▌        | 4018/24850 [1:37:14<8:27:19,  1.46s/it, lr=7e-5, step_loss=0.00374]Steps:  16%|█▌        | 4019/24850 [1:37:15<8:29:03,  1.47s/it, lr=7e-5, step_loss=0.00374]Steps:  16%|█▌        | 4019/24850 [1:37:15<8:29:03,  1.47s/it, lr=7e-5, step_loss=0.0114] Steps:  16%|█▌        | 4020/24850 [1:37:17<8:28:29,  1.46s/it, lr=7e-5, step_loss=0.0114]Steps:  16%|█▌        | 4020/24850 [1:37:17<8:28:29,  1.46s/it, lr=7e-5, step_loss=0.00345]Steps:  16%|█▌        | 4021/24850 [1:37:18<8:27:06,  1.46s/it, lr=7e-5, step_loss=0.00345]Steps:  16%|█▌        | 4021/24850 [1:37:18<8:27:06,  1.46s/it, lr=7e-5, step_loss=0.0216] Steps:  16%|█▌        | 4022/24850 [1:37:20<8:27:07,  1.46s/it, lr=7e-5, step_loss=0.0216]Steps:  16%|█▌        | 4022/24850 [1:37:20<8:27:07,  1.46s/it, lr=7e-5, step_loss=0.00966]Steps:  16%|█▌        | 4023/24850 [1:37:21<8:25:19,  1.46s/it, lr=7e-5, step_loss=0.00966]Steps:  16%|█▌        | 4023/24850 [1:37:21<8:25:19,  1.46s/it, lr=7e-5, step_loss=0.0166] Steps:  16%|█▌        | 4024/24850 [1:37:22<8:25:59,  1.46s/it, lr=7e-5, step_loss=0.0166]Steps:  16%|█▌        | 4024/24850 [1:37:22<8:25:59,  1.46s/it, lr=7e-5, step_loss=0.00919]Steps:  16%|█▌        | 4025/24850 [1:37:24<8:25:30,  1.46s/it, lr=7e-5, step_loss=0.00919]Steps:  16%|█▌        | 4025/24850 [1:37:24<8:25:30,  1.46s/it, lr=7e-5, step_loss=0.00283]Steps:  16%|█▌        | 4026/24850 [1:37:25<8:23:59,  1.45s/it, lr=7e-5, step_loss=0.00283]Steps:  16%|█▌        | 4026/24850 [1:37:25<8:23:59,  1.45s/it, lr=7e-5, step_loss=0.00118]Steps:  16%|█▌        | 4027/24850 [1:37:27<8:23:43,  1.45s/it, lr=7e-5, step_loss=0.00118]Steps:  16%|█▌        | 4027/24850 [1:37:27<8:23:43,  1.45s/it, lr=7e-5, step_loss=0.0206] Steps:  16%|█▌        | 4028/24850 [1:37:28<8:24:48,  1.45s/it, lr=7e-5, step_loss=0.0206]Steps:  16%|█▌        | 4028/24850 [1:37:28<8:24:48,  1.45s/it, lr=7e-5, step_loss=0.0118]Steps:  16%|█▌        | 4029/24850 [1:37:30<8:25:44,  1.46s/it, lr=7e-5, step_loss=0.0118]Steps:  16%|█▌        | 4029/24850 [1:37:30<8:25:44,  1.46s/it, lr=7e-5, step_loss=0.0187]Steps:  16%|█▌        | 4030/24850 [1:37:31<8:25:27,  1.46s/it, lr=7e-5, step_loss=0.0187]Steps:  16%|█▌        | 4030/24850 [1:37:31<8:25:27,  1.46s/it, lr=7e-5, step_loss=0.0266]Steps:  16%|█▌        | 4031/24850 [1:37:33<8:24:46,  1.45s/it, lr=7e-5, step_loss=0.0266]Steps:  16%|█▌        | 4031/24850 [1:37:33<8:24:46,  1.45s/it, lr=7e-5, step_loss=0.0142]Steps:  16%|█▌        | 4032/24850 [1:37:34<8:25:13,  1.46s/it, lr=7e-5, step_loss=0.0142]Steps:  16%|█▌        | 4032/24850 [1:37:34<8:25:13,  1.46s/it, lr=7e-5, step_loss=0.0259]Steps:  16%|█▌        | 4033/24850 [1:37:36<8:25:17,  1.46s/it, lr=7e-5, step_loss=0.0259]Steps:  16%|█▌        | 4033/24850 [1:37:36<8:25:17,  1.46s/it, lr=7e-5, step_loss=0.00322]Steps:  16%|█▌        | 4034/24850 [1:37:37<8:26:01,  1.46s/it, lr=7e-5, step_loss=0.00322]Steps:  16%|█▌        | 4034/24850 [1:37:37<8:26:01,  1.46s/it, lr=7e-5, step_loss=0.0159] Steps:  16%|█▌        | 4035/24850 [1:37:38<8:25:34,  1.46s/it, lr=7e-5, step_loss=0.0159]Steps:  16%|█▌        | 4035/24850 [1:37:38<8:25:34,  1.46s/it, lr=7e-5, step_loss=0.0109]Steps:  16%|█▌        | 4036/24850 [1:37:40<8:26:01,  1.46s/it, lr=7e-5, step_loss=0.0109]Steps:  16%|█▌        | 4036/24850 [1:37:40<8:26:01,  1.46s/it, lr=7e-5, step_loss=0.0561]Steps:  16%|█▌        | 4037/24850 [1:37:41<8:26:26,  1.46s/it, lr=7e-5, step_loss=0.0561]Steps:  16%|█▌        | 4037/24850 [1:37:41<8:26:26,  1.46s/it, lr=7e-5, step_loss=0.00197]Steps:  16%|█▌        | 4038/24850 [1:37:43<8:24:22,  1.45s/it, lr=7e-5, step_loss=0.00197]Steps:  16%|█▌        | 4038/24850 [1:37:43<8:24:22,  1.45s/it, lr=7e-5, step_loss=0.0118] Steps:  16%|█▋        | 4039/24850 [1:37:45<8:47:19,  1.52s/it, lr=7e-5, step_loss=0.0118]Steps:  16%|█▋        | 4039/24850 [1:37:45<8:47:19,  1.52s/it, lr=7e-5, step_loss=0.105] Steps:  16%|█▋        | 4040/24850 [1:37:46<8:40:39,  1.50s/it, lr=7e-5, step_loss=0.105]Steps:  16%|█▋        | 4040/24850 [1:37:46<8:40:39,  1.50s/it, lr=7e-5, step_loss=0.0689]mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:  16%|█▋        | 4041/24850 [1:37:47<8:35:57,  1.49s/it, lr=7e-5, step_loss=0.0689]Steps:  16%|█▋        | 4041/24850 [1:37:47<8:35:57,  1.49s/it, lr=7e-5, step_loss=0.0244]Steps:  16%|█▋        | 4042/24850 [1:37:49<8:34:48,  1.48s/it, lr=7e-5, step_loss=0.0244]Steps:  16%|█▋        | 4042/24850 [1:37:49<8:34:48,  1.48s/it, lr=7e-5, step_loss=0.0507]Steps:  16%|█▋        | 4043/24850 [1:37:51<10:08:23,  1.75s/it, lr=7e-5, step_loss=0.0507]Steps:  16%|█▋        | 4043/24850 [1:37:51<10:08:23,  1.75s/it, lr=7e-5, step_loss=0.0276]Steps:  16%|█▋        | 4044/24850 [1:37:53<9:37:17,  1.66s/it, lr=7e-5, step_loss=0.0276] Steps:  16%|█▋        | 4044/24850 [1:37:53<9:37:17,  1.66s/it, lr=7e-5, step_loss=0.0553]Steps:  16%|█▋        | 4045/24850 [1:37:54<9:16:16,  1.60s/it, lr=7e-5, step_loss=0.0553]Steps:  16%|█▋        | 4045/24850 [1:37:54<9:16:16,  1.60s/it, lr=7e-5, step_loss=0.0415]Steps:  16%|█▋        | 4046/24850 [1:37:56<8:58:35,  1.55s/it, lr=7e-5, step_loss=0.0415]Steps:  16%|█▋        | 4046/24850 [1:37:56<8:58:35,  1.55s/it, lr=7e-5, step_loss=0.000291]Steps:  16%|█▋        | 4047/24850 [1:37:57<8:48:39,  1.52s/it, lr=7e-5, step_loss=0.000291]Steps:  16%|█▋        | 4047/24850 [1:37:57<8:48:39,  1.52s/it, lr=7e-5, step_loss=0.00736] Steps:  16%|█▋        | 4048/24850 [1:37:59<8:40:57,  1.50s/it, lr=7e-5, step_loss=0.00736]Steps:  16%|█▋        | 4048/24850 [1:37:59<8:40:57,  1.50s/it, lr=7e-5, step_loss=0.0102] Steps:  16%|█▋        | 4049/24850 [1:38:00<8:36:24,  1.49s/it, lr=7e-5, step_loss=0.0102]Steps:  16%|█▋        | 4049/24850 [1:38:00<8:36:24,  1.49s/it, lr=7e-5, step_loss=0.0127]Steps:  16%|█▋        | 4050/24850 [1:38:01<8:33:05,  1.48s/it, lr=7e-5, step_loss=0.0127]Steps:  16%|█▋        | 4050/24850 [1:38:01<8:33:05,  1.48s/it, lr=7e-5, step_loss=0.0204]Steps:  16%|█▋        | 4051/24850 [1:38:03<8:30:44,  1.47s/it, lr=7e-5, step_loss=0.0204]Steps:  16%|█▋        | 4051/24850 [1:38:03<8:30:44,  1.47s/it, lr=7e-5, step_loss=0.00614]Steps:  16%|█▋        | 4052/24850 [1:38:04<8:29:30,  1.47s/it, lr=7e-5, step_loss=0.00614]Steps:  16%|█▋        | 4052/24850 [1:38:04<8:29:30,  1.47s/it, lr=7e-5, step_loss=0.0412] Steps:  16%|█▋        | 4053/24850 [1:38:06<8:27:57,  1.47s/it, lr=7e-5, step_loss=0.0412]Steps:  16%|█▋        | 4053/24850 [1:38:06<8:27:57,  1.47s/it, lr=7e-5, step_loss=0.0473]Steps:  16%|█▋        | 4054/24850 [1:38:07<8:26:55,  1.46s/it, lr=7e-5, step_loss=0.0473]Steps:  16%|█▋        | 4054/24850 [1:38:07<8:26:55,  1.46s/it, lr=7e-5, step_loss=0.00687]Steps:  16%|█▋        | 4055/24850 [1:38:09<8:27:10,  1.46s/it, lr=7e-5, step_loss=0.00687]Steps:  16%|█▋        | 4055/24850 [1:38:09<8:27:10,  1.46s/it, lr=7e-5, step_loss=0.237]  Steps:  16%|█▋        | 4056/24850 [1:38:10<8:43:37,  1.51s/it, lr=7e-5, step_loss=0.237]Steps:  16%|█▋        | 4056/24850 [1:38:10<8:43:37,  1.51s/it, lr=7e-5, step_loss=0.0277]04/12/2024 11:48:19 - INFO - __main__ - Running validation...
torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([9, 4, 64, 64])

Loading pipeline components...:   0%|          | 0/7 [00:00<?, ?it/s][A`text_config_dict` is provided which will be used to initialize `CLIPTextConfig`. The value `text_config["id2label"]` will be overriden.
`text_config_dict` is provided which will be used to initialize `CLIPTextConfig`. The value `text_config["bos_token_id"]` will be overriden.
`text_config_dict` is provided which will be used to initialize `CLIPTextConfig`. The value `text_config["eos_token_id"]` will be overriden.
Loaded safety_checker as StableDiffusionSafetyChecker from `safety_checker` subfolder of timbrooks/instruct-pix2pix.

Loading pipeline components...:  14%|█▍        | 1/7 [00:00<00:02,  2.15it/s][ALoaded feature_extractor as CLIPImageProcessor from `feature_extractor` subfolder of timbrooks/instruct-pix2pix.
{'timestep_spacing'} was not found in config. Values will be initialized to default values.
Loaded scheduler as EulerAncestralDiscreteScheduler from `scheduler` subfolder of timbrooks/instruct-pix2pix.
Loaded tokenizer as CLIPTokenizer from `tokenizer` subfolder of timbrooks/instruct-pix2pix.
Loading pipeline components...: 100%|██████████| 7/7 [00:00<00:00, 12.82it/s]
{'timestep_spacing'} was not found in config. Values will be initialized to default values.
conduct do_classifier_free_guidance, text_guidance: 16,image_guidance: 1

  0%|          | 0/50 [00:00<?, ?it/s][A
  2%|▏         | 1/50 [00:00<00:21,  2.28it/s][A
  4%|▍         | 2/50 [00:00<00:20,  2.36it/s][A
  6%|▌         | 3/50 [00:01<00:19,  2.38it/s][A
  8%|▊         | 4/50 [00:01<00:19,  2.40it/s][A
 10%|█         | 5/50 [00:02<00:18,  2.41it/s][A
 12%|█▏        | 6/50 [00:02<00:18,  2.41it/s][A
 14%|█▍        | 7/50 [00:02<00:17,  2.41it/s][A
 16%|█▌        | 8/50 [00:03<00:17,  2.42it/s][A
 18%|█▊        | 9/50 [00:03<00:16,  2.41it/s][A
 20%|██        | 10/50 [00:04<00:16,  2.41it/s][A
 22%|██▏       | 11/50 [00:04<00:16,  2.42it/s][A
 24%|██▍       | 12/50 [00:04<00:15,  2.42it/s][A
 26%|██▌       | 13/50 [00:05<00:15,  2.42it/s][A
 28%|██▊       | 14/50 [00:05<00:14,  2.42it/s][A
 30%|███       | 15/50 [00:06<00:14,  2.42it/s][A
 32%|███▏      | 16/50 [00:06<00:14,  2.42it/s][A
 34%|███▍      | 17/50 [00:07<00:13,  2.42it/s][A
 36%|███▌      | 18/50 [00:07<00:13,  2.41it/s][A
 38%|███▊      | 19/50 [00:07<00:12,  2.40it/s][A
 40%|████      | 20/50 [00:08<00:12,  2.40it/s][A
 42%|████▏     | 21/50 [00:08<00:12,  2.41it/s][A
 44%|████▍     | 22/50 [00:09<00:11,  2.41it/s][A
 46%|████▌     | 23/50 [00:09<00:11,  2.42it/s][A
 48%|████▊     | 24/50 [00:09<00:10,  2.41it/s][A
 50%|█████     | 25/50 [00:10<00:10,  2.41it/s][A
 52%|█████▏    | 26/50 [00:10<00:09,  2.42it/s][A
 54%|█████▍    | 27/50 [00:11<00:09,  2.42it/s][A
 56%|█████▌    | 28/50 [00:11<00:09,  2.42it/s][A
 58%|█████▊    | 29/50 [00:12<00:08,  2.42it/s][A
 60%|██████    | 30/50 [00:12<00:08,  2.43it/s][A
 62%|██████▏   | 31/50 [00:12<00:07,  2.43it/s][A
 64%|██████▍   | 32/50 [00:13<00:07,  2.43it/s][A
 66%|██████▌   | 33/50 [00:13<00:06,  2.43it/s][A(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) 
 68%|██████▊   | 34/50 [00:14<00:06,  2.43it/s][A
 70%|███████   | 35/50 [00:14<00:06,  2.43it/s][A
 72%|███████▏  | 36/50 [00:14<00:05,  2.43it/s][A
 74%|███████▍  | 37/50 [00:15<00:05,  2.43it/s][A
 76%|███████▌  | 38/50 [00:15<00:04,  2.43it/s][A
 78%|███████▊  | 39/50 [00:16<00:04,  2.43it/s][A
 80%|████████  | 40/50 [00:16<00:04,  2.43it/s][A
 82%|████████▏ | 41/50 [00:16<00:03,  2.42it/s][A
 84%|████████▍ | 42/50 [00:17<00:03,  2.43it/s][A
 86%|████████▌ | 43/50 [00:17<00:02,  2.43it/s][A
 88%|████████▊ | 44/50 [00:18<00:02,  2.43it/s][A
 90%|█████████ | 45/50 [00:18<00:02,  2.43it/s][A
 92%|█████████▏| 46/50 [00:19<00:01,  2.42it/s][A
 94%|█████████▍| 47/50 [00:19<00:01,  2.42it/s][A
 96%|█████████▌| 48/50 [00:19<00:00,  2.42it/s][A
 98%|█████████▊| 49/50 [00:20<00:00,  2.43it/s][A
100%|██████████| 50/50 [00:20<00:00,  2.42it/s][A100%|██████████| 50/50 [00:20<00:00,  2.42it/s]
04/12/2024 11:48:43 - INFO - __main__ - Running training...
torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
save img to : /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/images/modify the images for task ['flare']_val_step_4064_0.png modify the images for task ['flare']
writing inference outputs failed [Errno 2] No such file or directory: '/usr/bin/ffmpeg'
Steps:  16%|█▋        | 4057/24850 [1:38:42<60:24:36, 10.46s/it, lr=7e-5, step_loss=0.0277]Steps:  16%|█▋        | 4057/24850 [1:38:42<60:24:36, 10.46s/it, lr=7e-5, step_loss=0.0749]Steps:  16%|█▋        | 4058/24850 [1:38:43<44:55:54,  7.78s/it, lr=7e-5, step_loss=0.0749]Steps:  16%|█▋        | 4058/24850 [1:38:43<44:55:54,  7.78s/it, lr=7e-5, step_loss=0.0159]Steps:  16%|█▋        | 4059/24850 [1:38:45<34:01:18,  5.89s/it, lr=7e-5, step_loss=0.0159]Steps:  16%|█▋        | 4059/24850 [1:38:45<34:01:18,  5.89s/it, lr=7e-5, step_loss=0.0167]Steps:  16%|█▋        | 4060/24850 [1:38:46<26:23:32,  4.57s/it, lr=7e-5, step_loss=0.0167]Steps:  16%|█▋        | 4060/24850 [1:38:46<26:23:32,  4.57s/it, lr=7e-5, step_loss=0.00878]Steps:  16%|█▋        | 4061/24850 [1:38:48<20:58:43,  3.63s/it, lr=7e-5, step_loss=0.00878]Steps:  16%|█▋        | 4061/24850 [1:38:48<20:58:43,  3.63s/it, lr=7e-5, step_loss=0.00623]Steps:  16%|█▋        | 4062/24850 [1:38:49<17:11:55,  2.98s/it, lr=7e-5, step_loss=0.00623]Steps:  16%|█▋        | 4062/24850 [1:38:49<17:11:55,  2.98s/it, lr=7e-5, step_loss=0.0812] Steps:  16%|█▋        | 4063/24850 [1:38:51<14:33:06,  2.52s/it, lr=7e-5, step_loss=0.0812]Steps:  16%|█▋        | 4063/24850 [1:38:51<14:33:06,  2.52s/it, lr=7e-5, step_loss=0.00204]Steps:  16%|█▋        | 4064/24850 [1:38:52<12:46:04,  2.21s/it, lr=7e-5, step_loss=0.00204]Steps:  16%|█▋        | 4064/24850 [1:38:52<12:46:04,  2.21s/it, lr=7e-5, step_loss=0.00537]Steps:  16%|█▋        | 4065/24850 [1:38:54<11:28:42,  1.99s/it, lr=7e-5, step_loss=0.00537]Steps:  16%|█▋        | 4065/24850 [1:38:54<11:28:42,  1.99s/it, lr=7e-5, step_loss=0.0294] Steps:  16%|█▋        | 4066/24850 [1:38:55<10:34:22,  1.83s/it, lr=7e-5, step_loss=0.0294]Steps:  16%|█▋        | 4066/24850 [1:38:55<10:34:22,  1.83s/it, lr=7e-5, step_loss=0.0159]Steps:  16%|█▋        | 4067/24850 [1:38:56<9:55:26,  1.72s/it, lr=7e-5, step_loss=0.0159] Steps:  16%|█▋        | 4067/24850 [1:38:56<9:55:26,  1.72s/it, lr=7e-5, step_loss=0.00537]Steps:  16%|█▋        | 4068/24850 [1:38:58<9:28:18,  1.64s/it, lr=7e-5, step_loss=0.00537]Steps:  16%|█▋        | 4068/24850 [1:38:58<9:28:18,  1.64s/it, lr=7e-5, step_loss=0.0345] Steps:  16%|█▋        | 4069/24850 [1:38:59<9:09:00,  1.59s/it, lr=7e-5, step_loss=0.0345]Steps:  16%|█▋        | 4069/24850 [1:38:59<9:09:00,  1.59s/it, lr=7e-5, step_loss=0.0208]Steps:  16%|█▋        | 4070/24850 [1:39:01<8:56:11,  1.55s/it, lr=7e-5, step_loss=0.0208]Steps:  16%|█▋        | 4070/24850 [1:39:01<8:56:11,  1.55s/it, lr=7e-5, step_loss=0.0199]Steps:  16%|█▋        | 4071/24850 [1:39:02<8:46:22,  1.52s/it, lr=7e-5, step_loss=0.0199]Steps:  16%|█▋        | 4071/24850 [1:39:02<8:46:22,  1.52s/it, lr=7e-5, step_loss=0.0187]Steps:  16%|█▋        | 4072/24850 [1:39:04<8:41:40,  1.51s/it, lr=7e-5, step_loss=0.0187]Steps:  16%|█▋        | 4072/24850 [1:39:04<8:41:40,  1.51s/it, lr=7e-5, step_loss=0.0169]Steps:  16%|█▋        | 4073/24850 [1:39:05<8:36:03,  1.49s/it, lr=7e-5, step_loss=0.0169]Steps:  16%|█▋        | 4073/24850 [1:39:05<8:36:03,  1.49s/it, lr=7e-5, step_loss=0.108] Steps:  16%|█▋        | 4074/24850 [1:39:07<8:33:53,  1.48s/it, lr=7e-5, step_loss=0.108]Steps:  16%|█▋        | 4074/24850 [1:39:07<8:33:53,  1.48s/it, lr=7e-5, step_loss=0.0137]Steps:  16%|█▋        | 4075/24850 [1:39:08<8:32:39,  1.48s/it, lr=7e-5, step_loss=0.0137]Steps:  16%|█▋        | 4075/24850 [1:39:08<8:32:39,  1.48s/it, lr=7e-5, step_loss=0.00177]Steps:  16%|█▋        | 4076/24850 [1:39:10<8:33:59,  1.48s/it, lr=7e-5, step_loss=0.00177]Steps:  16%|█▋        | 4076/24850 [1:39:10<8:33:59,  1.48s/it, lr=7e-5, step_loss=0.00241]Steps:  16%|█▋        | 4077/24850 [1:39:11<8:33:45,  1.48s/it, lr=7e-5, step_loss=0.00241]Steps:  16%|█▋        | 4077/24850 [1:39:11<8:33:45,  1.48s/it, lr=7e-5, step_loss=0.0774] Steps:  16%|█▋        | 4078/24850 [1:39:13<8:32:20,  1.48s/it, lr=7e-5, step_loss=0.0774]Steps:  16%|█▋        | 4078/24850 [1:39:13<8:32:20,  1.48s/it, lr=7e-5, step_loss=0.00713]Steps:  16%|█▋        | 4079/24850 [1:39:14<8:31:13,  1.48s/it, lr=7e-5, step_loss=0.00713]Steps:  16%|█▋        | 4079/24850 [1:39:14<8:31:13,  1.48s/it, lr=7e-5, step_loss=0.0632] Steps:  16%|█▋        | 4080/24850 [1:39:16<8:30:48,  1.48s/it, lr=7e-5, step_loss=0.0632]Steps:  16%|█▋        | 4080/24850 [1:39:16<8:30:48,  1.48s/it, lr=7e-5, step_loss=0.00578]Steps:  16%|█▋        | 4081/24850 [1:39:17<8:30:21,  1.47s/it, lr=7e-5, step_loss=0.00578]Steps:  16%|█▋        | 4081/24850 [1:39:17<8:30:21,  1.47s/it, lr=7e-5, step_loss=0.0881] Steps:  16%|█▋        | 4082/24850 [1:39:18<8:29:42,  1.47s/it, lr=7e-5, step_loss=0.0881]Steps:  16%|█▋        | 4082/24850 [1:39:18<8:29:42,  1.47s/it, lr=7e-5, step_loss=0.0321]Steps:  16%|█▋        | 4083/24850 [1:39:20<8:30:14,  1.47s/it, lr=7e-5, step_loss=0.0321]Steps:  16%|█▋        | 4083/24850 [1:39:20<8:30:14,  1.47s/it, lr=7e-5, step_loss=0.0198](512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512)Steps:  16%|█▋        | 4084/24850 [1:39:21<8:30:47,  1.48s/it, lr=7e-5, step_loss=0.0198]Steps:  16%|█▋        | 4084/24850 [1:39:21<8:30:47,  1.48s/it, lr=7e-5, step_loss=0.023] Steps:  16%|█▋        | 4085/24850 [1:39:23<8:31:10,  1.48s/it, lr=7e-5, step_loss=0.023]Steps:  16%|█▋        | 4085/24850 [1:39:23<8:31:10,  1.48s/it, lr=7e-5, step_loss=0.0956]Steps:  16%|█▋        | 4086/24850 [1:39:24<8:32:04,  1.48s/it, lr=7e-5, step_loss=0.0956]Steps:  16%|█▋        | 4086/24850 [1:39:24<8:32:04,  1.48s/it, lr=7e-5, step_loss=0.0194]Steps:  16%|█▋        | 4087/24850 [1:39:26<8:29:39,  1.47s/it, lr=7e-5, step_loss=0.0194]Steps:  16%|█▋        | 4087/24850 [1:39:26<8:29:39,  1.47s/it, lr=7e-5, step_loss=0.173] Steps:  16%|█▋        | 4088/24850 [1:39:27<8:29:31,  1.47s/it, lr=7e-5, step_loss=0.173]Steps:  16%|█▋        | 4088/24850 [1:39:27<8:29:31,  1.47s/it, lr=7e-5, step_loss=0.00169]Steps:  16%|█▋        | 4089/24850 [1:39:29<8:28:13,  1.47s/it, lr=7e-5, step_loss=0.00169]Steps:  16%|█▋        | 4089/24850 [1:39:29<8:28:13,  1.47s/it, lr=7e-5, step_loss=0.00498]Steps:  16%|█▋        | 4090/24850 [1:39:30<8:28:27,  1.47s/it, lr=7e-5, step_loss=0.00498]Steps:  16%|█▋        | 4090/24850 [1:39:30<8:28:27,  1.47s/it, lr=7e-5, step_loss=0.0423] Steps:  16%|█▋        | 4091/24850 [1:39:32<8:28:38,  1.47s/it, lr=7e-5, step_loss=0.0423]Steps:  16%|█▋        | 4091/24850 [1:39:32<8:28:38,  1.47s/it, lr=7e-5, step_loss=0.0163]Steps:  16%|█▋        | 4092/24850 [1:39:34<10:11:10,  1.77s/it, lr=7e-5, step_loss=0.0163]Steps:  16%|█▋        | 4092/24850 [1:39:34<10:11:10,  1.77s/it, lr=7e-5, step_loss=0.00691]Steps:  16%|█▋        | 4093/24850 [1:39:36<9:40:08,  1.68s/it, lr=7e-5, step_loss=0.00691] Steps:  16%|█▋        | 4093/24850 [1:39:36<9:40:08,  1.68s/it, lr=7e-5, step_loss=0.0137] Steps:  16%|█▋        | 4094/24850 [1:39:37<9:20:27,  1.62s/it, lr=7e-5, step_loss=0.0137]Steps:  16%|█▋        | 4094/24850 [1:39:37<9:20:27,  1.62s/it, lr=7e-5, step_loss=0.0389]Steps:  16%|█▋        | 4095/24850 [1:39:39<9:06:35,  1.58s/it, lr=7e-5, step_loss=0.0389]Steps:  16%|█▋        | 4095/24850 [1:39:39<9:06:35,  1.58s/it, lr=7e-5, step_loss=0.0313]Steps:  16%|█▋        | 4096/24850 [1:39:40<8:57:16,  1.55s/it, lr=7e-5, step_loss=0.0313]Steps:  16%|█▋        | 4096/24850 [1:39:40<8:57:16,  1.55s/it, lr=7e-5, step_loss=0.0136]Steps:  16%|█▋        | 4097/24850 [1:39:42<8:47:55,  1.53s/it, lr=7e-5, step_loss=0.0136]Steps:  16%|█▋        | 4097/24850 [1:39:42<8:47:55,  1.53s/it, lr=7e-5, step_loss=0.0734]Steps:  16%|█▋        | 4098/24850 [1:39:43<8:47:31,  1.53s/it, lr=7e-5, step_loss=0.0734]Steps:  16%|█▋        | 4098/24850 [1:39:43<8:47:31,  1.53s/it, lr=7e-5, step_loss=0.00864]Steps:  16%|█▋        | 4099/24850 [1:39:45<8:50:15,  1.53s/it, lr=7e-5, step_loss=0.00864]Steps:  16%|█▋        | 4099/24850 [1:39:45<8:50:15,  1.53s/it, lr=7e-5, step_loss=0.00471]Steps:  16%|█▋        | 4100/24850 [1:39:46<8:43:02,  1.51s/it, lr=7e-5, step_loss=0.00471]Steps:  16%|█▋        | 4100/24850 [1:39:46<8:43:02,  1.51s/it, lr=7e-5, step_loss=0.00723]Steps:  17%|█▋        | 4101/24850 [1:39:48<8:39:58,  1.50s/it, lr=7e-5, step_loss=0.00723]Steps:  17%|█▋        | 4101/24850 [1:39:48<8:39:58,  1.50s/it, lr=7e-5, step_loss=0.0513] Steps:  17%|█▋        | 4102/24850 [1:39:49<8:38:01,  1.50s/it, lr=7e-5, step_loss=0.0513]Steps:  17%|█▋        | 4102/24850 [1:39:49<8:38:01,  1.50s/it, lr=7e-5, step_loss=0.0584]Steps:  17%|█▋        | 4103/24850 [1:39:51<8:37:51,  1.50s/it, lr=7e-5, step_loss=0.0584]Steps:  17%|█▋        | 4103/24850 [1:39:51<8:37:51,  1.50s/it, lr=7e-5, step_loss=0.117] Steps:  17%|█▋        | 4104/24850 [1:39:52<8:36:44,  1.49s/it, lr=7e-5, step_loss=0.117]Steps:  17%|█▋        | 4104/24850 [1:39:52<8:36:44,  1.49s/it, lr=7e-5, step_loss=0.0427]Steps:  17%|█▋        | 4105/24850 [1:39:54<8:32:34,  1.48s/it, lr=7e-5, step_loss=0.0427]Steps:  17%|█▋        | 4105/24850 [1:39:54<8:32:34,  1.48s/it, lr=7e-5, step_loss=0.0322]Steps:  17%|█▋        | 4106/24850 [1:39:55<8:30:34,  1.48s/it, lr=7e-5, step_loss=0.0322]Steps:  17%|█▋        | 4106/24850 [1:39:55<8:30:34,  1.48s/it, lr=7e-5, step_loss=0.00804]Steps:  17%|█▋        | 4107/24850 [1:39:56<8:31:04,  1.48s/it, lr=7e-5, step_loss=0.00804]Steps:  17%|█▋        | 4107/24850 [1:39:56<8:31:04,  1.48s/it, lr=7e-5, step_loss=0.0189] Steps:  17%|█▋        | 4108/24850 [1:39:58<8:28:47,  1.47s/it, lr=7e-5, step_loss=0.0189]Steps:  17%|█▋        | 4108/24850 [1:39:58<8:28:47,  1.47s/it, lr=7e-5, step_loss=0.142] Steps:  17%|█▋        | 4109/24850 [1:39:59<8:28:43,  1.47s/it, lr=7e-5, step_loss=0.142]Steps:  17%|█▋        | 4109/24850 [1:39:59<8:28:43,  1.47s/it, lr=7e-5, step_loss=0.0122]Steps:  17%|█▋        | 4110/24850 [1:40:01<8:28:15,  1.47s/it, lr=7e-5, step_loss=0.0122]Steps:  17%|█▋        | 4110/24850 [1:40:01<8:28:15,  1.47s/it, lr=7e-5, step_loss=0.0132] torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:  17%|█▋        | 4111/24850 [1:40:02<8:29:59,  1.48s/it, lr=7e-5, step_loss=0.0132]Steps:  17%|█▋        | 4111/24850 [1:40:02<8:29:59,  1.48s/it, lr=7e-5, step_loss=0.031] Steps:  17%|█▋        | 4112/24850 [1:40:04<8:30:08,  1.48s/it, lr=7e-5, step_loss=0.031]Steps:  17%|█▋        | 4112/24850 [1:40:04<8:30:08,  1.48s/it, lr=7e-5, step_loss=0.0438]Steps:  17%|█▋        | 4113/24850 [1:40:05<8:28:20,  1.47s/it, lr=7e-5, step_loss=0.0438]Steps:  17%|█▋        | 4113/24850 [1:40:05<8:28:20,  1.47s/it, lr=7e-5, step_loss=0.196] Steps:  17%|█▋        | 4114/24850 [1:40:07<8:28:07,  1.47s/it, lr=7e-5, step_loss=0.196]Steps:  17%|█▋        | 4114/24850 [1:40:07<8:28:07,  1.47s/it, lr=7e-5, step_loss=0.028]Steps:  17%|█▋        | 4115/24850 [1:40:08<8:28:31,  1.47s/it, lr=7e-5, step_loss=0.028]Steps:  17%|█▋        | 4115/24850 [1:40:08<8:28:31,  1.47s/it, lr=7e-5, step_loss=0.00107]Steps:  17%|█▋        | 4116/24850 [1:40:10<8:27:51,  1.47s/it, lr=7e-5, step_loss=0.00107]Steps:  17%|█▋        | 4116/24850 [1:40:10<8:27:51,  1.47s/it, lr=7e-5, step_loss=0.0878] Steps:  17%|█▋        | 4117/24850 [1:40:11<8:51:29,  1.54s/it, lr=7e-5, step_loss=0.0878]Steps:  17%|█▋        | 4117/24850 [1:40:11<8:51:29,  1.54s/it, lr=7e-5, step_loss=0.00668]Steps:  17%|█▋        | 4118/24850 [1:40:13<8:46:40,  1.52s/it, lr=7e-5, step_loss=0.00668]Steps:  17%|█▋        | 4118/24850 [1:40:13<8:46:40,  1.52s/it, lr=7e-5, step_loss=0.0385] Steps:  17%|█▋        | 4119/24850 [1:40:14<8:43:55,  1.52s/it, lr=7e-5, step_loss=0.0385]Steps:  17%|█▋        | 4119/24850 [1:40:14<8:43:55,  1.52s/it, lr=7e-5, step_loss=0.0173]Steps:  17%|█▋        | 4120/24850 [1:40:16<8:39:23,  1.50s/it, lr=7e-5, step_loss=0.0173]Steps:  17%|█▋        | 4120/24850 [1:40:16<8:39:23,  1.50s/it, lr=7e-5, step_loss=0.0397]Steps:  17%|█▋        | 4121/24850 [1:40:17<8:36:05,  1.49s/it, lr=7e-5, step_loss=0.0397]Steps:  17%|█▋        | 4121/24850 [1:40:17<8:36:05,  1.49s/it, lr=7e-5, step_loss=0.0066]Steps:  17%|█▋        | 4122/24850 [1:40:19<8:33:20,  1.49s/it, lr=7e-5, step_loss=0.0066]Steps:  17%|█▋        | 4122/24850 [1:40:19<8:33:20,  1.49s/it, lr=7e-5, step_loss=0.000794]Steps:  17%|█▋        | 4123/24850 [1:40:20<8:33:17,  1.49s/it, lr=7e-5, step_loss=0.000794]Steps:  17%|█▋        | 4123/24850 [1:40:20<8:33:17,  1.49s/it, lr=7e-5, step_loss=0.0374]  Steps:  17%|█▋        | 4124/24850 [1:40:22<8:31:58,  1.48s/it, lr=7e-5, step_loss=0.0374]Steps:  17%|█▋        | 4124/24850 [1:40:22<8:31:58,  1.48s/it, lr=7e-5, step_loss=0.00642]Steps:  17%|█▋        | 4125/24850 [1:40:23<8:30:32,  1.48s/it, lr=7e-5, step_loss=0.00642]Steps:  17%|█▋        | 4125/24850 [1:40:23<8:30:32,  1.48s/it, lr=7e-5, step_loss=0.0195] Steps:  17%|█▋        | 4126/24850 [1:40:25<8:30:05,  1.48s/it, lr=7e-5, step_loss=0.0195]Steps:  17%|█▋        | 4126/24850 [1:40:25<8:30:05,  1.48s/it, lr=7e-5, step_loss=0.141] Steps:  17%|█▋        | 4127/24850 [1:40:26<8:28:56,  1.47s/it, lr=7e-5, step_loss=0.141]Steps:  17%|█▋        | 4127/24850 [1:40:26<8:28:56,  1.47s/it, lr=7e-5, step_loss=0.119]Steps:  17%|█▋        | 4128/24850 [1:40:28<8:28:40,  1.47s/it, lr=7e-5, step_loss=0.119]Steps:  17%|█▋        | 4128/24850 [1:40:28<8:28:40,  1.47s/it, lr=7e-5, step_loss=0.0718]Steps:  17%|█▋        | 4129/24850 [1:40:29<8:28:40,  1.47s/it, lr=7e-5, step_loss=0.0718]Steps:  17%|█▋        | 4129/24850 [1:40:29<8:28:40,  1.47s/it, lr=7e-5, step_loss=0.0101]Steps:  17%|█▋        | 4130/24850 [1:40:31<8:25:57,  1.47s/it, lr=7e-5, step_loss=0.0101]Steps:  17%|█▋        | 4130/24850 [1:40:31<8:25:57,  1.47s/it, lr=7e-5, step_loss=0.000436]Steps:  17%|█▋        | 4131/24850 [1:40:32<8:26:22,  1.47s/it, lr=7e-5, step_loss=0.000436]Steps:  17%|█▋        | 4131/24850 [1:40:32<8:26:22,  1.47s/it, lr=7e-5, step_loss=0.0158]  Steps:  17%|█▋        | 4132/24850 [1:40:33<8:25:13,  1.46s/it, lr=7e-5, step_loss=0.0158]Steps:  17%|█▋        | 4132/24850 [1:40:33<8:25:13,  1.46s/it, lr=7e-5, step_loss=0.00772]Steps:  17%|█▋        | 4133/24850 [1:40:35<8:25:29,  1.46s/it, lr=7e-5, step_loss=0.00772]Steps:  17%|█▋        | 4133/24850 [1:40:35<8:25:29,  1.46s/it, lr=7e-5, step_loss=0.0503] Steps:  17%|█▋        | 4134/24850 [1:40:36<8:28:47,  1.47s/it, lr=7e-5, step_loss=0.0503]Steps:  17%|█▋        | 4134/24850 [1:40:36<8:28:47,  1.47s/it, lr=7e-5, step_loss=0.0398]Steps:  17%|█▋        | 4135/24850 [1:40:38<8:28:32,  1.47s/it, lr=7e-5, step_loss=0.0398]Steps:  17%|█▋        | 4135/24850 [1:40:38<8:28:32,  1.47s/it, lr=7e-5, step_loss=0.0296]Steps:  17%|█▋        | 4136/24850 [1:40:39<8:27:58,  1.47s/it, lr=7e-5, step_loss=0.0296]Steps:  17%|█▋        | 4136/24850 [1:40:39<8:27:58,  1.47s/it, lr=7e-5, step_loss=0.0052]Steps:  17%|█▋        | 4137/24850 [1:40:41<8:27:17,  1.47s/it, lr=7e-5, step_loss=0.0052]Steps:  17%|█▋        | 4137/24850 [1:40:41<8:27:17,  1.47s/it, lr=7e-5, step_loss=0.0403]torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  Steps:  17%|█▋        | 4138/24850 [1:40:42<8:28:41,  1.47s/it, lr=7e-5, step_loss=0.0403]Steps:  17%|█▋        | 4138/24850 [1:40:42<8:28:41,  1.47s/it, lr=7e-5, step_loss=0.0331]Steps:  17%|█▋        | 4139/24850 [1:40:44<8:34:11,  1.49s/it, lr=7e-5, step_loss=0.0331]Steps:  17%|█▋        | 4139/24850 [1:40:44<8:34:11,  1.49s/it, lr=7e-5, step_loss=0.109] Steps:  17%|█▋        | 4140/24850 [1:40:45<8:34:30,  1.49s/it, lr=7e-5, step_loss=0.109]Steps:  17%|█▋        | 4140/24850 [1:40:45<8:34:30,  1.49s/it, lr=7e-5, step_loss=0.00438]Steps:  17%|█▋        | 4141/24850 [1:40:47<8:32:20,  1.48s/it, lr=7e-5, step_loss=0.00438]Steps:  17%|█▋        | 4141/24850 [1:40:47<8:32:20,  1.48s/it, lr=7e-5, step_loss=0.0759] Steps:  17%|█▋        | 4142/24850 [1:40:49<10:10:57,  1.77s/it, lr=7e-5, step_loss=0.0759]Steps:  17%|█▋        | 4142/24850 [1:40:49<10:10:57,  1.77s/it, lr=7e-5, step_loss=0.0655]Steps:  17%|█▋        | 4143/24850 [1:40:51<9:40:09,  1.68s/it, lr=7e-5, step_loss=0.0655] Steps:  17%|█▋        | 4143/24850 [1:40:51<9:40:09,  1.68s/it, lr=7e-5, step_loss=0.00987]Steps:  17%|█▋        | 4144/24850 [1:40:52<9:18:57,  1.62s/it, lr=7e-5, step_loss=0.00987]Steps:  17%|█▋        | 4144/24850 [1:40:52<9:18:57,  1.62s/it, lr=7e-5, step_loss=0.0305] Steps:  17%|█▋        | 4145/24850 [1:40:54<9:03:44,  1.58s/it, lr=7e-5, step_loss=0.0305]Steps:  17%|█▋        | 4145/24850 [1:40:54<9:03:44,  1.58s/it, lr=7e-5, step_loss=0.0167]Steps:  17%|█▋        | 4146/24850 [1:40:55<8:51:46,  1.54s/it, lr=7e-5, step_loss=0.0167]Steps:  17%|█▋        | 4146/24850 [1:40:55<8:51:46,  1.54s/it, lr=7e-5, step_loss=0.0136]Steps:  17%|█▋        | 4147/24850 [1:40:57<8:43:39,  1.52s/it, lr=7e-5, step_loss=0.0136]Steps:  17%|█▋        | 4147/24850 [1:40:57<8:43:39,  1.52s/it, lr=7e-5, step_loss=0.0144]Steps:  17%|█▋        | 4148/24850 [1:40:58<8:37:36,  1.50s/it, lr=7e-5, step_loss=0.0144]Steps:  17%|█▋        | 4148/24850 [1:40:58<8:37:36,  1.50s/it, lr=7e-5, step_loss=0.00692]Steps:  17%|█▋        | 4149/24850 [1:41:00<8:34:56,  1.49s/it, lr=7e-5, step_loss=0.00692]Steps:  17%|█▋        | 4149/24850 [1:41:00<8:34:56,  1.49s/it, lr=7e-5, step_loss=0.0703] Steps:  17%|█▋        | 4150/24850 [1:41:01<8:32:01,  1.48s/it, lr=7e-5, step_loss=0.0703]Steps:  17%|█▋        | 4150/24850 [1:41:01<8:32:01,  1.48s/it, lr=7e-5, step_loss=0.0413]Steps:  17%|█▋        | 4151/24850 [1:41:02<8:28:06,  1.47s/it, lr=7e-5, step_loss=0.0413]Steps:  17%|█▋        | 4151/24850 [1:41:02<8:28:06,  1.47s/it, lr=7e-5, step_loss=0.0127]Steps:  17%|█▋        | 4152/24850 [1:41:04<8:26:33,  1.47s/it, lr=7e-5, step_loss=0.0127]Steps:  17%|█▋        | 4152/24850 [1:41:04<8:26:33,  1.47s/it, lr=7e-5, step_loss=0.00291]Steps:  17%|█▋        | 4153/24850 [1:41:05<8:25:50,  1.47s/it, lr=7e-5, step_loss=0.00291]Steps:  17%|█▋        | 4153/24850 [1:41:05<8:25:50,  1.47s/it, lr=7e-5, step_loss=0.0217] Steps:  17%|█▋        | 4154/24850 [1:41:07<8:30:27,  1.48s/it, lr=7e-5, step_loss=0.0217]Steps:  17%|█▋        | 4154/24850 [1:41:07<8:30:27,  1.48s/it, lr=7e-5, step_loss=0.0538]Steps:  17%|█▋        | 4155/24850 [1:41:08<8:30:58,  1.48s/it, lr=7e-5, step_loss=0.0538]Steps:  17%|█▋        | 4155/24850 [1:41:08<8:30:58,  1.48s/it, lr=7e-5, step_loss=0.0134]Steps:  17%|█▋        | 4156/24850 [1:41:10<8:30:05,  1.48s/it, lr=7e-5, step_loss=0.0134]Steps:  17%|█▋        | 4156/24850 [1:41:10<8:30:05,  1.48s/it, lr=7e-5, step_loss=0.0348]Steps:  17%|█▋        | 4157/24850 [1:41:11<8:28:05,  1.47s/it, lr=7e-5, step_loss=0.0348]Steps:  17%|█▋        | 4157/24850 [1:41:11<8:28:05,  1.47s/it, lr=7e-5, step_loss=0.0141]Steps:  17%|█▋        | 4158/24850 [1:41:13<8:27:15,  1.47s/it, lr=7e-5, step_loss=0.0141]Steps:  17%|█▋        | 4158/24850 [1:41:13<8:27:15,  1.47s/it, lr=7e-5, step_loss=0.0822]Steps:  17%|█▋        | 4159/24850 [1:41:14<8:25:47,  1.47s/it, lr=7e-5, step_loss=0.0822]Steps:  17%|█▋        | 4159/24850 [1:41:14<8:25:47,  1.47s/it, lr=7e-5, step_loss=0.00341]Steps:  17%|█▋        | 4160/24850 [1:41:16<8:26:52,  1.47s/it, lr=7e-5, step_loss=0.00341]Steps:  17%|█▋        | 4160/24850 [1:41:16<8:26:52,  1.47s/it, lr=7e-5, step_loss=0.0377] Steps:  17%|█▋        | 4161/24850 [1:41:17<8:27:19,  1.47s/it, lr=7e-5, step_loss=0.0377]Steps:  17%|█▋        | 4161/24850 [1:41:17<8:27:19,  1.47s/it, lr=7e-5, step_loss=0.106] Steps:  17%|█▋        | 4162/24850 [1:41:19<8:26:39,  1.47s/it, lr=7e-5, step_loss=0.106]Steps:  17%|█▋        | 4162/24850 [1:41:19<8:26:39,  1.47s/it, lr=7e-5, step_loss=0.00572]Steps:  17%|█▋        | 4163/24850 [1:41:20<8:27:02,  1.47s/it, lr=7e-5, step_loss=0.00572]Steps:  17%|█▋        | 4163/24850 [1:41:20<8:27:02,  1.47s/it, lr=7e-5, step_loss=0.0779] Steps:  17%|█▋        | 4164/24850 [1:41:22<8:28:29,  1.47s/it, lr=7e-5, step_loss=0.0779]Steps:  17%|█▋        | 4164/24850 [1:41:22<8:28:29,  1.47s/it, lr=7e-5, step_loss=0.0446]Steps:  17%|█▋        | 4165/24850 [1:41:23<8:27:34,  1.47s/it, lr=7e-5, step_loss=0.0446]Steps:  17%|█▋        | 4165/24850 [1:41:23<8:27:34,  1.47s/it, lr=7e-5, step_loss=0.00577]mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:  17%|█▋        | 4166/24850 [1:41:25<8:29:56,  1.48s/it, lr=7e-5, step_loss=0.00577]Steps:  17%|█▋        | 4166/24850 [1:41:25<8:29:56,  1.48s/it, lr=7e-5, step_loss=0.00675]Steps:  17%|█▋        | 4167/24850 [1:41:26<8:32:08,  1.49s/it, lr=7e-5, step_loss=0.00675]Steps:  17%|█▋        | 4167/24850 [1:41:26<8:32:08,  1.49s/it, lr=7e-5, step_loss=0.251]  Steps:  17%|█▋        | 4168/24850 [1:41:28<8:32:21,  1.49s/it, lr=7e-5, step_loss=0.251]Steps:  17%|█▋        | 4168/24850 [1:41:28<8:32:21,  1.49s/it, lr=7e-5, step_loss=0.0232]Steps:  17%|█▋        | 4169/24850 [1:41:29<8:31:35,  1.48s/it, lr=7e-5, step_loss=0.0232]Steps:  17%|█▋        | 4169/24850 [1:41:29<8:31:35,  1.48s/it, lr=7e-5, step_loss=0.0648]Steps:  17%|█▋        | 4170/24850 [1:41:31<8:31:37,  1.48s/it, lr=7e-5, step_loss=0.0648]Steps:  17%|█▋        | 4170/24850 [1:41:31<8:31:37,  1.48s/it, lr=7e-5, step_loss=0.0547]Steps:  17%|█▋        | 4171/24850 [1:41:32<8:29:52,  1.48s/it, lr=7e-5, step_loss=0.0547]Steps:  17%|█▋        | 4171/24850 [1:41:32<8:29:52,  1.48s/it, lr=7e-5, step_loss=0.0255]Steps:  17%|█▋        | 4172/24850 [1:41:33<8:28:53,  1.48s/it, lr=7e-5, step_loss=0.0255]Steps:  17%|█▋        | 4172/24850 [1:41:33<8:28:53,  1.48s/it, lr=7e-5, step_loss=0.0258]Steps:  17%|█▋        | 4173/24850 [1:41:35<8:27:17,  1.47s/it, lr=7e-5, step_loss=0.0258]Steps:  17%|█▋        | 4173/24850 [1:41:35<8:27:17,  1.47s/it, lr=7e-5, step_loss=0.0296]Steps:  17%|█▋        | 4174/24850 [1:41:36<8:27:58,  1.47s/it, lr=7e-5, step_loss=0.0296]Steps:  17%|█▋        | 4174/24850 [1:41:36<8:27:58,  1.47s/it, lr=7e-5, step_loss=0.0948]Steps:  17%|█▋        | 4175/24850 [1:41:38<8:27:02,  1.47s/it, lr=7e-5, step_loss=0.0948]Steps:  17%|█▋        | 4175/24850 [1:41:38<8:27:02,  1.47s/it, lr=7e-5, step_loss=0.0885]Steps:  17%|█▋        | 4176/24850 [1:41:39<8:30:24,  1.48s/it, lr=7e-5, step_loss=0.0885]Steps:  17%|█▋        | 4176/24850 [1:41:39<8:30:24,  1.48s/it, lr=7e-5, step_loss=0.0515]Steps:  17%|█▋        | 4177/24850 [1:41:41<8:29:38,  1.48s/it, lr=7e-5, step_loss=0.0515]Steps:  17%|█▋        | 4177/24850 [1:41:41<8:29:38,  1.48s/it, lr=7e-5, step_loss=0.0425]Steps:  17%|█▋        | 4178/24850 [1:41:42<8:28:11,  1.48s/it, lr=7e-5, step_loss=0.0425]Steps:  17%|█▋        | 4178/24850 [1:41:42<8:28:11,  1.48s/it, lr=7e-5, step_loss=0.0797]Steps:  17%|█▋        | 4179/24850 [1:41:59<34:57:35,  6.09s/it, lr=7e-5, step_loss=0.0797]Steps:  17%|█▋        | 4179/24850 [1:41:59<34:57:35,  6.09s/it, lr=7e-5, step_loss=0.00662]Steps:  17%|█▋        | 4180/24850 [1:42:03<31:16:37,  5.45s/it, lr=7e-5, step_loss=0.00662]Steps:  17%|█▋        | 4180/24850 [1:42:03<31:16:37,  5.45s/it, lr=7e-5, step_loss=0.12]   Steps:  17%|█▋        | 4181/24850 [1:42:05<25:41:28,  4.47s/it, lr=7e-5, step_loss=0.12]Steps:  17%|█▋        | 4181/24850 [1:42:05<25:41:28,  4.47s/it, lr=7e-5, step_loss=0.0286]Steps:  17%|█▋        | 4182/24850 [1:42:07<21:43:05,  3.78s/it, lr=7e-5, step_loss=0.0286]Steps:  17%|█▋        | 4182/24850 [1:42:07<21:43:05,  3.78s/it, lr=7e-5, step_loss=0.00136]Steps:  17%|█▋        | 4183/24850 [1:42:09<18:38:32,  3.25s/it, lr=7e-5, step_loss=0.00136]Steps:  17%|█▋        | 4183/24850 [1:42:09<18:38:32,  3.25s/it, lr=7e-5, step_loss=0.0212] Steps:  17%|█▋        | 4184/24850 [1:42:11<15:48:06,  2.75s/it, lr=7e-5, step_loss=0.0212]Steps:  17%|█▋        | 4184/24850 [1:42:11<15:48:06,  2.75s/it, lr=7e-5, step_loss=0.0174]Steps:  17%|█▋        | 4185/24850 [1:42:13<13:54:08,  2.42s/it, lr=7e-5, step_loss=0.0174]Steps:  17%|█▋        | 4185/24850 [1:42:13<13:54:08,  2.42s/it, lr=7e-5, step_loss=0.0792]Steps:  17%|█▋        | 4186/24850 [1:42:14<12:18:39,  2.14s/it, lr=7e-5, step_loss=0.0792]Steps:  17%|█▋        | 4186/24850 [1:42:14<12:18:39,  2.14s/it, lr=7e-5, step_loss=0.0304]Steps:  17%|█▋        | 4187/24850 [1:42:16<11:44:35,  2.05s/it, lr=7e-5, step_loss=0.0304]Steps:  17%|█▋        | 4187/24850 [1:42:16<11:44:35,  2.05s/it, lr=7e-5, step_loss=0.0286]Steps:  17%|█▋        | 4188/24850 [1:42:18<10:51:28,  1.89s/it, lr=7e-5, step_loss=0.0286]Steps:  17%|█▋        | 4188/24850 [1:42:18<10:51:28,  1.89s/it, lr=7e-5, step_loss=0.0231]Steps:  17%|█▋        | 4189/24850 [1:42:19<10:12:23,  1.78s/it, lr=7e-5, step_loss=0.0231]Steps:  17%|█▋        | 4189/24850 [1:42:19<10:12:23,  1.78s/it, lr=7e-5, step_loss=0.00395]Steps:  17%|█▋        | 4190/24850 [1:42:21<9:45:28,  1.70s/it, lr=7e-5, step_loss=0.00395] Steps:  17%|█▋        | 4190/24850 [1:42:21<9:45:28,  1.70s/it, lr=7e-5, step_loss=0.0273] Steps:  17%|█▋        | 4191/24850 [1:42:22<9:23:37,  1.64s/it, lr=7e-5, step_loss=0.0273]Steps:  17%|█▋        | 4191/24850 [1:42:22<9:23:37,  1.64s/it, lr=7e-5, step_loss=0.0331]Steps:  17%|█▋        | 4192/24850 [1:42:25<10:46:12,  1.88s/it, lr=7e-5, step_loss=0.0331]Steps:  17%|█▋        | 4192/24850 [1:42:25<10:46:12,  1.88s/it, lr=7e-5, step_loss=0.0401]torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) Steps:  17%|█▋        | 4193/24850 [1:42:26<10:04:56,  1.76s/it, lr=7e-5, step_loss=0.0401]Steps:  17%|█▋        | 4193/24850 [1:42:26<10:04:56,  1.76s/it, lr=7e-5, step_loss=0.00911]Steps:  17%|█▋        | 4194/24850 [1:42:27<9:35:07,  1.67s/it, lr=7e-5, step_loss=0.00911] Steps:  17%|█▋        | 4194/24850 [1:42:27<9:35:07,  1.67s/it, lr=7e-5, step_loss=0.019]  Steps:  17%|█▋        | 4195/24850 [1:42:29<9:18:21,  1.62s/it, lr=7e-5, step_loss=0.019]Steps:  17%|█▋        | 4195/24850 [1:42:29<9:18:21,  1.62s/it, lr=7e-5, step_loss=0.0005]Steps:  17%|█▋        | 4196/24850 [1:42:30<9:02:10,  1.58s/it, lr=7e-5, step_loss=0.0005]Steps:  17%|█▋        | 4196/24850 [1:42:30<9:02:10,  1.58s/it, lr=7e-5, step_loss=0.0389]Steps:  17%|█▋        | 4197/24850 [1:42:32<8:50:10,  1.54s/it, lr=7e-5, step_loss=0.0389]Steps:  17%|█▋        | 4197/24850 [1:42:32<8:50:10,  1.54s/it, lr=7e-5, step_loss=0.0204]Steps:  17%|█▋        | 4198/24850 [1:42:33<8:41:40,  1.52s/it, lr=7e-5, step_loss=0.0204]Steps:  17%|█▋        | 4198/24850 [1:42:33<8:41:40,  1.52s/it, lr=7e-5, step_loss=0.0923]Steps:  17%|█▋        | 4199/24850 [1:42:35<8:36:25,  1.50s/it, lr=7e-5, step_loss=0.0923]Steps:  17%|█▋        | 4199/24850 [1:42:35<8:36:25,  1.50s/it, lr=7e-5, step_loss=0.0246]Steps:  17%|█▋        | 4200/24850 [1:42:36<8:32:01,  1.49s/it, lr=7e-5, step_loss=0.0246]Steps:  17%|█▋        | 4200/24850 [1:42:36<8:32:01,  1.49s/it, lr=7e-5, step_loss=0.00959]Steps:  17%|█▋        | 4201/24850 [1:42:38<8:29:34,  1.48s/it, lr=7e-5, step_loss=0.00959]Steps:  17%|█▋        | 4201/24850 [1:42:38<8:29:34,  1.48s/it, lr=7e-5, step_loss=0.00358]Steps:  17%|█▋        | 4202/24850 [1:42:39<8:26:15,  1.47s/it, lr=7e-5, step_loss=0.00358]Steps:  17%|█▋        | 4202/24850 [1:42:39<8:26:15,  1.47s/it, lr=7e-5, step_loss=0.00699]Steps:  17%|█▋        | 4203/24850 [1:42:41<8:25:02,  1.47s/it, lr=7e-5, step_loss=0.00699]Steps:  17%|█▋        | 4203/24850 [1:42:41<8:25:02,  1.47s/it, lr=7e-5, step_loss=0.0268] Steps:  17%|█▋        | 4204/24850 [1:42:42<8:25:58,  1.47s/it, lr=7e-5, step_loss=0.0268]Steps:  17%|█▋        | 4204/24850 [1:42:42<8:25:58,  1.47s/it, lr=7e-5, step_loss=0.0131]Steps:  17%|█▋        | 4205/24850 [1:42:49<18:03:53,  3.15s/it, lr=7e-5, step_loss=0.0131]Steps:  17%|█▋        | 4205/24850 [1:42:49<18:03:53,  3.15s/it, lr=7e-5, step_loss=0.0117]Steps:  17%|█▋        | 4206/24850 [1:42:52<17:01:58,  2.97s/it, lr=7e-5, step_loss=0.0117]Steps:  17%|█▋        | 4206/24850 [1:42:52<17:01:58,  2.97s/it, lr=7e-5, step_loss=0.005] Steps:  17%|█▋        | 4207/24850 [1:42:54<15:15:30,  2.66s/it, lr=7e-5, step_loss=0.005]Steps:  17%|█▋        | 4207/24850 [1:42:54<15:15:30,  2.66s/it, lr=7e-5, step_loss=0.00742]Steps:  17%|█▋        | 4208/24850 [1:42:55<13:30:31,  2.36s/it, lr=7e-5, step_loss=0.00742]Steps:  17%|█▋        | 4208/24850 [1:42:55<13:30:31,  2.36s/it, lr=7e-5, step_loss=0.0793] Steps:  17%|█▋        | 4209/24850 [1:42:57<12:16:45,  2.14s/it, lr=7e-5, step_loss=0.0793]Steps:  17%|█▋        | 4209/24850 [1:42:57<12:16:45,  2.14s/it, lr=7e-5, step_loss=0.0765]Steps:  17%|█▋        | 4210/24850 [1:42:59<11:11:56,  1.95s/it, lr=7e-5, step_loss=0.0765]Steps:  17%|█▋        | 4210/24850 [1:42:59<11:11:56,  1.95s/it, lr=7e-5, step_loss=0.0846]Steps:  17%|█▋        | 4211/24850 [1:43:00<10:35:16,  1.85s/it, lr=7e-5, step_loss=0.0846]Steps:  17%|█▋        | 4211/24850 [1:43:00<10:35:16,  1.85s/it, lr=7e-5, step_loss=0.00584]Steps:  17%|█▋        | 4212/24850 [1:43:02<9:58:49,  1.74s/it, lr=7e-5, step_loss=0.00584] Steps:  17%|█▋        | 4212/24850 [1:43:02<9:58:49,  1.74s/it, lr=7e-5, step_loss=0.02]   Steps:  17%|█▋        | 4213/24850 [1:43:03<9:34:40,  1.67s/it, lr=7e-5, step_loss=0.02]Steps:  17%|█▋        | 4213/24850 [1:43:03<9:34:40,  1.67s/it, lr=7e-5, step_loss=0.00133]Steps:  17%|█▋        | 4214/24850 [1:43:05<9:22:46,  1.64s/it, lr=7e-5, step_loss=0.00133]Steps:  17%|█▋        | 4214/24850 [1:43:05<9:22:46,  1.64s/it, lr=7e-5, step_loss=0.0124] Steps:  17%|█▋        | 4215/24850 [1:43:06<9:06:18,  1.59s/it, lr=7e-5, step_loss=0.0124]Steps:  17%|█▋        | 4215/24850 [1:43:06<9:06:18,  1.59s/it, lr=7e-5, step_loss=0.0291]Steps:  17%|█▋        | 4216/24850 [1:43:08<8:55:35,  1.56s/it, lr=7e-5, step_loss=0.0291]Steps:  17%|█▋        | 4216/24850 [1:43:08<8:55:35,  1.56s/it, lr=7e-5, step_loss=0.0097]Steps:  17%|█▋        | 4217/24850 [1:43:09<8:48:50,  1.54s/it, lr=7e-5, step_loss=0.0097]Steps:  17%|█▋        | 4217/24850 [1:43:09<8:48:50,  1.54s/it, lr=7e-5, step_loss=0.026] Steps:  17%|█▋        | 4218/24850 [1:43:11<8:41:02,  1.52s/it, lr=7e-5, step_loss=0.026]Steps:  17%|█▋        | 4218/24850 [1:43:11<8:41:02,  1.52s/it, lr=7e-5, step_loss=0.0683]Steps:  17%|█▋        | 4219/24850 [1:43:12<8:40:17,  1.51s/it, lr=7e-5, step_loss=0.0683]Steps:  17%|█▋        | 4219/24850 [1:43:12<8:40:17,  1.51s/it, lr=7e-5, step_loss=0.00918]torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:  17%|█▋        | 4220/24850 [1:43:14<8:34:51,  1.50s/it, lr=7e-5, step_loss=0.00918]Steps:  17%|█▋        | 4220/24850 [1:43:14<8:34:51,  1.50s/it, lr=7e-5, step_loss=0.00702]Steps:  17%|█▋        | 4221/24850 [1:43:15<8:30:13,  1.48s/it, lr=7e-5, step_loss=0.00702]Steps:  17%|█▋        | 4221/24850 [1:43:15<8:30:13,  1.48s/it, lr=7e-5, step_loss=0.00154]Steps:  17%|█▋        | 4222/24850 [1:43:16<8:27:50,  1.48s/it, lr=7e-5, step_loss=0.00154]Steps:  17%|█▋        | 4222/24850 [1:43:16<8:27:50,  1.48s/it, lr=7e-5, step_loss=0.0218] Steps:  17%|█▋        | 4223/24850 [1:43:18<8:26:03,  1.47s/it, lr=7e-5, step_loss=0.0218]Steps:  17%|█▋        | 4223/24850 [1:43:18<8:26:03,  1.47s/it, lr=7e-5, step_loss=0.118] Steps:  17%|█▋        | 4224/24850 [1:43:19<8:23:50,  1.47s/it, lr=7e-5, step_loss=0.118]Steps:  17%|█▋        | 4224/24850 [1:43:19<8:23:50,  1.47s/it, lr=7e-5, step_loss=0.0125]Steps:  17%|█▋        | 4225/24850 [1:43:21<8:22:39,  1.46s/it, lr=7e-5, step_loss=0.0125]Steps:  17%|█▋        | 4225/24850 [1:43:21<8:22:39,  1.46s/it, lr=7e-5, step_loss=0.187] Steps:  17%|█▋        | 4226/24850 [1:43:22<8:22:31,  1.46s/it, lr=7e-5, step_loss=0.187]Steps:  17%|█▋        | 4226/24850 [1:43:22<8:22:31,  1.46s/it, lr=7e-5, step_loss=0.0123]Steps:  17%|█▋        | 4227/24850 [1:43:24<8:24:41,  1.47s/it, lr=7e-5, step_loss=0.0123]Steps:  17%|█▋        | 4227/24850 [1:43:24<8:24:41,  1.47s/it, lr=7e-5, step_loss=0.074] Steps:  17%|█▋        | 4228/24850 [1:43:25<8:26:18,  1.47s/it, lr=7e-5, step_loss=0.074]Steps:  17%|█▋        | 4228/24850 [1:43:25<8:26:18,  1.47s/it, lr=7e-5, step_loss=0.0225]Steps:  17%|█▋        | 4229/24850 [1:43:27<8:25:00,  1.47s/it, lr=7e-5, step_loss=0.0225]Steps:  17%|█▋        | 4229/24850 [1:43:27<8:25:00,  1.47s/it, lr=7e-5, step_loss=0.0208]Steps:  17%|█▋        | 4230/24850 [1:43:28<8:25:27,  1.47s/it, lr=7e-5, step_loss=0.0208]Steps:  17%|█▋        | 4230/24850 [1:43:28<8:25:27,  1.47s/it, lr=7e-5, step_loss=0.0691]Steps:  17%|█▋        | 4231/24850 [1:43:30<8:25:20,  1.47s/it, lr=7e-5, step_loss=0.0691]Steps:  17%|█▋        | 4231/24850 [1:43:30<8:25:20,  1.47s/it, lr=7e-5, step_loss=0.013] Steps:  17%|█▋        | 4232/24850 [1:43:31<8:24:45,  1.47s/it, lr=7e-5, step_loss=0.013]Steps:  17%|█▋        | 4232/24850 [1:43:31<8:24:45,  1.47s/it, lr=7e-5, step_loss=0.0173]Steps:  17%|█▋        | 4233/24850 [1:43:33<8:25:43,  1.47s/it, lr=7e-5, step_loss=0.0173]Steps:  17%|█▋        | 4233/24850 [1:43:33<8:25:43,  1.47s/it, lr=7e-5, step_loss=0.0175]Steps:  17%|█▋        | 4234/24850 [1:43:34<8:25:36,  1.47s/it, lr=7e-5, step_loss=0.0175]Steps:  17%|█▋        | 4234/24850 [1:43:34<8:25:36,  1.47s/it, lr=7e-5, step_loss=0.0798]Steps:  17%|█▋        | 4235/24850 [1:43:36<8:26:45,  1.47s/it, lr=7e-5, step_loss=0.0798]Steps:  17%|█▋        | 4235/24850 [1:43:36<8:26:45,  1.47s/it, lr=7e-5, step_loss=0.0173]Steps:  17%|█▋        | 4236/24850 [1:43:37<8:26:12,  1.47s/it, lr=7e-5, step_loss=0.0173]Steps:  17%|█▋        | 4236/24850 [1:43:37<8:26:12,  1.47s/it, lr=7e-5, step_loss=0.204] Steps:  17%|█▋        | 4237/24850 [1:43:38<8:24:36,  1.47s/it, lr=7e-5, step_loss=0.204]Steps:  17%|█▋        | 4237/24850 [1:43:38<8:24:36,  1.47s/it, lr=7e-5, step_loss=0.0641]Steps:  17%|█▋        | 4238/24850 [1:43:40<8:25:43,  1.47s/it, lr=7e-5, step_loss=0.0641]Steps:  17%|█▋        | 4238/24850 [1:43:40<8:25:43,  1.47s/it, lr=7e-5, step_loss=0.0755]Steps:  17%|█▋        | 4239/24850 [1:43:41<8:25:06,  1.47s/it, lr=7e-5, step_loss=0.0755]Steps:  17%|█▋        | 4239/24850 [1:43:41<8:25:06,  1.47s/it, lr=7e-5, step_loss=0.0785]Steps:  17%|█▋        | 4240/24850 [1:43:43<8:24:48,  1.47s/it, lr=7e-5, step_loss=0.0785]Steps:  17%|█▋        | 4240/24850 [1:43:43<8:24:48,  1.47s/it, lr=7e-5, step_loss=0.0242]Steps:  17%|█▋        | 4241/24850 [1:43:44<8:36:18,  1.50s/it, lr=7e-5, step_loss=0.0242]Steps:  17%|█▋        | 4241/24850 [1:43:44<8:36:18,  1.50s/it, lr=7e-5, step_loss=0.0342]Steps:  17%|█▋        | 4242/24850 [1:43:47<10:15:21,  1.79s/it, lr=7e-5, step_loss=0.0342]Steps:  17%|█▋        | 4242/24850 [1:43:47<10:15:21,  1.79s/it, lr=7e-5, step_loss=0.0431]Steps:  17%|█▋        | 4243/24850 [1:43:48<9:40:54,  1.69s/it, lr=7e-5, step_loss=0.0431] Steps:  17%|█▋        | 4243/24850 [1:43:48<9:40:54,  1.69s/it, lr=7e-5, step_loss=0.0495]Steps:  17%|█▋        | 4244/24850 [1:43:50<9:17:15,  1.62s/it, lr=7e-5, step_loss=0.0495]Steps:  17%|█▋        | 4244/24850 [1:43:50<9:17:15,  1.62s/it, lr=7e-5, step_loss=0.0163]Steps:  17%|█▋        | 4245/24850 [1:43:51<9:01:19,  1.58s/it, lr=7e-5, step_loss=0.0163]Steps:  17%|█▋        | 4245/24850 [1:43:51<9:01:19,  1.58s/it, lr=7e-5, step_loss=0.0207]Steps:  17%|█▋        | 4246/24850 [1:43:53<8:51:07,  1.55s/it, lr=7e-5, step_loss=0.0207]Steps:  17%|█▋        | 4246/24850 [1:43:53<8:51:07,  1.55s/it, lr=7e-5, step_loss=0.247] Steps:  17%|█▋        | 4247/24850 [1:43:54<8:43:32,  1.52s/it, lr=7e-5, step_loss=0.247]Steps:  17%|█▋        | 4247/24850 [1:43:54<8:43:32,  1.52s/it, lr=7e-5, step_loss=0.0124]torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
Steps:  17%|█▋        | 4248/24850 [1:43:56<8:36:48,  1.51s/it, lr=7e-5, step_loss=0.0124]Steps:  17%|█▋        | 4248/24850 [1:43:56<8:36:48,  1.51s/it, lr=7e-5, step_loss=0.0357]Steps:  17%|█▋        | 4249/24850 [1:43:57<8:33:19,  1.50s/it, lr=7e-5, step_loss=0.0357]Steps:  17%|█▋        | 4249/24850 [1:43:57<8:33:19,  1.50s/it, lr=7e-5, step_loss=0.0372]Steps:  17%|█▋        | 4250/24850 [1:43:59<8:30:21,  1.49s/it, lr=7e-5, step_loss=0.0372]Steps:  17%|█▋        | 4250/24850 [1:43:59<8:30:21,  1.49s/it, lr=7e-5, step_loss=0.0516]Steps:  17%|█▋        | 4251/24850 [1:44:00<8:29:14,  1.48s/it, lr=7e-5, step_loss=0.0516]Steps:  17%|█▋        | 4251/24850 [1:44:00<8:29:14,  1.48s/it, lr=7e-5, step_loss=0.0565]Steps:  17%|█▋        | 4252/24850 [1:44:02<8:27:30,  1.48s/it, lr=7e-5, step_loss=0.0565]Steps:  17%|█▋        | 4252/24850 [1:44:02<8:27:30,  1.48s/it, lr=7e-5, step_loss=0.00259]Steps:  17%|█▋        | 4253/24850 [1:44:03<8:27:33,  1.48s/it, lr=7e-5, step_loss=0.00259]Steps:  17%|█▋        | 4253/24850 [1:44:03<8:27:33,  1.48s/it, lr=7e-5, step_loss=0.0293] Steps:  17%|█▋        | 4254/24850 [1:44:05<8:26:53,  1.48s/it, lr=7e-5, step_loss=0.0293]Steps:  17%|█▋        | 4254/24850 [1:44:05<8:26:53,  1.48s/it, lr=7e-5, step_loss=0.0474]Steps:  17%|█▋        | 4255/24850 [1:44:06<8:26:59,  1.48s/it, lr=7e-5, step_loss=0.0474]Steps:  17%|█▋        | 4255/24850 [1:44:06<8:26:59,  1.48s/it, lr=7e-5, step_loss=0.165] Steps:  17%|█▋        | 4256/24850 [1:44:08<8:26:48,  1.48s/it, lr=7e-5, step_loss=0.165]Steps:  17%|█▋        | 4256/24850 [1:44:08<8:26:48,  1.48s/it, lr=7e-5, step_loss=0.0218]Steps:  17%|█▋        | 4257/24850 [1:44:09<8:25:50,  1.47s/it, lr=7e-5, step_loss=0.0218]Steps:  17%|█▋        | 4257/24850 [1:44:09<8:25:50,  1.47s/it, lr=7e-5, step_loss=0.0274]Steps:  17%|█▋        | 4258/24850 [1:44:10<8:23:38,  1.47s/it, lr=7e-5, step_loss=0.0274]Steps:  17%|█▋        | 4258/24850 [1:44:10<8:23:38,  1.47s/it, lr=7e-5, step_loss=0.0149]Steps:  17%|█▋        | 4259/24850 [1:44:12<8:22:03,  1.46s/it, lr=7e-5, step_loss=0.0149]Steps:  17%|█▋        | 4259/24850 [1:44:12<8:22:03,  1.46s/it, lr=7e-5, step_loss=0.0247]Steps:  17%|█▋        | 4260/24850 [1:44:13<8:21:28,  1.46s/it, lr=7e-5, step_loss=0.0247]Steps:  17%|█▋        | 4260/24850 [1:44:13<8:21:28,  1.46s/it, lr=7e-5, step_loss=0.0111]Steps:  17%|█▋        | 4261/24850 [1:44:15<8:20:46,  1.46s/it, lr=7e-5, step_loss=0.0111]Steps:  17%|█▋        | 4261/24850 [1:44:15<8:20:46,  1.46s/it, lr=7e-5, step_loss=0.0374]Steps:  17%|█▋        | 4262/24850 [1:44:16<8:23:29,  1.47s/it, lr=7e-5, step_loss=0.0374]Steps:  17%|█▋        | 4262/24850 [1:44:16<8:23:29,  1.47s/it, lr=7e-5, step_loss=0.00391]Steps:  17%|█▋        | 4263/24850 [1:44:18<8:24:15,  1.47s/it, lr=7e-5, step_loss=0.00391]Steps:  17%|█▋        | 4263/24850 [1:44:18<8:24:15,  1.47s/it, lr=7e-5, step_loss=0.0304] Steps:  17%|█▋        | 4264/24850 [1:44:19<8:23:44,  1.47s/it, lr=7e-5, step_loss=0.0304]Steps:  17%|█▋        | 4264/24850 [1:44:19<8:23:44,  1.47s/it, lr=7e-5, step_loss=0.0161]Steps:  17%|█▋        | 4265/24850 [1:44:21<8:22:56,  1.47s/it, lr=7e-5, step_loss=0.0161]Steps:  17%|█▋        | 4265/24850 [1:44:21<8:22:56,  1.47s/it, lr=7e-5, step_loss=0.0479]Steps:  17%|█▋        | 4266/24850 [1:44:22<8:23:15,  1.47s/it, lr=7e-5, step_loss=0.0479]Steps:  17%|█▋        | 4266/24850 [1:44:22<8:23:15,  1.47s/it, lr=7e-5, step_loss=0.0832]Steps:  17%|█▋        | 4267/24850 [1:44:24<8:24:43,  1.47s/it, lr=7e-5, step_loss=0.0832]Steps:  17%|█▋        | 4267/24850 [1:44:24<8:24:43,  1.47s/it, lr=7e-5, step_loss=0.0107]Steps:  17%|█▋        | 4268/24850 [1:44:25<8:23:46,  1.47s/it, lr=7e-5, step_loss=0.0107]Steps:  17%|█▋        | 4268/24850 [1:44:25<8:23:46,  1.47s/it, lr=7e-5, step_loss=0.026] Steps:  17%|█▋        | 4269/24850 [1:44:27<8:21:39,  1.46s/it, lr=7e-5, step_loss=0.026]Steps:  17%|█▋        | 4269/24850 [1:44:27<8:21:39,  1.46s/it, lr=7e-5, step_loss=0.0249]Steps:  17%|█▋        | 4270/24850 [1:44:28<8:22:51,  1.47s/it, lr=7e-5, step_loss=0.0249]Steps:  17%|█▋        | 4270/24850 [1:44:28<8:22:51,  1.47s/it, lr=7e-5, step_loss=0.0131]Steps:  17%|█▋        | 4271/24850 [1:44:30<8:23:17,  1.47s/it, lr=7e-5, step_loss=0.0131]Steps:  17%|█▋        | 4271/24850 [1:44:30<8:23:17,  1.47s/it, lr=7e-5, step_loss=0.0805]Steps:  17%|█▋        | 4272/24850 [1:44:31<8:24:21,  1.47s/it, lr=7e-5, step_loss=0.0805]Steps:  17%|█▋        | 4272/24850 [1:44:31<8:24:21,  1.47s/it, lr=7e-5, step_loss=0.0364]Steps:  17%|█▋        | 4273/24850 [1:44:32<8:25:16,  1.47s/it, lr=7e-5, step_loss=0.0364]Steps:  17%|█▋        | 4273/24850 [1:44:32<8:25:16,  1.47s/it, lr=7e-5, step_loss=0.0325]Steps:  17%|█▋        | 4274/24850 [1:44:34<8:24:03,  1.47s/it, lr=7e-5, step_loss=0.0325]Steps:  17%|█▋        | 4274/24850 [1:44:34<8:24:03,  1.47s/it, lr=7e-5, step_loss=0.0123](512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512)Steps:  17%|█▋        | 4275/24850 [1:44:35<8:25:43,  1.47s/it, lr=7e-5, step_loss=0.0123]Steps:  17%|█▋        | 4275/24850 [1:44:35<8:25:43,  1.47s/it, lr=7e-5, step_loss=0.00167]Steps:  17%|█▋        | 4276/24850 [1:44:37<8:25:11,  1.47s/it, lr=7e-5, step_loss=0.00167]Steps:  17%|█▋        | 4276/24850 [1:44:37<8:25:11,  1.47s/it, lr=7e-5, step_loss=0.0191] Steps:  17%|█▋        | 4277/24850 [1:44:38<8:22:52,  1.47s/it, lr=7e-5, step_loss=0.0191]Steps:  17%|█▋        | 4277/24850 [1:44:38<8:22:52,  1.47s/it, lr=7e-5, step_loss=0.0011]Steps:  17%|█▋        | 4278/24850 [1:44:40<8:22:19,  1.47s/it, lr=7e-5, step_loss=0.0011]Steps:  17%|█▋        | 4278/24850 [1:44:40<8:22:19,  1.47s/it, lr=7e-5, step_loss=0.0518]Steps:  17%|█▋        | 4279/24850 [1:44:41<8:23:46,  1.47s/it, lr=7e-5, step_loss=0.0518]Steps:  17%|█▋        | 4279/24850 [1:44:41<8:23:46,  1.47s/it, lr=7e-5, step_loss=0.0906]Steps:  17%|█▋        | 4280/24850 [1:44:43<8:23:29,  1.47s/it, lr=7e-5, step_loss=0.0906]Steps:  17%|█▋        | 4280/24850 [1:44:43<8:23:29,  1.47s/it, lr=7e-5, step_loss=0.0107]Steps:  17%|█▋        | 4281/24850 [1:44:49<17:26:37,  3.05s/it, lr=7e-5, step_loss=0.0107]Steps:  17%|█▋        | 4281/24850 [1:44:50<17:26:37,  3.05s/it, lr=7e-5, step_loss=0.00142]Steps:  17%|█▋        | 4282/24850 [1:44:52<16:19:22,  2.86s/it, lr=7e-5, step_loss=0.00142]Steps:  17%|█▋        | 4282/24850 [1:44:52<16:19:22,  2.86s/it, lr=7e-5, step_loss=0.00217]Steps:  17%|█▋        | 4283/24850 [1:44:54<14:35:07,  2.55s/it, lr=7e-5, step_loss=0.00217]Steps:  17%|█▋        | 4283/24850 [1:44:54<14:35:07,  2.55s/it, lr=7e-5, step_loss=0.0241] Steps:  17%|█▋        | 4284/24850 [1:44:55<13:02:24,  2.28s/it, lr=7e-5, step_loss=0.0241]Steps:  17%|█▋        | 4284/24850 [1:44:55<13:02:24,  2.28s/it, lr=7e-5, step_loss=0.00721]Steps:  17%|█▋        | 4285/24850 [1:44:57<11:49:29,  2.07s/it, lr=7e-5, step_loss=0.00721]Steps:  17%|█▋        | 4285/24850 [1:44:57<11:49:29,  2.07s/it, lr=7e-5, step_loss=0.0451] Steps:  17%|█▋        | 4286/24850 [1:44:59<11:00:29,  1.93s/it, lr=7e-5, step_loss=0.0451]Steps:  17%|█▋        | 4286/24850 [1:44:59<11:00:29,  1.93s/it, lr=7e-5, step_loss=0.00909]Steps:  17%|█▋        | 4287/24850 [1:45:00<10:16:46,  1.80s/it, lr=7e-5, step_loss=0.00909]Steps:  17%|█▋        | 4287/24850 [1:45:00<10:16:46,  1.80s/it, lr=7e-5, step_loss=0.00183]Steps:  17%|█▋        | 4288/24850 [1:45:02<9:45:06,  1.71s/it, lr=7e-5, step_loss=0.00183] Steps:  17%|█▋        | 4288/24850 [1:45:02<9:45:06,  1.71s/it, lr=7e-5, step_loss=0.0711] Steps:  17%|█▋        | 4289/24850 [1:45:03<9:23:16,  1.64s/it, lr=7e-5, step_loss=0.0711]Steps:  17%|█▋        | 4289/24850 [1:45:03<9:23:16,  1.64s/it, lr=7e-5, step_loss=0.0527]Steps:  17%|█▋        | 4290/24850 [1:45:05<9:06:50,  1.60s/it, lr=7e-5, step_loss=0.0527]Steps:  17%|█▋        | 4290/24850 [1:45:05<9:06:50,  1.60s/it, lr=7e-5, step_loss=0.00685]Steps:  17%|█▋        | 4291/24850 [1:45:06<9:03:06,  1.59s/it, lr=7e-5, step_loss=0.00685]Steps:  17%|█▋        | 4291/24850 [1:45:06<9:03:06,  1.59s/it, lr=7e-5, step_loss=0.041]  Steps:  17%|█▋        | 4292/24850 [1:45:09<10:34:44,  1.85s/it, lr=7e-5, step_loss=0.041]Steps:  17%|█▋        | 4292/24850 [1:45:09<10:34:44,  1.85s/it, lr=7e-5, step_loss=0.017]Steps:  17%|█▋        | 4293/24850 [1:45:10<9:55:43,  1.74s/it, lr=7e-5, step_loss=0.017] Steps:  17%|█▋        | 4293/24850 [1:45:10<9:55:43,  1.74s/it, lr=7e-5, step_loss=0.0461]Steps:  17%|█▋        | 4294/24850 [1:45:12<9:29:22,  1.66s/it, lr=7e-5, step_loss=0.0461]Steps:  17%|█▋        | 4294/24850 [1:45:12<9:29:22,  1.66s/it, lr=7e-5, step_loss=0.0322]Steps:  17%|█▋        | 4295/24850 [1:45:13<9:09:50,  1.60s/it, lr=7e-5, step_loss=0.0322]Steps:  17%|█▋        | 4295/24850 [1:45:13<9:09:50,  1.60s/it, lr=7e-5, step_loss=0.00924]Steps:  17%|█▋        | 4296/24850 [1:45:14<8:56:44,  1.57s/it, lr=7e-5, step_loss=0.00924]Steps:  17%|█▋        | 4296/24850 [1:45:14<8:56:44,  1.57s/it, lr=7e-5, step_loss=0.0441] Steps:  17%|█▋        | 4297/24850 [1:45:16<8:47:13,  1.54s/it, lr=7e-5, step_loss=0.0441]Steps:  17%|█▋        | 4297/24850 [1:45:16<8:47:13,  1.54s/it, lr=7e-5, step_loss=0.089] Steps:  17%|█▋        | 4298/24850 [1:45:17<8:38:23,  1.51s/it, lr=7e-5, step_loss=0.089]Steps:  17%|█▋        | 4298/24850 [1:45:17<8:38:23,  1.51s/it, lr=7e-5, step_loss=0.0237]Steps:  17%|█▋        | 4299/24850 [1:45:19<8:33:47,  1.50s/it, lr=7e-5, step_loss=0.0237]Steps:  17%|█▋        | 4299/24850 [1:45:19<8:33:47,  1.50s/it, lr=7e-5, step_loss=0.0227]Steps:  17%|█▋        | 4300/24850 [1:45:20<8:28:53,  1.49s/it, lr=7e-5, step_loss=0.0227]Steps:  17%|█▋        | 4300/24850 [1:45:20<8:28:53,  1.49s/it, lr=7e-5, step_loss=0.0195]Steps:  17%|█▋        | 4301/24850 [1:45:22<8:25:53,  1.48s/it, lr=7e-5, step_loss=0.0195]Steps:  17%|█▋        | 4301/24850 [1:45:22<8:25:53,  1.48s/it, lr=7e-5, step_loss=0.0298] torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:  17%|█▋        | 4302/24850 [1:45:23<8:24:46,  1.47s/it, lr=7e-5, step_loss=0.0298]Steps:  17%|█▋        | 4302/24850 [1:45:23<8:24:46,  1.47s/it, lr=7e-5, step_loss=0.00771]Steps:  17%|█▋        | 4303/24850 [1:45:25<8:23:51,  1.47s/it, lr=7e-5, step_loss=0.00771]Steps:  17%|█▋        | 4303/24850 [1:45:25<8:23:51,  1.47s/it, lr=7e-5, step_loss=0.0134] Steps:  17%|█▋        | 4304/24850 [1:45:26<8:22:47,  1.47s/it, lr=7e-5, step_loss=0.0134]Steps:  17%|█▋        | 4304/24850 [1:45:26<8:22:47,  1.47s/it, lr=7e-5, step_loss=0.0516]Steps:  17%|█▋        | 4305/24850 [1:45:28<8:23:05,  1.47s/it, lr=7e-5, step_loss=0.0516]Steps:  17%|█▋        | 4305/24850 [1:45:28<8:23:05,  1.47s/it, lr=7e-5, step_loss=0.00571]Steps:  17%|█▋        | 4306/24850 [1:45:29<8:22:18,  1.47s/it, lr=7e-5, step_loss=0.00571]Steps:  17%|█▋        | 4306/24850 [1:45:29<8:22:18,  1.47s/it, lr=7e-5, step_loss=0.0115] Steps:  17%|█▋        | 4307/24850 [1:45:31<8:22:00,  1.47s/it, lr=7e-5, step_loss=0.0115]Steps:  17%|█▋        | 4307/24850 [1:45:31<8:22:00,  1.47s/it, lr=7e-5, step_loss=0.013] Steps:  17%|█▋        | 4308/24850 [1:45:32<8:23:27,  1.47s/it, lr=7e-5, step_loss=0.013]Steps:  17%|█▋        | 4308/24850 [1:45:32<8:23:27,  1.47s/it, lr=7e-5, step_loss=0.0266]Steps:  17%|█▋        | 4309/24850 [1:45:34<8:22:56,  1.47s/it, lr=7e-5, step_loss=0.0266]Steps:  17%|█▋        | 4309/24850 [1:45:34<8:22:56,  1.47s/it, lr=7e-5, step_loss=0.00697]Steps:  17%|█▋        | 4310/24850 [1:45:35<8:21:23,  1.46s/it, lr=7e-5, step_loss=0.00697]Steps:  17%|█▋        | 4310/24850 [1:45:35<8:21:23,  1.46s/it, lr=7e-5, step_loss=0.0433] Steps:  17%|█▋        | 4311/24850 [1:45:36<8:22:15,  1.47s/it, lr=7e-5, step_loss=0.0433]Steps:  17%|█▋        | 4311/24850 [1:45:36<8:22:15,  1.47s/it, lr=7e-5, step_loss=0.0145]Steps:  17%|█▋        | 4312/24850 [1:45:38<8:21:10,  1.46s/it, lr=7e-5, step_loss=0.0145]Steps:  17%|█▋        | 4312/24850 [1:45:38<8:21:10,  1.46s/it, lr=7e-5, step_loss=0.0125]Steps:  17%|█▋        | 4313/24850 [1:45:39<8:20:10,  1.46s/it, lr=7e-5, step_loss=0.0125]Steps:  17%|█▋        | 4313/24850 [1:45:39<8:20:10,  1.46s/it, lr=7e-5, step_loss=0.0377]Steps:  17%|█▋        | 4314/24850 [1:45:41<8:19:48,  1.46s/it, lr=7e-5, step_loss=0.0377]Steps:  17%|█▋        | 4314/24850 [1:45:41<8:19:48,  1.46s/it, lr=7e-5, step_loss=0.0194]Steps:  17%|█▋        | 4315/24850 [1:45:42<8:22:04,  1.47s/it, lr=7e-5, step_loss=0.0194]Steps:  17%|█▋        | 4315/24850 [1:45:42<8:22:04,  1.47s/it, lr=7e-5, step_loss=0.00132]Steps:  17%|█▋        | 4316/24850 [1:45:44<8:24:24,  1.47s/it, lr=7e-5, step_loss=0.00132]Steps:  17%|█▋        | 4316/24850 [1:45:44<8:24:24,  1.47s/it, lr=7e-5, step_loss=0.0319] Steps:  17%|█▋        | 4317/24850 [1:45:45<8:24:42,  1.47s/it, lr=7e-5, step_loss=0.0319]Steps:  17%|█▋        | 4317/24850 [1:45:45<8:24:42,  1.47s/it, lr=7e-5, step_loss=0.0498]Steps:  17%|█▋        | 4318/24850 [1:45:47<8:40:59,  1.52s/it, lr=7e-5, step_loss=0.0498]Steps:  17%|█▋        | 4318/24850 [1:45:47<8:40:59,  1.52s/it, lr=7e-5, step_loss=0.0105]Steps:  17%|█▋        | 4319/24850 [1:45:48<8:37:00,  1.51s/it, lr=7e-5, step_loss=0.0105]Steps:  17%|█▋        | 4319/24850 [1:45:48<8:37:00,  1.51s/it, lr=7e-5, step_loss=0.0137]Steps:  17%|█▋        | 4320/24850 [1:45:50<8:33:02,  1.50s/it, lr=7e-5, step_loss=0.0137]Steps:  17%|█▋        | 4320/24850 [1:45:50<8:33:02,  1.50s/it, lr=7e-5, step_loss=0.0157]Steps:  17%|█▋        | 4321/24850 [1:45:51<8:28:53,  1.49s/it, lr=7e-5, step_loss=0.0157]Steps:  17%|█▋        | 4321/24850 [1:45:51<8:28:53,  1.49s/it, lr=7e-5, step_loss=0.000694]Steps:  17%|█▋        | 4322/24850 [1:45:53<8:27:40,  1.48s/it, lr=7e-5, step_loss=0.000694]Steps:  17%|█▋        | 4322/24850 [1:45:53<8:27:40,  1.48s/it, lr=7e-5, step_loss=0.0232]  Steps:  17%|█▋        | 4323/24850 [1:45:54<8:26:07,  1.48s/it, lr=7e-5, step_loss=0.0232]Steps:  17%|█▋        | 4323/24850 [1:45:54<8:26:07,  1.48s/it, lr=7e-5, step_loss=0.016] Steps:  17%|█▋        | 4324/24850 [1:45:56<8:25:23,  1.48s/it, lr=7e-5, step_loss=0.016]Steps:  17%|█▋        | 4324/24850 [1:45:56<8:25:23,  1.48s/it, lr=7e-5, step_loss=0.0133]Steps:  17%|█▋        | 4325/24850 [1:45:57<8:23:29,  1.47s/it, lr=7e-5, step_loss=0.0133]Steps:  17%|█▋        | 4325/24850 [1:45:57<8:23:29,  1.47s/it, lr=7e-5, step_loss=0.0214]Steps:  17%|█▋        | 4326/24850 [1:45:59<8:27:19,  1.48s/it, lr=7e-5, step_loss=0.0214]Steps:  17%|█▋        | 4326/24850 [1:45:59<8:27:19,  1.48s/it, lr=7e-5, step_loss=0.00702]Steps:  17%|█▋        | 4327/24850 [1:46:00<8:26:56,  1.48s/it, lr=7e-5, step_loss=0.00702]Steps:  17%|█▋        | 4327/24850 [1:46:00<8:26:56,  1.48s/it, lr=7e-5, step_loss=0.0349] Steps:  17%|█▋        | 4328/24850 [1:46:02<8:25:39,  1.48s/it, lr=7e-5, step_loss=0.0349]Steps:  17%|█▋        | 4328/24850 [1:46:02<8:25:39,  1.48s/it, lr=7e-5, step_loss=0.0321]torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  Steps:  17%|█▋        | 4329/24850 [1:46:03<8:26:03,  1.48s/it, lr=7e-5, step_loss=0.0321]Steps:  17%|█▋        | 4329/24850 [1:46:03<8:26:03,  1.48s/it, lr=7e-5, step_loss=0.023] Steps:  17%|█▋        | 4330/24850 [1:46:05<8:29:48,  1.49s/it, lr=7e-5, step_loss=0.023]Steps:  17%|█▋        | 4330/24850 [1:46:05<8:29:48,  1.49s/it, lr=7e-5, step_loss=0.0489]Steps:  17%|█▋        | 4331/24850 [1:46:06<8:30:20,  1.49s/it, lr=7e-5, step_loss=0.0489]Steps:  17%|█▋        | 4331/24850 [1:46:06<8:30:20,  1.49s/it, lr=7e-5, step_loss=0.0108]Steps:  17%|█▋        | 4332/24850 [1:46:08<8:27:46,  1.48s/it, lr=7e-5, step_loss=0.0108]Steps:  17%|█▋        | 4332/24850 [1:46:08<8:27:46,  1.48s/it, lr=7e-5, step_loss=0.0378]Steps:  17%|█▋        | 4333/24850 [1:46:09<8:25:11,  1.48s/it, lr=7e-5, step_loss=0.0378]Steps:  17%|█▋        | 4333/24850 [1:46:09<8:25:11,  1.48s/it, lr=7e-5, step_loss=0.024] Steps:  17%|█▋        | 4334/24850 [1:46:11<8:25:58,  1.48s/it, lr=7e-5, step_loss=0.024]Steps:  17%|█▋        | 4334/24850 [1:46:11<8:25:58,  1.48s/it, lr=7e-5, step_loss=0.0349]Steps:  17%|█▋        | 4335/24850 [1:46:12<8:27:36,  1.48s/it, lr=7e-5, step_loss=0.0349]Steps:  17%|█▋        | 4335/24850 [1:46:12<8:27:36,  1.48s/it, lr=7e-5, step_loss=0.00318]Steps:  17%|█▋        | 4336/24850 [1:46:14<8:27:48,  1.49s/it, lr=7e-5, step_loss=0.00318]Steps:  17%|█▋        | 4336/24850 [1:46:14<8:27:48,  1.49s/it, lr=7e-5, step_loss=0.237]  Steps:  17%|█▋        | 4337/24850 [1:46:15<8:26:30,  1.48s/it, lr=7e-5, step_loss=0.237]Steps:  17%|█▋        | 4337/24850 [1:46:15<8:26:30,  1.48s/it, lr=7e-5, step_loss=0.0278]Steps:  17%|█▋        | 4338/24850 [1:46:16<8:24:58,  1.48s/it, lr=7e-5, step_loss=0.0278]Steps:  17%|█▋        | 4338/24850 [1:46:16<8:24:58,  1.48s/it, lr=7e-5, step_loss=0.0906]Steps:  17%|█▋        | 4339/24850 [1:46:18<8:22:57,  1.47s/it, lr=7e-5, step_loss=0.0906]Steps:  17%|█▋        | 4339/24850 [1:46:18<8:22:57,  1.47s/it, lr=7e-5, step_loss=0.0399]Steps:  17%|█▋        | 4340/24850 [1:46:19<8:21:13,  1.47s/it, lr=7e-5, step_loss=0.0399]Steps:  17%|█▋        | 4340/24850 [1:46:19<8:21:13,  1.47s/it, lr=7e-5, step_loss=0.0188]Steps:  17%|█▋        | 4341/24850 [1:46:21<8:19:23,  1.46s/it, lr=7e-5, step_loss=0.0188]Steps:  17%|█▋        | 4341/24850 [1:46:21<8:19:23,  1.46s/it, lr=7e-5, step_loss=0.0202]Steps:  17%|█▋        | 4342/24850 [1:46:23<9:56:02,  1.74s/it, lr=7e-5, step_loss=0.0202]Steps:  17%|█▋        | 4342/24850 [1:46:23<9:56:02,  1.74s/it, lr=7e-5, step_loss=0.0318]Steps:  17%|█▋        | 4343/24850 [1:46:25<9:27:00,  1.66s/it, lr=7e-5, step_loss=0.0318]Steps:  17%|█▋        | 4343/24850 [1:46:25<9:27:00,  1.66s/it, lr=7e-5, step_loss=0.0171]Steps:  17%|█▋        | 4344/24850 [1:46:26<9:08:24,  1.60s/it, lr=7e-5, step_loss=0.0171]Steps:  17%|█▋        | 4344/24850 [1:46:26<9:08:24,  1.60s/it, lr=7e-5, step_loss=0.00059]Steps:  17%|█▋        | 4345/24850 [1:46:28<9:11:33,  1.61s/it, lr=7e-5, step_loss=0.00059]Steps:  17%|█▋        | 4345/24850 [1:46:28<9:11:33,  1.61s/it, lr=7e-5, step_loss=0.0337] Steps:  17%|█▋        | 4346/24850 [1:46:29<8:55:30,  1.57s/it, lr=7e-5, step_loss=0.0337]Steps:  17%|█▋        | 4346/24850 [1:46:29<8:55:30,  1.57s/it, lr=7e-5, step_loss=0.000918]Steps:  17%|█▋        | 4347/24850 [1:46:31<8:44:34,  1.54s/it, lr=7e-5, step_loss=0.000918]Steps:  17%|█▋        | 4347/24850 [1:46:31<8:44:34,  1.54s/it, lr=7e-5, step_loss=0.11]    Steps:  17%|█▋        | 4348/24850 [1:46:32<8:37:57,  1.52s/it, lr=7e-5, step_loss=0.11]Steps:  17%|█▋        | 4348/24850 [1:46:32<8:37:57,  1.52s/it, lr=7e-5, step_loss=0.0293]Steps:  18%|█▊        | 4349/24850 [1:46:34<8:34:57,  1.51s/it, lr=7e-5, step_loss=0.0293]Steps:  18%|█▊        | 4349/24850 [1:46:34<8:34:57,  1.51s/it, lr=7e-5, step_loss=0.00936]Steps:  18%|█▊        | 4350/24850 [1:46:35<8:29:31,  1.49s/it, lr=7e-5, step_loss=0.00936]Steps:  18%|█▊        | 4350/24850 [1:46:35<8:29:31,  1.49s/it, lr=7e-5, step_loss=0.00168]Steps:  18%|█▊        | 4351/24850 [1:46:37<8:26:04,  1.48s/it, lr=7e-5, step_loss=0.00168]Steps:  18%|█▊        | 4351/24850 [1:46:37<8:26:04,  1.48s/it, lr=7e-5, step_loss=0.00537]Steps:  18%|█▊        | 4352/24850 [1:46:38<8:24:54,  1.48s/it, lr=7e-5, step_loss=0.00537]Steps:  18%|█▊        | 4352/24850 [1:46:38<8:24:54,  1.48s/it, lr=7e-5, step_loss=0.0134] Steps:  18%|█▊        | 4353/24850 [1:46:40<8:23:22,  1.47s/it, lr=7e-5, step_loss=0.0134]Steps:  18%|█▊        | 4353/24850 [1:46:40<8:23:22,  1.47s/it, lr=7e-5, step_loss=0.0821]Steps:  18%|█▊        | 4354/24850 [1:46:41<8:21:31,  1.47s/it, lr=7e-5, step_loss=0.0821]Steps:  18%|█▊        | 4354/24850 [1:46:41<8:21:31,  1.47s/it, lr=7e-5, step_loss=0.00555]Steps:  18%|█▊        | 4355/24850 [1:46:42<8:21:24,  1.47s/it, lr=7e-5, step_loss=0.00555]Steps:  18%|█▊        | 4355/24850 [1:46:42<8:21:24,  1.47s/it, lr=7e-5, step_loss=0.00724]Steps:  18%|█▊        | 4356/24850 [1:46:49<16:09:43,  2.84s/it, lr=7e-5, step_loss=0.00724]Steps:  18%|█▊        | 4356/24850 [1:46:49<16:09:43,  2.84s/it, lr=7e-5, step_loss=0.0478] mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:  18%|█▊        | 4357/24850 [1:46:51<15:06:12,  2.65s/it, lr=7e-5, step_loss=0.0478]Steps:  18%|█▊        | 4357/24850 [1:46:51<15:06:12,  2.65s/it, lr=7e-5, step_loss=0.0551]Steps:  18%|█▊        | 4358/24850 [1:46:52<13:31:16,  2.38s/it, lr=7e-5, step_loss=0.0551]Steps:  18%|█▊        | 4358/24850 [1:46:52<13:31:16,  2.38s/it, lr=7e-5, step_loss=0.0253]Steps:  18%|█▊        | 4359/24850 [1:46:54<12:06:57,  2.13s/it, lr=7e-5, step_loss=0.0253]Steps:  18%|█▊        | 4359/24850 [1:46:54<12:06:57,  2.13s/it, lr=7e-5, step_loss=0.00895]Steps:  18%|█▊        | 4360/24850 [1:46:56<11:03:30,  1.94s/it, lr=7e-5, step_loss=0.00895]Steps:  18%|█▊        | 4360/24850 [1:46:56<11:03:30,  1.94s/it, lr=7e-5, step_loss=0.0152] Steps:  18%|█▊        | 4361/24850 [1:46:57<10:16:59,  1.81s/it, lr=7e-5, step_loss=0.0152]Steps:  18%|█▊        | 4361/24850 [1:46:57<10:16:59,  1.81s/it, lr=7e-5, step_loss=0.106] Steps:  18%|█▊        | 4362/24850 [1:46:59<9:45:54,  1.72s/it, lr=7e-5, step_loss=0.106] Steps:  18%|█▊        | 4362/24850 [1:46:59<9:45:54,  1.72s/it, lr=7e-5, step_loss=0.0032]Steps:  18%|█▊        | 4363/24850 [1:47:00<9:25:27,  1.66s/it, lr=7e-5, step_loss=0.0032]Steps:  18%|█▊        | 4363/24850 [1:47:00<9:25:27,  1.66s/it, lr=7e-5, step_loss=0.00637]Steps:  18%|█▊        | 4364/24850 [1:47:02<9:09:12,  1.61s/it, lr=7e-5, step_loss=0.00637]Steps:  18%|█▊        | 4364/24850 [1:47:02<9:09:12,  1.61s/it, lr=7e-5, step_loss=0.246]  Steps:  18%|█▊        | 4365/24850 [1:47:03<8:54:40,  1.57s/it, lr=7e-5, step_loss=0.246]Steps:  18%|█▊        | 4365/24850 [1:47:03<8:54:40,  1.57s/it, lr=7e-5, step_loss=0.00117]Steps:  18%|█▊        | 4366/24850 [1:47:04<8:45:42,  1.54s/it, lr=7e-5, step_loss=0.00117]Steps:  18%|█▊        | 4366/24850 [1:47:04<8:45:42,  1.54s/it, lr=7e-5, step_loss=0.0571] Steps:  18%|█▊        | 4367/24850 [1:47:06<8:38:38,  1.52s/it, lr=7e-5, step_loss=0.0571]Steps:  18%|█▊        | 4367/24850 [1:47:06<8:38:38,  1.52s/it, lr=7e-5, step_loss=0.0016]Steps:  18%|█▊        | 4368/24850 [1:47:07<8:33:22,  1.50s/it, lr=7e-5, step_loss=0.0016]Steps:  18%|█▊        | 4368/24850 [1:47:07<8:33:22,  1.50s/it, lr=7e-5, step_loss=0.00869]Steps:  18%|█▊        | 4369/24850 [1:47:09<8:29:00,  1.49s/it, lr=7e-5, step_loss=0.00869]Steps:  18%|█▊        | 4369/24850 [1:47:09<8:29:00,  1.49s/it, lr=7e-5, step_loss=0.0631] Steps:  18%|█▊        | 4370/24850 [1:47:10<8:27:59,  1.49s/it, lr=7e-5, step_loss=0.0631]Steps:  18%|█▊        | 4370/24850 [1:47:10<8:27:59,  1.49s/it, lr=7e-5, step_loss=0.205] Steps:  18%|█▊        | 4371/24850 [1:47:12<8:27:35,  1.49s/it, lr=7e-5, step_loss=0.205]Steps:  18%|█▊        | 4371/24850 [1:47:12<8:27:35,  1.49s/it, lr=7e-5, step_loss=0.0625]Steps:  18%|█▊        | 4372/24850 [1:47:13<8:24:41,  1.48s/it, lr=7e-5, step_loss=0.0625]Steps:  18%|█▊        | 4372/24850 [1:47:13<8:24:41,  1.48s/it, lr=7e-5, step_loss=0.045] Steps:  18%|█▊        | 4373/24850 [1:47:15<8:22:13,  1.47s/it, lr=7e-5, step_loss=0.045]Steps:  18%|█▊        | 4373/24850 [1:47:15<8:22:13,  1.47s/it, lr=7e-5, step_loss=0.0146]Steps:  18%|█▊        | 4374/24850 [1:47:16<8:22:11,  1.47s/it, lr=7e-5, step_loss=0.0146]Steps:  18%|█▊        | 4374/24850 [1:47:16<8:22:11,  1.47s/it, lr=7e-5, step_loss=0.022] Steps:  18%|█▊        | 4375/24850 [1:47:18<8:20:43,  1.47s/it, lr=7e-5, step_loss=0.022]Steps:  18%|█▊        | 4375/24850 [1:47:18<8:20:43,  1.47s/it, lr=7e-5, step_loss=0.0698]Steps:  18%|█▊        | 4376/24850 [1:47:19<8:20:07,  1.47s/it, lr=7e-5, step_loss=0.0698]Steps:  18%|█▊        | 4376/24850 [1:47:19<8:20:07,  1.47s/it, lr=7e-5, step_loss=0.0257]Steps:  18%|█▊        | 4377/24850 [1:47:21<8:18:05,  1.46s/it, lr=7e-5, step_loss=0.0257]Steps:  18%|█▊        | 4377/24850 [1:47:21<8:18:05,  1.46s/it, lr=7e-5, step_loss=0.0349]Steps:  18%|█▊        | 4378/24850 [1:47:22<8:16:39,  1.46s/it, lr=7e-5, step_loss=0.0349]Steps:  18%|█▊        | 4378/24850 [1:47:22<8:16:39,  1.46s/it, lr=7e-5, step_loss=0.018] Steps:  18%|█▊        | 4379/24850 [1:47:24<8:18:36,  1.46s/it, lr=7e-5, step_loss=0.018]Steps:  18%|█▊        | 4379/24850 [1:47:24<8:18:36,  1.46s/it, lr=7e-5, step_loss=0.091]Steps:  18%|█▊        | 4380/24850 [1:47:25<8:18:04,  1.46s/it, lr=7e-5, step_loss=0.091]Steps:  18%|█▊        | 4380/24850 [1:47:25<8:18:04,  1.46s/it, lr=7e-5, step_loss=0.0279]Steps:  18%|█▊        | 4381/24850 [1:47:26<8:18:47,  1.46s/it, lr=7e-5, step_loss=0.0279]Steps:  18%|█▊        | 4381/24850 [1:47:26<8:18:47,  1.46s/it, lr=7e-5, step_loss=0.0404]Steps:  18%|█▊        | 4382/24850 [1:47:28<8:18:11,  1.46s/it, lr=7e-5, step_loss=0.0404]Steps:  18%|█▊        | 4382/24850 [1:47:28<8:18:11,  1.46s/it, lr=7e-5, step_loss=0.00955]Steps:  18%|█▊        | 4383/24850 [1:47:29<8:18:23,  1.46s/it, lr=7e-5, step_loss=0.00955]Steps:  18%|█▊        | 4383/24850 [1:47:29<8:18:23,  1.46s/it, lr=7e-5, step_loss=0.0531] torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) Steps:  18%|█▊        | 4384/24850 [1:47:31<8:18:51,  1.46s/it, lr=7e-5, step_loss=0.0531]Steps:  18%|█▊        | 4384/24850 [1:47:31<8:18:51,  1.46s/it, lr=7e-5, step_loss=0.0258]Steps:  18%|█▊        | 4385/24850 [1:47:32<8:18:17,  1.46s/it, lr=7e-5, step_loss=0.0258]Steps:  18%|█▊        | 4385/24850 [1:47:32<8:18:17,  1.46s/it, lr=7e-5, step_loss=0.0032]Steps:  18%|█▊        | 4386/24850 [1:47:34<8:15:43,  1.45s/it, lr=7e-5, step_loss=0.0032]Steps:  18%|█▊        | 4386/24850 [1:47:34<8:15:43,  1.45s/it, lr=7e-5, step_loss=0]     Steps:  18%|█▊        | 4387/24850 [1:47:35<8:17:54,  1.46s/it, lr=7e-5, step_loss=0]Steps:  18%|█▊        | 4387/24850 [1:47:35<8:17:54,  1.46s/it, lr=7e-5, step_loss=0.0145]Steps:  18%|█▊        | 4388/24850 [1:47:37<8:18:11,  1.46s/it, lr=7e-5, step_loss=0.0145]Steps:  18%|█▊        | 4388/24850 [1:47:37<8:18:11,  1.46s/it, lr=7e-5, step_loss=0.0233]Steps:  18%|█▊        | 4389/24850 [1:47:38<8:17:40,  1.46s/it, lr=7e-5, step_loss=0.0233]Steps:  18%|█▊        | 4389/24850 [1:47:38<8:17:40,  1.46s/it, lr=7e-5, step_loss=0.0615]Steps:  18%|█▊        | 4390/24850 [1:47:40<8:17:06,  1.46s/it, lr=7e-5, step_loss=0.0615]Steps:  18%|█▊        | 4390/24850 [1:47:40<8:17:06,  1.46s/it, lr=7e-5, step_loss=0.042] Steps:  18%|█▊        | 4391/24850 [1:47:41<8:17:41,  1.46s/it, lr=7e-5, step_loss=0.042]Steps:  18%|█▊        | 4391/24850 [1:47:41<8:17:41,  1.46s/it, lr=7e-5, step_loss=0.0262]Steps:  18%|█▊        | 4392/24850 [1:47:44<10:11:32,  1.79s/it, lr=7e-5, step_loss=0.0262]Steps:  18%|█▊        | 4392/24850 [1:47:44<10:11:32,  1.79s/it, lr=7e-5, step_loss=0.0202]Steps:  18%|█▊        | 4393/24850 [1:47:45<9:39:46,  1.70s/it, lr=7e-5, step_loss=0.0202] Steps:  18%|█▊        | 4393/24850 [1:47:45<9:39:46,  1.70s/it, lr=7e-5, step_loss=0.00459]Steps:  18%|█▊        | 4394/24850 [1:47:47<9:19:01,  1.64s/it, lr=7e-5, step_loss=0.00459]Steps:  18%|█▊        | 4394/24850 [1:47:47<9:19:01,  1.64s/it, lr=7e-5, step_loss=0.0722] Steps:  18%|█▊        | 4395/24850 [1:47:48<9:03:09,  1.59s/it, lr=7e-5, step_loss=0.0722]Steps:  18%|█▊        | 4395/24850 [1:47:48<9:03:09,  1.59s/it, lr=7e-5, step_loss=0.0064]Steps:  18%|█▊        | 4396/24850 [1:47:50<8:51:19,  1.56s/it, lr=7e-5, step_loss=0.0064]Steps:  18%|█▊        | 4396/24850 [1:47:50<8:51:19,  1.56s/it, lr=7e-5, step_loss=0.0506]Steps:  18%|█▊        | 4397/24850 [1:47:51<8:42:38,  1.53s/it, lr=7e-5, step_loss=0.0506]Steps:  18%|█▊        | 4397/24850 [1:47:51<8:42:38,  1.53s/it, lr=7e-5, step_loss=0.0212]Steps:  18%|█▊        | 4398/24850 [1:47:52<8:36:36,  1.52s/it, lr=7e-5, step_loss=0.0212]Steps:  18%|█▊        | 4398/24850 [1:47:52<8:36:36,  1.52s/it, lr=7e-5, step_loss=0.0152]Steps:  18%|█▊        | 4399/24850 [1:47:54<8:30:08,  1.50s/it, lr=7e-5, step_loss=0.0152]Steps:  18%|█▊        | 4399/24850 [1:47:54<8:30:08,  1.50s/it, lr=7e-5, step_loss=0.027] Steps:  18%|█▊        | 4400/24850 [1:47:55<8:27:07,  1.49s/it, lr=7e-5, step_loss=0.027]Steps:  18%|█▊        | 4400/24850 [1:47:55<8:27:07,  1.49s/it, lr=7e-5, step_loss=0.051]Steps:  18%|█▊        | 4401/24850 [1:47:57<8:24:03,  1.48s/it, lr=7e-5, step_loss=0.051]Steps:  18%|█▊        | 4401/24850 [1:47:57<8:24:03,  1.48s/it, lr=7e-5, step_loss=0.0227]Steps:  18%|█▊        | 4402/24850 [1:47:58<8:23:55,  1.48s/it, lr=7e-5, step_loss=0.0227]Steps:  18%|█▊        | 4402/24850 [1:47:58<8:23:55,  1.48s/it, lr=7e-5, step_loss=0.012] Steps:  18%|█▊        | 4403/24850 [1:48:00<8:24:45,  1.48s/it, lr=7e-5, step_loss=0.012]Steps:  18%|█▊        | 4403/24850 [1:48:00<8:24:45,  1.48s/it, lr=7e-5, step_loss=0.0139]Steps:  18%|█▊        | 4404/24850 [1:48:01<8:23:00,  1.48s/it, lr=7e-5, step_loss=0.0139]Steps:  18%|█▊        | 4404/24850 [1:48:01<8:23:00,  1.48s/it, lr=7e-5, step_loss=0.119] Steps:  18%|█▊        | 4405/24850 [1:48:03<8:23:32,  1.48s/it, lr=7e-5, step_loss=0.119]Steps:  18%|█▊        | 4405/24850 [1:48:03<8:23:32,  1.48s/it, lr=7e-5, step_loss=0.0197]Steps:  18%|█▊        | 4406/24850 [1:48:04<8:22:16,  1.47s/it, lr=7e-5, step_loss=0.0197]Steps:  18%|█▊        | 4406/24850 [1:48:04<8:22:16,  1.47s/it, lr=7e-5, step_loss=0.0197]Steps:  18%|█▊        | 4407/24850 [1:48:06<8:20:54,  1.47s/it, lr=7e-5, step_loss=0.0197]Steps:  18%|█▊        | 4407/24850 [1:48:06<8:20:54,  1.47s/it, lr=7e-5, step_loss=0.0141]Steps:  18%|█▊        | 4408/24850 [1:48:07<8:20:42,  1.47s/it, lr=7e-5, step_loss=0.0141]Steps:  18%|█▊        | 4408/24850 [1:48:07<8:20:42,  1.47s/it, lr=7e-5, step_loss=0.0111]Steps:  18%|█▊        | 4409/24850 [1:48:09<8:18:56,  1.46s/it, lr=7e-5, step_loss=0.0111]Steps:  18%|█▊        | 4409/24850 [1:48:09<8:18:56,  1.46s/it, lr=7e-5, step_loss=0.00606]Steps:  18%|█▊        | 4410/24850 [1:48:10<8:17:41,  1.46s/it, lr=7e-5, step_loss=0.00606]Steps:  18%|█▊        | 4410/24850 [1:48:10<8:17:41,  1.46s/it, lr=7e-5, step_loss=0.0357] torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:  18%|█▊        | 4411/24850 [1:48:12<8:17:12,  1.46s/it, lr=7e-5, step_loss=0.0357]Steps:  18%|█▊        | 4411/24850 [1:48:12<8:17:12,  1.46s/it, lr=7e-5, step_loss=0.0247]Steps:  18%|█▊        | 4412/24850 [1:48:13<8:18:43,  1.46s/it, lr=7e-5, step_loss=0.0247]Steps:  18%|█▊        | 4412/24850 [1:48:13<8:18:43,  1.46s/it, lr=7e-5, step_loss=0.0488]Steps:  18%|█▊        | 4413/24850 [1:48:14<8:16:31,  1.46s/it, lr=7e-5, step_loss=0.0488]Steps:  18%|█▊        | 4413/24850 [1:48:14<8:16:31,  1.46s/it, lr=7e-5, step_loss=0.00876]Steps:  18%|█▊        | 4414/24850 [1:48:16<8:16:34,  1.46s/it, lr=7e-5, step_loss=0.00876]Steps:  18%|█▊        | 4414/24850 [1:48:16<8:16:34,  1.46s/it, lr=7e-5, step_loss=0.000773]Steps:  18%|█▊        | 4415/24850 [1:48:17<8:18:35,  1.46s/it, lr=7e-5, step_loss=0.000773]Steps:  18%|█▊        | 4415/24850 [1:48:17<8:18:35,  1.46s/it, lr=7e-5, step_loss=0.0294]  Steps:  18%|█▊        | 4416/24850 [1:48:19<8:17:47,  1.46s/it, lr=7e-5, step_loss=0.0294]Steps:  18%|█▊        | 4416/24850 [1:48:19<8:17:47,  1.46s/it, lr=7e-5, step_loss=0.0178]Steps:  18%|█▊        | 4417/24850 [1:48:20<8:16:55,  1.46s/it, lr=7e-5, step_loss=0.0178]Steps:  18%|█▊        | 4417/24850 [1:48:20<8:16:55,  1.46s/it, lr=7e-5, step_loss=0.0714]Steps:  18%|█▊        | 4418/24850 [1:48:22<8:17:13,  1.46s/it, lr=7e-5, step_loss=0.0714]Steps:  18%|█▊        | 4418/24850 [1:48:22<8:17:13,  1.46s/it, lr=7e-5, step_loss=0.00105]Steps:  18%|█▊        | 4419/24850 [1:48:23<8:17:38,  1.46s/it, lr=7e-5, step_loss=0.00105]Steps:  18%|█▊        | 4419/24850 [1:48:23<8:17:38,  1.46s/it, lr=7e-5, step_loss=0.0146] Steps:  18%|█▊        | 4420/24850 [1:48:25<8:17:37,  1.46s/it, lr=7e-5, step_loss=0.0146]Steps:  18%|█▊        | 4420/24850 [1:48:25<8:17:37,  1.46s/it, lr=7e-5, step_loss=0.00656]Steps:  18%|█▊        | 4421/24850 [1:48:26<8:17:45,  1.46s/it, lr=7e-5, step_loss=0.00656]Steps:  18%|█▊        | 4421/24850 [1:48:26<8:17:45,  1.46s/it, lr=7e-5, step_loss=0.0606] Steps:  18%|█▊        | 4422/24850 [1:48:28<8:18:27,  1.46s/it, lr=7e-5, step_loss=0.0606]Steps:  18%|█▊        | 4422/24850 [1:48:28<8:18:27,  1.46s/it, lr=7e-5, step_loss=0.0337]Steps:  18%|█▊        | 4423/24850 [1:48:29<8:17:54,  1.46s/it, lr=7e-5, step_loss=0.0337]Steps:  18%|█▊        | 4423/24850 [1:48:29<8:17:54,  1.46s/it, lr=7e-5, step_loss=0.00901]Steps:  18%|█▊        | 4424/24850 [1:48:31<8:16:58,  1.46s/it, lr=7e-5, step_loss=0.00901]Steps:  18%|█▊        | 4424/24850 [1:48:31<8:16:58,  1.46s/it, lr=7e-5, step_loss=0.035]  Steps:  18%|█▊        | 4425/24850 [1:48:32<8:19:40,  1.47s/it, lr=7e-5, step_loss=0.035]Steps:  18%|█▊        | 4425/24850 [1:48:32<8:19:40,  1.47s/it, lr=7e-5, step_loss=0.0592]Steps:  18%|█▊        | 4426/24850 [1:48:33<8:19:19,  1.47s/it, lr=7e-5, step_loss=0.0592]Steps:  18%|█▊        | 4426/24850 [1:48:33<8:19:19,  1.47s/it, lr=7e-5, step_loss=0.0315]Steps:  18%|█▊        | 4427/24850 [1:48:35<8:19:12,  1.47s/it, lr=7e-5, step_loss=0.0315]Steps:  18%|█▊        | 4427/24850 [1:48:35<8:19:12,  1.47s/it, lr=7e-5, step_loss=0.122] Steps:  18%|█▊        | 4428/24850 [1:48:36<8:18:59,  1.47s/it, lr=7e-5, step_loss=0.122]Steps:  18%|█▊        | 4428/24850 [1:48:36<8:18:59,  1.47s/it, lr=7e-5, step_loss=0.021]Steps:  18%|█▊        | 4429/24850 [1:48:38<8:16:48,  1.46s/it, lr=7e-5, step_loss=0.021]Steps:  18%|█▊        | 4429/24850 [1:48:38<8:16:48,  1.46s/it, lr=7e-5, step_loss=0.00617]Steps:  18%|█▊        | 4430/24850 [1:48:39<8:17:29,  1.46s/it, lr=7e-5, step_loss=0.00617]Steps:  18%|█▊        | 4430/24850 [1:48:39<8:17:29,  1.46s/it, lr=7e-5, step_loss=0.0351] Steps:  18%|█▊        | 4431/24850 [1:48:41<8:20:49,  1.47s/it, lr=7e-5, step_loss=0.0351]Steps:  18%|█▊        | 4431/24850 [1:48:41<8:20:49,  1.47s/it, lr=7e-5, step_loss=0.0757]Steps:  18%|█▊        | 4432/24850 [1:48:42<8:36:43,  1.52s/it, lr=7e-5, step_loss=0.0757]Steps:  18%|█▊        | 4432/24850 [1:48:42<8:36:43,  1.52s/it, lr=7e-5, step_loss=0.0536]Steps:  18%|█▊        | 4433/24850 [1:48:44<8:29:46,  1.50s/it, lr=7e-5, step_loss=0.0536]Steps:  18%|█▊        | 4433/24850 [1:48:44<8:29:46,  1.50s/it, lr=7e-5, step_loss=0.0069]Steps:  18%|█▊        | 4434/24850 [1:48:45<8:26:32,  1.49s/it, lr=7e-5, step_loss=0.0069]Steps:  18%|█▊        | 4434/24850 [1:48:45<8:26:32,  1.49s/it, lr=7e-5, step_loss=0.0379]Steps:  18%|█▊        | 4435/24850 [1:48:47<8:24:23,  1.48s/it, lr=7e-5, step_loss=0.0379]Steps:  18%|█▊        | 4435/24850 [1:48:47<8:24:23,  1.48s/it, lr=7e-5, step_loss=0.00175]Steps:  18%|█▊        | 4436/24850 [1:48:48<8:23:18,  1.48s/it, lr=7e-5, step_loss=0.00175]Steps:  18%|█▊        | 4436/24850 [1:48:48<8:23:18,  1.48s/it, lr=7e-5, step_loss=0.0104] Steps:  18%|█▊        | 4437/24850 [1:48:50<8:20:48,  1.47s/it, lr=7e-5, step_loss=0.0104]Steps:  18%|█▊        | 4437/24850 [1:48:50<8:20:48,  1.47s/it, lr=7e-5, step_loss=0.0114]Steps:  18%|█▊        | 4438/24850 [1:48:51<8:20:15,  1.47s/it, lr=7e-5, step_loss=0.0114]Steps:  18%|█▊        | 4438/24850 [1:48:51<8:20:15,  1.47s/it, lr=7e-5, step_loss=0.0233]torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
Steps:  18%|█▊        | 4439/24850 [1:48:53<8:20:25,  1.47s/it, lr=7e-5, step_loss=0.0233]Steps:  18%|█▊        | 4439/24850 [1:48:53<8:20:25,  1.47s/it, lr=7e-5, step_loss=0.00711]Steps:  18%|█▊        | 4440/24850 [1:48:54<8:20:33,  1.47s/it, lr=7e-5, step_loss=0.00711]Steps:  18%|█▊        | 4440/24850 [1:48:54<8:20:33,  1.47s/it, lr=7e-5, step_loss=0.0504] Steps:  18%|█▊        | 4441/24850 [1:48:56<8:18:58,  1.47s/it, lr=7e-5, step_loss=0.0504]Steps:  18%|█▊        | 4441/24850 [1:48:56<8:18:58,  1.47s/it, lr=7e-5, step_loss=0.0211]Steps:  18%|█▊        | 4442/24850 [1:48:58<10:03:00,  1.77s/it, lr=7e-5, step_loss=0.0211]Steps:  18%|█▊        | 4442/24850 [1:48:58<10:03:00,  1.77s/it, lr=7e-5, step_loss=0.0241]Steps:  18%|█▊        | 4443/24850 [1:49:00<9:31:29,  1.68s/it, lr=7e-5, step_loss=0.0241] Steps:  18%|█▊        | 4443/24850 [1:49:00<9:31:29,  1.68s/it, lr=7e-5, step_loss=0.0308]Steps:  18%|█▊        | 4444/24850 [1:49:01<9:11:20,  1.62s/it, lr=7e-5, step_loss=0.0308]Steps:  18%|█▊        | 4444/24850 [1:49:01<9:11:20,  1.62s/it, lr=7e-5, step_loss=0.233] Steps:  18%|█▊        | 4445/24850 [1:49:03<8:56:51,  1.58s/it, lr=7e-5, step_loss=0.233]Steps:  18%|█▊        | 4445/24850 [1:49:03<8:56:51,  1.58s/it, lr=7e-5, step_loss=0.0336]Steps:  18%|█▊        | 4446/24850 [1:49:04<8:47:14,  1.55s/it, lr=7e-5, step_loss=0.0336]Steps:  18%|█▊        | 4446/24850 [1:49:04<8:47:14,  1.55s/it, lr=7e-5, step_loss=0.0234]Steps:  18%|█▊        | 4447/24850 [1:49:05<8:38:00,  1.52s/it, lr=7e-5, step_loss=0.0234]Steps:  18%|█▊        | 4447/24850 [1:49:05<8:38:00,  1.52s/it, lr=7e-5, step_loss=0.00181]Steps:  18%|█▊        | 4448/24850 [1:49:07<8:30:48,  1.50s/it, lr=7e-5, step_loss=0.00181]Steps:  18%|█▊        | 4448/24850 [1:49:07<8:30:48,  1.50s/it, lr=7e-5, step_loss=0.0185] Steps:  18%|█▊        | 4449/24850 [1:49:08<8:25:43,  1.49s/it, lr=7e-5, step_loss=0.0185]Steps:  18%|█▊        | 4449/24850 [1:49:08<8:25:43,  1.49s/it, lr=7e-5, step_loss=0.00432]Steps:  18%|█▊        | 4450/24850 [1:49:10<8:21:50,  1.48s/it, lr=7e-5, step_loss=0.00432]Steps:  18%|█▊        | 4450/24850 [1:49:10<8:21:50,  1.48s/it, lr=7e-5, step_loss=0.0565] Steps:  18%|█▊        | 4451/24850 [1:49:11<8:20:34,  1.47s/it, lr=7e-5, step_loss=0.0565]Steps:  18%|█▊        | 4451/24850 [1:49:11<8:20:34,  1.47s/it, lr=7e-5, step_loss=0.0357]Steps:  18%|█▊        | 4452/24850 [1:49:13<8:20:10,  1.47s/it, lr=7e-5, step_loss=0.0357]Steps:  18%|█▊        | 4452/24850 [1:49:13<8:20:10,  1.47s/it, lr=7e-5, step_loss=0.0161]Steps:  18%|█▊        | 4453/24850 [1:49:14<8:19:19,  1.47s/it, lr=7e-5, step_loss=0.0161]Steps:  18%|█▊        | 4453/24850 [1:49:14<8:19:19,  1.47s/it, lr=7e-5, step_loss=0.109] Steps:  18%|█▊        | 4454/24850 [1:49:16<8:19:33,  1.47s/it, lr=7e-5, step_loss=0.109]Steps:  18%|█▊        | 4454/24850 [1:49:16<8:19:33,  1.47s/it, lr=7e-5, step_loss=0.0202]Steps:  18%|█▊        | 4455/24850 [1:49:17<8:20:03,  1.47s/it, lr=7e-5, step_loss=0.0202]Steps:  18%|█▊        | 4455/24850 [1:49:17<8:20:03,  1.47s/it, lr=7e-5, step_loss=0.0811]Steps:  18%|█▊        | 4456/24850 [1:49:19<8:21:55,  1.48s/it, lr=7e-5, step_loss=0.0811]Steps:  18%|█▊        | 4456/24850 [1:49:19<8:21:55,  1.48s/it, lr=7e-5, step_loss=0.0164]Steps:  18%|█▊        | 4457/24850 [1:49:20<8:20:36,  1.47s/it, lr=7e-5, step_loss=0.0164]Steps:  18%|█▊        | 4457/24850 [1:49:20<8:20:36,  1.47s/it, lr=7e-5, step_loss=0.0012]Steps:  18%|█▊        | 4458/24850 [1:49:22<8:18:40,  1.47s/it, lr=7e-5, step_loss=0.0012]Steps:  18%|█▊        | 4458/24850 [1:49:22<8:18:40,  1.47s/it, lr=7e-5, step_loss=0.0581]Steps:  18%|█▊        | 4459/24850 [1:49:23<8:18:25,  1.47s/it, lr=7e-5, step_loss=0.0581]Steps:  18%|█▊        | 4459/24850 [1:49:23<8:18:25,  1.47s/it, lr=7e-5, step_loss=0.121] Steps:  18%|█▊        | 4460/24850 [1:49:25<8:18:51,  1.47s/it, lr=7e-5, step_loss=0.121]Steps:  18%|█▊        | 4460/24850 [1:49:25<8:18:51,  1.47s/it, lr=7e-5, step_loss=0.0195]Steps:  18%|█▊        | 4461/24850 [1:49:26<8:19:40,  1.47s/it, lr=7e-5, step_loss=0.0195]Steps:  18%|█▊        | 4461/24850 [1:49:26<8:19:40,  1.47s/it, lr=7e-5, step_loss=0.0109]Steps:  18%|█▊        | 4462/24850 [1:49:27<8:19:49,  1.47s/it, lr=7e-5, step_loss=0.0109]Steps:  18%|█▊        | 4462/24850 [1:49:27<8:19:49,  1.47s/it, lr=7e-5, step_loss=0.0335]Steps:  18%|█▊        | 4463/24850 [1:49:29<8:19:06,  1.47s/it, lr=7e-5, step_loss=0.0335]Steps:  18%|█▊        | 4463/24850 [1:49:29<8:19:06,  1.47s/it, lr=7e-5, step_loss=0.013] Steps:  18%|█▊        | 4464/24850 [1:49:30<8:17:55,  1.47s/it, lr=7e-5, step_loss=0.013]Steps:  18%|█▊        | 4464/24850 [1:49:30<8:17:55,  1.47s/it, lr=7e-5, step_loss=0.0111]Steps:  18%|█▊        | 4465/24850 [1:49:32<8:17:20,  1.46s/it, lr=7e-5, step_loss=0.0111]Steps:  18%|█▊        | 4465/24850 [1:49:32<8:17:20,  1.46s/it, lr=7e-5, step_loss=0.0218](512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512)Steps:  18%|█▊        | 4466/24850 [1:49:33<8:16:26,  1.46s/it, lr=7e-5, step_loss=0.0218]Steps:  18%|█▊        | 4466/24850 [1:49:33<8:16:26,  1.46s/it, lr=7e-5, step_loss=0.0218]Steps:  18%|█▊        | 4467/24850 [1:49:35<8:16:12,  1.46s/it, lr=7e-5, step_loss=0.0218]Steps:  18%|█▊        | 4467/24850 [1:49:35<8:16:12,  1.46s/it, lr=7e-5, step_loss=0.0193]Steps:  18%|█▊        | 4468/24850 [1:49:36<8:15:52,  1.46s/it, lr=7e-5, step_loss=0.0193]Steps:  18%|█▊        | 4468/24850 [1:49:36<8:15:52,  1.46s/it, lr=7e-5, step_loss=0.00238]Steps:  18%|█▊        | 4469/24850 [1:49:38<8:17:36,  1.46s/it, lr=7e-5, step_loss=0.00238]Steps:  18%|█▊        | 4469/24850 [1:49:38<8:17:36,  1.46s/it, lr=7e-5, step_loss=0.0122] Steps:  18%|█▊        | 4470/24850 [1:49:39<8:17:50,  1.47s/it, lr=7e-5, step_loss=0.0122]Steps:  18%|█▊        | 4470/24850 [1:49:39<8:17:50,  1.47s/it, lr=7e-5, step_loss=0.0402]Steps:  18%|█▊        | 4471/24850 [1:49:41<8:16:44,  1.46s/it, lr=7e-5, step_loss=0.0402]Steps:  18%|█▊        | 4471/24850 [1:49:41<8:16:44,  1.46s/it, lr=7e-5, step_loss=0.0574]Steps:  18%|█▊        | 4472/24850 [1:49:42<8:17:58,  1.47s/it, lr=7e-5, step_loss=0.0574]Steps:  18%|█▊        | 4472/24850 [1:49:42<8:17:58,  1.47s/it, lr=7e-5, step_loss=0.0393]Steps:  18%|█▊        | 4473/24850 [1:49:44<8:24:09,  1.48s/it, lr=7e-5, step_loss=0.0393]Steps:  18%|█▊        | 4473/24850 [1:49:44<8:24:09,  1.48s/it, lr=7e-5, step_loss=0.194] Steps:  18%|█▊        | 4474/24850 [1:49:45<8:22:49,  1.48s/it, lr=7e-5, step_loss=0.194]Steps:  18%|█▊        | 4474/24850 [1:49:45<8:22:49,  1.48s/it, lr=7e-5, step_loss=0.0499]Steps:  18%|█▊        | 4475/24850 [1:49:47<8:19:17,  1.47s/it, lr=7e-5, step_loss=0.0499]Steps:  18%|█▊        | 4475/24850 [1:49:47<8:19:17,  1.47s/it, lr=7e-5, step_loss=0.0326]Steps:  18%|█▊        | 4476/24850 [1:49:48<8:18:03,  1.47s/it, lr=7e-5, step_loss=0.0326]Steps:  18%|█▊        | 4476/24850 [1:49:48<8:18:03,  1.47s/it, lr=7e-5, step_loss=0.0289]Steps:  18%|█▊        | 4477/24850 [1:49:49<8:20:09,  1.47s/it, lr=7e-5, step_loss=0.0289]Steps:  18%|█▊        | 4477/24850 [1:49:49<8:20:09,  1.47s/it, lr=7e-5, step_loss=0.01]  Steps:  18%|█▊        | 4478/24850 [1:49:51<8:22:34,  1.48s/it, lr=7e-5, step_loss=0.01]Steps:  18%|█▊        | 4478/24850 [1:49:51<8:22:34,  1.48s/it, lr=7e-5, step_loss=0.0277]Steps:  18%|█▊        | 4479/24850 [1:49:52<8:25:46,  1.49s/it, lr=7e-5, step_loss=0.0277]Steps:  18%|█▊        | 4479/24850 [1:49:52<8:25:46,  1.49s/it, lr=7e-5, step_loss=0.0238]Steps:  18%|█▊        | 4480/24850 [1:49:54<8:26:42,  1.49s/it, lr=7e-5, step_loss=0.0238]Steps:  18%|█▊        | 4480/24850 [1:49:54<8:26:42,  1.49s/it, lr=7e-5, step_loss=0.00175]Steps:  18%|█▊        | 4481/24850 [1:49:55<8:23:36,  1.48s/it, lr=7e-5, step_loss=0.00175]Steps:  18%|█▊        | 4481/24850 [1:49:55<8:23:36,  1.48s/it, lr=7e-5, step_loss=0.0193] Steps:  18%|█▊        | 4482/24850 [1:49:57<8:21:56,  1.48s/it, lr=7e-5, step_loss=0.0193]Steps:  18%|█▊        | 4482/24850 [1:49:57<8:21:56,  1.48s/it, lr=7e-5, step_loss=0.0246]Steps:  18%|█▊        | 4483/24850 [1:49:58<8:21:04,  1.48s/it, lr=7e-5, step_loss=0.0246]Steps:  18%|█▊        | 4483/24850 [1:49:58<8:21:04,  1.48s/it, lr=7e-5, step_loss=0.0463]Steps:  18%|█▊        | 4484/24850 [1:50:00<8:19:46,  1.47s/it, lr=7e-5, step_loss=0.0463]Steps:  18%|█▊        | 4484/24850 [1:50:00<8:19:46,  1.47s/it, lr=7e-5, step_loss=0.0147]Steps:  18%|█▊        | 4485/24850 [1:50:01<8:19:53,  1.47s/it, lr=7e-5, step_loss=0.0147]Steps:  18%|█▊        | 4485/24850 [1:50:01<8:19:53,  1.47s/it, lr=7e-5, step_loss=0.0106]Steps:  18%|█▊        | 4486/24850 [1:50:03<8:23:44,  1.48s/it, lr=7e-5, step_loss=0.0106]Steps:  18%|█▊        | 4486/24850 [1:50:03<8:23:44,  1.48s/it, lr=7e-5, step_loss=0.0188]Steps:  18%|█▊        | 4487/24850 [1:50:04<8:24:10,  1.49s/it, lr=7e-5, step_loss=0.0188]Steps:  18%|█▊        | 4487/24850 [1:50:04<8:24:10,  1.49s/it, lr=7e-5, step_loss=0.031] Steps:  18%|█▊        | 4488/24850 [1:50:06<8:22:36,  1.48s/it, lr=7e-5, step_loss=0.031]Steps:  18%|█▊        | 4488/24850 [1:50:06<8:22:36,  1.48s/it, lr=7e-5, step_loss=0.0149]Steps:  18%|█▊        | 4489/24850 [1:50:07<8:22:20,  1.48s/it, lr=7e-5, step_loss=0.0149]Steps:  18%|█▊        | 4489/24850 [1:50:07<8:22:20,  1.48s/it, lr=7e-5, step_loss=0.00337]Steps:  18%|█▊        | 4490/24850 [1:50:09<8:20:47,  1.48s/it, lr=7e-5, step_loss=0.00337]Steps:  18%|█▊        | 4490/24850 [1:50:09<8:20:47,  1.48s/it, lr=7e-5, step_loss=0.00407]Steps:  18%|█▊        | 4491/24850 [1:50:10<8:18:40,  1.47s/it, lr=7e-5, step_loss=0.00407]04/12/2024 12:00:19 - INFO - __main__ - 2 checkpoints already exist, removing 1 checkpoints
04/12/2024 12:00:19 - INFO - __main__ - removing checkpoints: checkpoint-3500
04/12/2024 12:00:20 - INFO - accelerate.accelerator - Saving current state to /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-4500
Configuration saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-4500/unet/config.json
Model weights saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-4500/unet/diffusion_pytorch_model.safetensors
Model weights saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-4500/unet/pytorch_lora_weights.safetensors
04/12/2024 12:00:54 - INFO - accelerate.checkpointing - Optimizer state saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-4500/optimizer.bin
04/12/2024 12:00:54 - INFO - accelerate.checkpointing - Scheduler state saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-4500/scheduler.bin
04/12/2024 12:00:54 - INFO - accelerate.checkpointing - Random states saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-4500/random_states_0.pkl
04/12/2024 12:00:54 - INFO - __main__ - Saved state to /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-4500
Steps:  18%|█▊        | 4491/24850 [1:50:45<8:18:40,  1.47s/it, lr=7e-5, step_loss=0.00611]Steps:  18%|█▊        | 4492/24850 [1:50:54<80:18:17, 14.20s/it, lr=7e-5, step_loss=0.00611]Steps:  18%|█▊        | 4492/24850 [1:50:54<80:18:17, 14.20s/it, lr=7e-5, step_loss=0.0008]  torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:  18%|█▊        | 4493/24850 [1:50:56<58:38:53, 10.37s/it, lr=7e-5, step_loss=0.0008]Steps:  18%|█▊        | 4493/24850 [1:50:56<58:38:53, 10.37s/it, lr=7e-5, step_loss=0.00616]Steps:  18%|█▊        | 4494/24850 [1:50:57<43:31:08,  7.70s/it, lr=7e-5, step_loss=0.00616]Steps:  18%|█▊        | 4494/24850 [1:50:57<43:31:08,  7.70s/it, lr=7e-5, step_loss=0.0166] Steps:  18%|█▊        | 4495/24850 [1:50:58<32:55:44,  5.82s/it, lr=7e-5, step_loss=0.0166]Steps:  18%|█▊        | 4495/24850 [1:50:58<32:55:44,  5.82s/it, lr=7e-5, step_loss=0.105] Steps:  18%|█▊        | 4496/24850 [1:51:00<25:31:07,  4.51s/it, lr=7e-5, step_loss=0.105]Steps:  18%|█▊        | 4496/24850 [1:51:00<25:31:07,  4.51s/it, lr=7e-5, step_loss=0.0996]Steps:  18%|█▊        | 4497/24850 [1:51:01<20:21:31,  3.60s/it, lr=7e-5, step_loss=0.0996]Steps:  18%|█▊        | 4497/24850 [1:51:01<20:21:31,  3.60s/it, lr=7e-5, step_loss=0.00395]Steps:  18%|█▊        | 4498/24850 [1:51:03<16:40:40,  2.95s/it, lr=7e-5, step_loss=0.00395]Steps:  18%|█▊        | 4498/24850 [1:51:03<16:40:40,  2.95s/it, lr=7e-5, step_loss=0.0868] Steps:  18%|█▊        | 4499/24850 [1:51:04<14:08:25,  2.50s/it, lr=7e-5, step_loss=0.0868]Steps:  18%|█▊        | 4499/24850 [1:51:04<14:08:25,  2.50s/it, lr=7e-5, step_loss=0.0162]Steps:  18%|█▊        | 4500/24850 [1:51:06<12:21:12,  2.19s/it, lr=7e-5, step_loss=0.0162]Steps:  18%|█▊        | 4500/24850 [1:51:06<12:21:12,  2.19s/it, lr=7e-5, step_loss=0.141] Steps:  18%|█▊        | 4501/24850 [1:51:07<11:04:42,  1.96s/it, lr=7e-5, step_loss=0.141]Steps:  18%|█▊        | 4501/24850 [1:51:07<11:04:42,  1.96s/it, lr=7e-5, step_loss=0.00295]Steps:  18%|█▊        | 4502/24850 [1:51:09<10:12:47,  1.81s/it, lr=7e-5, step_loss=0.00295]Steps:  18%|█▊        | 4502/24850 [1:51:09<10:12:47,  1.81s/it, lr=7e-5, step_loss=0.0525] Steps:  18%|█▊        | 4503/24850 [1:51:10<9:36:45,  1.70s/it, lr=7e-5, step_loss=0.0525] Steps:  18%|█▊        | 4503/24850 [1:51:10<9:36:45,  1.70s/it, lr=7e-5, step_loss=0.0137]Steps:  18%|█▊        | 4504/24850 [1:51:11<9:10:51,  1.62s/it, lr=7e-5, step_loss=0.0137]Steps:  18%|█▊        | 4504/24850 [1:51:12<9:10:51,  1.62s/it, lr=7e-5, step_loss=0.00693]Steps:  18%|█▊        | 4505/24850 [1:51:13<8:51:56,  1.57s/it, lr=7e-5, step_loss=0.00693]Steps:  18%|█▊        | 4505/24850 [1:51:13<8:51:56,  1.57s/it, lr=7e-5, step_loss=0.136]  Steps:  18%|█▊        | 4506/24850 [1:51:14<8:38:24,  1.53s/it, lr=7e-5, step_loss=0.136]Steps:  18%|█▊        | 4506/24850 [1:51:14<8:38:24,  1.53s/it, lr=7e-5, step_loss=0.00936]Steps:  18%|█▊        | 4507/24850 [1:51:16<8:29:29,  1.50s/it, lr=7e-5, step_loss=0.00936]Steps:  18%|█▊        | 4507/24850 [1:51:16<8:29:29,  1.50s/it, lr=7e-5, step_loss=0.0371] Steps:  18%|█▊        | 4508/24850 [1:51:17<8:24:23,  1.49s/it, lr=7e-5, step_loss=0.0371]Steps:  18%|█▊        | 4508/24850 [1:51:17<8:24:23,  1.49s/it, lr=7e-5, step_loss=0.0511]Steps:  18%|█▊        | 4509/24850 [1:51:19<8:19:17,  1.47s/it, lr=7e-5, step_loss=0.0511]Steps:  18%|█▊        | 4509/24850 [1:51:19<8:19:17,  1.47s/it, lr=7e-5, step_loss=0.0202]Steps:  18%|█▊        | 4510/24850 [1:51:20<8:17:40,  1.47s/it, lr=7e-5, step_loss=0.0202]Steps:  18%|█▊        | 4510/24850 [1:51:20<8:17:40,  1.47s/it, lr=7e-5, step_loss=0.00775]Steps:  18%|█▊        | 4511/24850 [1:51:22<8:17:03,  1.47s/it, lr=7e-5, step_loss=0.00775]Steps:  18%|█▊        | 4511/24850 [1:51:22<8:17:03,  1.47s/it, lr=7e-5, step_loss=0.0438] Steps:  18%|█▊        | 4512/24850 [1:51:23<8:15:14,  1.46s/it, lr=7e-5, step_loss=0.0438]Steps:  18%|█▊        | 4512/24850 [1:51:23<8:15:14,  1.46s/it, lr=7e-5, step_loss=0.0556]Steps:  18%|█▊        | 4513/24850 [1:51:25<8:12:13,  1.45s/it, lr=7e-5, step_loss=0.0556]Steps:  18%|█▊        | 4513/24850 [1:51:25<8:12:13,  1.45s/it, lr=7e-5, step_loss=0.0147]Steps:  18%|█▊        | 4514/24850 [1:51:26<8:09:44,  1.44s/it, lr=7e-5, step_loss=0.0147]Steps:  18%|█▊        | 4514/24850 [1:51:26<8:09:44,  1.44s/it, lr=7e-5, step_loss=0.00718]Steps:  18%|█▊        | 4515/24850 [1:51:27<8:08:57,  1.44s/it, lr=7e-5, step_loss=0.00718]Steps:  18%|█▊        | 4515/24850 [1:51:27<8:08:57,  1.44s/it, lr=7e-5, step_loss=0.0456] Steps:  18%|█▊        | 4516/24850 [1:51:29<8:08:21,  1.44s/it, lr=7e-5, step_loss=0.0456]Steps:  18%|█▊        | 4516/24850 [1:51:29<8:08:21,  1.44s/it, lr=7e-5, step_loss=0.0153]Steps:  18%|█▊        | 4517/24850 [1:51:30<8:07:30,  1.44s/it, lr=7e-5, step_loss=0.0153]Steps:  18%|█▊        | 4517/24850 [1:51:30<8:07:30,  1.44s/it, lr=7e-5, step_loss=0.0554]Steps:  18%|█▊        | 4518/24850 [1:51:32<8:09:32,  1.44s/it, lr=7e-5, step_loss=0.0554]Steps:  18%|█▊        | 4518/24850 [1:51:32<8:09:32,  1.44s/it, lr=7e-5, step_loss=0.0241]Steps:  18%|█▊        | 4519/24850 [1:51:33<8:10:44,  1.45s/it, lr=7e-5, step_loss=0.0241]Steps:  18%|█▊        | 4519/24850 [1:51:33<8:10:44,  1.45s/it, lr=7e-5, step_loss=0.012] torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  Steps:  18%|█▊        | 4520/24850 [1:51:35<8:10:50,  1.45s/it, lr=7e-5, step_loss=0.012]Steps:  18%|█▊        | 4520/24850 [1:51:35<8:10:50,  1.45s/it, lr=7e-5, step_loss=0.0338]Steps:  18%|█▊        | 4521/24850 [1:51:36<8:09:56,  1.45s/it, lr=7e-5, step_loss=0.0338]Steps:  18%|█▊        | 4521/24850 [1:51:36<8:09:56,  1.45s/it, lr=7e-5, step_loss=0.0804]Steps:  18%|█▊        | 4522/24850 [1:51:37<8:10:30,  1.45s/it, lr=7e-5, step_loss=0.0804]Steps:  18%|█▊        | 4522/24850 [1:51:37<8:10:30,  1.45s/it, lr=7e-5, step_loss=0.00638]Steps:  18%|█▊        | 4523/24850 [1:51:39<8:09:06,  1.44s/it, lr=7e-5, step_loss=0.00638]Steps:  18%|█▊        | 4523/24850 [1:51:39<8:09:06,  1.44s/it, lr=7e-5, step_loss=0.00612]Steps:  18%|█▊        | 4524/24850 [1:51:40<8:09:59,  1.45s/it, lr=7e-5, step_loss=0.00612]Steps:  18%|█▊        | 4524/24850 [1:51:40<8:09:59,  1.45s/it, lr=7e-5, step_loss=0.0139] Steps:  18%|█▊        | 4525/24850 [1:51:42<8:09:54,  1.45s/it, lr=7e-5, step_loss=0.0139]Steps:  18%|█▊        | 4525/24850 [1:51:42<8:09:54,  1.45s/it, lr=7e-5, step_loss=0.0157]Steps:  18%|█▊        | 4526/24850 [1:51:43<8:08:29,  1.44s/it, lr=7e-5, step_loss=0.0157]Steps:  18%|█▊        | 4526/24850 [1:51:43<8:08:29,  1.44s/it, lr=7e-5, step_loss=0.0136]Steps:  18%|█▊        | 4527/24850 [1:51:45<8:10:03,  1.45s/it, lr=7e-5, step_loss=0.0136]Steps:  18%|█▊        | 4527/24850 [1:51:45<8:10:03,  1.45s/it, lr=7e-5, step_loss=0.008] Steps:  18%|█▊        | 4528/24850 [1:51:46<8:09:24,  1.44s/it, lr=7e-5, step_loss=0.008]Steps:  18%|█▊        | 4528/24850 [1:51:46<8:09:24,  1.44s/it, lr=7e-5, step_loss=0.00171]Steps:  18%|█▊        | 4529/24850 [1:51:48<8:08:44,  1.44s/it, lr=7e-5, step_loss=0.00171]Steps:  18%|█▊        | 4529/24850 [1:51:48<8:08:44,  1.44s/it, lr=7e-5, step_loss=0.011]  Steps:  18%|█▊        | 4530/24850 [1:51:49<8:08:22,  1.44s/it, lr=7e-5, step_loss=0.011]Steps:  18%|█▊        | 4530/24850 [1:51:49<8:08:22,  1.44s/it, lr=7e-5, step_loss=0.0234]Steps:  18%|█▊        | 4531/24850 [1:51:50<8:08:53,  1.44s/it, lr=7e-5, step_loss=0.0234]Steps:  18%|█▊        | 4531/24850 [1:51:50<8:08:53,  1.44s/it, lr=7e-5, step_loss=0.0327]Steps:  18%|█▊        | 4532/24850 [1:51:52<8:10:05,  1.45s/it, lr=7e-5, step_loss=0.0327]Steps:  18%|█▊        | 4532/24850 [1:51:52<8:10:05,  1.45s/it, lr=7e-5, step_loss=0.0379]Steps:  18%|█▊        | 4533/24850 [1:51:53<8:10:47,  1.45s/it, lr=7e-5, step_loss=0.0379]Steps:  18%|█▊        | 4533/24850 [1:51:53<8:10:47,  1.45s/it, lr=7e-5, step_loss=0.0247]Steps:  18%|█▊        | 4534/24850 [1:51:55<8:11:42,  1.45s/it, lr=7e-5, step_loss=0.0247]Steps:  18%|█▊        | 4534/24850 [1:51:55<8:11:42,  1.45s/it, lr=7e-5, step_loss=0.0286]Steps:  18%|█▊        | 4535/24850 [1:51:56<8:11:43,  1.45s/it, lr=7e-5, step_loss=0.0286]Steps:  18%|█▊        | 4535/24850 [1:51:56<8:11:43,  1.45s/it, lr=7e-5, step_loss=0.0406]Steps:  18%|█▊        | 4536/24850 [1:51:58<8:12:32,  1.45s/it, lr=7e-5, step_loss=0.0406]Steps:  18%|█▊        | 4536/24850 [1:51:58<8:12:32,  1.45s/it, lr=7e-5, step_loss=0.0666]Steps:  18%|█▊        | 4537/24850 [1:51:59<8:30:04,  1.51s/it, lr=7e-5, step_loss=0.0666]Steps:  18%|█▊        | 4537/24850 [1:51:59<8:30:04,  1.51s/it, lr=7e-5, step_loss=0.0101]Steps:  18%|█▊        | 4538/24850 [1:52:01<8:25:28,  1.49s/it, lr=7e-5, step_loss=0.0101]Steps:  18%|█▊        | 4538/24850 [1:52:01<8:25:28,  1.49s/it, lr=7e-5, step_loss=0.0861]Steps:  18%|█▊        | 4539/24850 [1:52:02<8:22:48,  1.49s/it, lr=7e-5, step_loss=0.0861]Steps:  18%|█▊        | 4539/24850 [1:52:02<8:22:48,  1.49s/it, lr=7e-5, step_loss=0.024] Steps:  18%|█▊        | 4540/24850 [1:52:04<8:21:11,  1.48s/it, lr=7e-5, step_loss=0.024]Steps:  18%|█▊        | 4540/24850 [1:52:04<8:21:11,  1.48s/it, lr=7e-5, step_loss=0.0563]Steps:  18%|█▊        | 4541/24850 [1:52:05<8:18:03,  1.47s/it, lr=7e-5, step_loss=0.0563]Steps:  18%|█▊        | 4541/24850 [1:52:05<8:18:03,  1.47s/it, lr=7e-5, step_loss=0.00688]Steps:  18%|█▊        | 4542/24850 [1:52:08<10:05:46,  1.79s/it, lr=7e-5, step_loss=0.00688]Steps:  18%|█▊        | 4542/24850 [1:52:08<10:05:46,  1.79s/it, lr=7e-5, step_loss=0.013]  Steps:  18%|█▊        | 4543/24850 [1:52:09<9:31:37,  1.69s/it, lr=7e-5, step_loss=0.013] Steps:  18%|█▊        | 4543/24850 [1:52:09<9:31:37,  1.69s/it, lr=7e-5, step_loss=0.00557]Steps:  18%|█▊        | 4544/24850 [1:52:11<9:11:32,  1.63s/it, lr=7e-5, step_loss=0.00557]Steps:  18%|█▊        | 4544/24850 [1:52:11<9:11:32,  1.63s/it, lr=7e-5, step_loss=0.0384] Steps:  18%|█▊        | 4545/24850 [1:52:12<8:53:57,  1.58s/it, lr=7e-5, step_loss=0.0384]Steps:  18%|█▊        | 4545/24850 [1:52:12<8:53:57,  1.58s/it, lr=7e-5, step_loss=0.0294]Steps:  18%|█▊        | 4546/24850 [1:52:14<8:41:03,  1.54s/it, lr=7e-5, step_loss=0.0294]Steps:  18%|█▊        | 4546/24850 [1:52:14<8:41:03,  1.54s/it, lr=7e-5, step_loss=0.0102]Steps:  18%|█▊        | 4547/24850 [1:52:15<8:30:45,  1.51s/it, lr=7e-5, step_loss=0.0102]Steps:  18%|█▊        | 4547/24850 [1:52:15<8:30:45,  1.51s/it, lr=7e-5, step_loss=0.000785]mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:  18%|█▊        | 4548/24850 [1:52:17<8:25:00,  1.49s/it, lr=7e-5, step_loss=0.000785]Steps:  18%|█▊        | 4548/24850 [1:52:17<8:25:00,  1.49s/it, lr=7e-5, step_loss=0.0372]  Steps:  18%|█▊        | 4549/24850 [1:52:18<8:21:02,  1.48s/it, lr=7e-5, step_loss=0.0372]Steps:  18%|█▊        | 4549/24850 [1:52:18<8:21:02,  1.48s/it, lr=7e-5, step_loss=0.0142]Steps:  18%|█▊        | 4550/24850 [1:52:19<8:17:31,  1.47s/it, lr=7e-5, step_loss=0.0142]Steps:  18%|█▊        | 4550/24850 [1:52:19<8:17:31,  1.47s/it, lr=7e-5, step_loss=0.089] Steps:  18%|█▊        | 4551/24850 [1:52:21<8:16:53,  1.47s/it, lr=7e-5, step_loss=0.089]Steps:  18%|█▊        | 4551/24850 [1:52:21<8:16:53,  1.47s/it, lr=7e-5, step_loss=0.0125]Steps:  18%|█▊        | 4552/24850 [1:52:22<8:16:54,  1.47s/it, lr=7e-5, step_loss=0.0125]Steps:  18%|█▊        | 4552/24850 [1:52:22<8:16:54,  1.47s/it, lr=7e-5, step_loss=0.153] Steps:  18%|█▊        | 4553/24850 [1:52:24<8:15:09,  1.46s/it, lr=7e-5, step_loss=0.153]Steps:  18%|█▊        | 4553/24850 [1:52:24<8:15:09,  1.46s/it, lr=7e-5, step_loss=0.00294]Steps:  18%|█▊        | 4554/24850 [1:52:25<8:12:36,  1.46s/it, lr=7e-5, step_loss=0.00294]Steps:  18%|█▊        | 4554/24850 [1:52:25<8:12:36,  1.46s/it, lr=7e-5, step_loss=0.0353] Steps:  18%|█▊        | 4555/24850 [1:52:27<8:10:06,  1.45s/it, lr=7e-5, step_loss=0.0353]Steps:  18%|█▊        | 4555/24850 [1:52:27<8:10:06,  1.45s/it, lr=7e-5, step_loss=0.0015]Steps:  18%|█▊        | 4556/24850 [1:52:28<8:10:26,  1.45s/it, lr=7e-5, step_loss=0.0015]Steps:  18%|█▊        | 4556/24850 [1:52:28<8:10:26,  1.45s/it, lr=7e-5, step_loss=0.0384]Steps:  18%|█▊        | 4557/24850 [1:52:30<8:09:21,  1.45s/it, lr=7e-5, step_loss=0.0384]Steps:  18%|█▊        | 4557/24850 [1:52:30<8:09:21,  1.45s/it, lr=7e-5, step_loss=0.0208]Steps:  18%|█▊        | 4558/24850 [1:52:31<8:08:41,  1.44s/it, lr=7e-5, step_loss=0.0208]Steps:  18%|█▊        | 4558/24850 [1:52:31<8:08:41,  1.44s/it, lr=7e-5, step_loss=0.00397]Steps:  18%|█▊        | 4559/24850 [1:52:32<8:08:53,  1.45s/it, lr=7e-5, step_loss=0.00397]Steps:  18%|█▊        | 4559/24850 [1:52:32<8:08:53,  1.45s/it, lr=7e-5, step_loss=0.0607] Steps:  18%|█▊        | 4560/24850 [1:52:34<8:07:07,  1.44s/it, lr=7e-5, step_loss=0.0607]Steps:  18%|█▊        | 4560/24850 [1:52:34<8:07:07,  1.44s/it, lr=7e-5, step_loss=0.00336]Steps:  18%|█▊        | 4561/24850 [1:52:35<8:07:31,  1.44s/it, lr=7e-5, step_loss=0.00336]Steps:  18%|█▊        | 4561/24850 [1:52:35<8:07:31,  1.44s/it, lr=7e-5, step_loss=0.0195] Steps:  18%|█▊        | 4562/24850 [1:52:37<8:08:55,  1.45s/it, lr=7e-5, step_loss=0.0195]Steps:  18%|█▊        | 4562/24850 [1:52:37<8:08:55,  1.45s/it, lr=7e-5, step_loss=0.338] Steps:  18%|█▊        | 4563/24850 [1:52:38<8:17:22,  1.47s/it, lr=7e-5, step_loss=0.338]Steps:  18%|█▊        | 4563/24850 [1:52:38<8:17:22,  1.47s/it, lr=7e-5, step_loss=0.0668]04/12/2024 12:02:47 - INFO - __main__ - Running validation...
torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([9, 4, 64, 64])

Loading pipeline components...:   0%|          | 0/7 [00:00<?, ?it/s][A`text_config_dict` is provided which will be used to initialize `CLIPTextConfig`. The value `text_config["id2label"]` will be overriden.
`text_config_dict` is provided which will be used to initialize `CLIPTextConfig`. The value `text_config["bos_token_id"]` will be overriden.
`text_config_dict` is provided which will be used to initialize `CLIPTextConfig`. The value `text_config["eos_token_id"]` will be overriden.
Loaded safety_checker as StableDiffusionSafetyChecker from `safety_checker` subfolder of timbrooks/instruct-pix2pix.

Loading pipeline components...:  14%|█▍        | 1/7 [00:00<00:02,  2.39it/s][ALoaded feature_extractor as CLIPImageProcessor from `feature_extractor` subfolder of timbrooks/instruct-pix2pix.
{'timestep_spacing'} was not found in config. Values will be initialized to default values.
Loaded scheduler as EulerAncestralDiscreteScheduler from `scheduler` subfolder of timbrooks/instruct-pix2pix.
Loaded tokenizer as CLIPTokenizer from `tokenizer` subfolder of timbrooks/instruct-pix2pix.
Loading pipeline components...: 100%|██████████| 7/7 [00:00<00:00, 13.52it/s]
{'timestep_spacing'} was not found in config. Values will be initialized to default values.
conduct do_classifier_free_guidance, text_guidance: 16,image_guidance: 1

  0%|          | 0/50 [00:00<?, ?it/s][A
  2%|▏         | 1/50 [00:00<00:21,  2.30it/s][A
  4%|▍         | 2/50 [00:00<00:20,  2.37it/s][A
  6%|▌         | 3/50 [00:01<00:19,  2.40it/s][A
  8%|▊         | 4/50 [00:01<00:19,  2.42it/s][A
 10%|█         | 5/50 [00:02<00:18,  2.43it/s][A
 12%|█▏        | 6/50 [00:02<00:18,  2.41it/s][A
 14%|█▍        | 7/50 [00:02<00:17,  2.42it/s][A
 16%|█▌        | 8/50 [00:03<00:17,  2.43it/s][A
 18%|█▊        | 9/50 [00:03<00:16,  2.44it/s][A
 20%|██        | 10/50 [00:04<00:16,  2.44it/s][A
 22%|██▏       | 11/50 [00:04<00:15,  2.44it/s][A
 24%|██▍       | 12/50 [00:04<00:15,  2.44it/s][A
 26%|██▌       | 13/50 [00:05<00:15,  2.44it/s][A
 28%|██▊       | 14/50 [00:05<00:14,  2.44it/s][A
 30%|███       | 15/50 [00:06<00:14,  2.44it/s][A
 32%|███▏      | 16/50 [00:06<00:13,  2.44it/s][A
 34%|███▍      | 17/50 [00:07<00:13,  2.44it/s][A
 36%|███▌      | 18/50 [00:07<00:13,  2.44it/s][A
 38%|███▊      | 19/50 [00:07<00:12,  2.44it/s][A
 40%|████      | 20/50 [00:08<00:12,  2.44it/s][A
 42%|████▏     | 21/50 [00:08<00:11,  2.44it/s][A
 44%|████▍     | 22/50 [00:09<00:11,  2.44it/s][A
 46%|████▌     | 23/50 [00:09<00:11,  2.44it/s][A
 48%|████▊     | 24/50 [00:09<00:10,  2.44it/s][A
 50%|█████     | 25/50 [00:10<00:10,  2.44it/s][A
 52%|█████▏    | 26/50 [00:10<00:09,  2.44it/s][A
 54%|█████▍    | 27/50 [00:11<00:09,  2.44it/s][A
 56%|█████▌    | 28/50 [00:11<00:09,  2.44it/s][A
 58%|█████▊    | 29/50 [00:11<00:08,  2.44it/s][A
 60%|██████    | 30/50 [00:12<00:08,  2.44it/s][A
 62%|██████▏   | 31/50 [00:12<00:07,  2.44it/s][A
 64%|██████▍   | 32/50 [00:13<00:07,  2.44it/s][A
 66%|██████▌   | 33/50 [00:13<00:06,  2.44it/s][A(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) 
 68%|██████▊   | 34/50 [00:13<00:06,  2.44it/s][A
 70%|███████   | 35/50 [00:14<00:06,  2.45it/s][A
 72%|███████▏  | 36/50 [00:14<00:05,  2.45it/s][A
 74%|███████▍  | 37/50 [00:15<00:05,  2.45it/s][A
 76%|███████▌  | 38/50 [00:15<00:04,  2.45it/s][A
 78%|███████▊  | 39/50 [00:16<00:04,  2.45it/s][A
 80%|████████  | 40/50 [00:16<00:04,  2.45it/s][A
 82%|████████▏ | 41/50 [00:16<00:03,  2.44it/s][A
 84%|████████▍ | 42/50 [00:17<00:03,  2.43it/s][A
 86%|████████▌ | 43/50 [00:17<00:02,  2.43it/s][A
 88%|████████▊ | 44/50 [00:18<00:02,  2.43it/s][A
 90%|█████████ | 45/50 [00:18<00:02,  2.43it/s][A
 92%|█████████▏| 46/50 [00:18<00:01,  2.42it/s][A
 94%|█████████▍| 47/50 [00:19<00:01,  2.43it/s][A
 96%|█████████▌| 48/50 [00:19<00:00,  2.43it/s][A
 98%|█████████▊| 49/50 [00:20<00:00,  2.43it/s][A
100%|██████████| 50/50 [00:20<00:00,  2.43it/s][A100%|██████████| 50/50 [00:20<00:00,  2.43it/s]
04/12/2024 12:03:10 - INFO - __main__ - Running training...
torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
save img to : /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/images/modify the images for task ['flare']_val_step_4572_0.png modify the images for task ['flare']
writing inference outputs failed [Errno 2] No such file or directory: '/usr/bin/ffmpeg'
Steps:  18%|█▊        | 4564/24850 [1:53:09<58:27:24, 10.37s/it, lr=7e-5, step_loss=0.0668]Steps:  18%|█▊        | 4564/24850 [1:53:09<58:27:24, 10.37s/it, lr=7e-5, step_loss=0.0168]Steps:  18%|█▊        | 4565/24850 [1:53:11<43:28:27,  7.72s/it, lr=7e-5, step_loss=0.0168]Steps:  18%|█▊        | 4565/24850 [1:53:11<43:28:27,  7.72s/it, lr=7e-5, step_loss=0.0431]Steps:  18%|█▊        | 4566/24850 [1:53:12<32:54:12,  5.84s/it, lr=7e-5, step_loss=0.0431]Steps:  18%|█▊        | 4566/24850 [1:53:12<32:54:12,  5.84s/it, lr=7e-5, step_loss=0.0181]Steps:  18%|█▊        | 4567/24850 [1:53:14<25:29:25,  4.52s/it, lr=7e-5, step_loss=0.0181]Steps:  18%|█▊        | 4567/24850 [1:53:14<25:29:25,  4.52s/it, lr=7e-5, step_loss=0.00956]Steps:  18%|█▊        | 4568/24850 [1:53:15<20:18:07,  3.60s/it, lr=7e-5, step_loss=0.00956]Steps:  18%|█▊        | 4568/24850 [1:53:15<20:18:07,  3.60s/it, lr=7e-5, step_loss=0.0797] Steps:  18%|█▊        | 4569/24850 [1:53:17<16:39:24,  2.96s/it, lr=7e-5, step_loss=0.0797]Steps:  18%|█▊        | 4569/24850 [1:53:17<16:39:24,  2.96s/it, lr=7e-5, step_loss=0.0351]Steps:  18%|█▊        | 4570/24850 [1:53:18<14:06:38,  2.50s/it, lr=7e-5, step_loss=0.0351]Steps:  18%|█▊        | 4570/24850 [1:53:18<14:06:38,  2.50s/it, lr=7e-5, step_loss=0.00437]Steps:  18%|█▊        | 4571/24850 [1:53:20<12:24:35,  2.20s/it, lr=7e-5, step_loss=0.00437]Steps:  18%|█▊        | 4571/24850 [1:53:20<12:24:35,  2.20s/it, lr=7e-5, step_loss=0.0264] Steps:  18%|█▊        | 4572/24850 [1:53:21<11:07:26,  1.97s/it, lr=7e-5, step_loss=0.0264]Steps:  18%|█▊        | 4572/24850 [1:53:21<11:07:26,  1.97s/it, lr=7e-5, step_loss=0.00404]Steps:  18%|█▊        | 4573/24850 [1:53:23<10:15:04,  1.82s/it, lr=7e-5, step_loss=0.00404]Steps:  18%|█▊        | 4573/24850 [1:53:23<10:15:04,  1.82s/it, lr=7e-5, step_loss=0.0728] Steps:  18%|█▊        | 4574/24850 [1:53:24<9:36:54,  1.71s/it, lr=7e-5, step_loss=0.0728] Steps:  18%|█▊        | 4574/24850 [1:53:24<9:36:54,  1.71s/it, lr=7e-5, step_loss=0.0234]Steps:  18%|█▊        | 4575/24850 [1:53:26<9:11:00,  1.63s/it, lr=7e-5, step_loss=0.0234]Steps:  18%|█▊        | 4575/24850 [1:53:26<9:11:00,  1.63s/it, lr=7e-5, step_loss=0.0457]Steps:  18%|█▊        | 4576/24850 [1:53:27<8:53:53,  1.58s/it, lr=7e-5, step_loss=0.0457]Steps:  18%|█▊        | 4576/24850 [1:53:27<8:53:53,  1.58s/it, lr=7e-5, step_loss=0.0101]Steps:  18%|█▊        | 4577/24850 [1:53:28<8:41:37,  1.54s/it, lr=7e-5, step_loss=0.0101]Steps:  18%|█▊        | 4577/24850 [1:53:28<8:41:37,  1.54s/it, lr=7e-5, step_loss=0.0116]Steps:  18%|█▊        | 4578/24850 [1:53:30<8:32:26,  1.52s/it, lr=7e-5, step_loss=0.0116]Steps:  18%|█▊        | 4578/24850 [1:53:30<8:32:26,  1.52s/it, lr=7e-5, step_loss=0.0183]Steps:  18%|█▊        | 4579/24850 [1:53:31<8:26:54,  1.50s/it, lr=7e-5, step_loss=0.0183]Steps:  18%|█▊        | 4579/24850 [1:53:31<8:26:54,  1.50s/it, lr=7e-5, step_loss=0.000262]Steps:  18%|█▊        | 4580/24850 [1:53:33<8:23:58,  1.49s/it, lr=7e-5, step_loss=0.000262]Steps:  18%|█▊        | 4580/24850 [1:53:33<8:23:58,  1.49s/it, lr=7e-5, step_loss=0.0688]  Steps:  18%|█▊        | 4581/24850 [1:53:34<8:21:02,  1.48s/it, lr=7e-5, step_loss=0.0688]Steps:  18%|█▊        | 4581/24850 [1:53:34<8:21:02,  1.48s/it, lr=7e-5, step_loss=0.00859]Steps:  18%|█▊        | 4582/24850 [1:53:36<8:19:36,  1.48s/it, lr=7e-5, step_loss=0.00859]Steps:  18%|█▊        | 4582/24850 [1:53:36<8:19:36,  1.48s/it, lr=7e-5, step_loss=0.0117] Steps:  18%|█▊        | 4583/24850 [1:53:37<8:16:57,  1.47s/it, lr=7e-5, step_loss=0.0117]Steps:  18%|█▊        | 4583/24850 [1:53:37<8:16:57,  1.47s/it, lr=7e-5, step_loss=0.0315]Steps:  18%|█▊        | 4584/24850 [1:53:39<8:15:15,  1.47s/it, lr=7e-5, step_loss=0.0315]Steps:  18%|█▊        | 4584/24850 [1:53:39<8:15:15,  1.47s/it, lr=7e-5, step_loss=0.0205]Steps:  18%|█▊        | 4585/24850 [1:53:40<8:16:30,  1.47s/it, lr=7e-5, step_loss=0.0205]Steps:  18%|█▊        | 4585/24850 [1:53:40<8:16:30,  1.47s/it, lr=7e-5, step_loss=0.0152]Steps:  18%|█▊        | 4586/24850 [1:53:42<8:17:39,  1.47s/it, lr=7e-5, step_loss=0.0152]Steps:  18%|█▊        | 4586/24850 [1:53:42<8:17:39,  1.47s/it, lr=7e-5, step_loss=0.029] Steps:  18%|█▊        | 4587/24850 [1:53:43<8:15:33,  1.47s/it, lr=7e-5, step_loss=0.029]Steps:  18%|█▊        | 4587/24850 [1:53:43<8:15:33,  1.47s/it, lr=7e-5, step_loss=0.0326]Steps:  18%|█▊        | 4588/24850 [1:53:45<8:14:09,  1.46s/it, lr=7e-5, step_loss=0.0326]Steps:  18%|█▊        | 4588/24850 [1:53:45<8:14:09,  1.46s/it, lr=7e-5, step_loss=0.0104]Steps:  18%|█▊        | 4589/24850 [1:53:46<8:13:13,  1.46s/it, lr=7e-5, step_loss=0.0104]Steps:  18%|█▊        | 4589/24850 [1:53:46<8:13:13,  1.46s/it, lr=7e-5, step_loss=0.0157]Steps:  18%|█▊        | 4590/24850 [1:53:47<8:13:57,  1.46s/it, lr=7e-5, step_loss=0.0157]Steps:  18%|█▊        | 4590/24850 [1:53:47<8:13:57,  1.46s/it, lr=7e-5, step_loss=0.00312](512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512)Steps:  18%|█▊        | 4591/24850 [1:53:50<9:57:56,  1.77s/it, lr=7e-5, step_loss=0.00312]Steps:  18%|█▊        | 4591/24850 [1:53:50<9:57:56,  1.77s/it, lr=7e-5, step_loss=0.00714]Steps:  18%|█▊        | 4592/24850 [1:53:51<9:26:51,  1.68s/it, lr=7e-5, step_loss=0.00714]Steps:  18%|█▊        | 4592/24850 [1:53:51<9:26:51,  1.68s/it, lr=7e-5, step_loss=0.0289] Steps:  18%|█▊        | 4593/24850 [1:53:53<9:05:40,  1.62s/it, lr=7e-5, step_loss=0.0289]Steps:  18%|█▊        | 4593/24850 [1:53:53<9:05:40,  1.62s/it, lr=7e-5, step_loss=0.00403]Steps:  18%|█▊        | 4594/24850 [1:53:54<8:49:28,  1.57s/it, lr=7e-5, step_loss=0.00403]Steps:  18%|█▊        | 4594/24850 [1:53:54<8:49:28,  1.57s/it, lr=7e-5, step_loss=0.0389] Steps:  18%|█▊        | 4595/24850 [1:53:56<8:36:57,  1.53s/it, lr=7e-5, step_loss=0.0389]Steps:  18%|█▊        | 4595/24850 [1:53:56<8:36:57,  1.53s/it, lr=7e-5, step_loss=0.075] Steps:  18%|█▊        | 4596/24850 [1:53:57<8:29:01,  1.51s/it, lr=7e-5, step_loss=0.075]Steps:  18%|█▊        | 4596/24850 [1:53:57<8:29:01,  1.51s/it, lr=7e-5, step_loss=0.0261]Steps:  18%|█▊        | 4597/24850 [1:53:59<8:23:37,  1.49s/it, lr=7e-5, step_loss=0.0261]Steps:  18%|█▊        | 4597/24850 [1:53:59<8:23:37,  1.49s/it, lr=7e-5, step_loss=0.0255]Steps:  19%|█▊        | 4598/24850 [1:54:00<8:20:05,  1.48s/it, lr=7e-5, step_loss=0.0255]Steps:  19%|█▊        | 4598/24850 [1:54:00<8:20:05,  1.48s/it, lr=7e-5, step_loss=0.0141]Steps:  19%|█▊        | 4599/24850 [1:54:02<8:17:16,  1.47s/it, lr=7e-5, step_loss=0.0141]Steps:  19%|█▊        | 4599/24850 [1:54:02<8:17:16,  1.47s/it, lr=7e-5, step_loss=0.11]  Steps:  19%|█▊        | 4600/24850 [1:54:03<8:16:43,  1.47s/it, lr=7e-5, step_loss=0.11]Steps:  19%|█▊        | 4600/24850 [1:54:03<8:16:43,  1.47s/it, lr=7e-5, step_loss=0.0023]Steps:  19%|█▊        | 4601/24850 [1:54:05<8:15:39,  1.47s/it, lr=7e-5, step_loss=0.0023]Steps:  19%|█▊        | 4601/24850 [1:54:05<8:15:39,  1.47s/it, lr=7e-5, step_loss=0.0275]Steps:  19%|█▊        | 4602/24850 [1:54:06<8:14:55,  1.47s/it, lr=7e-5, step_loss=0.0275]Steps:  19%|█▊        | 4602/24850 [1:54:06<8:14:55,  1.47s/it, lr=7e-5, step_loss=0.0403]Steps:  19%|█▊        | 4603/24850 [1:54:07<8:14:25,  1.47s/it, lr=7e-5, step_loss=0.0403]Steps:  19%|█▊        | 4603/24850 [1:54:07<8:14:25,  1.47s/it, lr=7e-5, step_loss=0.00765]Steps:  19%|█▊        | 4604/24850 [1:54:09<8:13:30,  1.46s/it, lr=7e-5, step_loss=0.00765]Steps:  19%|█▊        | 4604/24850 [1:54:09<8:13:30,  1.46s/it, lr=7e-5, step_loss=0.0218] Steps:  19%|█▊        | 4605/24850 [1:54:10<8:12:45,  1.46s/it, lr=7e-5, step_loss=0.0218]Steps:  19%|█▊        | 4605/24850 [1:54:10<8:12:45,  1.46s/it, lr=7e-5, step_loss=0.00699]Steps:  19%|█▊        | 4606/24850 [1:54:12<8:12:03,  1.46s/it, lr=7e-5, step_loss=0.00699]Steps:  19%|█▊        | 4606/24850 [1:54:12<8:12:03,  1.46s/it, lr=7e-5, step_loss=0.0167] Steps:  19%|█▊        | 4607/24850 [1:54:13<8:12:23,  1.46s/it, lr=7e-5, step_loss=0.0167]Steps:  19%|█▊        | 4607/24850 [1:54:13<8:12:23,  1.46s/it, lr=7e-5, step_loss=0.0405]Steps:  19%|█▊        | 4608/24850 [1:54:15<8:12:05,  1.46s/it, lr=7e-5, step_loss=0.0405]Steps:  19%|█▊        | 4608/24850 [1:54:15<8:12:05,  1.46s/it, lr=7e-5, step_loss=0.0728]Steps:  19%|█▊        | 4609/24850 [1:54:16<8:12:09,  1.46s/it, lr=7e-5, step_loss=0.0728]Steps:  19%|█▊        | 4609/24850 [1:54:16<8:12:09,  1.46s/it, lr=7e-5, step_loss=0.017] Steps:  19%|█▊        | 4610/24850 [1:54:18<8:12:12,  1.46s/it, lr=7e-5, step_loss=0.017]Steps:  19%|█▊        | 4610/24850 [1:54:18<8:12:12,  1.46s/it, lr=7e-5, step_loss=0.0479]Steps:  19%|█▊        | 4611/24850 [1:54:19<8:11:37,  1.46s/it, lr=7e-5, step_loss=0.0479]Steps:  19%|█▊        | 4611/24850 [1:54:19<8:11:37,  1.46s/it, lr=7e-5, step_loss=0.0354]Steps:  19%|█▊        | 4612/24850 [1:54:21<8:11:03,  1.46s/it, lr=7e-5, step_loss=0.0354]Steps:  19%|█▊        | 4612/24850 [1:54:21<8:11:03,  1.46s/it, lr=7e-5, step_loss=0.0182]Steps:  19%|█▊        | 4613/24850 [1:54:22<8:10:43,  1.45s/it, lr=7e-5, step_loss=0.0182]Steps:  19%|█▊        | 4613/24850 [1:54:22<8:10:43,  1.45s/it, lr=7e-5, step_loss=0.00389]Steps:  19%|█▊        | 4614/24850 [1:54:24<8:10:46,  1.46s/it, lr=7e-5, step_loss=0.00389]Steps:  19%|█▊        | 4614/24850 [1:54:24<8:10:46,  1.46s/it, lr=7e-5, step_loss=0.00973]Steps:  19%|█▊        | 4615/24850 [1:54:25<8:10:06,  1.45s/it, lr=7e-5, step_loss=0.00973]Steps:  19%|█▊        | 4615/24850 [1:54:25<8:10:06,  1.45s/it, lr=7e-5, step_loss=0.0858] Steps:  19%|█▊        | 4616/24850 [1:54:26<8:10:22,  1.45s/it, lr=7e-5, step_loss=0.0858]Steps:  19%|█▊        | 4616/24850 [1:54:26<8:10:22,  1.45s/it, lr=7e-5, step_loss=0.00866]Steps:  19%|█▊        | 4617/24850 [1:54:28<8:11:26,  1.46s/it, lr=7e-5, step_loss=0.00866]Steps:  19%|█▊        | 4617/24850 [1:54:28<8:11:26,  1.46s/it, lr=7e-5, step_loss=0.0599]  torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:  19%|█▊        | 4618/24850 [1:54:29<8:11:53,  1.46s/it, lr=7e-5, step_loss=0.0599]Steps:  19%|█▊        | 4618/24850 [1:54:29<8:11:53,  1.46s/it, lr=7e-5, step_loss=0.0141]Steps:  19%|█▊        | 4619/24850 [1:54:31<8:11:51,  1.46s/it, lr=7e-5, step_loss=0.0141]Steps:  19%|█▊        | 4619/24850 [1:54:31<8:11:51,  1.46s/it, lr=7e-5, step_loss=0.00629]Steps:  19%|█▊        | 4620/24850 [1:54:32<8:11:59,  1.46s/it, lr=7e-5, step_loss=0.00629]Steps:  19%|█▊        | 4620/24850 [1:54:32<8:11:59,  1.46s/it, lr=7e-5, step_loss=0.13]   Steps:  19%|█▊        | 4621/24850 [1:54:34<8:12:16,  1.46s/it, lr=7e-5, step_loss=0.13]Steps:  19%|█▊        | 4621/24850 [1:54:34<8:12:16,  1.46s/it, lr=7e-5, step_loss=0.006]Steps:  19%|█▊        | 4622/24850 [1:54:35<8:13:05,  1.46s/it, lr=7e-5, step_loss=0.006]Steps:  19%|█▊        | 4622/24850 [1:54:35<8:13:05,  1.46s/it, lr=7e-5, step_loss=0.048]Steps:  19%|█▊        | 4623/24850 [1:54:37<8:11:55,  1.46s/it, lr=7e-5, step_loss=0.048]Steps:  19%|█▊        | 4623/24850 [1:54:37<8:11:55,  1.46s/it, lr=7e-5, step_loss=0.0805]Steps:  19%|█▊        | 4624/24850 [1:54:38<8:35:37,  1.53s/it, lr=7e-5, step_loss=0.0805]Steps:  19%|█▊        | 4624/24850 [1:54:38<8:35:37,  1.53s/it, lr=7e-5, step_loss=0.052] Steps:  19%|█▊        | 4625/24850 [1:54:40<8:27:33,  1.51s/it, lr=7e-5, step_loss=0.052]Steps:  19%|█▊        | 4625/24850 [1:54:40<8:27:33,  1.51s/it, lr=7e-5, step_loss=0.00801]Steps:  19%|█▊        | 4626/24850 [1:54:41<8:25:18,  1.50s/it, lr=7e-5, step_loss=0.00801]Steps:  19%|█▊        | 4626/24850 [1:54:41<8:25:18,  1.50s/it, lr=7e-5, step_loss=0.0181] Steps:  19%|█▊        | 4627/24850 [1:54:43<8:34:49,  1.53s/it, lr=7e-5, step_loss=0.0181]Steps:  19%|█▊        | 4627/24850 [1:54:43<8:34:49,  1.53s/it, lr=7e-5, step_loss=0.0588]Steps:  19%|█▊        | 4628/24850 [1:54:44<8:28:46,  1.51s/it, lr=7e-5, step_loss=0.0588]Steps:  19%|█▊        | 4628/24850 [1:54:44<8:28:46,  1.51s/it, lr=7e-5, step_loss=0.00714]Steps:  19%|█▊        | 4629/24850 [1:54:46<8:23:09,  1.49s/it, lr=7e-5, step_loss=0.00714]Steps:  19%|█▊        | 4629/24850 [1:54:46<8:23:09,  1.49s/it, lr=7e-5, step_loss=0.000605]Steps:  19%|█▊        | 4630/24850 [1:54:47<8:23:47,  1.49s/it, lr=7e-5, step_loss=0.000605]Steps:  19%|█▊        | 4630/24850 [1:54:47<8:23:47,  1.49s/it, lr=7e-5, step_loss=0.0121]  Steps:  19%|█▊        | 4631/24850 [1:54:49<8:20:07,  1.48s/it, lr=7e-5, step_loss=0.0121]Steps:  19%|█▊        | 4631/24850 [1:54:49<8:20:07,  1.48s/it, lr=7e-5, step_loss=0.00577]Steps:  19%|█▊        | 4632/24850 [1:54:50<8:19:14,  1.48s/it, lr=7e-5, step_loss=0.00577]Steps:  19%|█▊        | 4632/24850 [1:54:50<8:19:14,  1.48s/it, lr=7e-5, step_loss=0.0227] Steps:  19%|█▊        | 4633/24850 [1:54:52<8:18:20,  1.48s/it, lr=7e-5, step_loss=0.0227]Steps:  19%|█▊        | 4633/24850 [1:54:52<8:18:20,  1.48s/it, lr=7e-5, step_loss=0.00527]Steps:  19%|█▊        | 4634/24850 [1:54:53<8:17:29,  1.48s/it, lr=7e-5, step_loss=0.00527]Steps:  19%|█▊        | 4634/24850 [1:54:53<8:17:29,  1.48s/it, lr=7e-5, step_loss=0.0252] Steps:  19%|█▊        | 4635/24850 [1:54:55<8:18:10,  1.48s/it, lr=7e-5, step_loss=0.0252]Steps:  19%|█▊        | 4635/24850 [1:54:55<8:18:10,  1.48s/it, lr=7e-5, step_loss=0.0207]Steps:  19%|█▊        | 4636/24850 [1:54:56<8:17:32,  1.48s/it, lr=7e-5, step_loss=0.0207]Steps:  19%|█▊        | 4636/24850 [1:54:56<8:17:32,  1.48s/it, lr=7e-5, step_loss=0.0558]Steps:  19%|█▊        | 4637/24850 [1:54:58<8:16:39,  1.47s/it, lr=7e-5, step_loss=0.0558]Steps:  19%|█▊        | 4637/24850 [1:54:58<8:16:39,  1.47s/it, lr=7e-5, step_loss=0.0145]Steps:  19%|█▊        | 4638/24850 [1:54:59<8:14:45,  1.47s/it, lr=7e-5, step_loss=0.0145]Steps:  19%|█▊        | 4638/24850 [1:54:59<8:14:45,  1.47s/it, lr=7e-5, step_loss=0.00289]Steps:  19%|█▊        | 4639/24850 [1:55:01<8:14:27,  1.47s/it, lr=7e-5, step_loss=0.00289]Steps:  19%|█▊        | 4639/24850 [1:55:01<8:14:27,  1.47s/it, lr=7e-5, step_loss=0.0159] Steps:  19%|█▊        | 4640/24850 [1:55:02<8:11:49,  1.46s/it, lr=7e-5, step_loss=0.0159]Steps:  19%|█▊        | 4640/24850 [1:55:02<8:11:49,  1.46s/it, lr=7e-5, step_loss=0.00229]Steps:  19%|█▊        | 4641/24850 [1:55:04<9:52:24,  1.76s/it, lr=7e-5, step_loss=0.00229]Steps:  19%|█▊        | 4641/24850 [1:55:04<9:52:24,  1.76s/it, lr=7e-5, step_loss=0.0047] Steps:  19%|█▊        | 4642/24850 [1:55:06<9:23:31,  1.67s/it, lr=7e-5, step_loss=0.0047]Steps:  19%|█▊        | 4642/24850 [1:55:06<9:23:31,  1.67s/it, lr=7e-5, step_loss=0.0278]Steps:  19%|█▊        | 4643/24850 [1:55:07<9:02:31,  1.61s/it, lr=7e-5, step_loss=0.0278]Steps:  19%|█▊        | 4643/24850 [1:55:07<9:02:31,  1.61s/it, lr=7e-5, step_loss=0.0645]Steps:  19%|█▊        | 4644/24850 [1:55:09<8:47:48,  1.57s/it, lr=7e-5, step_loss=0.0645]Steps:  19%|█▊        | 4644/24850 [1:55:09<8:47:48,  1.57s/it, lr=7e-5, step_loss=0.0786]torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  Steps:  19%|█▊        | 4645/24850 [1:55:10<8:36:39,  1.53s/it, lr=7e-5, step_loss=0.0786]Steps:  19%|█▊        | 4645/24850 [1:55:10<8:36:39,  1.53s/it, lr=7e-5, step_loss=0.0177]Steps:  19%|█▊        | 4646/24850 [1:55:12<8:27:40,  1.51s/it, lr=7e-5, step_loss=0.0177]Steps:  19%|█▊        | 4646/24850 [1:55:12<8:27:40,  1.51s/it, lr=7e-5, step_loss=0.0104]Steps:  19%|█▊        | 4647/24850 [1:55:13<8:22:34,  1.49s/it, lr=7e-5, step_loss=0.0104]Steps:  19%|█▊        | 4647/24850 [1:55:13<8:22:34,  1.49s/it, lr=7e-5, step_loss=0.0545]Steps:  19%|█▊        | 4648/24850 [1:55:15<8:18:48,  1.48s/it, lr=7e-5, step_loss=0.0545]Steps:  19%|█▊        | 4648/24850 [1:55:15<8:18:48,  1.48s/it, lr=7e-5, step_loss=0.0496]Steps:  19%|█▊        | 4649/24850 [1:55:16<8:16:49,  1.48s/it, lr=7e-5, step_loss=0.0496]Steps:  19%|█▊        | 4649/24850 [1:55:16<8:16:49,  1.48s/it, lr=7e-5, step_loss=0.0423]Steps:  19%|█▊        | 4650/24850 [1:55:18<8:19:00,  1.48s/it, lr=7e-5, step_loss=0.0423]Steps:  19%|█▊        | 4650/24850 [1:55:18<8:19:00,  1.48s/it, lr=7e-5, step_loss=0.0525]Steps:  19%|█▊        | 4651/24850 [1:55:19<8:18:10,  1.48s/it, lr=7e-5, step_loss=0.0525]Steps:  19%|█▊        | 4651/24850 [1:55:19<8:18:10,  1.48s/it, lr=7e-5, step_loss=0.0556]Steps:  19%|█▊        | 4652/24850 [1:55:21<8:16:24,  1.47s/it, lr=7e-5, step_loss=0.0556]Steps:  19%|█▊        | 4652/24850 [1:55:21<8:16:24,  1.47s/it, lr=7e-5, step_loss=0.0135]Steps:  19%|█▊        | 4653/24850 [1:55:22<8:22:39,  1.49s/it, lr=7e-5, step_loss=0.0135]Steps:  19%|█▊        | 4653/24850 [1:55:22<8:22:39,  1.49s/it, lr=7e-5, step_loss=0.0518]Steps:  19%|█▊        | 4654/24850 [1:55:24<8:19:24,  1.48s/it, lr=7e-5, step_loss=0.0518]Steps:  19%|█▊        | 4654/24850 [1:55:24<8:19:24,  1.48s/it, lr=7e-5, step_loss=0.00894]Steps:  19%|█▊        | 4655/24850 [1:55:25<8:17:03,  1.48s/it, lr=7e-5, step_loss=0.00894]Steps:  19%|█▊        | 4655/24850 [1:55:25<8:17:03,  1.48s/it, lr=7e-5, step_loss=0.0201] Steps:  19%|█▊        | 4656/24850 [1:55:26<8:14:07,  1.47s/it, lr=7e-5, step_loss=0.0201]Steps:  19%|█▊        | 4656/24850 [1:55:26<8:14:07,  1.47s/it, lr=7e-5, step_loss=0.0242]Steps:  19%|█▊        | 4657/24850 [1:55:28<8:15:40,  1.47s/it, lr=7e-5, step_loss=0.0242]Steps:  19%|█▊        | 4657/24850 [1:55:28<8:15:40,  1.47s/it, lr=7e-5, step_loss=0.0176]Steps:  19%|█▊        | 4658/24850 [1:55:29<8:18:17,  1.48s/it, lr=7e-5, step_loss=0.0176]Steps:  19%|█▊        | 4658/24850 [1:55:29<8:18:17,  1.48s/it, lr=7e-5, step_loss=0.0129]Steps:  19%|█▊        | 4659/24850 [1:55:31<8:17:07,  1.48s/it, lr=7e-5, step_loss=0.0129]Steps:  19%|█▊        | 4659/24850 [1:55:31<8:17:07,  1.48s/it, lr=7e-5, step_loss=0.00457]Steps:  19%|█▉        | 4660/24850 [1:55:32<8:16:47,  1.48s/it, lr=7e-5, step_loss=0.00457]Steps:  19%|█▉        | 4660/24850 [1:55:32<8:16:47,  1.48s/it, lr=7e-5, step_loss=0.00332]Steps:  19%|█▉        | 4661/24850 [1:55:34<8:16:02,  1.47s/it, lr=7e-5, step_loss=0.00332]Steps:  19%|█▉        | 4661/24850 [1:55:34<8:16:02,  1.47s/it, lr=7e-5, step_loss=0.0561] Steps:  19%|█▉        | 4662/24850 [1:55:35<8:15:12,  1.47s/it, lr=7e-5, step_loss=0.0561]Steps:  19%|█▉        | 4662/24850 [1:55:35<8:15:12,  1.47s/it, lr=7e-5, step_loss=0.0174]Steps:  19%|█▉        | 4663/24850 [1:55:37<8:15:36,  1.47s/it, lr=7e-5, step_loss=0.0174]Steps:  19%|█▉        | 4663/24850 [1:55:37<8:15:36,  1.47s/it, lr=7e-5, step_loss=0.0143]Steps:  19%|█▉        | 4664/24850 [1:55:38<8:14:24,  1.47s/it, lr=7e-5, step_loss=0.0143]Steps:  19%|█▉        | 4664/24850 [1:55:38<8:14:24,  1.47s/it, lr=7e-5, step_loss=0.0193]Steps:  19%|█▉        | 4665/24850 [1:55:40<8:12:38,  1.46s/it, lr=7e-5, step_loss=0.0193]Steps:  19%|█▉        | 4665/24850 [1:55:40<8:12:38,  1.46s/it, lr=7e-5, step_loss=0.00626]Steps:  19%|█▉        | 4666/24850 [1:55:41<8:12:08,  1.46s/it, lr=7e-5, step_loss=0.00626]Steps:  19%|█▉        | 4666/24850 [1:55:41<8:12:08,  1.46s/it, lr=7e-5, step_loss=0.0773] Steps:  19%|█▉        | 4667/24850 [1:55:43<8:10:50,  1.46s/it, lr=7e-5, step_loss=0.0773]Steps:  19%|█▉        | 4667/24850 [1:55:43<8:10:50,  1.46s/it, lr=7e-5, step_loss=0.000236]Steps:  19%|█▉        | 4668/24850 [1:55:44<8:11:07,  1.46s/it, lr=7e-5, step_loss=0.000236]Steps:  19%|█▉        | 4668/24850 [1:55:44<8:11:07,  1.46s/it, lr=7e-5, step_loss=0.0146]  Steps:  19%|█▉        | 4669/24850 [1:55:46<8:13:22,  1.47s/it, lr=7e-5, step_loss=0.0146]Steps:  19%|█▉        | 4669/24850 [1:55:46<8:13:22,  1.47s/it, lr=7e-5, step_loss=0.0255]Steps:  19%|█▉        | 4670/24850 [1:55:47<8:13:08,  1.47s/it, lr=7e-5, step_loss=0.0255]Steps:  19%|█▉        | 4670/24850 [1:55:47<8:13:08,  1.47s/it, lr=7e-5, step_loss=0.00903]Steps:  19%|█▉        | 4671/24850 [1:55:48<8:13:29,  1.47s/it, lr=7e-5, step_loss=0.00903]Steps:  19%|█▉        | 4671/24850 [1:55:48<8:13:29,  1.47s/it, lr=7e-5, step_loss=0.0529] Steps:  19%|█▉        | 4672/24850 [1:55:50<8:13:17,  1.47s/it, lr=7e-5, step_loss=0.0529]Steps:  19%|█▉        | 4672/24850 [1:55:50<8:13:17,  1.47s/it, lr=7e-5, step_loss=0.00944]mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:  19%|█▉        | 4673/24850 [1:55:51<8:13:35,  1.47s/it, lr=7e-5, step_loss=0.00944]Steps:  19%|█▉        | 4673/24850 [1:55:51<8:13:35,  1.47s/it, lr=7e-5, step_loss=0.0216] Steps:  19%|█▉        | 4674/24850 [1:55:53<8:13:33,  1.47s/it, lr=7e-5, step_loss=0.0216]Steps:  19%|█▉        | 4674/24850 [1:55:53<8:13:33,  1.47s/it, lr=7e-5, step_loss=0.0122]Steps:  19%|█▉        | 4675/24850 [1:55:54<8:13:04,  1.47s/it, lr=7e-5, step_loss=0.0122]Steps:  19%|█▉        | 4675/24850 [1:55:54<8:13:04,  1.47s/it, lr=7e-5, step_loss=0.0612]Steps:  19%|█▉        | 4676/24850 [1:55:56<8:14:03,  1.47s/it, lr=7e-5, step_loss=0.0612]Steps:  19%|█▉        | 4676/24850 [1:55:56<8:14:03,  1.47s/it, lr=7e-5, step_loss=0.0135]Steps:  19%|█▉        | 4677/24850 [1:55:57<8:14:36,  1.47s/it, lr=7e-5, step_loss=0.0135]Steps:  19%|█▉        | 4677/24850 [1:55:57<8:14:36,  1.47s/it, lr=7e-5, step_loss=0.046] Steps:  19%|█▉        | 4678/24850 [1:55:59<8:14:28,  1.47s/it, lr=7e-5, step_loss=0.046]Steps:  19%|█▉        | 4678/24850 [1:55:59<8:14:28,  1.47s/it, lr=7e-5, step_loss=0.0215]Steps:  19%|█▉        | 4679/24850 [1:56:00<8:12:58,  1.47s/it, lr=7e-5, step_loss=0.0215]Steps:  19%|█▉        | 4679/24850 [1:56:00<8:12:58,  1.47s/it, lr=7e-5, step_loss=0.012] Steps:  19%|█▉        | 4680/24850 [1:56:02<8:11:21,  1.46s/it, lr=7e-5, step_loss=0.012]Steps:  19%|█▉        | 4680/24850 [1:56:02<8:11:21,  1.46s/it, lr=7e-5, step_loss=0.000902]Steps:  19%|█▉        | 4681/24850 [1:56:03<8:11:56,  1.46s/it, lr=7e-5, step_loss=0.000902]Steps:  19%|█▉        | 4681/24850 [1:56:03<8:11:56,  1.46s/it, lr=7e-5, step_loss=0.0282]  Steps:  19%|█▉        | 4682/24850 [1:56:05<8:11:53,  1.46s/it, lr=7e-5, step_loss=0.0282]Steps:  19%|█▉        | 4682/24850 [1:56:05<8:11:53,  1.46s/it, lr=7e-5, step_loss=0.0387]Steps:  19%|█▉        | 4683/24850 [1:56:06<8:12:03,  1.46s/it, lr=7e-5, step_loss=0.0387]Steps:  19%|█▉        | 4683/24850 [1:56:06<8:12:03,  1.46s/it, lr=7e-5, step_loss=0.00509]Steps:  19%|█▉        | 4684/24850 [1:56:08<8:11:48,  1.46s/it, lr=7e-5, step_loss=0.00509]Steps:  19%|█▉        | 4684/24850 [1:56:08<8:11:48,  1.46s/it, lr=7e-5, step_loss=0.0109] Steps:  19%|█▉        | 4685/24850 [1:56:09<8:12:34,  1.47s/it, lr=7e-5, step_loss=0.0109]Steps:  19%|█▉        | 4685/24850 [1:56:09<8:12:34,  1.47s/it, lr=7e-5, step_loss=0.0394]Steps:  19%|█▉        | 4686/24850 [1:56:10<8:11:46,  1.46s/it, lr=7e-5, step_loss=0.0394]Steps:  19%|█▉        | 4686/24850 [1:56:10<8:11:46,  1.46s/it, lr=7e-5, step_loss=0.0636]Steps:  19%|█▉        | 4687/24850 [1:56:12<8:13:02,  1.47s/it, lr=7e-5, step_loss=0.0636]Steps:  19%|█▉        | 4687/24850 [1:56:12<8:13:02,  1.47s/it, lr=7e-5, step_loss=0.0832]Steps:  19%|█▉        | 4688/24850 [1:56:13<8:14:10,  1.47s/it, lr=7e-5, step_loss=0.0832]Steps:  19%|█▉        | 4688/24850 [1:56:13<8:14:10,  1.47s/it, lr=7e-5, step_loss=0.00684]Steps:  19%|█▉        | 4689/24850 [1:56:15<8:13:25,  1.47s/it, lr=7e-5, step_loss=0.00684]Steps:  19%|█▉        | 4689/24850 [1:56:15<8:13:25,  1.47s/it, lr=7e-5, step_loss=0.0197] Steps:  19%|█▉        | 4690/24850 [1:56:16<8:14:26,  1.47s/it, lr=7e-5, step_loss=0.0197]Steps:  19%|█▉        | 4690/24850 [1:56:16<8:14:26,  1.47s/it, lr=7e-5, step_loss=0.0517]Steps:  19%|█▉        | 4691/24850 [1:56:19<9:49:31,  1.75s/it, lr=7e-5, step_loss=0.0517]Steps:  19%|█▉        | 4691/24850 [1:56:19<9:49:31,  1.75s/it, lr=7e-5, step_loss=0.00511]Steps:  19%|█▉        | 4692/24850 [1:56:20<9:19:34,  1.67s/it, lr=7e-5, step_loss=0.00511]Steps:  19%|█▉        | 4692/24850 [1:56:20<9:19:34,  1.67s/it, lr=7e-5, step_loss=0.000684]Steps:  19%|█▉        | 4693/24850 [1:56:22<8:58:56,  1.60s/it, lr=7e-5, step_loss=0.000684]Steps:  19%|█▉        | 4693/24850 [1:56:22<8:58:56,  1.60s/it, lr=7e-5, step_loss=0.0127]  Steps:  19%|█▉        | 4694/24850 [1:56:23<9:00:19,  1.61s/it, lr=7e-5, step_loss=0.0127]Steps:  19%|█▉        | 4694/24850 [1:56:23<9:00:19,  1.61s/it, lr=7e-5, step_loss=0.00454]Steps:  19%|█▉        | 4695/24850 [1:56:25<8:46:11,  1.57s/it, lr=7e-5, step_loss=0.00454]Steps:  19%|█▉        | 4695/24850 [1:56:25<8:46:11,  1.57s/it, lr=7e-5, step_loss=0.057]  Steps:  19%|█▉        | 4696/24850 [1:56:26<8:36:48,  1.54s/it, lr=7e-5, step_loss=0.057]Steps:  19%|█▉        | 4696/24850 [1:56:26<8:36:48,  1.54s/it, lr=7e-5, step_loss=0.0218]Steps:  19%|█▉        | 4697/24850 [1:56:28<8:28:05,  1.51s/it, lr=7e-5, step_loss=0.0218]Steps:  19%|█▉        | 4697/24850 [1:56:28<8:28:05,  1.51s/it, lr=7e-5, step_loss=0.0222]Steps:  19%|█▉        | 4698/24850 [1:56:29<8:22:45,  1.50s/it, lr=7e-5, step_loss=0.0222]Steps:  19%|█▉        | 4698/24850 [1:56:29<8:22:45,  1.50s/it, lr=7e-5, step_loss=0.0532]Steps:  19%|█▉        | 4699/24850 [1:56:31<8:18:28,  1.48s/it, lr=7e-5, step_loss=0.0532]Steps:  19%|█▉        | 4699/24850 [1:56:31<8:18:28,  1.48s/it, lr=7e-5, step_loss=0.0433]torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) Steps:  19%|█▉        | 4700/24850 [1:56:32<8:16:09,  1.48s/it, lr=7e-5, step_loss=0.0433]Steps:  19%|█▉        | 4700/24850 [1:56:32<8:16:09,  1.48s/it, lr=7e-5, step_loss=0.049] Steps:  19%|█▉        | 4701/24850 [1:56:34<8:14:23,  1.47s/it, lr=7e-5, step_loss=0.049]Steps:  19%|█▉        | 4701/24850 [1:56:34<8:14:23,  1.47s/it, lr=7e-5, step_loss=0.0233]Steps:  19%|█▉        | 4702/24850 [1:56:35<8:14:31,  1.47s/it, lr=7e-5, step_loss=0.0233]Steps:  19%|█▉        | 4702/24850 [1:56:35<8:14:31,  1.47s/it, lr=7e-5, step_loss=0.0299]Steps:  19%|█▉        | 4703/24850 [1:56:37<8:17:29,  1.48s/it, lr=7e-5, step_loss=0.0299]Steps:  19%|█▉        | 4703/24850 [1:56:37<8:17:29,  1.48s/it, lr=7e-5, step_loss=0.0148]Steps:  19%|█▉        | 4704/24850 [1:56:38<8:20:12,  1.49s/it, lr=7e-5, step_loss=0.0148]Steps:  19%|█▉        | 4704/24850 [1:56:38<8:20:12,  1.49s/it, lr=7e-5, step_loss=0.0515]Steps:  19%|█▉        | 4705/24850 [1:56:39<8:17:13,  1.48s/it, lr=7e-5, step_loss=0.0515]Steps:  19%|█▉        | 4705/24850 [1:56:39<8:17:13,  1.48s/it, lr=7e-5, step_loss=0.0394]Steps:  19%|█▉        | 4706/24850 [1:56:41<8:19:06,  1.49s/it, lr=7e-5, step_loss=0.0394]Steps:  19%|█▉        | 4706/24850 [1:56:41<8:19:06,  1.49s/it, lr=7e-5, step_loss=0.0424]Steps:  19%|█▉        | 4707/24850 [1:56:42<8:16:09,  1.48s/it, lr=7e-5, step_loss=0.0424]Steps:  19%|█▉        | 4707/24850 [1:56:42<8:16:09,  1.48s/it, lr=7e-5, step_loss=0.0199]Steps:  19%|█▉        | 4708/24850 [1:56:44<8:18:10,  1.48s/it, lr=7e-5, step_loss=0.0199]Steps:  19%|█▉        | 4708/24850 [1:56:44<8:18:10,  1.48s/it, lr=7e-5, step_loss=0.0943]Steps:  19%|█▉        | 4709/24850 [1:56:45<8:17:56,  1.48s/it, lr=7e-5, step_loss=0.0943]Steps:  19%|█▉        | 4709/24850 [1:56:45<8:17:56,  1.48s/it, lr=7e-5, step_loss=0.0286]Steps:  19%|█▉        | 4710/24850 [1:56:47<8:20:39,  1.49s/it, lr=7e-5, step_loss=0.0286]Steps:  19%|█▉        | 4710/24850 [1:56:47<8:20:39,  1.49s/it, lr=7e-5, step_loss=0.00526]Steps:  19%|█▉        | 4711/24850 [1:56:48<8:18:58,  1.49s/it, lr=7e-5, step_loss=0.00526]Steps:  19%|█▉        | 4711/24850 [1:56:48<8:18:58,  1.49s/it, lr=7e-5, step_loss=0.0452] Steps:  19%|█▉        | 4712/24850 [1:56:50<8:17:42,  1.48s/it, lr=7e-5, step_loss=0.0452]Steps:  19%|█▉        | 4712/24850 [1:56:50<8:17:42,  1.48s/it, lr=7e-5, step_loss=0.0429]Steps:  19%|█▉        | 4713/24850 [1:56:51<8:16:06,  1.48s/it, lr=7e-5, step_loss=0.0429]Steps:  19%|█▉        | 4713/24850 [1:56:51<8:16:06,  1.48s/it, lr=7e-5, step_loss=0.0118]Steps:  19%|█▉        | 4714/24850 [1:56:53<8:14:26,  1.47s/it, lr=7e-5, step_loss=0.0118]Steps:  19%|█▉        | 4714/24850 [1:56:53<8:14:26,  1.47s/it, lr=7e-5, step_loss=0.0625]Steps:  19%|█▉        | 4715/24850 [1:56:54<8:13:25,  1.47s/it, lr=7e-5, step_loss=0.0625]Steps:  19%|█▉        | 4715/24850 [1:56:54<8:13:25,  1.47s/it, lr=7e-5, step_loss=0.0109]Steps:  19%|█▉        | 4716/24850 [1:56:56<8:13:44,  1.47s/it, lr=7e-5, step_loss=0.0109]Steps:  19%|█▉        | 4716/24850 [1:56:56<8:13:44,  1.47s/it, lr=7e-5, step_loss=0.0229]Steps:  19%|█▉        | 4717/24850 [1:56:57<8:13:58,  1.47s/it, lr=7e-5, step_loss=0.0229]Steps:  19%|█▉        | 4717/24850 [1:56:57<8:13:58,  1.47s/it, lr=7e-5, step_loss=0.0439]Steps:  19%|█▉        | 4718/24850 [1:56:59<8:17:12,  1.48s/it, lr=7e-5, step_loss=0.0439]Steps:  19%|█▉        | 4718/24850 [1:56:59<8:17:12,  1.48s/it, lr=7e-5, step_loss=0.0476]Steps:  19%|█▉        | 4719/24850 [1:57:00<8:16:31,  1.48s/it, lr=7e-5, step_loss=0.0476]Steps:  19%|█▉        | 4719/24850 [1:57:00<8:16:31,  1.48s/it, lr=7e-5, step_loss=0.00476]Steps:  19%|█▉        | 4720/24850 [1:57:02<8:16:15,  1.48s/it, lr=7e-5, step_loss=0.00476]Steps:  19%|█▉        | 4720/24850 [1:57:02<8:16:15,  1.48s/it, lr=7e-5, step_loss=0.198]  Steps:  19%|█▉        | 4721/24850 [1:57:03<8:15:05,  1.48s/it, lr=7e-5, step_loss=0.198]Steps:  19%|█▉        | 4721/24850 [1:57:03<8:15:05,  1.48s/it, lr=7e-5, step_loss=0.0064]Steps:  19%|█▉        | 4722/24850 [1:57:05<8:15:17,  1.48s/it, lr=7e-5, step_loss=0.0064]Steps:  19%|█▉        | 4722/24850 [1:57:05<8:15:17,  1.48s/it, lr=7e-5, step_loss=0.0662]Steps:  19%|█▉        | 4723/24850 [1:57:06<8:13:47,  1.47s/it, lr=7e-5, step_loss=0.0662]Steps:  19%|█▉        | 4723/24850 [1:57:06<8:13:47,  1.47s/it, lr=7e-5, step_loss=0.0328]Steps:  19%|█▉        | 4724/24850 [1:57:08<8:12:29,  1.47s/it, lr=7e-5, step_loss=0.0328]Steps:  19%|█▉        | 4724/24850 [1:57:08<8:12:29,  1.47s/it, lr=7e-5, step_loss=0.0353]Steps:  19%|█▉        | 4725/24850 [1:57:09<8:11:38,  1.47s/it, lr=7e-5, step_loss=0.0353]Steps:  19%|█▉        | 4725/24850 [1:57:09<8:11:38,  1.47s/it, lr=7e-5, step_loss=0.0374]Steps:  19%|█▉        | 4726/24850 [1:57:10<8:11:54,  1.47s/it, lr=7e-5, step_loss=0.0374]Steps:  19%|█▉        | 4726/24850 [1:57:10<8:11:54,  1.47s/it, lr=7e-5, step_loss=0.052] torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:  19%|█▉        | 4727/24850 [1:57:12<8:12:32,  1.47s/it, lr=7e-5, step_loss=0.052]Steps:  19%|█▉        | 4727/24850 [1:57:12<8:12:32,  1.47s/it, lr=7e-5, step_loss=0.00381]Steps:  19%|█▉        | 4728/24850 [1:57:13<8:10:33,  1.46s/it, lr=7e-5, step_loss=0.00381]Steps:  19%|█▉        | 4728/24850 [1:57:13<8:10:33,  1.46s/it, lr=7e-5, step_loss=0.00255]Steps:  19%|█▉        | 4729/24850 [1:57:15<8:10:10,  1.46s/it, lr=7e-5, step_loss=0.00255]Steps:  19%|█▉        | 4729/24850 [1:57:15<8:10:10,  1.46s/it, lr=7e-5, step_loss=0.0104] Steps:  19%|█▉        | 4730/24850 [1:57:16<8:12:07,  1.47s/it, lr=7e-5, step_loss=0.0104]Steps:  19%|█▉        | 4730/24850 [1:57:16<8:12:07,  1.47s/it, lr=7e-5, step_loss=0.157] Steps:  19%|█▉        | 4731/24850 [1:57:18<8:12:12,  1.47s/it, lr=7e-5, step_loss=0.157]Steps:  19%|█▉        | 4731/24850 [1:57:18<8:12:12,  1.47s/it, lr=7e-5, step_loss=0.00859]Steps:  19%|█▉        | 4732/24850 [1:57:19<8:13:21,  1.47s/it, lr=7e-5, step_loss=0.00859]Steps:  19%|█▉        | 4732/24850 [1:57:19<8:13:21,  1.47s/it, lr=7e-5, step_loss=0.0155] Steps:  19%|█▉        | 4733/24850 [1:57:21<8:12:57,  1.47s/it, lr=7e-5, step_loss=0.0155]Steps:  19%|█▉        | 4733/24850 [1:57:21<8:12:57,  1.47s/it, lr=7e-5, step_loss=0.062] Steps:  19%|█▉        | 4734/24850 [1:57:22<8:11:43,  1.47s/it, lr=7e-5, step_loss=0.062]Steps:  19%|█▉        | 4734/24850 [1:57:22<8:11:43,  1.47s/it, lr=7e-5, step_loss=0.0243]Steps:  19%|█▉        | 4735/24850 [1:57:24<8:11:45,  1.47s/it, lr=7e-5, step_loss=0.0243]Steps:  19%|█▉        | 4735/24850 [1:57:24<8:11:45,  1.47s/it, lr=7e-5, step_loss=0.0143]Steps:  19%|█▉        | 4736/24850 [1:57:25<8:10:40,  1.46s/it, lr=7e-5, step_loss=0.0143]Steps:  19%|█▉        | 4736/24850 [1:57:25<8:10:40,  1.46s/it, lr=7e-5, step_loss=0.0122]Steps:  19%|█▉        | 4737/24850 [1:57:27<8:08:22,  1.46s/it, lr=7e-5, step_loss=0.0122]Steps:  19%|█▉        | 4737/24850 [1:57:27<8:08:22,  1.46s/it, lr=7e-5, step_loss=0.0116]Steps:  19%|█▉        | 4738/24850 [1:57:28<8:08:15,  1.46s/it, lr=7e-5, step_loss=0.0116]Steps:  19%|█▉        | 4738/24850 [1:57:28<8:08:15,  1.46s/it, lr=7e-5, step_loss=0.0165]Steps:  19%|█▉        | 4739/24850 [1:57:29<8:07:33,  1.45s/it, lr=7e-5, step_loss=0.0165]Steps:  19%|█▉        | 4739/24850 [1:57:29<8:07:33,  1.45s/it, lr=7e-5, step_loss=0.000952]Steps:  19%|█▉        | 4740/24850 [1:57:31<8:08:15,  1.46s/it, lr=7e-5, step_loss=0.000952]Steps:  19%|█▉        | 4740/24850 [1:57:31<8:08:15,  1.46s/it, lr=7e-5, step_loss=0.0149]  Steps:  19%|█▉        | 4741/24850 [1:57:33<9:34:58,  1.72s/it, lr=7e-5, step_loss=0.0149]Steps:  19%|█▉        | 4741/24850 [1:57:33<9:34:58,  1.72s/it, lr=7e-5, step_loss=0.0179]Steps:  19%|█▉        | 4742/24850 [1:57:35<9:08:59,  1.64s/it, lr=7e-5, step_loss=0.0179]Steps:  19%|█▉        | 4742/24850 [1:57:35<9:08:59,  1.64s/it, lr=7e-5, step_loss=0.0156]Steps:  19%|█▉        | 4743/24850 [1:57:36<8:50:57,  1.58s/it, lr=7e-5, step_loss=0.0156]Steps:  19%|█▉        | 4743/24850 [1:57:36<8:50:57,  1.58s/it, lr=7e-5, step_loss=0.0133]Steps:  19%|█▉        | 4744/24850 [1:57:38<8:36:52,  1.54s/it, lr=7e-5, step_loss=0.0133]Steps:  19%|█▉        | 4744/24850 [1:57:38<8:36:52,  1.54s/it, lr=7e-5, step_loss=0.0685]Steps:  19%|█▉        | 4745/24850 [1:57:39<8:28:56,  1.52s/it, lr=7e-5, step_loss=0.0685]Steps:  19%|█▉        | 4745/24850 [1:57:39<8:28:56,  1.52s/it, lr=7e-5, step_loss=0.035] Steps:  19%|█▉        | 4746/24850 [1:57:41<8:22:53,  1.50s/it, lr=7e-5, step_loss=0.035]Steps:  19%|█▉        | 4746/24850 [1:57:41<8:22:53,  1.50s/it, lr=7e-5, step_loss=0.0103]Steps:  19%|█▉        | 4747/24850 [1:57:42<8:19:12,  1.49s/it, lr=7e-5, step_loss=0.0103]Steps:  19%|█▉        | 4747/24850 [1:57:42<8:19:12,  1.49s/it, lr=7e-5, step_loss=0.0218]Steps:  19%|█▉        | 4748/24850 [1:57:43<8:15:56,  1.48s/it, lr=7e-5, step_loss=0.0218]Steps:  19%|█▉        | 4748/24850 [1:57:43<8:15:56,  1.48s/it, lr=7e-5, step_loss=0.00345]Steps:  19%|█▉        | 4749/24850 [1:57:45<8:14:48,  1.48s/it, lr=7e-5, step_loss=0.00345]Steps:  19%|█▉        | 4749/24850 [1:57:45<8:14:48,  1.48s/it, lr=7e-5, step_loss=0.00823]Steps:  19%|█▉        | 4750/24850 [1:57:46<8:12:22,  1.47s/it, lr=7e-5, step_loss=0.00823]Steps:  19%|█▉        | 4750/24850 [1:57:46<8:12:22,  1.47s/it, lr=7e-5, step_loss=0.0401] Steps:  19%|█▉        | 4751/24850 [1:57:48<8:11:16,  1.47s/it, lr=7e-5, step_loss=0.0401]Steps:  19%|█▉        | 4751/24850 [1:57:48<8:11:16,  1.47s/it, lr=7e-5, step_loss=0.0319]Steps:  19%|█▉        | 4752/24850 [1:57:49<8:10:34,  1.46s/it, lr=7e-5, step_loss=0.0319]Steps:  19%|█▉        | 4752/24850 [1:57:49<8:10:34,  1.46s/it, lr=7e-5, step_loss=0.0382]Steps:  19%|█▉        | 4753/24850 [1:57:51<8:10:09,  1.46s/it, lr=7e-5, step_loss=0.0382]Steps:  19%|█▉        | 4753/24850 [1:57:51<8:10:09,  1.46s/it, lr=7e-5, step_loss=0.0133]Steps:  19%|█▉        | 4754/24850 [1:57:52<8:09:26,  1.46s/it, lr=7e-5, step_loss=0.0133]Steps:  19%|█▉        | 4754/24850 [1:57:52<8:09:26,  1.46s/it, lr=7e-5, step_loss=0.114] torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
Steps:  19%|█▉        | 4755/24850 [1:57:54<8:09:59,  1.46s/it, lr=7e-5, step_loss=0.114]Steps:  19%|█▉        | 4755/24850 [1:57:54<8:09:59,  1.46s/it, lr=7e-5, step_loss=0.236]Steps:  19%|█▉        | 4756/24850 [1:57:55<8:08:42,  1.46s/it, lr=7e-5, step_loss=0.236]Steps:  19%|█▉        | 4756/24850 [1:57:55<8:08:42,  1.46s/it, lr=7e-5, step_loss=0.0334]Steps:  19%|█▉        | 4757/24850 [1:57:57<8:08:40,  1.46s/it, lr=7e-5, step_loss=0.0334]Steps:  19%|█▉        | 4757/24850 [1:57:57<8:08:40,  1.46s/it, lr=7e-5, step_loss=0.0158]Steps:  19%|█▉        | 4758/24850 [1:57:58<8:09:27,  1.46s/it, lr=7e-5, step_loss=0.0158]Steps:  19%|█▉        | 4758/24850 [1:57:58<8:09:27,  1.46s/it, lr=7e-5, step_loss=0.0101]Steps:  19%|█▉        | 4759/24850 [1:58:00<8:08:07,  1.46s/it, lr=7e-5, step_loss=0.0101]Steps:  19%|█▉        | 4759/24850 [1:58:00<8:08:07,  1.46s/it, lr=7e-5, step_loss=0.0404]Steps:  19%|█▉        | 4760/24850 [1:58:01<8:08:01,  1.46s/it, lr=7e-5, step_loss=0.0404]Steps:  19%|█▉        | 4760/24850 [1:58:01<8:08:01,  1.46s/it, lr=7e-5, step_loss=0.0434]Steps:  19%|█▉        | 4761/24850 [1:58:02<8:09:38,  1.46s/it, lr=7e-5, step_loss=0.0434]Steps:  19%|█▉        | 4761/24850 [1:58:02<8:09:38,  1.46s/it, lr=7e-5, step_loss=0.0946]Steps:  19%|█▉        | 4762/24850 [1:58:04<8:09:10,  1.46s/it, lr=7e-5, step_loss=0.0946]Steps:  19%|█▉        | 4762/24850 [1:58:04<8:09:10,  1.46s/it, lr=7e-5, step_loss=0.0217]Steps:  19%|█▉        | 4763/24850 [1:58:05<8:09:55,  1.46s/it, lr=7e-5, step_loss=0.0217]Steps:  19%|█▉        | 4763/24850 [1:58:05<8:09:55,  1.46s/it, lr=7e-5, step_loss=0.0388]Steps:  19%|█▉        | 4764/24850 [1:58:07<8:10:30,  1.47s/it, lr=7e-5, step_loss=0.0388]Steps:  19%|█▉        | 4764/24850 [1:58:07<8:10:30,  1.47s/it, lr=7e-5, step_loss=0.00107]Steps:  19%|█▉        | 4765/24850 [1:58:08<8:10:14,  1.46s/it, lr=7e-5, step_loss=0.00107]Steps:  19%|█▉        | 4765/24850 [1:58:08<8:10:14,  1.46s/it, lr=7e-5, step_loss=0.00572]Steps:  19%|█▉        | 4766/24850 [1:58:10<8:12:06,  1.47s/it, lr=7e-5, step_loss=0.00572]Steps:  19%|█▉        | 4766/24850 [1:58:10<8:12:06,  1.47s/it, lr=7e-5, step_loss=0.015]  Steps:  19%|█▉        | 4767/24850 [1:58:11<8:11:18,  1.47s/it, lr=7e-5, step_loss=0.015]Steps:  19%|█▉        | 4767/24850 [1:58:11<8:11:18,  1.47s/it, lr=7e-5, step_loss=0.00585]Steps:  19%|█▉        | 4768/24850 [1:58:13<8:10:20,  1.47s/it, lr=7e-5, step_loss=0.00585]Steps:  19%|█▉        | 4768/24850 [1:58:13<8:10:20,  1.47s/it, lr=7e-5, step_loss=0.00642]Steps:  19%|█▉        | 4769/24850 [1:58:14<8:09:25,  1.46s/it, lr=7e-5, step_loss=0.00642]Steps:  19%|█▉        | 4769/24850 [1:58:14<8:09:25,  1.46s/it, lr=7e-5, step_loss=0.044]  Steps:  19%|█▉        | 4770/24850 [1:58:16<8:10:34,  1.47s/it, lr=7e-5, step_loss=0.044]Steps:  19%|█▉        | 4770/24850 [1:58:16<8:10:34,  1.47s/it, lr=7e-5, step_loss=0.00773]Steps:  19%|█▉        | 4771/24850 [1:58:17<8:09:26,  1.46s/it, lr=7e-5, step_loss=0.00773]Steps:  19%|█▉        | 4771/24850 [1:58:17<8:09:26,  1.46s/it, lr=7e-5, step_loss=0.00153]Steps:  19%|█▉        | 4772/24850 [1:58:19<8:09:59,  1.46s/it, lr=7e-5, step_loss=0.00153]Steps:  19%|█▉        | 4772/24850 [1:58:19<8:09:59,  1.46s/it, lr=7e-5, step_loss=0.00834]Steps:  19%|█▉        | 4773/24850 [1:58:20<8:10:47,  1.47s/it, lr=7e-5, step_loss=0.00834]Steps:  19%|█▉        | 4773/24850 [1:58:20<8:10:47,  1.47s/it, lr=7e-5, step_loss=0.0691] Steps:  19%|█▉        | 4774/24850 [1:58:22<8:15:37,  1.48s/it, lr=7e-5, step_loss=0.0691]Steps:  19%|█▉        | 4774/24850 [1:58:22<8:15:37,  1.48s/it, lr=7e-5, step_loss=0.0354]Steps:  19%|█▉        | 4775/24850 [1:58:23<8:15:00,  1.48s/it, lr=7e-5, step_loss=0.0354]Steps:  19%|█▉        | 4775/24850 [1:58:23<8:15:00,  1.48s/it, lr=7e-5, step_loss=0.0527]Steps:  19%|█▉        | 4776/24850 [1:58:24<8:13:25,  1.47s/it, lr=7e-5, step_loss=0.0527]Steps:  19%|█▉        | 4776/24850 [1:58:24<8:13:25,  1.47s/it, lr=7e-5, step_loss=0.0198]Steps:  19%|█▉        | 4777/24850 [1:58:26<8:12:11,  1.47s/it, lr=7e-5, step_loss=0.0198]Steps:  19%|█▉        | 4777/24850 [1:58:26<8:12:11,  1.47s/it, lr=7e-5, step_loss=0.0152]Steps:  19%|█▉        | 4778/24850 [1:58:27<8:11:05,  1.47s/it, lr=7e-5, step_loss=0.0152]Steps:  19%|█▉        | 4778/24850 [1:58:27<8:11:05,  1.47s/it, lr=7e-5, step_loss=0.00336]Steps:  19%|█▉        | 4779/24850 [1:58:29<8:11:15,  1.47s/it, lr=7e-5, step_loss=0.00336]Steps:  19%|█▉        | 4779/24850 [1:58:29<8:11:15,  1.47s/it, lr=7e-5, step_loss=0.037]  Steps:  19%|█▉        | 4780/24850 [1:58:30<8:11:20,  1.47s/it, lr=7e-5, step_loss=0.037]Steps:  19%|█▉        | 4780/24850 [1:58:30<8:11:20,  1.47s/it, lr=7e-5, step_loss=0.0143]Steps:  19%|█▉        | 4781/24850 [1:58:32<8:12:46,  1.47s/it, lr=7e-5, step_loss=0.0143]Steps:  19%|█▉        | 4781/24850 [1:58:32<8:12:46,  1.47s/it, lr=7e-5, step_loss=0.025] (512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512)Steps:  19%|█▉        | 4782/24850 [1:58:33<8:14:14,  1.48s/it, lr=7e-5, step_loss=0.025]Steps:  19%|█▉        | 4782/24850 [1:58:33<8:14:14,  1.48s/it, lr=7e-5, step_loss=0.00555]Steps:  19%|█▉        | 4783/24850 [1:58:35<8:16:11,  1.48s/it, lr=7e-5, step_loss=0.00555]Steps:  19%|█▉        | 4783/24850 [1:58:35<8:16:11,  1.48s/it, lr=7e-5, step_loss=0.00857]Steps:  19%|█▉        | 4784/24850 [1:58:36<8:15:07,  1.48s/it, lr=7e-5, step_loss=0.00857]Steps:  19%|█▉        | 4784/24850 [1:58:36<8:15:07,  1.48s/it, lr=7e-5, step_loss=0.0688] Steps:  19%|█▉        | 4785/24850 [1:58:38<8:13:14,  1.47s/it, lr=7e-5, step_loss=0.0688]Steps:  19%|█▉        | 4785/24850 [1:58:38<8:13:14,  1.47s/it, lr=7e-5, step_loss=0.0315]Steps:  19%|█▉        | 4786/24850 [1:58:39<8:11:32,  1.47s/it, lr=7e-5, step_loss=0.0315]Steps:  19%|█▉        | 4786/24850 [1:58:39<8:11:32,  1.47s/it, lr=7e-5, step_loss=0.0197]Steps:  19%|█▉        | 4787/24850 [1:58:41<8:10:56,  1.47s/it, lr=7e-5, step_loss=0.0197]Steps:  19%|█▉        | 4787/24850 [1:58:41<8:10:56,  1.47s/it, lr=7e-5, step_loss=0.037] Steps:  19%|█▉        | 4788/24850 [1:58:42<8:11:01,  1.47s/it, lr=7e-5, step_loss=0.037]Steps:  19%|█▉        | 4788/24850 [1:58:42<8:11:01,  1.47s/it, lr=7e-5, step_loss=0.0707]Steps:  19%|█▉        | 4789/24850 [1:58:44<8:14:53,  1.48s/it, lr=7e-5, step_loss=0.0707]Steps:  19%|█▉        | 4789/24850 [1:58:44<8:14:53,  1.48s/it, lr=7e-5, step_loss=0.0104]Steps:  19%|█▉        | 4790/24850 [1:58:45<8:16:16,  1.48s/it, lr=7e-5, step_loss=0.0104]Steps:  19%|█▉        | 4790/24850 [1:58:45<8:16:16,  1.48s/it, lr=7e-5, step_loss=0.0157]Steps:  19%|█▉        | 4791/24850 [1:58:48<10:01:51,  1.80s/it, lr=7e-5, step_loss=0.0157]Steps:  19%|█▉        | 4791/24850 [1:58:48<10:01:51,  1.80s/it, lr=7e-5, step_loss=0.0133]Steps:  19%|█▉        | 4792/24850 [1:58:49<9:29:21,  1.70s/it, lr=7e-5, step_loss=0.0133] Steps:  19%|█▉        | 4792/24850 [1:58:49<9:29:21,  1.70s/it, lr=7e-5, step_loss=0.039] Steps:  19%|█▉        | 4793/24850 [1:58:51<9:05:20,  1.63s/it, lr=7e-5, step_loss=0.039]Steps:  19%|█▉        | 4793/24850 [1:58:51<9:05:20,  1.63s/it, lr=7e-5, step_loss=0.0196]Steps:  19%|█▉        | 4794/24850 [1:58:52<8:52:11,  1.59s/it, lr=7e-5, step_loss=0.0196]Steps:  19%|█▉        | 4794/24850 [1:58:52<8:52:11,  1.59s/it, lr=7e-5, step_loss=0.186] Steps:  19%|█▉        | 4795/24850 [1:58:54<8:40:58,  1.56s/it, lr=7e-5, step_loss=0.186]Steps:  19%|█▉        | 4795/24850 [1:58:54<8:40:58,  1.56s/it, lr=7e-5, step_loss=0.134]Steps:  19%|█▉        | 4796/24850 [1:58:55<8:32:13,  1.53s/it, lr=7e-5, step_loss=0.134]Steps:  19%|█▉        | 4796/24850 [1:58:55<8:32:13,  1.53s/it, lr=7e-5, step_loss=0.0378]Steps:  19%|█▉        | 4797/24850 [1:58:57<8:27:06,  1.52s/it, lr=7e-5, step_loss=0.0378]Steps:  19%|█▉        | 4797/24850 [1:58:57<8:27:06,  1.52s/it, lr=7e-5, step_loss=0.0445]Steps:  19%|█▉        | 4798/24850 [1:58:58<8:21:16,  1.50s/it, lr=7e-5, step_loss=0.0445]Steps:  19%|█▉        | 4798/24850 [1:58:58<8:21:16,  1.50s/it, lr=7e-5, step_loss=0.00687]Steps:  19%|█▉        | 4799/24850 [1:58:59<8:16:25,  1.49s/it, lr=7e-5, step_loss=0.00687]Steps:  19%|█▉        | 4799/24850 [1:58:59<8:16:25,  1.49s/it, lr=7e-5, step_loss=0.0145] Steps:  19%|█▉        | 4800/24850 [1:59:01<8:13:07,  1.48s/it, lr=7e-5, step_loss=0.0145]Steps:  19%|█▉        | 4800/24850 [1:59:01<8:13:07,  1.48s/it, lr=7e-5, step_loss=0.00915]Steps:  19%|█▉        | 4801/24850 [1:59:02<8:11:02,  1.47s/it, lr=7e-5, step_loss=0.00915]Steps:  19%|█▉        | 4801/24850 [1:59:02<8:11:02,  1.47s/it, lr=7e-5, step_loss=0.0506] Steps:  19%|█▉        | 4802/24850 [1:59:04<8:09:43,  1.47s/it, lr=7e-5, step_loss=0.0506]Steps:  19%|█▉        | 4802/24850 [1:59:04<8:09:43,  1.47s/it, lr=7e-5, step_loss=0.00512]Steps:  19%|█▉        | 4803/24850 [1:59:05<8:09:00,  1.46s/it, lr=7e-5, step_loss=0.00512]Steps:  19%|█▉        | 4803/24850 [1:59:05<8:09:00,  1.46s/it, lr=7e-5, step_loss=0.103]  Steps:  19%|█▉        | 4804/24850 [1:59:07<8:09:31,  1.47s/it, lr=7e-5, step_loss=0.103]Steps:  19%|█▉        | 4804/24850 [1:59:07<8:09:31,  1.47s/it, lr=7e-5, step_loss=0.036]Steps:  19%|█▉        | 4805/24850 [1:59:08<8:09:00,  1.46s/it, lr=7e-5, step_loss=0.036]Steps:  19%|█▉        | 4805/24850 [1:59:08<8:09:00,  1.46s/it, lr=7e-5, step_loss=0.0558]Steps:  19%|█▉        | 4806/24850 [1:59:10<8:07:31,  1.46s/it, lr=7e-5, step_loss=0.0558]Steps:  19%|█▉        | 4806/24850 [1:59:10<8:07:31,  1.46s/it, lr=7e-5, step_loss=0.00852]Steps:  19%|█▉        | 4807/24850 [1:59:11<8:06:51,  1.46s/it, lr=7e-5, step_loss=0.00852]Steps:  19%|█▉        | 4807/24850 [1:59:11<8:06:51,  1.46s/it, lr=7e-5, step_loss=0.0596] Steps:  19%|█▉        | 4808/24850 [1:59:13<8:06:47,  1.46s/it, lr=7e-5, step_loss=0.0596]Steps:  19%|█▉        | 4808/24850 [1:59:13<8:06:47,  1.46s/it, lr=7e-5, step_loss=0.00942] torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:  19%|█▉        | 4809/24850 [1:59:14<8:07:29,  1.46s/it, lr=7e-5, step_loss=0.00942]Steps:  19%|█▉        | 4809/24850 [1:59:14<8:07:29,  1.46s/it, lr=7e-5, step_loss=0.0201] Steps:  19%|█▉        | 4810/24850 [1:59:16<8:07:24,  1.46s/it, lr=7e-5, step_loss=0.0201]Steps:  19%|█▉        | 4810/24850 [1:59:16<8:07:24,  1.46s/it, lr=7e-5, step_loss=0.0105]Steps:  19%|█▉        | 4811/24850 [1:59:17<8:08:52,  1.46s/it, lr=7e-5, step_loss=0.0105]Steps:  19%|█▉        | 4811/24850 [1:59:17<8:08:52,  1.46s/it, lr=7e-5, step_loss=0.0266]Steps:  19%|█▉        | 4812/24850 [1:59:18<8:10:26,  1.47s/it, lr=7e-5, step_loss=0.0266]Steps:  19%|█▉        | 4812/24850 [1:59:18<8:10:26,  1.47s/it, lr=7e-5, step_loss=0.00425]Steps:  19%|█▉        | 4813/24850 [1:59:20<8:10:36,  1.47s/it, lr=7e-5, step_loss=0.00425]Steps:  19%|█▉        | 4813/24850 [1:59:20<8:10:36,  1.47s/it, lr=7e-5, step_loss=0.0765] Steps:  19%|█▉        | 4814/24850 [1:59:21<8:10:13,  1.47s/it, lr=7e-5, step_loss=0.0765]Steps:  19%|█▉        | 4814/24850 [1:59:21<8:10:13,  1.47s/it, lr=7e-5, step_loss=0.00446]Steps:  19%|█▉        | 4815/24850 [1:59:23<8:10:00,  1.47s/it, lr=7e-5, step_loss=0.00446]Steps:  19%|█▉        | 4815/24850 [1:59:23<8:10:00,  1.47s/it, lr=7e-5, step_loss=0.0379] Steps:  19%|█▉        | 4816/24850 [1:59:24<8:08:09,  1.46s/it, lr=7e-5, step_loss=0.0379]Steps:  19%|█▉        | 4816/24850 [1:59:24<8:08:09,  1.46s/it, lr=7e-5, step_loss=0.0465]Steps:  19%|█▉        | 4817/24850 [1:59:26<8:09:22,  1.47s/it, lr=7e-5, step_loss=0.0465]Steps:  19%|█▉        | 4817/24850 [1:59:26<8:09:22,  1.47s/it, lr=7e-5, step_loss=0.0853]Steps:  19%|█▉        | 4818/24850 [1:59:27<8:08:54,  1.46s/it, lr=7e-5, step_loss=0.0853]Steps:  19%|█▉        | 4818/24850 [1:59:27<8:08:54,  1.46s/it, lr=7e-5, step_loss=0.0193]Steps:  19%|█▉        | 4819/24850 [1:59:29<8:07:16,  1.46s/it, lr=7e-5, step_loss=0.0193]Steps:  19%|█▉        | 4819/24850 [1:59:29<8:07:16,  1.46s/it, lr=7e-5, step_loss=0.0521]Steps:  19%|█▉        | 4820/24850 [1:59:30<8:09:12,  1.47s/it, lr=7e-5, step_loss=0.0521]Steps:  19%|█▉        | 4820/24850 [1:59:30<8:09:12,  1.47s/it, lr=7e-5, step_loss=0.0077]Steps:  19%|█▉        | 4821/24850 [1:59:32<8:09:45,  1.47s/it, lr=7e-5, step_loss=0.0077]Steps:  19%|█▉        | 4821/24850 [1:59:32<8:09:45,  1.47s/it, lr=7e-5, step_loss=0.00372]Steps:  19%|█▉        | 4822/24850 [1:59:33<8:07:52,  1.46s/it, lr=7e-5, step_loss=0.00372]Steps:  19%|█▉        | 4822/24850 [1:59:33<8:07:52,  1.46s/it, lr=7e-5, step_loss=0.000583]Steps:  19%|█▉        | 4823/24850 [1:59:35<8:07:31,  1.46s/it, lr=7e-5, step_loss=0.000583]Steps:  19%|█▉        | 4823/24850 [1:59:35<8:07:31,  1.46s/it, lr=7e-5, step_loss=0.00331] Steps:  19%|█▉        | 4824/24850 [1:59:36<8:07:09,  1.46s/it, lr=7e-5, step_loss=0.00331]Steps:  19%|█▉        | 4824/24850 [1:59:36<8:07:09,  1.46s/it, lr=7e-5, step_loss=0.0187] Steps:  19%|█▉        | 4825/24850 [1:59:37<8:06:04,  1.46s/it, lr=7e-5, step_loss=0.0187]Steps:  19%|█▉        | 4825/24850 [1:59:37<8:06:04,  1.46s/it, lr=7e-5, step_loss=0.0118]Steps:  19%|█▉        | 4826/24850 [1:59:39<8:06:25,  1.46s/it, lr=7e-5, step_loss=0.0118]Steps:  19%|█▉        | 4826/24850 [1:59:39<8:06:25,  1.46s/it, lr=7e-5, step_loss=0.0523]Steps:  19%|█▉        | 4827/24850 [1:59:40<8:06:29,  1.46s/it, lr=7e-5, step_loss=0.0523]Steps:  19%|█▉        | 4827/24850 [1:59:40<8:06:29,  1.46s/it, lr=7e-5, step_loss=0.0186]Steps:  19%|█▉        | 4828/24850 [1:59:42<8:07:14,  1.46s/it, lr=7e-5, step_loss=0.0186]Steps:  19%|█▉        | 4828/24850 [1:59:42<8:07:14,  1.46s/it, lr=7e-5, step_loss=0.0105]Steps:  19%|█▉        | 4829/24850 [1:59:43<8:08:20,  1.46s/it, lr=7e-5, step_loss=0.0105]Steps:  19%|█▉        | 4829/24850 [1:59:43<8:08:20,  1.46s/it, lr=7e-5, step_loss=0.0391]Steps:  19%|█▉        | 4830/24850 [1:59:45<8:07:55,  1.46s/it, lr=7e-5, step_loss=0.0391]Steps:  19%|█▉        | 4830/24850 [1:59:45<8:07:55,  1.46s/it, lr=7e-5, step_loss=0.0429]Steps:  19%|█▉        | 4831/24850 [1:59:46<8:11:11,  1.47s/it, lr=7e-5, step_loss=0.0429]Steps:  19%|█▉        | 4831/24850 [1:59:46<8:11:11,  1.47s/it, lr=7e-5, step_loss=0.0302]Steps:  19%|█▉        | 4832/24850 [1:59:48<8:09:23,  1.47s/it, lr=7e-5, step_loss=0.0302]Steps:  19%|█▉        | 4832/24850 [1:59:48<8:09:23,  1.47s/it, lr=7e-5, step_loss=0.0195]Steps:  19%|█▉        | 4833/24850 [1:59:49<8:08:36,  1.46s/it, lr=7e-5, step_loss=0.0195]Steps:  19%|█▉        | 4833/24850 [1:59:49<8:08:36,  1.46s/it, lr=7e-5, step_loss=0.0332]Steps:  19%|█▉        | 4834/24850 [1:59:51<8:08:41,  1.46s/it, lr=7e-5, step_loss=0.0332]Steps:  19%|█▉        | 4834/24850 [1:59:51<8:08:41,  1.46s/it, lr=7e-5, step_loss=0.0225]Steps:  19%|█▉        | 4835/24850 [1:59:52<8:08:29,  1.46s/it, lr=7e-5, step_loss=0.0225]Steps:  19%|█▉        | 4835/24850 [1:59:52<8:08:29,  1.46s/it, lr=7e-5, step_loss=0.0209]torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  Steps:  19%|█▉        | 4836/24850 [1:59:54<8:07:26,  1.46s/it, lr=7e-5, step_loss=0.0209]Steps:  19%|█▉        | 4836/24850 [1:59:54<8:07:26,  1.46s/it, lr=7e-5, step_loss=0.000631]Steps:  19%|█▉        | 4837/24850 [1:59:55<8:08:13,  1.46s/it, lr=7e-5, step_loss=0.000631]Steps:  19%|█▉        | 4837/24850 [1:59:55<8:08:13,  1.46s/it, lr=7e-5, step_loss=0.0428]  Steps:  19%|█▉        | 4838/24850 [1:59:56<8:07:40,  1.46s/it, lr=7e-5, step_loss=0.0428]Steps:  19%|█▉        | 4838/24850 [1:59:56<8:07:40,  1.46s/it, lr=7e-5, step_loss=0.0155]Steps:  19%|█▉        | 4839/24850 [1:59:58<8:07:53,  1.46s/it, lr=7e-5, step_loss=0.0155]Steps:  19%|█▉        | 4839/24850 [1:59:58<8:07:53,  1.46s/it, lr=7e-5, step_loss=0.0169]Steps:  19%|█▉        | 4840/24850 [1:59:59<8:06:54,  1.46s/it, lr=7e-5, step_loss=0.0169]Steps:  19%|█▉        | 4840/24850 [1:59:59<8:06:54,  1.46s/it, lr=7e-5, step_loss=0.0903]Steps:  19%|█▉        | 4841/24850 [2:00:02<9:55:27,  1.79s/it, lr=7e-5, step_loss=0.0903]Steps:  19%|█▉        | 4841/24850 [2:00:02<9:55:27,  1.79s/it, lr=7e-5, step_loss=0.128] Steps:  19%|█▉        | 4842/24850 [2:00:03<9:23:58,  1.69s/it, lr=7e-5, step_loss=0.128]Steps:  19%|█▉        | 4842/24850 [2:00:03<9:23:58,  1.69s/it, lr=7e-5, step_loss=0.0183]Steps:  19%|█▉        | 4843/24850 [2:00:05<9:00:19,  1.62s/it, lr=7e-5, step_loss=0.0183]Steps:  19%|█▉        | 4843/24850 [2:00:05<9:00:19,  1.62s/it, lr=7e-5, step_loss=0.015] Steps:  19%|█▉        | 4844/24850 [2:00:06<8:44:56,  1.57s/it, lr=7e-5, step_loss=0.015]Steps:  19%|█▉        | 4844/24850 [2:00:06<8:44:56,  1.57s/it, lr=7e-5, step_loss=0.0102]Steps:  19%|█▉        | 4845/24850 [2:00:08<8:33:27,  1.54s/it, lr=7e-5, step_loss=0.0102]Steps:  19%|█▉        | 4845/24850 [2:00:08<8:33:27,  1.54s/it, lr=7e-5, step_loss=0.000414]Steps:  20%|█▉        | 4846/24850 [2:00:09<8:25:49,  1.52s/it, lr=7e-5, step_loss=0.000414]Steps:  20%|█▉        | 4846/24850 [2:00:09<8:25:49,  1.52s/it, lr=7e-5, step_loss=0.108]   Steps:  20%|█▉        | 4847/24850 [2:00:11<8:20:40,  1.50s/it, lr=7e-5, step_loss=0.108]Steps:  20%|█▉        | 4847/24850 [2:00:11<8:20:40,  1.50s/it, lr=7e-5, step_loss=0.00407]Steps:  20%|█▉        | 4848/24850 [2:00:12<8:15:22,  1.49s/it, lr=7e-5, step_loss=0.00407]Steps:  20%|█▉        | 4848/24850 [2:00:12<8:15:22,  1.49s/it, lr=7e-5, step_loss=0.000184]Steps:  20%|█▉        | 4849/24850 [2:00:14<8:14:49,  1.48s/it, lr=7e-5, step_loss=0.000184]Steps:  20%|█▉        | 4849/24850 [2:00:14<8:14:49,  1.48s/it, lr=7e-5, step_loss=0.00909] Steps:  20%|█▉        | 4850/24850 [2:00:15<8:14:33,  1.48s/it, lr=7e-5, step_loss=0.00909]Steps:  20%|█▉        | 4850/24850 [2:00:15<8:14:33,  1.48s/it, lr=7e-5, step_loss=0.0277] Steps:  20%|█▉        | 4851/24850 [2:00:17<8:14:48,  1.48s/it, lr=7e-5, step_loss=0.0277]Steps:  20%|█▉        | 4851/24850 [2:00:17<8:14:48,  1.48s/it, lr=7e-5, step_loss=0.0405]Steps:  20%|█▉        | 4852/24850 [2:00:18<8:30:41,  1.53s/it, lr=7e-5, step_loss=0.0405]Steps:  20%|█▉        | 4852/24850 [2:00:18<8:30:41,  1.53s/it, lr=7e-5, step_loss=0.00764]Steps:  20%|█▉        | 4853/24850 [2:00:20<8:24:29,  1.51s/it, lr=7e-5, step_loss=0.00764]Steps:  20%|█▉        | 4853/24850 [2:00:20<8:24:29,  1.51s/it, lr=7e-5, step_loss=0.127]  Steps:  20%|█▉        | 4854/24850 [2:00:21<8:20:44,  1.50s/it, lr=7e-5, step_loss=0.127]Steps:  20%|█▉        | 4854/24850 [2:00:21<8:20:44,  1.50s/it, lr=7e-5, step_loss=0.0224]Steps:  20%|█▉        | 4855/24850 [2:00:23<8:18:42,  1.50s/it, lr=7e-5, step_loss=0.0224]Steps:  20%|█▉        | 4855/24850 [2:00:23<8:18:42,  1.50s/it, lr=7e-5, step_loss=0.0409]Steps:  20%|█▉        | 4856/24850 [2:00:24<8:15:32,  1.49s/it, lr=7e-5, step_loss=0.0409]Steps:  20%|█▉        | 4856/24850 [2:00:24<8:15:32,  1.49s/it, lr=7e-5, step_loss=0.02]  Steps:  20%|█▉        | 4857/24850 [2:00:26<8:12:39,  1.48s/it, lr=7e-5, step_loss=0.02]Steps:  20%|█▉        | 4857/24850 [2:00:26<8:12:39,  1.48s/it, lr=7e-5, step_loss=0.00388]Steps:  20%|█▉        | 4858/24850 [2:00:27<8:11:36,  1.48s/it, lr=7e-5, step_loss=0.00388]Steps:  20%|█▉        | 4858/24850 [2:00:27<8:11:36,  1.48s/it, lr=7e-5, step_loss=0.00843]Steps:  20%|█▉        | 4859/24850 [2:00:29<8:09:35,  1.47s/it, lr=7e-5, step_loss=0.00843]Steps:  20%|█▉        | 4859/24850 [2:00:29<8:09:35,  1.47s/it, lr=7e-5, step_loss=0.00803]Steps:  20%|█▉        | 4860/24850 [2:00:30<8:08:28,  1.47s/it, lr=7e-5, step_loss=0.00803]Steps:  20%|█▉        | 4860/24850 [2:00:30<8:08:28,  1.47s/it, lr=7e-5, step_loss=0.00231]Steps:  20%|█▉        | 4861/24850 [2:00:32<8:10:39,  1.47s/it, lr=7e-5, step_loss=0.00231]Steps:  20%|█▉        | 4861/24850 [2:00:32<8:10:39,  1.47s/it, lr=7e-5, step_loss=0.00394]Steps:  20%|█▉        | 4862/24850 [2:00:33<8:09:33,  1.47s/it, lr=7e-5, step_loss=0.00394]Steps:  20%|█▉        | 4862/24850 [2:00:33<8:09:33,  1.47s/it, lr=7e-5, step_loss=0.0564] Steps:  20%|█▉        | 4863/24850 [2:00:34<8:09:02,  1.47s/it, lr=7e-5, step_loss=0.0564]Steps:  20%|█▉        | 4863/24850 [2:00:34<8:09:02,  1.47s/it, lr=7e-5, step_loss=0.0334]mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:  20%|█▉        | 4864/24850 [2:00:36<8:07:48,  1.46s/it, lr=7e-5, step_loss=0.0334]Steps:  20%|█▉        | 4864/24850 [2:00:36<8:07:48,  1.46s/it, lr=7e-5, step_loss=0.0552]Steps:  20%|█▉        | 4865/24850 [2:00:37<8:08:21,  1.47s/it, lr=7e-5, step_loss=0.0552]Steps:  20%|█▉        | 4865/24850 [2:00:37<8:08:21,  1.47s/it, lr=7e-5, step_loss=0.00981]Steps:  20%|█▉        | 4866/24850 [2:00:39<8:07:31,  1.46s/it, lr=7e-5, step_loss=0.00981]Steps:  20%|█▉        | 4866/24850 [2:00:39<8:07:31,  1.46s/it, lr=7e-5, step_loss=0.012]  Steps:  20%|█▉        | 4867/24850 [2:00:40<8:08:12,  1.47s/it, lr=7e-5, step_loss=0.012]Steps:  20%|█▉        | 4867/24850 [2:00:40<8:08:12,  1.47s/it, lr=7e-5, step_loss=0.00964]Steps:  20%|█▉        | 4868/24850 [2:00:42<8:11:08,  1.47s/it, lr=7e-5, step_loss=0.00964]Steps:  20%|█▉        | 4868/24850 [2:00:42<8:11:08,  1.47s/it, lr=7e-5, step_loss=0.0534] Steps:  20%|█▉        | 4869/24850 [2:00:43<8:10:56,  1.47s/it, lr=7e-5, step_loss=0.0534]Steps:  20%|█▉        | 4869/24850 [2:00:43<8:10:56,  1.47s/it, lr=7e-5, step_loss=0.0925]Steps:  20%|█▉        | 4870/24850 [2:00:45<8:08:00,  1.47s/it, lr=7e-5, step_loss=0.0925]Steps:  20%|█▉        | 4870/24850 [2:00:45<8:08:00,  1.47s/it, lr=7e-5, step_loss=0.0254]Steps:  20%|█▉        | 4871/24850 [2:00:46<8:07:56,  1.47s/it, lr=7e-5, step_loss=0.0254]Steps:  20%|█▉        | 4871/24850 [2:00:46<8:07:56,  1.47s/it, lr=7e-5, step_loss=0.000739]Steps:  20%|█▉        | 4872/24850 [2:00:48<8:05:51,  1.46s/it, lr=7e-5, step_loss=0.000739]Steps:  20%|█▉        | 4872/24850 [2:00:48<8:05:51,  1.46s/it, lr=7e-5, step_loss=0.00283] Steps:  20%|█▉        | 4873/24850 [2:00:49<8:05:40,  1.46s/it, lr=7e-5, step_loss=0.00283]Steps:  20%|█▉        | 4873/24850 [2:00:49<8:05:40,  1.46s/it, lr=7e-5, step_loss=0.0841] Steps:  20%|█▉        | 4874/24850 [2:00:51<8:06:39,  1.46s/it, lr=7e-5, step_loss=0.0841]Steps:  20%|█▉        | 4874/24850 [2:00:51<8:06:39,  1.46s/it, lr=7e-5, step_loss=0.0257]Steps:  20%|█▉        | 4875/24850 [2:00:52<8:07:06,  1.46s/it, lr=7e-5, step_loss=0.0257]Steps:  20%|█▉        | 4875/24850 [2:00:52<8:07:06,  1.46s/it, lr=7e-5, step_loss=0.0441]Steps:  20%|█▉        | 4876/24850 [2:00:53<8:07:06,  1.46s/it, lr=7e-5, step_loss=0.0441]Steps:  20%|█▉        | 4876/24850 [2:00:53<8:07:06,  1.46s/it, lr=7e-5, step_loss=0.0308]Steps:  20%|█▉        | 4877/24850 [2:00:55<8:08:22,  1.47s/it, lr=7e-5, step_loss=0.0308]Steps:  20%|█▉        | 4877/24850 [2:00:55<8:08:22,  1.47s/it, lr=7e-5, step_loss=0.016] Steps:  20%|█▉        | 4878/24850 [2:00:56<8:07:01,  1.46s/it, lr=7e-5, step_loss=0.016]Steps:  20%|█▉        | 4878/24850 [2:00:56<8:07:01,  1.46s/it, lr=7e-5, step_loss=0.118]Steps:  20%|█▉        | 4879/24850 [2:00:58<8:06:24,  1.46s/it, lr=7e-5, step_loss=0.118]Steps:  20%|█▉        | 4879/24850 [2:00:58<8:06:24,  1.46s/it, lr=7e-5, step_loss=0.00796]Steps:  20%|█▉        | 4880/24850 [2:00:59<8:06:58,  1.46s/it, lr=7e-5, step_loss=0.00796]Steps:  20%|█▉        | 4880/24850 [2:00:59<8:06:58,  1.46s/it, lr=7e-5, step_loss=0.0197] Steps:  20%|█▉        | 4881/24850 [2:01:01<8:05:34,  1.46s/it, lr=7e-5, step_loss=0.0197]Steps:  20%|█▉        | 4881/24850 [2:01:01<8:05:34,  1.46s/it, lr=7e-5, step_loss=0.0308]Steps:  20%|█▉        | 4882/24850 [2:01:02<8:05:20,  1.46s/it, lr=7e-5, step_loss=0.0308]Steps:  20%|█▉        | 4882/24850 [2:01:02<8:05:20,  1.46s/it, lr=7e-5, step_loss=0.00629]Steps:  20%|█▉        | 4883/24850 [2:01:04<8:05:30,  1.46s/it, lr=7e-5, step_loss=0.00629]Steps:  20%|█▉        | 4883/24850 [2:01:04<8:05:30,  1.46s/it, lr=7e-5, step_loss=0.0737] Steps:  20%|█▉        | 4884/24850 [2:01:05<8:05:04,  1.46s/it, lr=7e-5, step_loss=0.0737]Steps:  20%|█▉        | 4884/24850 [2:01:05<8:05:04,  1.46s/it, lr=7e-5, step_loss=0.00355]Steps:  20%|█▉        | 4885/24850 [2:01:07<8:05:59,  1.46s/it, lr=7e-5, step_loss=0.00355]Steps:  20%|█▉        | 4885/24850 [2:01:07<8:05:59,  1.46s/it, lr=7e-5, step_loss=0.0422] Steps:  20%|█▉        | 4886/24850 [2:01:08<8:04:59,  1.46s/it, lr=7e-5, step_loss=0.0422]Steps:  20%|█▉        | 4886/24850 [2:01:08<8:04:59,  1.46s/it, lr=7e-5, step_loss=0.023] Steps:  20%|█▉        | 4887/24850 [2:01:10<8:05:24,  1.46s/it, lr=7e-5, step_loss=0.023]Steps:  20%|█▉        | 4887/24850 [2:01:10<8:05:24,  1.46s/it, lr=7e-5, step_loss=0.00748]Steps:  20%|█▉        | 4888/24850 [2:01:11<8:06:53,  1.46s/it, lr=7e-5, step_loss=0.00748]Steps:  20%|█▉        | 4888/24850 [2:01:11<8:06:53,  1.46s/it, lr=7e-5, step_loss=0.00706]Steps:  20%|█▉        | 4889/24850 [2:01:12<8:08:32,  1.47s/it, lr=7e-5, step_loss=0.00706]Steps:  20%|█▉        | 4889/24850 [2:01:12<8:08:32,  1.47s/it, lr=7e-5, step_loss=0.0185] Steps:  20%|█▉        | 4890/24850 [2:01:14<8:09:59,  1.47s/it, lr=7e-5, step_loss=0.0185]Steps:  20%|█▉        | 4890/24850 [2:01:14<8:09:59,  1.47s/it, lr=7e-5, step_loss=0.0168]torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) Steps:  20%|█▉        | 4891/24850 [2:01:16<9:52:30,  1.78s/it, lr=7e-5, step_loss=0.0168]Steps:  20%|█▉        | 4891/24850 [2:01:16<9:52:30,  1.78s/it, lr=7e-5, step_loss=0.0076]Steps:  20%|█▉        | 4892/24850 [2:01:18<9:21:32,  1.69s/it, lr=7e-5, step_loss=0.0076]Steps:  20%|█▉        | 4892/24850 [2:01:18<9:21:32,  1.69s/it, lr=7e-5, step_loss=0.00932]Steps:  20%|█▉        | 4893/24850 [2:01:19<8:59:35,  1.62s/it, lr=7e-5, step_loss=0.00932]Steps:  20%|█▉        | 4893/24850 [2:01:19<8:59:35,  1.62s/it, lr=7e-5, step_loss=0.0644] Steps:  20%|█▉        | 4894/24850 [2:01:21<8:44:16,  1.58s/it, lr=7e-5, step_loss=0.0644]Steps:  20%|█▉        | 4894/24850 [2:01:21<8:44:16,  1.58s/it, lr=7e-5, step_loss=0.00201]Steps:  20%|█▉        | 4895/24850 [2:01:22<8:33:49,  1.54s/it, lr=7e-5, step_loss=0.00201]Steps:  20%|█▉        | 4895/24850 [2:01:22<8:33:49,  1.54s/it, lr=7e-5, step_loss=0.032]  Steps:  20%|█▉        | 4896/24850 [2:01:24<8:26:36,  1.52s/it, lr=7e-5, step_loss=0.032]Steps:  20%|█▉        | 4896/24850 [2:01:24<8:26:36,  1.52s/it, lr=7e-5, step_loss=0.0377]Steps:  20%|█▉        | 4897/24850 [2:01:25<8:19:47,  1.50s/it, lr=7e-5, step_loss=0.0377]Steps:  20%|█▉        | 4897/24850 [2:01:25<8:19:47,  1.50s/it, lr=7e-5, step_loss=0.00284]Steps:  20%|█▉        | 4898/24850 [2:01:27<8:16:31,  1.49s/it, lr=7e-5, step_loss=0.00284]Steps:  20%|█▉        | 4898/24850 [2:01:27<8:16:31,  1.49s/it, lr=7e-5, step_loss=0.0686] Steps:  20%|█▉        | 4899/24850 [2:01:28<8:13:34,  1.48s/it, lr=7e-5, step_loss=0.0686]Steps:  20%|█▉        | 4899/24850 [2:01:28<8:13:34,  1.48s/it, lr=7e-5, step_loss=0.0131]Steps:  20%|█▉        | 4900/24850 [2:01:30<8:11:09,  1.48s/it, lr=7e-5, step_loss=0.0131]Steps:  20%|█▉        | 4900/24850 [2:01:30<8:11:09,  1.48s/it, lr=7e-5, step_loss=0.00591]Steps:  20%|█▉        | 4901/24850 [2:01:31<8:10:19,  1.47s/it, lr=7e-5, step_loss=0.00591]Steps:  20%|█▉        | 4901/24850 [2:01:31<8:10:19,  1.47s/it, lr=7e-5, step_loss=0.0627] Steps:  20%|█▉        | 4902/24850 [2:01:33<8:08:36,  1.47s/it, lr=7e-5, step_loss=0.0627]Steps:  20%|█▉        | 4902/24850 [2:01:33<8:08:36,  1.47s/it, lr=7e-5, step_loss=0.0076]Steps:  20%|█▉        | 4903/24850 [2:01:34<8:07:42,  1.47s/it, lr=7e-5, step_loss=0.0076]Steps:  20%|█▉        | 4903/24850 [2:01:34<8:07:42,  1.47s/it, lr=7e-5, step_loss=0.103] Steps:  20%|█▉        | 4904/24850 [2:01:35<8:04:55,  1.46s/it, lr=7e-5, step_loss=0.103]Steps:  20%|█▉        | 4904/24850 [2:01:35<8:04:55,  1.46s/it, lr=7e-5, step_loss=0.00984]Steps:  20%|█▉        | 4905/24850 [2:01:37<8:05:13,  1.46s/it, lr=7e-5, step_loss=0.00984]Steps:  20%|█▉        | 4905/24850 [2:01:37<8:05:13,  1.46s/it, lr=7e-5, step_loss=0.0242] Steps:  20%|█▉        | 4906/24850 [2:01:38<8:06:18,  1.46s/it, lr=7e-5, step_loss=0.0242]Steps:  20%|█▉        | 4906/24850 [2:01:38<8:06:18,  1.46s/it, lr=7e-5, step_loss=0.00168]Steps:  20%|█▉        | 4907/24850 [2:01:40<8:06:19,  1.46s/it, lr=7e-5, step_loss=0.00168]Steps:  20%|█▉        | 4907/24850 [2:01:40<8:06:19,  1.46s/it, lr=7e-5, step_loss=0.0481] Steps:  20%|█▉        | 4908/24850 [2:01:41<8:11:29,  1.48s/it, lr=7e-5, step_loss=0.0481]Steps:  20%|█▉        | 4908/24850 [2:01:41<8:11:29,  1.48s/it, lr=7e-5, step_loss=0.0313]Steps:  20%|█▉        | 4909/24850 [2:01:43<8:10:18,  1.48s/it, lr=7e-5, step_loss=0.0313]Steps:  20%|█▉        | 4909/24850 [2:01:43<8:10:18,  1.48s/it, lr=7e-5, step_loss=0.111] Steps:  20%|█▉        | 4910/24850 [2:01:44<8:08:49,  1.47s/it, lr=7e-5, step_loss=0.111]Steps:  20%|█▉        | 4910/24850 [2:01:44<8:08:49,  1.47s/it, lr=7e-5, step_loss=0.163]Steps:  20%|█▉        | 4911/24850 [2:01:46<8:07:57,  1.47s/it, lr=7e-5, step_loss=0.163]Steps:  20%|█▉        | 4911/24850 [2:01:46<8:07:57,  1.47s/it, lr=7e-5, step_loss=0.00637]Steps:  20%|█▉        | 4912/24850 [2:01:47<8:05:41,  1.46s/it, lr=7e-5, step_loss=0.00637]Steps:  20%|█▉        | 4912/24850 [2:01:47<8:05:41,  1.46s/it, lr=7e-5, step_loss=0.0535] Steps:  20%|█▉        | 4913/24850 [2:01:49<8:05:58,  1.46s/it, lr=7e-5, step_loss=0.0535]Steps:  20%|█▉        | 4913/24850 [2:01:49<8:05:58,  1.46s/it, lr=7e-5, step_loss=0.0734]Steps:  20%|█▉        | 4914/24850 [2:01:50<8:04:49,  1.46s/it, lr=7e-5, step_loss=0.0734]Steps:  20%|█▉        | 4914/24850 [2:01:50<8:04:49,  1.46s/it, lr=7e-5, step_loss=0.0905]Steps:  20%|█▉        | 4915/24850 [2:01:52<8:04:05,  1.46s/it, lr=7e-5, step_loss=0.0905]Steps:  20%|█▉        | 4915/24850 [2:01:52<8:04:05,  1.46s/it, lr=7e-5, step_loss=0.0218]Steps:  20%|█▉        | 4916/24850 [2:01:53<8:04:41,  1.46s/it, lr=7e-5, step_loss=0.0218]Steps:  20%|█▉        | 4916/24850 [2:01:53<8:04:41,  1.46s/it, lr=7e-5, step_loss=0.0114]Steps:  20%|█▉        | 4917/24850 [2:01:55<8:04:41,  1.46s/it, lr=7e-5, step_loss=0.0114]Steps:  20%|█▉        | 4917/24850 [2:01:55<8:04:41,  1.46s/it, lr=7e-5, step_loss=0.0188]torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:  20%|█▉        | 4918/24850 [2:01:56<8:03:50,  1.46s/it, lr=7e-5, step_loss=0.0188]Steps:  20%|█▉        | 4918/24850 [2:01:56<8:03:50,  1.46s/it, lr=7e-5, step_loss=0.0252]Steps:  20%|█▉        | 4919/24850 [2:01:57<8:04:23,  1.46s/it, lr=7e-5, step_loss=0.0252]Steps:  20%|█▉        | 4919/24850 [2:01:57<8:04:23,  1.46s/it, lr=7e-5, step_loss=0.0283]Steps:  20%|█▉        | 4920/24850 [2:01:59<8:03:16,  1.45s/it, lr=7e-5, step_loss=0.0283]Steps:  20%|█▉        | 4920/24850 [2:01:59<8:03:16,  1.45s/it, lr=7e-5, step_loss=0.0484]Steps:  20%|█▉        | 4921/24850 [2:02:00<8:03:40,  1.46s/it, lr=7e-5, step_loss=0.0484]Steps:  20%|█▉        | 4921/24850 [2:02:00<8:03:40,  1.46s/it, lr=7e-5, step_loss=0.0223]Steps:  20%|█▉        | 4922/24850 [2:02:02<8:04:21,  1.46s/it, lr=7e-5, step_loss=0.0223]Steps:  20%|█▉        | 4922/24850 [2:02:02<8:04:21,  1.46s/it, lr=7e-5, step_loss=0.0107]Steps:  20%|█▉        | 4923/24850 [2:02:03<8:05:31,  1.46s/it, lr=7e-5, step_loss=0.0107]Steps:  20%|█▉        | 4923/24850 [2:02:03<8:05:31,  1.46s/it, lr=7e-5, step_loss=0.0202]Steps:  20%|█▉        | 4924/24850 [2:02:05<8:04:50,  1.46s/it, lr=7e-5, step_loss=0.0202]Steps:  20%|█▉        | 4924/24850 [2:02:05<8:04:50,  1.46s/it, lr=7e-5, step_loss=0.00542]Steps:  20%|█▉        | 4925/24850 [2:02:06<8:07:18,  1.47s/it, lr=7e-5, step_loss=0.00542]Steps:  20%|█▉        | 4925/24850 [2:02:06<8:07:18,  1.47s/it, lr=7e-5, step_loss=0.00245]Steps:  20%|█▉        | 4926/24850 [2:02:08<8:06:30,  1.47s/it, lr=7e-5, step_loss=0.00245]Steps:  20%|█▉        | 4926/24850 [2:02:08<8:06:30,  1.47s/it, lr=7e-5, step_loss=0.0156] Steps:  20%|█▉        | 4927/24850 [2:02:09<8:05:47,  1.46s/it, lr=7e-5, step_loss=0.0156]Steps:  20%|█▉        | 4927/24850 [2:02:09<8:05:47,  1.46s/it, lr=7e-5, step_loss=0.0137]Steps:  20%|█▉        | 4928/24850 [2:02:11<8:05:44,  1.46s/it, lr=7e-5, step_loss=0.0137]Steps:  20%|█▉        | 4928/24850 [2:02:11<8:05:44,  1.46s/it, lr=7e-5, step_loss=0.00738]Steps:  20%|█▉        | 4929/24850 [2:02:12<8:06:22,  1.46s/it, lr=7e-5, step_loss=0.00738]Steps:  20%|█▉        | 4929/24850 [2:02:12<8:06:22,  1.46s/it, lr=7e-5, step_loss=0.019]  Steps:  20%|█▉        | 4930/24850 [2:02:14<8:06:28,  1.47s/it, lr=7e-5, step_loss=0.019]Steps:  20%|█▉        | 4930/24850 [2:02:14<8:06:28,  1.47s/it, lr=7e-5, step_loss=0.00777]Steps:  20%|█▉        | 4931/24850 [2:02:15<8:05:48,  1.46s/it, lr=7e-5, step_loss=0.00777]Steps:  20%|█▉        | 4931/24850 [2:02:15<8:05:48,  1.46s/it, lr=7e-5, step_loss=0.0228] Steps:  20%|█▉        | 4932/24850 [2:02:16<8:06:30,  1.47s/it, lr=7e-5, step_loss=0.0228]Steps:  20%|█▉        | 4932/24850 [2:02:16<8:06:30,  1.47s/it, lr=7e-5, step_loss=0.0256]Steps:  20%|█▉        | 4933/24850 [2:02:18<8:06:38,  1.47s/it, lr=7e-5, step_loss=0.0256]Steps:  20%|█▉        | 4933/24850 [2:02:18<8:06:38,  1.47s/it, lr=7e-5, step_loss=0.0128]Steps:  20%|█▉        | 4934/24850 [2:02:19<8:06:16,  1.46s/it, lr=7e-5, step_loss=0.0128]Steps:  20%|█▉        | 4934/24850 [2:02:19<8:06:16,  1.46s/it, lr=7e-5, step_loss=0.00282]Steps:  20%|█▉        | 4935/24850 [2:02:21<8:05:53,  1.46s/it, lr=7e-5, step_loss=0.00282]Steps:  20%|█▉        | 4935/24850 [2:02:21<8:05:53,  1.46s/it, lr=7e-5, step_loss=0.0322] Steps:  20%|█▉        | 4936/24850 [2:02:22<8:09:14,  1.47s/it, lr=7e-5, step_loss=0.0322]Steps:  20%|█▉        | 4936/24850 [2:02:22<8:09:14,  1.47s/it, lr=7e-5, step_loss=0.0832]Steps:  20%|█▉        | 4937/24850 [2:02:24<8:07:59,  1.47s/it, lr=7e-5, step_loss=0.0832]Steps:  20%|█▉        | 4937/24850 [2:02:24<8:07:59,  1.47s/it, lr=7e-5, step_loss=0.0375]Steps:  20%|█▉        | 4938/24850 [2:02:25<8:05:58,  1.46s/it, lr=7e-5, step_loss=0.0375]Steps:  20%|█▉        | 4938/24850 [2:02:25<8:05:58,  1.46s/it, lr=7e-5, step_loss=0.00912]Steps:  20%|█▉        | 4939/24850 [2:02:27<8:25:05,  1.52s/it, lr=7e-5, step_loss=0.00912]Steps:  20%|█▉        | 4939/24850 [2:02:27<8:25:05,  1.52s/it, lr=7e-5, step_loss=0.00878]Steps:  20%|█▉        | 4940/24850 [2:02:28<8:18:22,  1.50s/it, lr=7e-5, step_loss=0.00878]Steps:  20%|█▉        | 4940/24850 [2:02:28<8:18:22,  1.50s/it, lr=7e-5, step_loss=0.0146] Steps:  20%|█▉        | 4941/24850 [2:02:31<9:45:06,  1.76s/it, lr=7e-5, step_loss=0.0146]Steps:  20%|█▉        | 4941/24850 [2:02:31<9:45:06,  1.76s/it, lr=7e-5, step_loss=0.0217]Steps:  20%|█▉        | 4942/24850 [2:02:32<9:13:28,  1.67s/it, lr=7e-5, step_loss=0.0217]Steps:  20%|█▉        | 4942/24850 [2:02:32<9:13:28,  1.67s/it, lr=7e-5, step_loss=0.00431]Steps:  20%|█▉        | 4943/24850 [2:02:34<8:53:49,  1.61s/it, lr=7e-5, step_loss=0.00431]Steps:  20%|█▉        | 4943/24850 [2:02:34<8:53:49,  1.61s/it, lr=7e-5, step_loss=0.0116] Steps:  20%|█▉        | 4944/24850 [2:02:35<8:38:33,  1.56s/it, lr=7e-5, step_loss=0.0116]Steps:  20%|█▉        | 4944/24850 [2:02:35<8:38:33,  1.56s/it, lr=7e-5, step_loss=0.023] Steps:  20%|█▉        | 4945/24850 [2:02:37<8:28:08,  1.53s/it, lr=7e-5, step_loss=0.023]Steps:  20%|█▉        | 4945/24850 [2:02:37<8:28:08,  1.53s/it, lr=7e-5, step_loss=0.0833]torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
Steps:  20%|█▉        | 4946/24850 [2:02:38<8:22:23,  1.51s/it, lr=7e-5, step_loss=0.0833]Steps:  20%|█▉        | 4946/24850 [2:02:38<8:22:23,  1.51s/it, lr=7e-5, step_loss=0.00645]Steps:  20%|█▉        | 4947/24850 [2:02:40<8:17:25,  1.50s/it, lr=7e-5, step_loss=0.00645]Steps:  20%|█▉        | 4947/24850 [2:02:40<8:17:25,  1.50s/it, lr=7e-5, step_loss=0.0384] Steps:  20%|█▉        | 4948/24850 [2:02:41<8:13:19,  1.49s/it, lr=7e-5, step_loss=0.0384]Steps:  20%|█▉        | 4948/24850 [2:02:41<8:13:19,  1.49s/it, lr=7e-5, step_loss=0.00497]Steps:  20%|█▉        | 4949/24850 [2:02:42<8:09:56,  1.48s/it, lr=7e-5, step_loss=0.00497]Steps:  20%|█▉        | 4949/24850 [2:02:42<8:09:56,  1.48s/it, lr=7e-5, step_loss=0.0104] Steps:  20%|█▉        | 4950/24850 [2:02:44<8:08:26,  1.47s/it, lr=7e-5, step_loss=0.0104]Steps:  20%|█▉        | 4950/24850 [2:02:44<8:08:26,  1.47s/it, lr=7e-5, step_loss=0.0566]Steps:  20%|█▉        | 4951/24850 [2:02:45<8:07:01,  1.47s/it, lr=7e-5, step_loss=0.0566]Steps:  20%|█▉        | 4951/24850 [2:02:45<8:07:01,  1.47s/it, lr=7e-5, step_loss=0.00524]Steps:  20%|█▉        | 4952/24850 [2:02:47<8:05:43,  1.46s/it, lr=7e-5, step_loss=0.00524]Steps:  20%|█▉        | 4952/24850 [2:02:47<8:05:43,  1.46s/it, lr=7e-5, step_loss=0.038]  Steps:  20%|█▉        | 4953/24850 [2:02:48<8:03:51,  1.46s/it, lr=7e-5, step_loss=0.038]Steps:  20%|█▉        | 4953/24850 [2:02:48<8:03:51,  1.46s/it, lr=7e-5, step_loss=0.0339]Steps:  20%|█▉        | 4954/24850 [2:02:50<8:03:50,  1.46s/it, lr=7e-5, step_loss=0.0339]Steps:  20%|█▉        | 4954/24850 [2:02:50<8:03:50,  1.46s/it, lr=7e-5, step_loss=0.0103]Steps:  20%|█▉        | 4955/24850 [2:02:51<8:02:45,  1.46s/it, lr=7e-5, step_loss=0.0103]Steps:  20%|█▉        | 4955/24850 [2:02:51<8:02:45,  1.46s/it, lr=7e-5, step_loss=0.0115]Steps:  20%|█▉        | 4956/24850 [2:02:53<8:03:50,  1.46s/it, lr=7e-5, step_loss=0.0115]Steps:  20%|█▉        | 4956/24850 [2:02:53<8:03:50,  1.46s/it, lr=7e-5, step_loss=0.0553]Steps:  20%|█▉        | 4957/24850 [2:02:54<8:03:50,  1.46s/it, lr=7e-5, step_loss=0.0553]Steps:  20%|█▉        | 4957/24850 [2:02:54<8:03:50,  1.46s/it, lr=7e-5, step_loss=0.0398]Steps:  20%|█▉        | 4958/24850 [2:02:56<8:03:07,  1.46s/it, lr=7e-5, step_loss=0.0398]Steps:  20%|█▉        | 4958/24850 [2:02:56<8:03:07,  1.46s/it, lr=7e-5, step_loss=0.0236]Steps:  20%|█▉        | 4959/24850 [2:02:57<8:02:28,  1.46s/it, lr=7e-5, step_loss=0.0236]Steps:  20%|█▉        | 4959/24850 [2:02:57<8:02:28,  1.46s/it, lr=7e-5, step_loss=0.034] Steps:  20%|█▉        | 4960/24850 [2:02:58<8:02:43,  1.46s/it, lr=7e-5, step_loss=0.034]Steps:  20%|█▉        | 4960/24850 [2:02:58<8:02:43,  1.46s/it, lr=7e-5, step_loss=0.0657]Steps:  20%|█▉        | 4961/24850 [2:03:00<8:02:33,  1.46s/it, lr=7e-5, step_loss=0.0657]Steps:  20%|█▉        | 4961/24850 [2:03:00<8:02:33,  1.46s/it, lr=7e-5, step_loss=0.0496]Steps:  20%|█▉        | 4962/24850 [2:03:01<8:03:02,  1.46s/it, lr=7e-5, step_loss=0.0496]Steps:  20%|█▉        | 4962/24850 [2:03:01<8:03:02,  1.46s/it, lr=7e-5, step_loss=0.0202]Steps:  20%|█▉        | 4963/24850 [2:03:03<8:02:29,  1.46s/it, lr=7e-5, step_loss=0.0202]Steps:  20%|█▉        | 4963/24850 [2:03:03<8:02:29,  1.46s/it, lr=7e-5, step_loss=0.0648]Steps:  20%|█▉        | 4964/24850 [2:03:04<8:03:58,  1.46s/it, lr=7e-5, step_loss=0.0648]Steps:  20%|█▉        | 4964/24850 [2:03:04<8:03:58,  1.46s/it, lr=7e-5, step_loss=0.0191]Steps:  20%|█▉        | 4965/24850 [2:03:06<8:03:20,  1.46s/it, lr=7e-5, step_loss=0.0191]Steps:  20%|█▉        | 4965/24850 [2:03:06<8:03:20,  1.46s/it, lr=7e-5, step_loss=0.00644]Steps:  20%|█▉        | 4966/24850 [2:03:07<8:03:22,  1.46s/it, lr=7e-5, step_loss=0.00644]Steps:  20%|█▉        | 4966/24850 [2:03:07<8:03:22,  1.46s/it, lr=7e-5, step_loss=0.0311] Steps:  20%|█▉        | 4967/24850 [2:03:09<8:04:06,  1.46s/it, lr=7e-5, step_loss=0.0311]Steps:  20%|█▉        | 4967/24850 [2:03:09<8:04:06,  1.46s/it, lr=7e-5, step_loss=0.00269]Steps:  20%|█▉        | 4968/24850 [2:03:10<8:02:53,  1.46s/it, lr=7e-5, step_loss=0.00269]Steps:  20%|█▉        | 4968/24850 [2:03:10<8:02:53,  1.46s/it, lr=7e-5, step_loss=0.0146] Steps:  20%|█▉        | 4969/24850 [2:03:12<8:03:28,  1.46s/it, lr=7e-5, step_loss=0.0146]Steps:  20%|█▉        | 4969/24850 [2:03:12<8:03:28,  1.46s/it, lr=7e-5, step_loss=0.0454]Steps:  20%|██        | 4970/24850 [2:03:13<8:05:31,  1.47s/it, lr=7e-5, step_loss=0.0454]Steps:  20%|██        | 4970/24850 [2:03:13<8:05:31,  1.47s/it, lr=7e-5, step_loss=0.106] Steps:  20%|██        | 4971/24850 [2:03:15<8:05:20,  1.46s/it, lr=7e-5, step_loss=0.106]Steps:  20%|██        | 4971/24850 [2:03:15<8:05:20,  1.46s/it, lr=7e-5, step_loss=0.0222]Steps:  20%|██        | 4972/24850 [2:03:16<8:07:42,  1.47s/it, lr=7e-5, step_loss=0.0222]Steps:  20%|██        | 4972/24850 [2:03:16<8:07:42,  1.47s/it, lr=7e-5, step_loss=0.0152](512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512)Steps:  20%|██        | 4973/24850 [2:03:17<8:07:01,  1.47s/it, lr=7e-5, step_loss=0.0152]Steps:  20%|██        | 4973/24850 [2:03:17<8:07:01,  1.47s/it, lr=7e-5, step_loss=0.006] Steps:  20%|██        | 4974/24850 [2:03:19<8:05:45,  1.47s/it, lr=7e-5, step_loss=0.006]Steps:  20%|██        | 4974/24850 [2:03:19<8:05:45,  1.47s/it, lr=7e-5, step_loss=0.0526]Steps:  20%|██        | 4975/24850 [2:03:20<8:04:48,  1.46s/it, lr=7e-5, step_loss=0.0526]Steps:  20%|██        | 4975/24850 [2:03:20<8:04:48,  1.46s/it, lr=7e-5, step_loss=0.0123]Steps:  20%|██        | 4976/24850 [2:03:22<8:03:11,  1.46s/it, lr=7e-5, step_loss=0.0123]Steps:  20%|██        | 4976/24850 [2:03:22<8:03:11,  1.46s/it, lr=7e-5, step_loss=0.0196]Steps:  20%|██        | 4977/24850 [2:03:23<8:05:46,  1.47s/it, lr=7e-5, step_loss=0.0196]Steps:  20%|██        | 4977/24850 [2:03:23<8:05:46,  1.47s/it, lr=7e-5, step_loss=0.00553]Steps:  20%|██        | 4978/24850 [2:03:25<8:07:20,  1.47s/it, lr=7e-5, step_loss=0.00553]Steps:  20%|██        | 4978/24850 [2:03:25<8:07:20,  1.47s/it, lr=7e-5, step_loss=0.0441] Steps:  20%|██        | 4979/24850 [2:03:26<8:07:59,  1.47s/it, lr=7e-5, step_loss=0.0441]Steps:  20%|██        | 4979/24850 [2:03:26<8:07:59,  1.47s/it, lr=7e-5, step_loss=0.0249]Steps:  20%|██        | 4980/24850 [2:03:28<8:06:01,  1.47s/it, lr=7e-5, step_loss=0.0249]Steps:  20%|██        | 4980/24850 [2:03:28<8:06:01,  1.47s/it, lr=7e-5, step_loss=0.0955]Steps:  20%|██        | 4981/24850 [2:03:29<8:05:35,  1.47s/it, lr=7e-5, step_loss=0.0955]Steps:  20%|██        | 4981/24850 [2:03:29<8:05:35,  1.47s/it, lr=7e-5, step_loss=0.00117]Steps:  20%|██        | 4982/24850 [2:03:31<8:05:04,  1.46s/it, lr=7e-5, step_loss=0.00117]Steps:  20%|██        | 4982/24850 [2:03:31<8:05:04,  1.46s/it, lr=7e-5, step_loss=0.11]   Steps:  20%|██        | 4983/24850 [2:03:32<8:05:03,  1.46s/it, lr=7e-5, step_loss=0.11]Steps:  20%|██        | 4983/24850 [2:03:32<8:05:03,  1.46s/it, lr=7e-5, step_loss=0.0397]Steps:  20%|██        | 4984/24850 [2:03:34<8:05:18,  1.47s/it, lr=7e-5, step_loss=0.0397]Steps:  20%|██        | 4984/24850 [2:03:34<8:05:18,  1.47s/it, lr=7e-5, step_loss=0.026] Steps:  20%|██        | 4985/24850 [2:03:35<8:04:52,  1.46s/it, lr=7e-5, step_loss=0.026]Steps:  20%|██        | 4985/24850 [2:03:35<8:04:52,  1.46s/it, lr=7e-5, step_loss=0.0177]Steps:  20%|██        | 4986/24850 [2:03:37<8:05:04,  1.47s/it, lr=7e-5, step_loss=0.0177]Steps:  20%|██        | 4986/24850 [2:03:37<8:05:04,  1.47s/it, lr=7e-5, step_loss=0.0311]Steps:  20%|██        | 4987/24850 [2:03:38<8:04:46,  1.46s/it, lr=7e-5, step_loss=0.0311]Steps:  20%|██        | 4987/24850 [2:03:38<8:04:46,  1.46s/it, lr=7e-5, step_loss=0.0166]Steps:  20%|██        | 4988/24850 [2:03:39<8:03:50,  1.46s/it, lr=7e-5, step_loss=0.0166]Steps:  20%|██        | 4988/24850 [2:03:39<8:03:50,  1.46s/it, lr=7e-5, step_loss=0.00325]Steps:  20%|██        | 4989/24850 [2:03:41<8:03:32,  1.46s/it, lr=7e-5, step_loss=0.00325]Steps:  20%|██        | 4989/24850 [2:03:41<8:03:32,  1.46s/it, lr=7e-5, step_loss=0.00158]Steps:  20%|██        | 4990/24850 [2:03:42<8:03:17,  1.46s/it, lr=7e-5, step_loss=0.00158]04/12/2024 12:13:51 - INFO - __main__ - 2 checkpoints already exist, removing 1 checkpoints
04/12/2024 12:13:51 - INFO - __main__ - removing checkpoints: checkpoint-4000
04/12/2024 12:13:52 - INFO - accelerate.accelerator - Saving current state to /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-5000
Configuration saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-5000/unet/config.json
Model weights saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-5000/unet/diffusion_pytorch_model.safetensors
Model weights saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-5000/unet/pytorch_lora_weights.safetensors
04/12/2024 12:14:28 - INFO - accelerate.checkpointing - Optimizer state saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-5000/optimizer.bin
04/12/2024 12:14:28 - INFO - accelerate.checkpointing - Scheduler state saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-5000/scheduler.bin
04/12/2024 12:14:28 - INFO - accelerate.checkpointing - Random states saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-5000/random_states_0.pkl
04/12/2024 12:14:28 - INFO - __main__ - Saved state to /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-5000
Steps:  20%|██        | 4990/24850 [2:04:20<8:03:17,  1.46s/it, lr=7e-5, step_loss=0.0683] Steps:  20%|██        | 4991/24850 [2:04:28<81:31:10, 14.78s/it, lr=7e-5, step_loss=0.0683]Steps:  20%|██        | 4991/24850 [2:04:28<81:31:10, 14.78s/it, lr=7e-5, step_loss=0.0284]Steps:  20%|██        | 4992/24850 [2:04:30<59:24:35, 10.77s/it, lr=7e-5, step_loss=0.0284]Steps:  20%|██        | 4992/24850 [2:04:30<59:24:35, 10.77s/it, lr=7e-5, step_loss=0.00609]Steps:  20%|██        | 4993/24850 [2:04:31<43:57:47,  7.97s/it, lr=7e-5, step_loss=0.00609]Steps:  20%|██        | 4993/24850 [2:04:31<43:57:47,  7.97s/it, lr=7e-5, step_loss=0.0322] Steps:  20%|██        | 4994/24850 [2:04:33<33:08:53,  6.01s/it, lr=7e-5, step_loss=0.0322]Steps:  20%|██        | 4994/24850 [2:04:33<33:08:53,  6.01s/it, lr=7e-5, step_loss=0.00551]Steps:  20%|██        | 4995/24850 [2:04:34<25:36:04,  4.64s/it, lr=7e-5, step_loss=0.00551]Steps:  20%|██        | 4995/24850 [2:04:34<25:36:04,  4.64s/it, lr=7e-5, step_loss=0.0221] Steps:  20%|██        | 4996/24850 [2:04:35<20:16:37,  3.68s/it, lr=7e-5, step_loss=0.0221]Steps:  20%|██        | 4996/24850 [2:04:35<20:16:37,  3.68s/it, lr=7e-5, step_loss=0.00206]Steps:  20%|██        | 4997/24850 [2:04:37<16:33:58,  3.00s/it, lr=7e-5, step_loss=0.00206]Steps:  20%|██        | 4997/24850 [2:04:37<16:33:58,  3.00s/it, lr=7e-5, step_loss=0.00515]Steps:  20%|██        | 4998/24850 [2:04:38<13:58:47,  2.54s/it, lr=7e-5, step_loss=0.00515]Steps:  20%|██        | 4998/24850 [2:04:38<13:58:47,  2.54s/it, lr=7e-5, step_loss=0.107]  Steps:  20%|██        | 4999/24850 [2:04:40<12:08:31,  2.20s/it, lr=7e-5, step_loss=0.107]Steps:  20%|██        | 4999/24850 [2:04:40<12:08:31,  2.20s/it, lr=7e-5, step_loss=0.000752] torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:  20%|██        | 5000/24850 [2:04:41<10:52:03,  1.97s/it, lr=7e-5, step_loss=0.000752]Steps:  20%|██        | 5000/24850 [2:04:41<10:52:03,  1.97s/it, lr=7e-5, step_loss=0.0316]  Steps:  20%|██        | 5001/24850 [2:04:43<10:00:44,  1.82s/it, lr=7e-5, step_loss=0.0316]Steps:  20%|██        | 5001/24850 [2:04:43<10:00:44,  1.82s/it, lr=7e-5, step_loss=0.0189]Steps:  20%|██        | 5002/24850 [2:04:44<9:23:35,  1.70s/it, lr=7e-5, step_loss=0.0189] Steps:  20%|██        | 5002/24850 [2:04:44<9:23:35,  1.70s/it, lr=7e-5, step_loss=0.0121]Steps:  20%|██        | 5003/24850 [2:04:45<8:58:33,  1.63s/it, lr=7e-5, step_loss=0.0121]Steps:  20%|██        | 5003/24850 [2:04:45<8:58:33,  1.63s/it, lr=7e-5, step_loss=0.0254]Steps:  20%|██        | 5004/24850 [2:04:47<8:40:28,  1.57s/it, lr=7e-5, step_loss=0.0254]Steps:  20%|██        | 5004/24850 [2:04:47<8:40:28,  1.57s/it, lr=7e-5, step_loss=0.0164]Steps:  20%|██        | 5005/24850 [2:04:48<8:28:17,  1.54s/it, lr=7e-5, step_loss=0.0164]Steps:  20%|██        | 5005/24850 [2:04:48<8:28:17,  1.54s/it, lr=7e-5, step_loss=0.00779]Steps:  20%|██        | 5006/24850 [2:04:50<8:20:11,  1.51s/it, lr=7e-5, step_loss=0.00779]Steps:  20%|██        | 5006/24850 [2:04:50<8:20:11,  1.51s/it, lr=7e-5, step_loss=0.019]  Steps:  20%|██        | 5007/24850 [2:04:51<8:14:23,  1.49s/it, lr=7e-5, step_loss=0.019]Steps:  20%|██        | 5007/24850 [2:04:51<8:14:23,  1.49s/it, lr=7e-5, step_loss=0.107]Steps:  20%|██        | 5008/24850 [2:04:53<8:09:05,  1.48s/it, lr=7e-5, step_loss=0.107]Steps:  20%|██        | 5008/24850 [2:04:53<8:09:05,  1.48s/it, lr=7e-5, step_loss=0.0165]Steps:  20%|██        | 5009/24850 [2:04:54<8:06:29,  1.47s/it, lr=7e-5, step_loss=0.0165]Steps:  20%|██        | 5009/24850 [2:04:54<8:06:29,  1.47s/it, lr=7e-5, step_loss=0.108] Steps:  20%|██        | 5010/24850 [2:04:56<8:04:44,  1.47s/it, lr=7e-5, step_loss=0.108]Steps:  20%|██        | 5010/24850 [2:04:56<8:04:44,  1.47s/it, lr=7e-5, step_loss=0.00172]Steps:  20%|██        | 5011/24850 [2:04:57<8:02:43,  1.46s/it, lr=7e-5, step_loss=0.00172]Steps:  20%|██        | 5011/24850 [2:04:57<8:02:43,  1.46s/it, lr=7e-5, step_loss=0.00622]Steps:  20%|██        | 5012/24850 [2:04:59<8:02:21,  1.46s/it, lr=7e-5, step_loss=0.00622]Steps:  20%|██        | 5012/24850 [2:04:59<8:02:21,  1.46s/it, lr=7e-5, step_loss=0.0436] Steps:  20%|██        | 5013/24850 [2:05:00<8:00:32,  1.45s/it, lr=7e-5, step_loss=0.0436]Steps:  20%|██        | 5013/24850 [2:05:00<8:00:32,  1.45s/it, lr=7e-5, step_loss=0.0128]Steps:  20%|██        | 5014/24850 [2:05:01<7:59:58,  1.45s/it, lr=7e-5, step_loss=0.0128]Steps:  20%|██        | 5014/24850 [2:05:01<7:59:58,  1.45s/it, lr=7e-5, step_loss=0.0288]Steps:  20%|██        | 5015/24850 [2:05:03<7:59:53,  1.45s/it, lr=7e-5, step_loss=0.0288]Steps:  20%|██        | 5015/24850 [2:05:03<7:59:53,  1.45s/it, lr=7e-5, step_loss=0.0306]Steps:  20%|██        | 5016/24850 [2:05:04<7:59:09,  1.45s/it, lr=7e-5, step_loss=0.0306]Steps:  20%|██        | 5016/24850 [2:05:04<7:59:09,  1.45s/it, lr=7e-5, step_loss=0.0472]Steps:  20%|██        | 5017/24850 [2:05:06<7:59:39,  1.45s/it, lr=7e-5, step_loss=0.0472]Steps:  20%|██        | 5017/24850 [2:05:06<7:59:39,  1.45s/it, lr=7e-5, step_loss=0.0186]Steps:  20%|██        | 5018/24850 [2:05:07<7:59:49,  1.45s/it, lr=7e-5, step_loss=0.0186]Steps:  20%|██        | 5018/24850 [2:05:07<7:59:49,  1.45s/it, lr=7e-5, step_loss=0.0162]Steps:  20%|██        | 5019/24850 [2:05:09<7:59:46,  1.45s/it, lr=7e-5, step_loss=0.0162]Steps:  20%|██        | 5019/24850 [2:05:09<7:59:46,  1.45s/it, lr=7e-5, step_loss=0.0273]Steps:  20%|██        | 5020/24850 [2:05:10<7:57:50,  1.45s/it, lr=7e-5, step_loss=0.0273]Steps:  20%|██        | 5020/24850 [2:05:10<7:57:50,  1.45s/it, lr=7e-5, step_loss=0.024] Steps:  20%|██        | 5021/24850 [2:05:12<7:59:26,  1.45s/it, lr=7e-5, step_loss=0.024]Steps:  20%|██        | 5021/24850 [2:05:12<7:59:26,  1.45s/it, lr=7e-5, step_loss=0.0381]Steps:  20%|██        | 5022/24850 [2:05:13<7:57:57,  1.45s/it, lr=7e-5, step_loss=0.0381]Steps:  20%|██        | 5022/24850 [2:05:13<7:57:57,  1.45s/it, lr=7e-5, step_loss=0.0168]Steps:  20%|██        | 5023/24850 [2:05:14<7:57:49,  1.45s/it, lr=7e-5, step_loss=0.0168]Steps:  20%|██        | 5023/24850 [2:05:14<7:57:49,  1.45s/it, lr=7e-5, step_loss=0.00902]Steps:  20%|██        | 5024/24850 [2:05:16<7:56:46,  1.44s/it, lr=7e-5, step_loss=0.00902]Steps:  20%|██        | 5024/24850 [2:05:16<7:56:46,  1.44s/it, lr=7e-5, step_loss=0.00516]Steps:  20%|██        | 5025/24850 [2:05:17<7:57:55,  1.45s/it, lr=7e-5, step_loss=0.00516]Steps:  20%|██        | 5025/24850 [2:05:17<7:57:55,  1.45s/it, lr=7e-5, step_loss=0.0292] Steps:  20%|██        | 5026/24850 [2:05:19<7:57:22,  1.44s/it, lr=7e-5, step_loss=0.0292]Steps:  20%|██        | 5026/24850 [2:05:19<7:57:22,  1.44s/it, lr=7e-5, step_loss=0.00249]torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  Steps:  20%|██        | 5027/24850 [2:05:20<7:59:18,  1.45s/it, lr=7e-5, step_loss=0.00249]Steps:  20%|██        | 5027/24850 [2:05:20<7:59:18,  1.45s/it, lr=7e-5, step_loss=0.0153] Steps:  20%|██        | 5028/24850 [2:05:22<7:58:34,  1.45s/it, lr=7e-5, step_loss=0.0153]Steps:  20%|██        | 5028/24850 [2:05:22<7:58:34,  1.45s/it, lr=7e-5, step_loss=0.00554]Steps:  20%|██        | 5029/24850 [2:05:23<7:58:16,  1.45s/it, lr=7e-5, step_loss=0.00554]Steps:  20%|██        | 5029/24850 [2:05:23<7:58:16,  1.45s/it, lr=7e-5, step_loss=0.0667] Steps:  20%|██        | 5030/24850 [2:05:25<7:58:55,  1.45s/it, lr=7e-5, step_loss=0.0667]Steps:  20%|██        | 5030/24850 [2:05:25<7:58:55,  1.45s/it, lr=7e-5, step_loss=0.105] Steps:  20%|██        | 5031/24850 [2:05:26<7:59:40,  1.45s/it, lr=7e-5, step_loss=0.105]Steps:  20%|██        | 5031/24850 [2:05:26<7:59:40,  1.45s/it, lr=7e-5, step_loss=0.00568]Steps:  20%|██        | 5032/24850 [2:05:27<7:58:42,  1.45s/it, lr=7e-5, step_loss=0.00568]Steps:  20%|██        | 5032/24850 [2:05:27<7:58:42,  1.45s/it, lr=7e-5, step_loss=0.0469] Steps:  20%|██        | 5033/24850 [2:05:29<8:00:41,  1.46s/it, lr=7e-5, step_loss=0.0469]Steps:  20%|██        | 5033/24850 [2:05:29<8:00:41,  1.46s/it, lr=7e-5, step_loss=0.00344]Steps:  20%|██        | 5034/24850 [2:05:30<8:01:39,  1.46s/it, lr=7e-5, step_loss=0.00344]Steps:  20%|██        | 5034/24850 [2:05:30<8:01:39,  1.46s/it, lr=7e-5, step_loss=0.009]  Steps:  20%|██        | 5035/24850 [2:05:32<8:03:09,  1.46s/it, lr=7e-5, step_loss=0.009]Steps:  20%|██        | 5035/24850 [2:05:32<8:03:09,  1.46s/it, lr=7e-5, step_loss=0.128]Steps:  20%|██        | 5036/24850 [2:05:33<8:02:07,  1.46s/it, lr=7e-5, step_loss=0.128]Steps:  20%|██        | 5036/24850 [2:05:33<8:02:07,  1.46s/it, lr=7e-5, step_loss=0.0165]Steps:  20%|██        | 5037/24850 [2:05:35<8:02:01,  1.46s/it, lr=7e-5, step_loss=0.0165]Steps:  20%|██        | 5037/24850 [2:05:35<8:02:01,  1.46s/it, lr=7e-5, step_loss=0.0287]Steps:  20%|██        | 5038/24850 [2:05:36<8:02:22,  1.46s/it, lr=7e-5, step_loss=0.0287]Steps:  20%|██        | 5038/24850 [2:05:36<8:02:22,  1.46s/it, lr=7e-5, step_loss=0.0261]Steps:  20%|██        | 5039/24850 [2:05:38<8:01:38,  1.46s/it, lr=7e-5, step_loss=0.0261]Steps:  20%|██        | 5039/24850 [2:05:38<8:01:38,  1.46s/it, lr=7e-5, step_loss=0.0233]Steps:  20%|██        | 5040/24850 [2:05:39<8:01:38,  1.46s/it, lr=7e-5, step_loss=0.0233]Steps:  20%|██        | 5040/24850 [2:05:39<8:01:38,  1.46s/it, lr=7e-5, step_loss=0.0697]Steps:  20%|██        | 5041/24850 [2:05:42<9:28:07,  1.72s/it, lr=7e-5, step_loss=0.0697]Steps:  20%|██        | 5041/24850 [2:05:42<9:28:07,  1.72s/it, lr=7e-5, step_loss=0.0413]Steps:  20%|██        | 5042/24850 [2:05:43<9:02:59,  1.64s/it, lr=7e-5, step_loss=0.0413]Steps:  20%|██        | 5042/24850 [2:05:43<9:02:59,  1.64s/it, lr=7e-5, step_loss=0.108] Steps:  20%|██        | 5043/24850 [2:05:44<8:45:03,  1.59s/it, lr=7e-5, step_loss=0.108]Steps:  20%|██        | 5043/24850 [2:05:44<8:45:03,  1.59s/it, lr=7e-5, step_loss=0.0078]Steps:  20%|██        | 5044/24850 [2:05:46<8:33:24,  1.56s/it, lr=7e-5, step_loss=0.0078]Steps:  20%|██        | 5044/24850 [2:05:46<8:33:24,  1.56s/it, lr=7e-5, step_loss=0.0269]Steps:  20%|██        | 5045/24850 [2:05:47<8:22:07,  1.52s/it, lr=7e-5, step_loss=0.0269]Steps:  20%|██        | 5045/24850 [2:05:47<8:22:07,  1.52s/it, lr=7e-5, step_loss=0.0057]Steps:  20%|██        | 5046/24850 [2:05:49<8:15:48,  1.50s/it, lr=7e-5, step_loss=0.0057]Steps:  20%|██        | 5046/24850 [2:05:49<8:15:48,  1.50s/it, lr=7e-5, step_loss=0.0231]Steps:  20%|██        | 5047/24850 [2:05:50<8:11:34,  1.49s/it, lr=7e-5, step_loss=0.0231]Steps:  20%|██        | 5047/24850 [2:05:50<8:11:34,  1.49s/it, lr=7e-5, step_loss=0.00349]Steps:  20%|██        | 5048/24850 [2:05:52<8:06:46,  1.47s/it, lr=7e-5, step_loss=0.00349]Steps:  20%|██        | 5048/24850 [2:05:52<8:06:46,  1.47s/it, lr=7e-5, step_loss=0.0139] Steps:  20%|██        | 5049/24850 [2:05:53<8:06:11,  1.47s/it, lr=7e-5, step_loss=0.0139]Steps:  20%|██        | 5049/24850 [2:05:53<8:06:11,  1.47s/it, lr=7e-5, step_loss=0.199] Steps:  20%|██        | 5050/24850 [2:05:55<8:04:11,  1.47s/it, lr=7e-5, step_loss=0.199]Steps:  20%|██        | 5050/24850 [2:05:55<8:04:11,  1.47s/it, lr=7e-5, step_loss=0.0137]Steps:  20%|██        | 5051/24850 [2:05:56<8:02:59,  1.46s/it, lr=7e-5, step_loss=0.0137]Steps:  20%|██        | 5051/24850 [2:05:56<8:02:59,  1.46s/it, lr=7e-5, step_loss=0.0168]Steps:  20%|██        | 5052/24850 [2:05:58<7:59:35,  1.45s/it, lr=7e-5, step_loss=0.0168]Steps:  20%|██        | 5052/24850 [2:05:58<7:59:35,  1.45s/it, lr=7e-5, step_loss=0.000453]Steps:  20%|██        | 5053/24850 [2:05:59<7:58:40,  1.45s/it, lr=7e-5, step_loss=0.000453]Steps:  20%|██        | 5053/24850 [2:05:59<7:58:40,  1.45s/it, lr=7e-5, step_loss=0.0436]  Steps:  20%|██        | 5054/24850 [2:06:00<7:58:49,  1.45s/it, lr=7e-5, step_loss=0.0436]Steps:  20%|██        | 5054/24850 [2:06:00<7:58:49,  1.45s/it, lr=7e-5, step_loss=0.0104]mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:  20%|██        | 5055/24850 [2:06:02<8:00:10,  1.46s/it, lr=7e-5, step_loss=0.0104]Steps:  20%|██        | 5055/24850 [2:06:02<8:00:10,  1.46s/it, lr=7e-5, step_loss=0.0331]Steps:  20%|██        | 5056/24850 [2:06:03<7:59:37,  1.45s/it, lr=7e-5, step_loss=0.0331]Steps:  20%|██        | 5056/24850 [2:06:03<7:59:37,  1.45s/it, lr=7e-5, step_loss=0.023] Steps:  20%|██        | 5057/24850 [2:06:05<7:59:02,  1.45s/it, lr=7e-5, step_loss=0.023]Steps:  20%|██        | 5057/24850 [2:06:05<7:59:02,  1.45s/it, lr=7e-5, step_loss=0.0676]Steps:  20%|██        | 5058/24850 [2:06:06<7:58:40,  1.45s/it, lr=7e-5, step_loss=0.0676]Steps:  20%|██        | 5058/24850 [2:06:06<7:58:40,  1.45s/it, lr=7e-5, step_loss=0.0556]Steps:  20%|██        | 5059/24850 [2:06:08<7:58:13,  1.45s/it, lr=7e-5, step_loss=0.0556]Steps:  20%|██        | 5059/24850 [2:06:08<7:58:13,  1.45s/it, lr=7e-5, step_loss=0.0195]Steps:  20%|██        | 5060/24850 [2:06:09<7:57:26,  1.45s/it, lr=7e-5, step_loss=0.0195]Steps:  20%|██        | 5060/24850 [2:06:09<7:57:26,  1.45s/it, lr=7e-5, step_loss=0.0699]Steps:  20%|██        | 5061/24850 [2:06:11<7:56:41,  1.45s/it, lr=7e-5, step_loss=0.0699]Steps:  20%|██        | 5061/24850 [2:06:11<7:56:41,  1.45s/it, lr=7e-5, step_loss=0.0201]Steps:  20%|██        | 5062/24850 [2:06:12<7:56:06,  1.44s/it, lr=7e-5, step_loss=0.0201]Steps:  20%|██        | 5062/24850 [2:06:12<7:56:06,  1.44s/it, lr=7e-5, step_loss=0.000634]Steps:  20%|██        | 5063/24850 [2:06:13<7:56:03,  1.44s/it, lr=7e-5, step_loss=0.000634]Steps:  20%|██        | 5063/24850 [2:06:13<7:56:03,  1.44s/it, lr=7e-5, step_loss=0.00608] Steps:  20%|██        | 5064/24850 [2:06:15<7:56:16,  1.44s/it, lr=7e-5, step_loss=0.00608]Steps:  20%|██        | 5064/24850 [2:06:15<7:56:16,  1.44s/it, lr=7e-5, step_loss=0.237]  Steps:  20%|██        | 5065/24850 [2:06:16<7:55:00,  1.44s/it, lr=7e-5, step_loss=0.237]Steps:  20%|██        | 5065/24850 [2:06:16<7:55:00,  1.44s/it, lr=7e-5, step_loss=0.011]Steps:  20%|██        | 5066/24850 [2:06:18<7:54:26,  1.44s/it, lr=7e-5, step_loss=0.011]Steps:  20%|██        | 5066/24850 [2:06:18<7:54:26,  1.44s/it, lr=7e-5, step_loss=0.0223]Steps:  20%|██        | 5067/24850 [2:06:19<7:54:31,  1.44s/it, lr=7e-5, step_loss=0.0223]Steps:  20%|██        | 5067/24850 [2:06:19<7:54:31,  1.44s/it, lr=7e-5, step_loss=0.0139]Steps:  20%|██        | 5068/24850 [2:06:21<7:55:45,  1.44s/it, lr=7e-5, step_loss=0.0139]Steps:  20%|██        | 5068/24850 [2:06:21<7:55:45,  1.44s/it, lr=7e-5, step_loss=0.31]  Steps:  20%|██        | 5069/24850 [2:06:22<7:56:39,  1.45s/it, lr=7e-5, step_loss=0.31]Steps:  20%|██        | 5069/24850 [2:06:22<7:56:39,  1.45s/it, lr=7e-5, step_loss=0.0124]Steps:  20%|██        | 5070/24850 [2:06:24<8:12:01,  1.49s/it, lr=7e-5, step_loss=0.0124]Steps:  20%|██        | 5070/24850 [2:06:24<8:12:01,  1.49s/it, lr=7e-5, step_loss=0.12]  04/12/2024 12:16:32 - INFO - __main__ - Running validation...
torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([9, 4, 64, 64])

Loading pipeline components...:   0%|          | 0/7 [00:00<?, ?it/s][A`text_config_dict` is provided which will be used to initialize `CLIPTextConfig`. The value `text_config["id2label"]` will be overriden.
`text_config_dict` is provided which will be used to initialize `CLIPTextConfig`. The value `text_config["bos_token_id"]` will be overriden.
`text_config_dict` is provided which will be used to initialize `CLIPTextConfig`. The value `text_config["eos_token_id"]` will be overriden.
Loaded safety_checker as StableDiffusionSafetyChecker from `safety_checker` subfolder of timbrooks/instruct-pix2pix.

Loading pipeline components...:  14%|█▍        | 1/7 [00:00<00:02,  2.61it/s][ALoaded feature_extractor as CLIPImageProcessor from `feature_extractor` subfolder of timbrooks/instruct-pix2pix.
{'timestep_spacing'} was not found in config. Values will be initialized to default values.
Loaded scheduler as EulerAncestralDiscreteScheduler from `scheduler` subfolder of timbrooks/instruct-pix2pix.
Loaded tokenizer as CLIPTokenizer from `tokenizer` subfolder of timbrooks/instruct-pix2pix.
Loading pipeline components...: 100%|██████████| 7/7 [00:00<00:00, 15.26it/s]
{'timestep_spacing'} was not found in config. Values will be initialized to default values.
conduct do_classifier_free_guidance, text_guidance: 16,image_guidance: 1

  0%|          | 0/50 [00:00<?, ?it/s][A
  2%|▏         | 1/50 [00:00<00:21,  2.24it/s][A
  4%|▍         | 2/50 [00:00<00:20,  2.35it/s][A
  6%|▌         | 3/50 [00:01<00:19,  2.41it/s][A
  8%|▊         | 4/50 [00:01<00:22,  2.06it/s][A
 10%|█         | 5/50 [00:02<00:20,  2.19it/s][A
 12%|█▏        | 6/50 [00:02<00:19,  2.28it/s][A
 14%|█▍        | 7/50 [00:03<00:18,  2.33it/s][A
 16%|█▌        | 8/50 [00:03<00:17,  2.37it/s][A
 18%|█▊        | 9/50 [00:03<00:17,  2.39it/s][A
 20%|██        | 10/50 [00:04<00:16,  2.41it/s][A
 22%|██▏       | 11/50 [00:04<00:16,  2.42it/s][A
 24%|██▍       | 12/50 [00:05<00:15,  2.43it/s][A
 26%|██▌       | 13/50 [00:05<00:15,  2.44it/s][A
 28%|██▊       | 14/50 [00:05<00:14,  2.44it/s][A
 30%|███       | 15/50 [00:06<00:14,  2.44it/s][A
 32%|███▏      | 16/50 [00:06<00:13,  2.44it/s][A
 34%|███▍      | 17/50 [00:07<00:13,  2.44it/s][A
 36%|███▌      | 18/50 [00:07<00:13,  2.45it/s][A
 38%|███▊      | 19/50 [00:07<00:12,  2.45it/s][A
 40%|████      | 20/50 [00:08<00:12,  2.45it/s][A
 42%|████▏     | 21/50 [00:08<00:11,  2.45it/s][A
 44%|████▍     | 22/50 [00:09<00:11,  2.45it/s][A
 46%|████▌     | 23/50 [00:09<00:11,  2.45it/s][A
 48%|████▊     | 24/50 [00:10<00:10,  2.45it/s][A
 50%|█████     | 25/50 [00:10<00:10,  2.45it/s][A
 52%|█████▏    | 26/50 [00:10<00:09,  2.45it/s][A
 54%|█████▍    | 27/50 [00:11<00:09,  2.45it/s][A
 56%|█████▌    | 28/50 [00:11<00:08,  2.45it/s][A
 58%|█████▊    | 29/50 [00:12<00:08,  2.45it/s][A
 60%|██████    | 30/50 [00:12<00:08,  2.45it/s][A
 62%|██████▏   | 31/50 [00:12<00:07,  2.45it/s][A
 64%|██████▍   | 32/50 [00:13<00:07,  2.45it/s][A
 66%|██████▌   | 33/50 [00:13<00:06,  2.45it/s][A(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) 
 68%|██████▊   | 34/50 [00:14<00:06,  2.45it/s][A
 70%|███████   | 35/50 [00:14<00:06,  2.45it/s][A
 72%|███████▏  | 36/50 [00:14<00:05,  2.45it/s][A
 74%|███████▍  | 37/50 [00:15<00:05,  2.45it/s][A
 76%|███████▌  | 38/50 [00:15<00:04,  2.45it/s][A
 78%|███████▊  | 39/50 [00:16<00:04,  2.45it/s][A
 80%|████████  | 40/50 [00:16<00:04,  2.40it/s][A
 82%|████████▏ | 41/50 [00:16<00:03,  2.42it/s][A
 84%|████████▍ | 42/50 [00:17<00:03,  2.42it/s][A
 86%|████████▌ | 43/50 [00:17<00:02,  2.42it/s][A
 88%|████████▊ | 44/50 [00:18<00:02,  2.42it/s][A
 90%|█████████ | 45/50 [00:18<00:02,  2.43it/s][A
 92%|█████████▏| 46/50 [00:19<00:01,  2.43it/s][A
 94%|█████████▍| 47/50 [00:19<00:01,  2.43it/s][A
 96%|█████████▌| 48/50 [00:19<00:00,  2.44it/s][A
 98%|█████████▊| 49/50 [00:20<00:00,  2.44it/s][A
100%|██████████| 50/50 [00:20<00:00,  2.44it/s][A100%|██████████| 50/50 [00:20<00:00,  2.42it/s]
04/12/2024 12:16:56 - INFO - __main__ - Running training...
torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 8, 8])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
(512, 512) torch.Size([3, 3, 1, 16, 16])
save img to : /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/images/modify the images for task ['flare']_val_step_5080_0.png modify the images for task ['flare']
writing inference outputs failed [Errno 2] No such file or directory: '/usr/bin/ffmpeg'
Steps:  20%|██        | 5071/24850 [2:06:55<57:23:57, 10.45s/it, lr=7e-5, step_loss=0.12]Steps:  20%|██        | 5071/24850 [2:06:55<57:23:57, 10.45s/it, lr=7e-5, step_loss=0.0181]Steps:  20%|██        | 5072/24850 [2:06:57<42:38:25,  7.76s/it, lr=7e-5, step_loss=0.0181]Steps:  20%|██        | 5072/24850 [2:06:57<42:38:25,  7.76s/it, lr=7e-5, step_loss=0.00948]Steps:  20%|██        | 5073/24850 [2:06:58<32:15:10,  5.87s/it, lr=7e-5, step_loss=0.00948]Steps:  20%|██        | 5073/24850 [2:06:58<32:15:10,  5.87s/it, lr=7e-5, step_loss=0.0241] Steps:  20%|██        | 5074/24850 [2:06:59<25:02:08,  4.56s/it, lr=7e-5, step_loss=0.0241]Steps:  20%|██        | 5074/24850 [2:06:59<25:02:08,  4.56s/it, lr=7e-5, step_loss=0.0343]Steps:  20%|██        | 5075/24850 [2:07:01<19:56:37,  3.63s/it, lr=7e-5, step_loss=0.0343]Steps:  20%|██        | 5075/24850 [2:07:01<19:56:37,  3.63s/it, lr=7e-5, step_loss=0.0283]Steps:  20%|██        | 5076/24850 [2:07:02<16:23:06,  2.98s/it, lr=7e-5, step_loss=0.0283]Steps:  20%|██        | 5076/24850 [2:07:02<16:23:06,  2.98s/it, lr=7e-5, step_loss=0.0146]Steps:  20%|██        | 5077/24850 [2:07:04<13:51:50,  2.52s/it, lr=7e-5, step_loss=0.0146]Steps:  20%|██        | 5077/24850 [2:07:04<13:51:50,  2.52s/it, lr=7e-5, step_loss=0.028] Steps:  20%|██        | 5078/24850 [2:07:05<12:10:21,  2.22s/it, lr=7e-5, step_loss=0.028]Steps:  20%|██        | 5078/24850 [2:07:05<12:10:21,  2.22s/it, lr=7e-5, step_loss=0.0298]Steps:  20%|██        | 5079/24850 [2:07:07<10:56:50,  1.99s/it, lr=7e-5, step_loss=0.0298]Steps:  20%|██        | 5079/24850 [2:07:07<10:56:50,  1.99s/it, lr=7e-5, step_loss=0.0254]Steps:  20%|██        | 5080/24850 [2:07:08<10:02:59,  1.83s/it, lr=7e-5, step_loss=0.0254]Steps:  20%|██        | 5080/24850 [2:07:08<10:02:59,  1.83s/it, lr=7e-5, step_loss=0.0418]Steps:  20%|██        | 5081/24850 [2:07:10<9:26:13,  1.72s/it, lr=7e-5, step_loss=0.0418] Steps:  20%|██        | 5081/24850 [2:07:10<9:26:13,  1.72s/it, lr=7e-5, step_loss=0.0264]Steps:  20%|██        | 5082/24850 [2:07:11<9:02:42,  1.65s/it, lr=7e-5, step_loss=0.0264]Steps:  20%|██        | 5082/24850 [2:07:11<9:02:42,  1.65s/it, lr=7e-5, step_loss=0.0256]Steps:  20%|██        | 5083/24850 [2:07:13<8:43:19,  1.59s/it, lr=7e-5, step_loss=0.0256]Steps:  20%|██        | 5083/24850 [2:07:13<8:43:19,  1.59s/it, lr=7e-5, step_loss=0.0116]Steps:  20%|██        | 5084/24850 [2:07:14<8:29:33,  1.55s/it, lr=7e-5, step_loss=0.0116]Steps:  20%|██        | 5084/24850 [2:07:14<8:29:33,  1.55s/it, lr=7e-5, step_loss=0.0583]Steps:  20%|██        | 5085/24850 [2:07:16<8:19:18,  1.52s/it, lr=7e-5, step_loss=0.0583]Steps:  20%|██        | 5085/24850 [2:07:16<8:19:18,  1.52s/it, lr=7e-5, step_loss=0.0107]Steps:  20%|██        | 5086/24850 [2:07:17<8:14:44,  1.50s/it, lr=7e-5, step_loss=0.0107]Steps:  20%|██        | 5086/24850 [2:07:17<8:14:44,  1.50s/it, lr=7e-5, step_loss=0.0101]Steps:  20%|██        | 5087/24850 [2:07:19<8:10:39,  1.49s/it, lr=7e-5, step_loss=0.0101]Steps:  20%|██        | 5087/24850 [2:07:19<8:10:39,  1.49s/it, lr=7e-5, step_loss=0.0133]Steps:  20%|██        | 5088/24850 [2:07:20<8:08:48,  1.48s/it, lr=7e-5, step_loss=0.0133]Steps:  20%|██        | 5088/24850 [2:07:20<8:08:48,  1.48s/it, lr=7e-5, step_loss=0.0147]Steps:  20%|██        | 5089/24850 [2:07:21<8:06:30,  1.48s/it, lr=7e-5, step_loss=0.0147]Steps:  20%|██        | 5089/24850 [2:07:21<8:06:30,  1.48s/it, lr=7e-5, step_loss=0.0654]Steps:  20%|██        | 5090/24850 [2:07:24<9:41:53,  1.77s/it, lr=7e-5, step_loss=0.0654]Steps:  20%|██        | 5090/24850 [2:07:24<9:41:53,  1.77s/it, lr=7e-5, step_loss=0.00945]Steps:  20%|██        | 5091/24850 [2:07:25<9:10:18,  1.67s/it, lr=7e-5, step_loss=0.00945]Steps:  20%|██        | 5091/24850 [2:07:25<9:10:18,  1.67s/it, lr=7e-5, step_loss=0.0171] Steps:  20%|██        | 5092/24850 [2:07:27<8:50:18,  1.61s/it, lr=7e-5, step_loss=0.0171]Steps:  20%|██        | 5092/24850 [2:07:27<8:50:18,  1.61s/it, lr=7e-5, step_loss=0.00787]Steps:  20%|██        | 5093/24850 [2:07:28<8:34:33,  1.56s/it, lr=7e-5, step_loss=0.00787]Steps:  20%|██        | 5093/24850 [2:07:28<8:34:33,  1.56s/it, lr=7e-5, step_loss=0.00594]Steps:  20%|██        | 5094/24850 [2:07:30<8:25:22,  1.53s/it, lr=7e-5, step_loss=0.00594]Steps:  20%|██        | 5094/24850 [2:07:30<8:25:22,  1.53s/it, lr=7e-5, step_loss=0.0294] Steps:  21%|██        | 5095/24850 [2:07:31<8:17:29,  1.51s/it, lr=7e-5, step_loss=0.0294]Steps:  21%|██        | 5095/24850 [2:07:31<8:17:29,  1.51s/it, lr=7e-5, step_loss=0.165] Steps:  21%|██        | 5096/24850 [2:07:33<8:12:54,  1.50s/it, lr=7e-5, step_loss=0.165]Steps:  21%|██        | 5096/24850 [2:07:33<8:12:54,  1.50s/it, lr=7e-5, step_loss=0.0437]Steps:  21%|██        | 5097/24850 [2:07:34<8:09:17,  1.49s/it, lr=7e-5, step_loss=0.0437]Steps:  21%|██        | 5097/24850 [2:07:34<8:09:17,  1.49s/it, lr=7e-5, step_loss=0.0133](512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512)Steps:  21%|██        | 5098/24850 [2:07:36<8:07:31,  1.48s/it, lr=7e-5, step_loss=0.0133]Steps:  21%|██        | 5098/24850 [2:07:36<8:07:31,  1.48s/it, lr=7e-5, step_loss=0.166] Steps:  21%|██        | 5099/24850 [2:07:37<8:06:21,  1.48s/it, lr=7e-5, step_loss=0.166]Steps:  21%|██        | 5099/24850 [2:07:37<8:06:21,  1.48s/it, lr=7e-5, step_loss=0.00267]Steps:  21%|██        | 5100/24850 [2:07:39<8:04:59,  1.47s/it, lr=7e-5, step_loss=0.00267]Steps:  21%|██        | 5100/24850 [2:07:39<8:04:59,  1.47s/it, lr=7e-5, step_loss=0.0696] Steps:  21%|██        | 5101/24850 [2:07:40<8:02:48,  1.47s/it, lr=7e-5, step_loss=0.0696]Steps:  21%|██        | 5101/24850 [2:07:40<8:02:48,  1.47s/it, lr=7e-5, step_loss=0.00134]Steps:  21%|██        | 5102/24850 [2:07:41<8:02:56,  1.47s/it, lr=7e-5, step_loss=0.00134]Steps:  21%|██        | 5102/24850 [2:07:41<8:02:56,  1.47s/it, lr=7e-5, step_loss=0.0266] Steps:  21%|██        | 5103/24850 [2:07:43<8:01:47,  1.46s/it, lr=7e-5, step_loss=0.0266]Steps:  21%|██        | 5103/24850 [2:07:43<8:01:47,  1.46s/it, lr=7e-5, step_loss=0.0376]Steps:  21%|██        | 5104/24850 [2:07:44<8:00:53,  1.46s/it, lr=7e-5, step_loss=0.0376]Steps:  21%|██        | 5104/24850 [2:07:44<8:00:53,  1.46s/it, lr=7e-5, step_loss=0.00778]Steps:  21%|██        | 5105/24850 [2:07:46<8:03:48,  1.47s/it, lr=7e-5, step_loss=0.00778]Steps:  21%|██        | 5105/24850 [2:07:46<8:03:48,  1.47s/it, lr=7e-5, step_loss=0.0039] Steps:  21%|██        | 5106/24850 [2:07:47<8:02:49,  1.47s/it, lr=7e-5, step_loss=0.0039]Steps:  21%|██        | 5106/24850 [2:07:47<8:02:49,  1.47s/it, lr=7e-5, step_loss=0.0479]Steps:  21%|██        | 5107/24850 [2:07:49<8:01:22,  1.46s/it, lr=7e-5, step_loss=0.0479]Steps:  21%|██        | 5107/24850 [2:07:49<8:01:22,  1.46s/it, lr=7e-5, step_loss=0.0257]Steps:  21%|██        | 5108/24850 [2:07:50<8:00:59,  1.46s/it, lr=7e-5, step_loss=0.0257]Steps:  21%|██        | 5108/24850 [2:07:50<8:00:59,  1.46s/it, lr=7e-5, step_loss=0.0437]Steps:  21%|██        | 5109/24850 [2:07:52<7:59:43,  1.46s/it, lr=7e-5, step_loss=0.0437]Steps:  21%|██        | 5109/24850 [2:07:52<7:59:43,  1.46s/it, lr=7e-5, step_loss=0.0539]Steps:  21%|██        | 5110/24850 [2:07:53<7:59:25,  1.46s/it, lr=7e-5, step_loss=0.0539]Steps:  21%|██        | 5110/24850 [2:07:53<7:59:25,  1.46s/it, lr=7e-5, step_loss=0.01]  Steps:  21%|██        | 5111/24850 [2:07:55<7:57:43,  1.45s/it, lr=7e-5, step_loss=0.01]Steps:  21%|██        | 5111/24850 [2:07:55<7:57:43,  1.45s/it, lr=7e-5, step_loss=0.00984]Steps:  21%|██        | 5112/24850 [2:07:56<7:58:22,  1.45s/it, lr=7e-5, step_loss=0.00984]Steps:  21%|██        | 5112/24850 [2:07:56<7:58:22,  1.45s/it, lr=7e-5, step_loss=0.00571]Steps:  21%|██        | 5113/24850 [2:07:57<7:58:29,  1.45s/it, lr=7e-5, step_loss=0.00571]Steps:  21%|██        | 5113/24850 [2:07:57<7:58:29,  1.45s/it, lr=7e-5, step_loss=0.012]  Steps:  21%|██        | 5114/24850 [2:07:59<7:59:08,  1.46s/it, lr=7e-5, step_loss=0.012]Steps:  21%|██        | 5114/24850 [2:07:59<7:59:08,  1.46s/it, lr=7e-5, step_loss=0.0051]Steps:  21%|██        | 5115/24850 [2:08:00<7:58:35,  1.46s/it, lr=7e-5, step_loss=0.0051]Steps:  21%|██        | 5115/24850 [2:08:00<7:58:35,  1.46s/it, lr=7e-5, step_loss=0.00866]Steps:  21%|██        | 5116/24850 [2:08:02<7:59:46,  1.46s/it, lr=7e-5, step_loss=0.00866]Steps:  21%|██        | 5116/24850 [2:08:02<7:59:46,  1.46s/it, lr=7e-5, step_loss=0.0279] Steps:  21%|██        | 5117/24850 [2:08:03<8:00:37,  1.46s/it, lr=7e-5, step_loss=0.0279]Steps:  21%|██        | 5117/24850 [2:08:03<8:00:37,  1.46s/it, lr=7e-5, step_loss=0.0694]Steps:  21%|██        | 5118/24850 [2:08:05<8:01:36,  1.46s/it, lr=7e-5, step_loss=0.0694]Steps:  21%|██        | 5118/24850 [2:08:05<8:01:36,  1.46s/it, lr=7e-5, step_loss=0.00328]Steps:  21%|██        | 5119/24850 [2:08:06<8:00:35,  1.46s/it, lr=7e-5, step_loss=0.00328]Steps:  21%|██        | 5119/24850 [2:08:06<8:00:35,  1.46s/it, lr=7e-5, step_loss=0.0071] Steps:  21%|██        | 5120/24850 [2:08:08<7:59:49,  1.46s/it, lr=7e-5, step_loss=0.0071]Steps:  21%|██        | 5120/24850 [2:08:08<7:59:49,  1.46s/it, lr=7e-5, step_loss=0.00378]Steps:  21%|██        | 5121/24850 [2:08:09<7:58:23,  1.45s/it, lr=7e-5, step_loss=0.00378]Steps:  21%|██        | 5121/24850 [2:08:09<7:58:23,  1.45s/it, lr=7e-5, step_loss=0.00497]Steps:  21%|██        | 5122/24850 [2:08:11<7:58:57,  1.46s/it, lr=7e-5, step_loss=0.00497]Steps:  21%|██        | 5122/24850 [2:08:11<7:58:57,  1.46s/it, lr=7e-5, step_loss=0.0671] Steps:  21%|██        | 5123/24850 [2:08:12<8:00:06,  1.46s/it, lr=7e-5, step_loss=0.0671]Steps:  21%|██        | 5123/24850 [2:08:12<8:00:06,  1.46s/it, lr=7e-5, step_loss=0.00664]Steps:  21%|██        | 5124/24850 [2:08:14<8:00:12,  1.46s/it, lr=7e-5, step_loss=0.00664]Steps:  21%|██        | 5124/24850 [2:08:14<8:00:12,  1.46s/it, lr=7e-5, step_loss=0.0632]  torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:  21%|██        | 5125/24850 [2:08:15<8:00:05,  1.46s/it, lr=7e-5, step_loss=0.0632]Steps:  21%|██        | 5125/24850 [2:08:15<8:00:05,  1.46s/it, lr=7e-5, step_loss=0.019] Steps:  21%|██        | 5126/24850 [2:08:16<8:00:17,  1.46s/it, lr=7e-5, step_loss=0.019]Steps:  21%|██        | 5126/24850 [2:08:16<8:00:17,  1.46s/it, lr=7e-5, step_loss=0.011]Steps:  21%|██        | 5127/24850 [2:08:18<8:00:14,  1.46s/it, lr=7e-5, step_loss=0.011]Steps:  21%|██        | 5127/24850 [2:08:18<8:00:14,  1.46s/it, lr=7e-5, step_loss=0.015]Steps:  21%|██        | 5128/24850 [2:08:19<7:59:09,  1.46s/it, lr=7e-5, step_loss=0.015]Steps:  21%|██        | 5128/24850 [2:08:19<7:59:09,  1.46s/it, lr=7e-5, step_loss=0.0183]Steps:  21%|██        | 5129/24850 [2:08:21<7:57:49,  1.45s/it, lr=7e-5, step_loss=0.0183]Steps:  21%|██        | 5129/24850 [2:08:21<7:57:49,  1.45s/it, lr=7e-5, step_loss=0.0233]Steps:  21%|██        | 5130/24850 [2:08:22<7:59:02,  1.46s/it, lr=7e-5, step_loss=0.0233]Steps:  21%|██        | 5130/24850 [2:08:22<7:59:02,  1.46s/it, lr=7e-5, step_loss=0.0624]Steps:  21%|██        | 5131/24850 [2:08:24<8:20:52,  1.52s/it, lr=7e-5, step_loss=0.0624]Steps:  21%|██        | 5131/24850 [2:08:24<8:20:52,  1.52s/it, lr=7e-5, step_loss=0.00246]Steps:  21%|██        | 5132/24850 [2:08:25<8:14:56,  1.51s/it, lr=7e-5, step_loss=0.00246]Steps:  21%|██        | 5132/24850 [2:08:25<8:14:56,  1.51s/it, lr=7e-5, step_loss=0.0349] Steps:  21%|██        | 5133/24850 [2:08:27<8:11:53,  1.50s/it, lr=7e-5, step_loss=0.0349]Steps:  21%|██        | 5133/24850 [2:08:27<8:11:53,  1.50s/it, lr=7e-5, step_loss=0.0509]Steps:  21%|██        | 5134/24850 [2:08:28<8:08:55,  1.49s/it, lr=7e-5, step_loss=0.0509]Steps:  21%|██        | 5134/24850 [2:08:28<8:08:55,  1.49s/it, lr=7e-5, step_loss=0.0361]Steps:  21%|██        | 5135/24850 [2:08:30<8:05:45,  1.48s/it, lr=7e-5, step_loss=0.0361]Steps:  21%|██        | 5135/24850 [2:08:30<8:05:45,  1.48s/it, lr=7e-5, step_loss=0.0612]Steps:  21%|██        | 5136/24850 [2:08:31<8:05:00,  1.48s/it, lr=7e-5, step_loss=0.0612]Steps:  21%|██        | 5136/24850 [2:08:31<8:05:00,  1.48s/it, lr=7e-5, step_loss=0.021] Steps:  21%|██        | 5137/24850 [2:08:33<8:04:15,  1.47s/it, lr=7e-5, step_loss=0.021]Steps:  21%|██        | 5137/24850 [2:08:33<8:04:15,  1.47s/it, lr=7e-5, step_loss=0.115]Steps:  21%|██        | 5138/24850 [2:08:34<8:01:55,  1.47s/it, lr=7e-5, step_loss=0.115]Steps:  21%|██        | 5138/24850 [2:08:34<8:01:55,  1.47s/it, lr=7e-5, step_loss=0.00162]Steps:  21%|██        | 5139/24850 [2:08:36<8:00:58,  1.46s/it, lr=7e-5, step_loss=0.00162]Steps:  21%|██        | 5139/24850 [2:08:36<8:00:58,  1.46s/it, lr=7e-5, step_loss=0.0306] Steps:  21%|██        | 5140/24850 [2:08:38<9:35:12,  1.75s/it, lr=7e-5, step_loss=0.0306]Steps:  21%|██        | 5140/24850 [2:08:38<9:35:12,  1.75s/it, lr=7e-5, step_loss=0.00271]Steps:  21%|██        | 5141/24850 [2:08:40<9:06:46,  1.66s/it, lr=7e-5, step_loss=0.00271]Steps:  21%|██        | 5141/24850 [2:08:40<9:06:46,  1.66s/it, lr=7e-5, step_loss=0.0701] Steps:  21%|██        | 5142/24850 [2:08:41<8:46:39,  1.60s/it, lr=7e-5, step_loss=0.0701]Steps:  21%|██        | 5142/24850 [2:08:41<8:46:39,  1.60s/it, lr=7e-5, step_loss=0.0992]Steps:  21%|██        | 5143/24850 [2:08:42<8:31:15,  1.56s/it, lr=7e-5, step_loss=0.0992]Steps:  21%|██        | 5143/24850 [2:08:42<8:31:15,  1.56s/it, lr=7e-5, step_loss=0.00854]Steps:  21%|██        | 5144/24850 [2:08:44<8:22:27,  1.53s/it, lr=7e-5, step_loss=0.00854]Steps:  21%|██        | 5144/24850 [2:08:44<8:22:27,  1.53s/it, lr=7e-5, step_loss=0.0429] Steps:  21%|██        | 5145/24850 [2:08:45<8:18:10,  1.52s/it, lr=7e-5, step_loss=0.0429]Steps:  21%|██        | 5145/24850 [2:08:45<8:18:10,  1.52s/it, lr=7e-5, step_loss=0.0413]Steps:  21%|██        | 5146/24850 [2:08:47<8:13:45,  1.50s/it, lr=7e-5, step_loss=0.0413]Steps:  21%|██        | 5146/24850 [2:08:47<8:13:45,  1.50s/it, lr=7e-5, step_loss=0.00331]Steps:  21%|██        | 5147/24850 [2:08:48<8:10:10,  1.49s/it, lr=7e-5, step_loss=0.00331]Steps:  21%|██        | 5147/24850 [2:08:48<8:10:10,  1.49s/it, lr=7e-5, step_loss=0.0557] Steps:  21%|██        | 5148/24850 [2:08:50<8:07:14,  1.48s/it, lr=7e-5, step_loss=0.0557]Steps:  21%|██        | 5148/24850 [2:08:50<8:07:14,  1.48s/it, lr=7e-5, step_loss=0.0115]Steps:  21%|██        | 5149/24850 [2:08:51<8:04:04,  1.47s/it, lr=7e-5, step_loss=0.0115]Steps:  21%|██        | 5149/24850 [2:08:51<8:04:04,  1.47s/it, lr=7e-5, step_loss=0.0273]Steps:  21%|██        | 5150/24850 [2:08:53<8:03:03,  1.47s/it, lr=7e-5, step_loss=0.0273]Steps:  21%|██        | 5150/24850 [2:08:53<8:03:03,  1.47s/it, lr=7e-5, step_loss=0.376] Steps:  21%|██        | 5151/24850 [2:08:54<8:01:59,  1.47s/it, lr=7e-5, step_loss=0.376]Steps:  21%|██        | 5151/24850 [2:08:54<8:01:59,  1.47s/it, lr=7e-5, step_loss=0.0212]torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  Steps:  21%|██        | 5152/24850 [2:08:56<8:01:23,  1.47s/it, lr=7e-5, step_loss=0.0212]Steps:  21%|██        | 5152/24850 [2:08:56<8:01:23,  1.47s/it, lr=7e-5, step_loss=0.0156]Steps:  21%|██        | 5153/24850 [2:08:57<7:59:56,  1.46s/it, lr=7e-5, step_loss=0.0156]Steps:  21%|██        | 5153/24850 [2:08:57<7:59:56,  1.46s/it, lr=7e-5, step_loss=0.00313]Steps:  21%|██        | 5154/24850 [2:08:59<8:00:30,  1.46s/it, lr=7e-5, step_loss=0.00313]Steps:  21%|██        | 5154/24850 [2:08:59<8:00:30,  1.46s/it, lr=7e-5, step_loss=0.0241] Steps:  21%|██        | 5155/24850 [2:09:00<8:00:30,  1.46s/it, lr=7e-5, step_loss=0.0241]Steps:  21%|██        | 5155/24850 [2:09:00<8:00:30,  1.46s/it, lr=7e-5, step_loss=0.00631]Steps:  21%|██        | 5156/24850 [2:09:02<8:01:24,  1.47s/it, lr=7e-5, step_loss=0.00631]Steps:  21%|██        | 5156/24850 [2:09:02<8:01:24,  1.47s/it, lr=7e-5, step_loss=0.015]  Steps:  21%|██        | 5157/24850 [2:09:03<8:00:00,  1.46s/it, lr=7e-5, step_loss=0.015]Steps:  21%|██        | 5157/24850 [2:09:03<8:00:00,  1.46s/it, lr=7e-5, step_loss=0.000121]Steps:  21%|██        | 5158/24850 [2:09:04<8:00:18,  1.46s/it, lr=7e-5, step_loss=0.000121]Steps:  21%|██        | 5158/24850 [2:09:04<8:00:18,  1.46s/it, lr=7e-5, step_loss=0.0998]  Steps:  21%|██        | 5159/24850 [2:09:06<8:00:03,  1.46s/it, lr=7e-5, step_loss=0.0998]Steps:  21%|██        | 5159/24850 [2:09:06<8:00:03,  1.46s/it, lr=7e-5, step_loss=0.00343]Steps:  21%|██        | 5160/24850 [2:09:07<8:00:24,  1.46s/it, lr=7e-5, step_loss=0.00343]Steps:  21%|██        | 5160/24850 [2:09:07<8:00:24,  1.46s/it, lr=7e-5, step_loss=0.0836] Steps:  21%|██        | 5161/24850 [2:09:09<7:58:40,  1.46s/it, lr=7e-5, step_loss=0.0836]Steps:  21%|██        | 5161/24850 [2:09:09<7:58:40,  1.46s/it, lr=7e-5, step_loss=0.0825]Steps:  21%|██        | 5162/24850 [2:09:10<7:59:02,  1.46s/it, lr=7e-5, step_loss=0.0825]Steps:  21%|██        | 5162/24850 [2:09:10<7:59:02,  1.46s/it, lr=7e-5, step_loss=0.146] Steps:  21%|██        | 5163/24850 [2:09:12<7:59:13,  1.46s/it, lr=7e-5, step_loss=0.146]Steps:  21%|██        | 5163/24850 [2:09:12<7:59:13,  1.46s/it, lr=7e-5, step_loss=0.0455]Steps:  21%|██        | 5164/24850 [2:09:13<8:00:35,  1.46s/it, lr=7e-5, step_loss=0.0455]Steps:  21%|██        | 5164/24850 [2:09:13<8:00:35,  1.46s/it, lr=7e-5, step_loss=0.0084]Steps:  21%|██        | 5165/24850 [2:09:15<7:59:59,  1.46s/it, lr=7e-5, step_loss=0.0084]Steps:  21%|██        | 5165/24850 [2:09:15<7:59:59,  1.46s/it, lr=7e-5, step_loss=0.00236]Steps:  21%|██        | 5166/24850 [2:09:16<8:01:26,  1.47s/it, lr=7e-5, step_loss=0.00236]Steps:  21%|██        | 5166/24850 [2:09:16<8:01:26,  1.47s/it, lr=7e-5, step_loss=0.00483]Steps:  21%|██        | 5167/24850 [2:09:18<8:00:07,  1.46s/it, lr=7e-5, step_loss=0.00483]Steps:  21%|██        | 5167/24850 [2:09:18<8:00:07,  1.46s/it, lr=7e-5, step_loss=0.0655] Steps:  21%|██        | 5168/24850 [2:09:19<7:59:09,  1.46s/it, lr=7e-5, step_loss=0.0655]Steps:  21%|██        | 5168/24850 [2:09:19<7:59:09,  1.46s/it, lr=7e-5, step_loss=0.0773]Steps:  21%|██        | 5169/24850 [2:09:21<7:59:23,  1.46s/it, lr=7e-5, step_loss=0.0773]Steps:  21%|██        | 5169/24850 [2:09:21<7:59:23,  1.46s/it, lr=7e-5, step_loss=0.0178]Steps:  21%|██        | 5170/24850 [2:09:22<7:58:15,  1.46s/it, lr=7e-5, step_loss=0.0178]Steps:  21%|██        | 5170/24850 [2:09:22<7:58:15,  1.46s/it, lr=7e-5, step_loss=0.0123]Steps:  21%|██        | 5171/24850 [2:09:23<7:57:43,  1.46s/it, lr=7e-5, step_loss=0.0123]Steps:  21%|██        | 5171/24850 [2:09:23<7:57:43,  1.46s/it, lr=7e-5, step_loss=0.0413]Steps:  21%|██        | 5172/24850 [2:09:25<8:00:06,  1.46s/it, lr=7e-5, step_loss=0.0413]Steps:  21%|██        | 5172/24850 [2:09:25<8:00:06,  1.46s/it, lr=7e-5, step_loss=0.0525]Steps:  21%|██        | 5173/24850 [2:09:26<7:58:22,  1.46s/it, lr=7e-5, step_loss=0.0525]Steps:  21%|██        | 5173/24850 [2:09:26<7:58:22,  1.46s/it, lr=7e-5, step_loss=0.000571]Steps:  21%|██        | 5174/24850 [2:09:28<7:59:14,  1.46s/it, lr=7e-5, step_loss=0.000571]Steps:  21%|██        | 5174/24850 [2:09:28<7:59:14,  1.46s/it, lr=7e-5, step_loss=0.0514]  Steps:  21%|██        | 5175/24850 [2:09:29<7:58:56,  1.46s/it, lr=7e-5, step_loss=0.0514]Steps:  21%|██        | 5175/24850 [2:09:29<7:58:56,  1.46s/it, lr=7e-5, step_loss=0.0116]Steps:  21%|██        | 5176/24850 [2:09:31<8:00:40,  1.47s/it, lr=7e-5, step_loss=0.0116]Steps:  21%|██        | 5176/24850 [2:09:31<8:00:40,  1.47s/it, lr=7e-5, step_loss=0.0703]Steps:  21%|██        | 5177/24850 [2:09:32<7:59:50,  1.46s/it, lr=7e-5, step_loss=0.0703]Steps:  21%|██        | 5177/24850 [2:09:32<7:59:50,  1.46s/it, lr=7e-5, step_loss=0.0102]Steps:  21%|██        | 5178/24850 [2:09:34<7:59:48,  1.46s/it, lr=7e-5, step_loss=0.0102]Steps:  21%|██        | 5178/24850 [2:09:34<7:59:48,  1.46s/it, lr=7e-5, step_loss=0.0159]Steps:  21%|██        | 5179/24850 [2:09:35<8:01:02,  1.47s/it, lr=7e-5, step_loss=0.0159]Steps:  21%|██        | 5179/24850 [2:09:35<8:01:02,  1.47s/it, lr=7e-5, step_loss=0.00936]mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:  21%|██        | 5180/24850 [2:09:37<7:59:31,  1.46s/it, lr=7e-5, step_loss=0.00936]Steps:  21%|██        | 5180/24850 [2:09:37<7:59:31,  1.46s/it, lr=7e-5, step_loss=0.00167]Steps:  21%|██        | 5181/24850 [2:09:38<7:59:32,  1.46s/it, lr=7e-5, step_loss=0.00167]Steps:  21%|██        | 5181/24850 [2:09:38<7:59:32,  1.46s/it, lr=7e-5, step_loss=0.107]  Steps:  21%|██        | 5182/24850 [2:09:40<7:58:14,  1.46s/it, lr=7e-5, step_loss=0.107]Steps:  21%|██        | 5182/24850 [2:09:40<7:58:14,  1.46s/it, lr=7e-5, step_loss=0.0335]Steps:  21%|██        | 5183/24850 [2:09:41<7:57:18,  1.46s/it, lr=7e-5, step_loss=0.0335]Steps:  21%|██        | 5183/24850 [2:09:41<7:57:18,  1.46s/it, lr=7e-5, step_loss=0.0271]Steps:  21%|██        | 5184/24850 [2:09:42<7:56:58,  1.46s/it, lr=7e-5, step_loss=0.0271]Steps:  21%|██        | 5184/24850 [2:09:42<7:56:58,  1.46s/it, lr=7e-5, step_loss=0.0439]Steps:  21%|██        | 5185/24850 [2:09:44<7:58:13,  1.46s/it, lr=7e-5, step_loss=0.0439]Steps:  21%|██        | 5185/24850 [2:09:44<7:58:13,  1.46s/it, lr=7e-5, step_loss=0.0105]Steps:  21%|██        | 5186/24850 [2:09:45<7:58:13,  1.46s/it, lr=7e-5, step_loss=0.0105]Steps:  21%|██        | 5186/24850 [2:09:45<7:58:13,  1.46s/it, lr=7e-5, step_loss=0.00759]Steps:  21%|██        | 5187/24850 [2:09:47<7:59:22,  1.46s/it, lr=7e-5, step_loss=0.00759]Steps:  21%|██        | 5187/24850 [2:09:47<7:59:22,  1.46s/it, lr=7e-5, step_loss=0.013]  Steps:  21%|██        | 5188/24850 [2:09:48<7:58:21,  1.46s/it, lr=7e-5, step_loss=0.013]Steps:  21%|██        | 5188/24850 [2:09:48<7:58:21,  1.46s/it, lr=7e-5, step_loss=0.0613]Steps:  21%|██        | 5189/24850 [2:09:50<7:57:58,  1.46s/it, lr=7e-5, step_loss=0.0613]Steps:  21%|██        | 5189/24850 [2:09:50<7:57:58,  1.46s/it, lr=7e-5, step_loss=0.0169]Steps:  21%|██        | 5190/24850 [2:09:52<9:20:56,  1.71s/it, lr=7e-5, step_loss=0.0169]Steps:  21%|██        | 5190/24850 [2:09:52<9:20:56,  1.71s/it, lr=7e-5, step_loss=0.0706]Steps:  21%|██        | 5191/24850 [2:09:53<8:56:38,  1.64s/it, lr=7e-5, step_loss=0.0706]Steps:  21%|██        | 5191/24850 [2:09:53<8:56:38,  1.64s/it, lr=7e-5, step_loss=0.0411]Steps:  21%|██        | 5192/24850 [2:09:55<8:38:21,  1.58s/it, lr=7e-5, step_loss=0.0411]Steps:  21%|██        | 5192/24850 [2:09:55<8:38:21,  1.58s/it, lr=7e-5, step_loss=0.0168]Steps:  21%|██        | 5193/24850 [2:09:56<8:26:36,  1.55s/it, lr=7e-5, step_loss=0.0168]Steps:  21%|██        | 5193/24850 [2:09:56<8:26:36,  1.55s/it, lr=7e-5, step_loss=0.0846]Steps:  21%|██        | 5194/24850 [2:09:58<8:18:42,  1.52s/it, lr=7e-5, step_loss=0.0846]Steps:  21%|██        | 5194/24850 [2:09:58<8:18:42,  1.52s/it, lr=7e-5, step_loss=0.0124]Steps:  21%|██        | 5195/24850 [2:09:59<8:12:35,  1.50s/it, lr=7e-5, step_loss=0.0124]Steps:  21%|██        | 5195/24850 [2:09:59<8:12:35,  1.50s/it, lr=7e-5, step_loss=0.00744]Steps:  21%|██        | 5196/24850 [2:10:01<8:08:04,  1.49s/it, lr=7e-5, step_loss=0.00744]Steps:  21%|██        | 5196/24850 [2:10:01<8:08:04,  1.49s/it, lr=7e-5, step_loss=0.0365] Steps:  21%|██        | 5197/24850 [2:10:02<8:05:44,  1.48s/it, lr=7e-5, step_loss=0.0365]Steps:  21%|██        | 5197/24850 [2:10:02<8:05:44,  1.48s/it, lr=7e-5, step_loss=0.025] Steps:  21%|██        | 5198/24850 [2:10:04<8:04:13,  1.48s/it, lr=7e-5, step_loss=0.025]Steps:  21%|██        | 5198/24850 [2:10:04<8:04:13,  1.48s/it, lr=7e-5, step_loss=0.0637]Steps:  21%|██        | 5199/24850 [2:10:05<8:01:59,  1.47s/it, lr=7e-5, step_loss=0.0637]Steps:  21%|██        | 5199/24850 [2:10:05<8:01:59,  1.47s/it, lr=7e-5, step_loss=0.0281]Steps:  21%|██        | 5200/24850 [2:10:07<8:01:46,  1.47s/it, lr=7e-5, step_loss=0.0281]Steps:  21%|██        | 5200/24850 [2:10:07<8:01:46,  1.47s/it, lr=7e-5, step_loss=0.00918]Steps:  21%|██        | 5201/24850 [2:10:08<8:15:00,  1.51s/it, lr=7e-5, step_loss=0.00918]Steps:  21%|██        | 5201/24850 [2:10:08<8:15:00,  1.51s/it, lr=7e-5, step_loss=0.00988]Steps:  21%|██        | 5202/24850 [2:10:10<8:09:25,  1.49s/it, lr=7e-5, step_loss=0.00988]Steps:  21%|██        | 5202/24850 [2:10:10<8:09:25,  1.49s/it, lr=7e-5, step_loss=0.0927] Steps:  21%|██        | 5203/24850 [2:10:11<8:05:41,  1.48s/it, lr=7e-5, step_loss=0.0927]Steps:  21%|██        | 5203/24850 [2:10:11<8:05:41,  1.48s/it, lr=7e-5, step_loss=0.0084]Steps:  21%|██        | 5204/24850 [2:10:13<8:03:05,  1.48s/it, lr=7e-5, step_loss=0.0084]Steps:  21%|██        | 5204/24850 [2:10:13<8:03:05,  1.48s/it, lr=7e-5, step_loss=0.00794]Steps:  21%|██        | 5205/24850 [2:10:14<8:01:05,  1.47s/it, lr=7e-5, step_loss=0.00794]Steps:  21%|██        | 5205/24850 [2:10:14<8:01:05,  1.47s/it, lr=7e-5, step_loss=0.0354] Steps:  21%|██        | 5206/24850 [2:10:16<8:00:24,  1.47s/it, lr=7e-5, step_loss=0.0354]Steps:  21%|██        | 5206/24850 [2:10:16<8:00:24,  1.47s/it, lr=7e-5, step_loss=0.0141]torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) Steps:  21%|██        | 5207/24850 [2:10:17<7:59:50,  1.47s/it, lr=7e-5, step_loss=0.0141]Steps:  21%|██        | 5207/24850 [2:10:17<7:59:50,  1.47s/it, lr=7e-5, step_loss=0.0283]Steps:  21%|██        | 5208/24850 [2:10:18<7:58:05,  1.46s/it, lr=7e-5, step_loss=0.0283]Steps:  21%|██        | 5208/24850 [2:10:18<7:58:05,  1.46s/it, lr=7e-5, step_loss=0.0179]Steps:  21%|██        | 5209/24850 [2:10:20<7:57:04,  1.46s/it, lr=7e-5, step_loss=0.0179]Steps:  21%|██        | 5209/24850 [2:10:20<7:57:04,  1.46s/it, lr=7e-5, step_loss=0.0148]Steps:  21%|██        | 5210/24850 [2:10:21<7:56:58,  1.46s/it, lr=7e-5, step_loss=0.0148]Steps:  21%|██        | 5210/24850 [2:10:21<7:56:58,  1.46s/it, lr=7e-5, step_loss=0.00595]Steps:  21%|██        | 5211/24850 [2:10:23<7:56:14,  1.45s/it, lr=7e-5, step_loss=0.00595]Steps:  21%|██        | 5211/24850 [2:10:23<7:56:14,  1.45s/it, lr=7e-5, step_loss=0.000989]Steps:  21%|██        | 5212/24850 [2:10:24<7:56:20,  1.46s/it, lr=7e-5, step_loss=0.000989]Steps:  21%|██        | 5212/24850 [2:10:24<7:56:20,  1.46s/it, lr=7e-5, step_loss=0.0155]  Steps:  21%|██        | 5213/24850 [2:10:26<7:57:19,  1.46s/it, lr=7e-5, step_loss=0.0155]Steps:  21%|██        | 5213/24850 [2:10:26<7:57:19,  1.46s/it, lr=7e-5, step_loss=0.00531]Steps:  21%|██        | 5214/24850 [2:10:27<7:57:20,  1.46s/it, lr=7e-5, step_loss=0.00531]Steps:  21%|██        | 5214/24850 [2:10:27<7:57:20,  1.46s/it, lr=7e-5, step_loss=0.0172] Steps:  21%|██        | 5215/24850 [2:10:29<7:57:23,  1.46s/it, lr=7e-5, step_loss=0.0172]Steps:  21%|██        | 5215/24850 [2:10:29<7:57:23,  1.46s/it, lr=7e-5, step_loss=0.00532]Steps:  21%|██        | 5216/24850 [2:10:30<7:57:47,  1.46s/it, lr=7e-5, step_loss=0.00532]Steps:  21%|██        | 5216/24850 [2:10:30<7:57:47,  1.46s/it, lr=7e-5, step_loss=0.0442] Steps:  21%|██        | 5217/24850 [2:10:32<7:56:41,  1.46s/it, lr=7e-5, step_loss=0.0442]Steps:  21%|██        | 5217/24850 [2:10:32<7:56:41,  1.46s/it, lr=7e-5, step_loss=0.0308]Steps:  21%|██        | 5218/24850 [2:10:33<7:57:36,  1.46s/it, lr=7e-5, step_loss=0.0308]Steps:  21%|██        | 5218/24850 [2:10:33<7:57:36,  1.46s/it, lr=7e-5, step_loss=0.0243]Steps:  21%|██        | 5219/24850 [2:10:34<7:56:40,  1.46s/it, lr=7e-5, step_loss=0.0243]Steps:  21%|██        | 5219/24850 [2:10:34<7:56:40,  1.46s/it, lr=7e-5, step_loss=0.00546]Steps:  21%|██        | 5220/24850 [2:10:36<7:56:14,  1.46s/it, lr=7e-5, step_loss=0.00546]Steps:  21%|██        | 5220/24850 [2:10:36<7:56:14,  1.46s/it, lr=7e-5, step_loss=0.00477]Steps:  21%|██        | 5221/24850 [2:10:37<7:57:36,  1.46s/it, lr=7e-5, step_loss=0.00477]Steps:  21%|██        | 5221/24850 [2:10:37<7:57:36,  1.46s/it, lr=7e-5, step_loss=0.0373] Steps:  21%|██        | 5222/24850 [2:10:39<7:56:54,  1.46s/it, lr=7e-5, step_loss=0.0373]Steps:  21%|██        | 5222/24850 [2:10:39<7:56:54,  1.46s/it, lr=7e-5, step_loss=0.00814]Steps:  21%|██        | 5223/24850 [2:10:40<7:57:11,  1.46s/it, lr=7e-5, step_loss=0.00814]Steps:  21%|██        | 5223/24850 [2:10:40<7:57:11,  1.46s/it, lr=7e-5, step_loss=0.0255] Steps:  21%|██        | 5224/24850 [2:10:42<7:58:03,  1.46s/it, lr=7e-5, step_loss=0.0255]Steps:  21%|██        | 5224/24850 [2:10:42<7:58:03,  1.46s/it, lr=7e-5, step_loss=0.0165]Steps:  21%|██        | 5225/24850 [2:10:43<7:58:18,  1.46s/it, lr=7e-5, step_loss=0.0165]Steps:  21%|██        | 5225/24850 [2:10:43<7:58:18,  1.46s/it, lr=7e-5, step_loss=0.0466]Steps:  21%|██        | 5226/24850 [2:10:45<7:58:02,  1.46s/it, lr=7e-5, step_loss=0.0466]Steps:  21%|██        | 5226/24850 [2:10:45<7:58:02,  1.46s/it, lr=7e-5, step_loss=0.0184]Steps:  21%|██        | 5227/24850 [2:10:46<7:57:26,  1.46s/it, lr=7e-5, step_loss=0.0184]Steps:  21%|██        | 5227/24850 [2:10:46<7:57:26,  1.46s/it, lr=7e-5, step_loss=0.0285]Steps:  21%|██        | 5228/24850 [2:10:48<7:57:38,  1.46s/it, lr=7e-5, step_loss=0.0285]Steps:  21%|██        | 5228/24850 [2:10:48<7:57:38,  1.46s/it, lr=7e-5, step_loss=0.0155]Steps:  21%|██        | 5229/24850 [2:10:49<7:58:19,  1.46s/it, lr=7e-5, step_loss=0.0155]Steps:  21%|██        | 5229/24850 [2:10:49<7:58:19,  1.46s/it, lr=7e-5, step_loss=0.0305]Steps:  21%|██        | 5230/24850 [2:10:51<7:58:22,  1.46s/it, lr=7e-5, step_loss=0.0305]Steps:  21%|██        | 5230/24850 [2:10:51<7:58:22,  1.46s/it, lr=7e-5, step_loss=0.0013]Steps:  21%|██        | 5231/24850 [2:10:52<7:57:44,  1.46s/it, lr=7e-5, step_loss=0.0013]Steps:  21%|██        | 5231/24850 [2:10:52<7:57:44,  1.46s/it, lr=7e-5, step_loss=0.181] Steps:  21%|██        | 5232/24850 [2:10:53<7:57:35,  1.46s/it, lr=7e-5, step_loss=0.181]Steps:  21%|██        | 5232/24850 [2:10:53<7:57:35,  1.46s/it, lr=7e-5, step_loss=0.0185]Steps:  21%|██        | 5233/24850 [2:10:55<7:59:39,  1.47s/it, lr=7e-5, step_loss=0.0185]Steps:  21%|██        | 5233/24850 [2:10:55<7:59:39,  1.47s/it, lr=7e-5, step_loss=0.0602]torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:  21%|██        | 5234/24850 [2:10:56<7:58:19,  1.46s/it, lr=7e-5, step_loss=0.0602]Steps:  21%|██        | 5234/24850 [2:10:56<7:58:19,  1.46s/it, lr=7e-5, step_loss=0.0127]Steps:  21%|██        | 5235/24850 [2:10:58<8:00:06,  1.47s/it, lr=7e-5, step_loss=0.0127]Steps:  21%|██        | 5235/24850 [2:10:58<8:00:06,  1.47s/it, lr=7e-5, step_loss=0.0264]Steps:  21%|██        | 5236/24850 [2:10:59<7:58:56,  1.47s/it, lr=7e-5, step_loss=0.0264]Steps:  21%|██        | 5236/24850 [2:10:59<7:58:56,  1.47s/it, lr=7e-5, step_loss=0.00607]Steps:  21%|██        | 5237/24850 [2:11:01<7:59:31,  1.47s/it, lr=7e-5, step_loss=0.00607]Steps:  21%|██        | 5237/24850 [2:11:01<7:59:31,  1.47s/it, lr=7e-5, step_loss=0.0279] Steps:  21%|██        | 5238/24850 [2:11:02<7:59:58,  1.47s/it, lr=7e-5, step_loss=0.0279]Steps:  21%|██        | 5238/24850 [2:11:02<7:59:58,  1.47s/it, lr=7e-5, step_loss=0.0712]Steps:  21%|██        | 5239/24850 [2:11:04<8:00:03,  1.47s/it, lr=7e-5, step_loss=0.0712]Steps:  21%|██        | 5239/24850 [2:11:04<8:00:03,  1.47s/it, lr=7e-5, step_loss=0.0359]Steps:  21%|██        | 5240/24850 [2:11:06<9:33:58,  1.76s/it, lr=7e-5, step_loss=0.0359]Steps:  21%|██        | 5240/24850 [2:11:06<9:33:58,  1.76s/it, lr=7e-5, step_loss=0.0529]Steps:  21%|██        | 5241/24850 [2:11:08<9:05:34,  1.67s/it, lr=7e-5, step_loss=0.0529]Steps:  21%|██        | 5241/24850 [2:11:08<9:05:34,  1.67s/it, lr=7e-5, step_loss=0.033] Steps:  21%|██        | 5242/24850 [2:11:09<8:44:50,  1.61s/it, lr=7e-5, step_loss=0.033]Steps:  21%|██        | 5242/24850 [2:11:09<8:44:50,  1.61s/it, lr=7e-5, step_loss=0.0098]Steps:  21%|██        | 5243/24850 [2:11:11<8:30:18,  1.56s/it, lr=7e-5, step_loss=0.0098]Steps:  21%|██        | 5243/24850 [2:11:11<8:30:18,  1.56s/it, lr=7e-5, step_loss=0.00208]Steps:  21%|██        | 5244/24850 [2:11:12<8:19:56,  1.53s/it, lr=7e-5, step_loss=0.00208]Steps:  21%|██        | 5244/24850 [2:11:12<8:19:56,  1.53s/it, lr=7e-5, step_loss=0.0341] Steps:  21%|██        | 5245/24850 [2:11:13<8:13:15,  1.51s/it, lr=7e-5, step_loss=0.0341]Steps:  21%|██        | 5245/24850 [2:11:13<8:13:15,  1.51s/it, lr=7e-5, step_loss=0.059] Steps:  21%|██        | 5246/24850 [2:11:15<8:08:06,  1.49s/it, lr=7e-5, step_loss=0.059]Steps:  21%|██        | 5246/24850 [2:11:15<8:08:06,  1.49s/it, lr=7e-5, step_loss=0.012]Steps:  21%|██        | 5247/24850 [2:11:16<8:04:36,  1.48s/it, lr=7e-5, step_loss=0.012]Steps:  21%|██        | 5247/24850 [2:11:16<8:04:36,  1.48s/it, lr=7e-5, step_loss=0.0701]Steps:  21%|██        | 5248/24850 [2:11:18<8:00:16,  1.47s/it, lr=7e-5, step_loss=0.0701]Steps:  21%|██        | 5248/24850 [2:11:18<8:00:16,  1.47s/it, lr=7e-5, step_loss=0.00112]Steps:  21%|██        | 5249/24850 [2:11:19<7:57:48,  1.46s/it, lr=7e-5, step_loss=0.00112]Steps:  21%|██        | 5249/24850 [2:11:19<7:57:48,  1.46s/it, lr=7e-5, step_loss=0.00599]Steps:  21%|██        | 5250/24850 [2:11:21<7:56:34,  1.46s/it, lr=7e-5, step_loss=0.00599]Steps:  21%|██        | 5250/24850 [2:11:21<7:56:34,  1.46s/it, lr=7e-5, step_loss=0.0232] Steps:  21%|██        | 5251/24850 [2:11:22<7:55:05,  1.45s/it, lr=7e-5, step_loss=0.0232]Steps:  21%|██        | 5251/24850 [2:11:22<7:55:05,  1.45s/it, lr=7e-5, step_loss=0.00772]Steps:  21%|██        | 5252/24850 [2:11:24<7:57:28,  1.46s/it, lr=7e-5, step_loss=0.00772]Steps:  21%|██        | 5252/24850 [2:11:24<7:57:28,  1.46s/it, lr=7e-5, step_loss=0.178]  Steps:  21%|██        | 5253/24850 [2:11:25<7:56:35,  1.46s/it, lr=7e-5, step_loss=0.178]Steps:  21%|██        | 5253/24850 [2:11:25<7:56:35,  1.46s/it, lr=7e-5, step_loss=0.00909]Steps:  21%|██        | 5254/24850 [2:11:27<7:55:34,  1.46s/it, lr=7e-5, step_loss=0.00909]Steps:  21%|██        | 5254/24850 [2:11:27<7:55:34,  1.46s/it, lr=7e-5, step_loss=0.00196]Steps:  21%|██        | 5255/24850 [2:11:28<7:55:28,  1.46s/it, lr=7e-5, step_loss=0.00196]Steps:  21%|██        | 5255/24850 [2:11:28<7:55:28,  1.46s/it, lr=7e-5, step_loss=0.0156] Steps:  21%|██        | 5256/24850 [2:11:29<7:55:16,  1.46s/it, lr=7e-5, step_loss=0.0156]Steps:  21%|██        | 5256/24850 [2:11:29<7:55:16,  1.46s/it, lr=7e-5, step_loss=0.0235]Steps:  21%|██        | 5257/24850 [2:11:31<7:54:51,  1.45s/it, lr=7e-5, step_loss=0.0235]Steps:  21%|██        | 5257/24850 [2:11:31<7:54:51,  1.45s/it, lr=7e-5, step_loss=0.007] Steps:  21%|██        | 5258/24850 [2:11:32<7:55:56,  1.46s/it, lr=7e-5, step_loss=0.007]Steps:  21%|██        | 5258/24850 [2:11:32<7:55:56,  1.46s/it, lr=7e-5, step_loss=0.0729]Steps:  21%|██        | 5259/24850 [2:11:34<7:57:35,  1.46s/it, lr=7e-5, step_loss=0.0729]Steps:  21%|██        | 5259/24850 [2:11:34<7:57:35,  1.46s/it, lr=7e-5, step_loss=0.0965]Steps:  21%|██        | 5260/24850 [2:11:35<7:57:52,  1.46s/it, lr=7e-5, step_loss=0.0965]Steps:  21%|██        | 5260/24850 [2:11:35<7:57:52,  1.46s/it, lr=7e-5, step_loss=0.0206]Steps:  21%|██        | 5261/24850 [2:11:37<7:56:37,  1.46s/it, lr=7e-5, step_loss=0.0206]Steps:  21%|██        | 5261/24850 [2:11:37<7:56:37,  1.46s/it, lr=7e-5, step_loss=0.0324]torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
Steps:  21%|██        | 5262/24850 [2:11:38<7:55:23,  1.46s/it, lr=7e-5, step_loss=0.0324]Steps:  21%|██        | 5262/24850 [2:11:38<7:55:23,  1.46s/it, lr=7e-5, step_loss=0.00392]Steps:  21%|██        | 5263/24850 [2:11:40<7:55:53,  1.46s/it, lr=7e-5, step_loss=0.00392]Steps:  21%|██        | 5263/24850 [2:11:40<7:55:53,  1.46s/it, lr=7e-5, step_loss=0.021]  Steps:  21%|██        | 5264/24850 [2:11:41<7:56:20,  1.46s/it, lr=7e-5, step_loss=0.021]Steps:  21%|██        | 5264/24850 [2:11:41<7:56:20,  1.46s/it, lr=7e-5, step_loss=0.0271]Steps:  21%|██        | 5265/24850 [2:11:43<7:55:31,  1.46s/it, lr=7e-5, step_loss=0.0271]Steps:  21%|██        | 5265/24850 [2:11:43<7:55:31,  1.46s/it, lr=7e-5, step_loss=0.000385]Steps:  21%|██        | 5266/24850 [2:11:44<7:55:05,  1.46s/it, lr=7e-5, step_loss=0.000385]Steps:  21%|██        | 5266/24850 [2:11:44<7:55:05,  1.46s/it, lr=7e-5, step_loss=0.0106]  Steps:  21%|██        | 5267/24850 [2:11:46<7:57:09,  1.46s/it, lr=7e-5, step_loss=0.0106]Steps:  21%|██        | 5267/24850 [2:11:46<7:57:09,  1.46s/it, lr=7e-5, step_loss=0.12]  Steps:  21%|██        | 5268/24850 [2:11:47<7:55:53,  1.46s/it, lr=7e-5, step_loss=0.12]Steps:  21%|██        | 5268/24850 [2:11:47<7:55:53,  1.46s/it, lr=7e-5, step_loss=0.0488]Steps:  21%|██        | 5269/24850 [2:11:48<7:55:23,  1.46s/it, lr=7e-5, step_loss=0.0488]Steps:  21%|██        | 5269/24850 [2:11:48<7:55:23,  1.46s/it, lr=7e-5, step_loss=0.0651]Steps:  21%|██        | 5270/24850 [2:11:50<7:53:50,  1.45s/it, lr=7e-5, step_loss=0.0651]Steps:  21%|██        | 5270/24850 [2:11:50<7:53:50,  1.45s/it, lr=7e-5, step_loss=0.0136]Steps:  21%|██        | 5271/24850 [2:11:51<7:54:50,  1.46s/it, lr=7e-5, step_loss=0.0136]Steps:  21%|██        | 5271/24850 [2:11:51<7:54:50,  1.46s/it, lr=7e-5, step_loss=0.0209]Steps:  21%|██        | 5272/24850 [2:11:53<7:57:16,  1.46s/it, lr=7e-5, step_loss=0.0209]Steps:  21%|██        | 5272/24850 [2:11:53<7:57:16,  1.46s/it, lr=7e-5, step_loss=0.0233]Steps:  21%|██        | 5273/24850 [2:11:54<8:00:33,  1.47s/it, lr=7e-5, step_loss=0.0233]Steps:  21%|██        | 5273/24850 [2:11:54<8:00:33,  1.47s/it, lr=7e-5, step_loss=0.0286]Steps:  21%|██        | 5274/24850 [2:11:56<7:58:32,  1.47s/it, lr=7e-5, step_loss=0.0286]Steps:  21%|██        | 5274/24850 [2:11:56<7:58:32,  1.47s/it, lr=7e-5, step_loss=0.035] Steps:  21%|██        | 5275/24850 [2:11:57<7:57:52,  1.46s/it, lr=7e-5, step_loss=0.035]Steps:  21%|██        | 5275/24850 [2:11:57<7:57:52,  1.46s/it, lr=7e-5, step_loss=0.218]Steps:  21%|██        | 5276/24850 [2:11:59<7:56:28,  1.46s/it, lr=7e-5, step_loss=0.218]Steps:  21%|██        | 5276/24850 [2:11:59<7:56:28,  1.46s/it, lr=7e-5, step_loss=0.0479]Steps:  21%|██        | 5277/24850 [2:12:00<7:56:08,  1.46s/it, lr=7e-5, step_loss=0.0479]Steps:  21%|██        | 5277/24850 [2:12:00<7:56:08,  1.46s/it, lr=7e-5, step_loss=0.0134]Steps:  21%|██        | 5278/24850 [2:12:02<7:55:33,  1.46s/it, lr=7e-5, step_loss=0.0134]Steps:  21%|██        | 5278/24850 [2:12:02<7:55:33,  1.46s/it, lr=7e-5, step_loss=0.0019]Steps:  21%|██        | 5279/24850 [2:12:03<7:56:47,  1.46s/it, lr=7e-5, step_loss=0.0019]Steps:  21%|██        | 5279/24850 [2:12:03<7:56:47,  1.46s/it, lr=7e-5, step_loss=0.0118]Steps:  21%|██        | 5280/24850 [2:12:05<7:56:39,  1.46s/it, lr=7e-5, step_loss=0.0118]Steps:  21%|██        | 5280/24850 [2:12:05<7:56:39,  1.46s/it, lr=7e-5, step_loss=0.115] Steps:  21%|██▏       | 5281/24850 [2:12:06<7:57:14,  1.46s/it, lr=7e-5, step_loss=0.115]Steps:  21%|██▏       | 5281/24850 [2:12:06<7:57:14,  1.46s/it, lr=7e-5, step_loss=0.103]Steps:  21%|██▏       | 5282/24850 [2:12:07<7:56:09,  1.46s/it, lr=7e-5, step_loss=0.103]Steps:  21%|██▏       | 5282/24850 [2:12:07<7:56:09,  1.46s/it, lr=7e-5, step_loss=0.0285]Steps:  21%|██▏       | 5283/24850 [2:12:09<7:55:53,  1.46s/it, lr=7e-5, step_loss=0.0285]Steps:  21%|██▏       | 5283/24850 [2:12:09<7:55:53,  1.46s/it, lr=7e-5, step_loss=0.00143]Steps:  21%|██▏       | 5284/24850 [2:12:10<7:55:29,  1.46s/it, lr=7e-5, step_loss=0.00143]Steps:  21%|██▏       | 5284/24850 [2:12:10<7:55:29,  1.46s/it, lr=7e-5, step_loss=0.00139]Steps:  21%|██▏       | 5285/24850 [2:12:12<7:55:42,  1.46s/it, lr=7e-5, step_loss=0.00139]Steps:  21%|██▏       | 5285/24850 [2:12:12<7:55:42,  1.46s/it, lr=7e-5, step_loss=0.00982]Steps:  21%|██▏       | 5286/24850 [2:12:13<7:55:22,  1.46s/it, lr=7e-5, step_loss=0.00982]Steps:  21%|██▏       | 5286/24850 [2:12:13<7:55:22,  1.46s/it, lr=7e-5, step_loss=0.00215]Steps:  21%|██▏       | 5287/24850 [2:12:15<7:55:21,  1.46s/it, lr=7e-5, step_loss=0.00215]Steps:  21%|██▏       | 5287/24850 [2:12:15<7:55:21,  1.46s/it, lr=7e-5, step_loss=0.0359] Steps:  21%|██▏       | 5288/24850 [2:12:16<7:56:45,  1.46s/it, lr=7e-5, step_loss=0.0359]Steps:  21%|██▏       | 5288/24850 [2:12:16<7:56:45,  1.46s/it, lr=7e-5, step_loss=0.0426](512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512)Steps:  21%|██▏       | 5289/24850 [2:12:18<7:57:36,  1.46s/it, lr=7e-5, step_loss=0.0426]Steps:  21%|██▏       | 5289/24850 [2:12:18<7:57:36,  1.46s/it, lr=7e-5, step_loss=0.0203]Steps:  21%|██▏       | 5290/24850 [2:12:20<9:28:15,  1.74s/it, lr=7e-5, step_loss=0.0203]Steps:  21%|██▏       | 5290/24850 [2:12:20<9:28:15,  1.74s/it, lr=7e-5, step_loss=0.0109]Steps:  21%|██▏       | 5291/24850 [2:12:22<8:59:50,  1.66s/it, lr=7e-5, step_loss=0.0109]Steps:  21%|██▏       | 5291/24850 [2:12:22<8:59:50,  1.66s/it, lr=7e-5, step_loss=0.022] Steps:  21%|██▏       | 5292/24850 [2:12:23<8:40:35,  1.60s/it, lr=7e-5, step_loss=0.022]Steps:  21%|██▏       | 5292/24850 [2:12:23<8:40:35,  1.60s/it, lr=7e-5, step_loss=0.11] Steps:  21%|██▏       | 5293/24850 [2:12:24<8:26:35,  1.55s/it, lr=7e-5, step_loss=0.11]Steps:  21%|██▏       | 5293/24850 [2:12:24<8:26:35,  1.55s/it, lr=7e-5, step_loss=0.0195]Steps:  21%|██▏       | 5294/24850 [2:12:26<8:17:28,  1.53s/it, lr=7e-5, step_loss=0.0195]Steps:  21%|██▏       | 5294/24850 [2:12:26<8:17:28,  1.53s/it, lr=7e-5, step_loss=0.0267]Steps:  21%|██▏       | 5295/24850 [2:12:27<8:10:00,  1.50s/it, lr=7e-5, step_loss=0.0267]Steps:  21%|██▏       | 5295/24850 [2:12:27<8:10:00,  1.50s/it, lr=7e-5, step_loss=0.00884]Steps:  21%|██▏       | 5296/24850 [2:12:29<8:06:33,  1.49s/it, lr=7e-5, step_loss=0.00884]Steps:  21%|██▏       | 5296/24850 [2:12:29<8:06:33,  1.49s/it, lr=7e-5, step_loss=0.0173] Steps:  21%|██▏       | 5297/24850 [2:12:30<8:03:21,  1.48s/it, lr=7e-5, step_loss=0.0173]Steps:  21%|██▏       | 5297/24850 [2:12:30<8:03:21,  1.48s/it, lr=7e-5, step_loss=0.106] Steps:  21%|██▏       | 5298/24850 [2:12:32<7:59:49,  1.47s/it, lr=7e-5, step_loss=0.106]Steps:  21%|██▏       | 5298/24850 [2:12:32<7:59:49,  1.47s/it, lr=7e-5, step_loss=0.00166]Steps:  21%|██▏       | 5299/24850 [2:12:33<7:58:14,  1.47s/it, lr=7e-5, step_loss=0.00166]Steps:  21%|██▏       | 5299/24850 [2:12:33<7:58:14,  1.47s/it, lr=7e-5, step_loss=0.0206] Steps:  21%|██▏       | 5300/24850 [2:12:35<7:56:26,  1.46s/it, lr=7e-5, step_loss=0.0206]Steps:  21%|██▏       | 5300/24850 [2:12:35<7:56:26,  1.46s/it, lr=7e-5, step_loss=0.0143]Steps:  21%|██▏       | 5301/24850 [2:12:36<7:55:47,  1.46s/it, lr=7e-5, step_loss=0.0143]Steps:  21%|██▏       | 5301/24850 [2:12:36<7:55:47,  1.46s/it, lr=7e-5, step_loss=0.0287]Steps:  21%|██▏       | 5302/24850 [2:12:38<7:54:09,  1.46s/it, lr=7e-5, step_loss=0.0287]Steps:  21%|██▏       | 5302/24850 [2:12:38<7:54:09,  1.46s/it, lr=7e-5, step_loss=0.0112]Steps:  21%|██▏       | 5303/24850 [2:12:39<7:54:11,  1.46s/it, lr=7e-5, step_loss=0.0112]Steps:  21%|██▏       | 5303/24850 [2:12:39<7:54:11,  1.46s/it, lr=7e-5, step_loss=0.0075]Steps:  21%|██▏       | 5304/24850 [2:12:40<7:54:32,  1.46s/it, lr=7e-5, step_loss=0.0075]Steps:  21%|██▏       | 5304/24850 [2:12:40<7:54:32,  1.46s/it, lr=7e-5, step_loss=0.0339]Steps:  21%|██▏       | 5305/24850 [2:12:42<7:54:29,  1.46s/it, lr=7e-5, step_loss=0.0339]Steps:  21%|██▏       | 5305/24850 [2:12:42<7:54:29,  1.46s/it, lr=7e-5, step_loss=0.00177]Steps:  21%|██▏       | 5306/24850 [2:12:43<7:54:18,  1.46s/it, lr=7e-5, step_loss=0.00177]Steps:  21%|██▏       | 5306/24850 [2:12:43<7:54:18,  1.46s/it, lr=7e-5, step_loss=0.0201] Steps:  21%|██▏       | 5307/24850 [2:12:45<7:56:14,  1.46s/it, lr=7e-5, step_loss=0.0201]Steps:  21%|██▏       | 5307/24850 [2:12:45<7:56:14,  1.46s/it, lr=7e-5, step_loss=0.0264]Steps:  21%|██▏       | 5308/24850 [2:12:46<7:56:20,  1.46s/it, lr=7e-5, step_loss=0.0264]Steps:  21%|██▏       | 5308/24850 [2:12:46<7:56:20,  1.46s/it, lr=7e-5, step_loss=0.023] Steps:  21%|██▏       | 5309/24850 [2:12:48<7:56:26,  1.46s/it, lr=7e-5, step_loss=0.023]Steps:  21%|██▏       | 5309/24850 [2:12:48<7:56:26,  1.46s/it, lr=7e-5, step_loss=0.00484]Steps:  21%|██▏       | 5310/24850 [2:12:49<7:56:39,  1.46s/it, lr=7e-5, step_loss=0.00484]Steps:  21%|██▏       | 5310/24850 [2:12:49<7:56:39,  1.46s/it, lr=7e-5, step_loss=0.117]  Steps:  21%|██▏       | 5311/24850 [2:12:51<7:55:27,  1.46s/it, lr=7e-5, step_loss=0.117]Steps:  21%|██▏       | 5311/24850 [2:12:51<7:55:27,  1.46s/it, lr=7e-5, step_loss=0.0158]Steps:  21%|██▏       | 5312/24850 [2:12:52<7:55:55,  1.46s/it, lr=7e-5, step_loss=0.0158]Steps:  21%|██▏       | 5312/24850 [2:12:52<7:55:55,  1.46s/it, lr=7e-5, step_loss=0.0409]Steps:  21%|██▏       | 5313/24850 [2:12:54<7:54:32,  1.46s/it, lr=7e-5, step_loss=0.0409]Steps:  21%|██▏       | 5313/24850 [2:12:54<7:54:32,  1.46s/it, lr=7e-5, step_loss=0.00141]Steps:  21%|██▏       | 5314/24850 [2:12:55<7:54:07,  1.46s/it, lr=7e-5, step_loss=0.00141]Steps:  21%|██▏       | 5314/24850 [2:12:55<7:54:07,  1.46s/it, lr=7e-5, step_loss=0.032]  Steps:  21%|██▏       | 5315/24850 [2:12:56<7:53:05,  1.45s/it, lr=7e-5, step_loss=0.032]Steps:  21%|██▏       | 5315/24850 [2:12:56<7:53:05,  1.45s/it, lr=7e-5, step_loss=0.0129] torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:  21%|██▏       | 5316/24850 [2:12:58<7:53:45,  1.46s/it, lr=7e-5, step_loss=0.0129]Steps:  21%|██▏       | 5316/24850 [2:12:58<7:53:45,  1.46s/it, lr=7e-5, step_loss=0.00646]Steps:  21%|██▏       | 5317/24850 [2:12:59<7:54:37,  1.46s/it, lr=7e-5, step_loss=0.00646]Steps:  21%|██▏       | 5317/24850 [2:12:59<7:54:37,  1.46s/it, lr=7e-5, step_loss=0.0682] Steps:  21%|██▏       | 5318/24850 [2:13:01<7:55:09,  1.46s/it, lr=7e-5, step_loss=0.0682]Steps:  21%|██▏       | 5318/24850 [2:13:01<7:55:09,  1.46s/it, lr=7e-5, step_loss=0.0121]Steps:  21%|██▏       | 5319/24850 [2:13:02<7:55:52,  1.46s/it, lr=7e-5, step_loss=0.0121]Steps:  21%|██▏       | 5319/24850 [2:13:02<7:55:52,  1.46s/it, lr=7e-5, step_loss=0.0656]Steps:  21%|██▏       | 5320/24850 [2:13:04<7:56:20,  1.46s/it, lr=7e-5, step_loss=0.0656]Steps:  21%|██▏       | 5320/24850 [2:13:04<7:56:20,  1.46s/it, lr=7e-5, step_loss=0.00968]Steps:  21%|██▏       | 5321/24850 [2:13:05<7:55:29,  1.46s/it, lr=7e-5, step_loss=0.00968]Steps:  21%|██▏       | 5321/24850 [2:13:05<7:55:29,  1.46s/it, lr=7e-5, step_loss=0.0181] Steps:  21%|██▏       | 5322/24850 [2:13:07<7:55:19,  1.46s/it, lr=7e-5, step_loss=0.0181]Steps:  21%|██▏       | 5322/24850 [2:13:07<7:55:19,  1.46s/it, lr=7e-5, step_loss=0.262] Steps:  21%|██▏       | 5323/24850 [2:13:08<7:53:10,  1.45s/it, lr=7e-5, step_loss=0.262]Steps:  21%|██▏       | 5323/24850 [2:13:08<7:53:10,  1.45s/it, lr=7e-5, step_loss=0.00584]Steps:  21%|██▏       | 5324/24850 [2:13:10<7:52:16,  1.45s/it, lr=7e-5, step_loss=0.00584]Steps:  21%|██▏       | 5324/24850 [2:13:10<7:52:16,  1.45s/it, lr=7e-5, step_loss=0.00199]Steps:  21%|██▏       | 5325/24850 [2:13:11<7:53:07,  1.45s/it, lr=7e-5, step_loss=0.00199]Steps:  21%|██▏       | 5325/24850 [2:13:11<7:53:07,  1.45s/it, lr=7e-5, step_loss=0.0143] Steps:  21%|██▏       | 5326/24850 [2:13:13<7:53:03,  1.45s/it, lr=7e-5, step_loss=0.0143]Steps:  21%|██▏       | 5326/24850 [2:13:13<7:53:03,  1.45s/it, lr=7e-5, step_loss=0.0207]Steps:  21%|██▏       | 5327/24850 [2:13:14<7:51:30,  1.45s/it, lr=7e-5, step_loss=0.0207]Steps:  21%|██▏       | 5327/24850 [2:13:14<7:51:30,  1.45s/it, lr=7e-5, step_loss=0.0076]Steps:  21%|██▏       | 5328/24850 [2:13:15<7:52:07,  1.45s/it, lr=7e-5, step_loss=0.0076]Steps:  21%|██▏       | 5328/24850 [2:13:15<7:52:07,  1.45s/it, lr=7e-5, step_loss=0.0411]Steps:  21%|██▏       | 5329/24850 [2:13:17<7:52:45,  1.45s/it, lr=7e-5, step_loss=0.0411]Steps:  21%|██▏       | 5329/24850 [2:13:17<7:52:45,  1.45s/it, lr=7e-5, step_loss=0.118] Steps:  21%|██▏       | 5330/24850 [2:13:18<7:53:36,  1.46s/it, lr=7e-5, step_loss=0.118]Steps:  21%|██▏       | 5330/24850 [2:13:18<7:53:36,  1.46s/it, lr=7e-5, step_loss=0.00174]Steps:  21%|██▏       | 5331/24850 [2:13:20<7:52:38,  1.45s/it, lr=7e-5, step_loss=0.00174]Steps:  21%|██▏       | 5331/24850 [2:13:20<7:52:38,  1.45s/it, lr=7e-5, step_loss=0.0117] Steps:  21%|██▏       | 5332/24850 [2:13:21<7:52:58,  1.45s/it, lr=7e-5, step_loss=0.0117]Steps:  21%|██▏       | 5332/24850 [2:13:21<7:52:58,  1.45s/it, lr=7e-5, step_loss=0.0159]Steps:  21%|██▏       | 5333/24850 [2:13:23<7:53:38,  1.46s/it, lr=7e-5, step_loss=0.0159]Steps:  21%|██▏       | 5333/24850 [2:13:23<7:53:38,  1.46s/it, lr=7e-5, step_loss=0.0221]Steps:  21%|██▏       | 5334/24850 [2:13:24<7:53:09,  1.45s/it, lr=7e-5, step_loss=0.0221]Steps:  21%|██▏       | 5334/24850 [2:13:24<7:53:09,  1.45s/it, lr=7e-5, step_loss=0.0205]Steps:  21%|██▏       | 5335/24850 [2:13:26<7:52:55,  1.45s/it, lr=7e-5, step_loss=0.0205]Steps:  21%|██▏       | 5335/24850 [2:13:26<7:52:55,  1.45s/it, lr=7e-5, step_loss=0.00862]Steps:  21%|██▏       | 5336/24850 [2:13:27<7:53:28,  1.46s/it, lr=7e-5, step_loss=0.00862]Steps:  21%|██▏       | 5336/24850 [2:13:27<7:53:28,  1.46s/it, lr=7e-5, step_loss=0.0461] Steps:  21%|██▏       | 5337/24850 [2:13:29<7:53:05,  1.45s/it, lr=7e-5, step_loss=0.0461]Steps:  21%|██▏       | 5337/24850 [2:13:29<7:53:05,  1.45s/it, lr=7e-5, step_loss=0.0342]Steps:  21%|██▏       | 5338/24850 [2:13:30<7:53:01,  1.45s/it, lr=7e-5, step_loss=0.0342]Steps:  21%|██▏       | 5338/24850 [2:13:30<7:53:01,  1.45s/it, lr=7e-5, step_loss=0.00458]Steps:  21%|██▏       | 5339/24850 [2:13:31<7:52:18,  1.45s/it, lr=7e-5, step_loss=0.00458]Steps:  21%|██▏       | 5339/24850 [2:13:31<7:52:18,  1.45s/it, lr=7e-5, step_loss=0.00869]Steps:  21%|██▏       | 5340/24850 [2:13:34<9:29:37,  1.75s/it, lr=7e-5, step_loss=0.00869]Steps:  21%|██▏       | 5340/24850 [2:13:34<9:29:37,  1.75s/it, lr=7e-5, step_loss=0.00556]Steps:  21%|██▏       | 5341/24850 [2:13:35<9:01:04,  1.66s/it, lr=7e-5, step_loss=0.00556]Steps:  21%|██▏       | 5341/24850 [2:13:35<9:01:04,  1.66s/it, lr=7e-5, step_loss=0.0764] Steps:  21%|██▏       | 5342/24850 [2:13:37<8:41:09,  1.60s/it, lr=7e-5, step_loss=0.0764]Steps:  21%|██▏       | 5342/24850 [2:13:37<8:41:09,  1.60s/it, lr=7e-5, step_loss=0.0347]torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  Steps:  22%|██▏       | 5343/24850 [2:13:38<8:26:26,  1.56s/it, lr=7e-5, step_loss=0.0347]Steps:  22%|██▏       | 5343/24850 [2:13:38<8:26:26,  1.56s/it, lr=7e-5, step_loss=0.0178]Steps:  22%|██▏       | 5344/24850 [2:13:40<8:18:59,  1.53s/it, lr=7e-5, step_loss=0.0178]Steps:  22%|██▏       | 5344/24850 [2:13:40<8:18:59,  1.53s/it, lr=7e-5, step_loss=0.00931]Steps:  22%|██▏       | 5345/24850 [2:13:41<8:11:07,  1.51s/it, lr=7e-5, step_loss=0.00931]Steps:  22%|██▏       | 5345/24850 [2:13:41<8:11:07,  1.51s/it, lr=7e-5, step_loss=0.0137] Steps:  22%|██▏       | 5346/24850 [2:13:43<8:05:05,  1.49s/it, lr=7e-5, step_loss=0.0137]Steps:  22%|██▏       | 5346/24850 [2:13:43<8:05:05,  1.49s/it, lr=7e-5, step_loss=0.159] Steps:  22%|██▏       | 5347/24850 [2:13:44<8:03:18,  1.49s/it, lr=7e-5, step_loss=0.159]Steps:  22%|██▏       | 5347/24850 [2:13:44<8:03:18,  1.49s/it, lr=7e-5, step_loss=0.0534]Steps:  22%|██▏       | 5348/24850 [2:13:46<8:02:23,  1.48s/it, lr=7e-5, step_loss=0.0534]Steps:  22%|██▏       | 5348/24850 [2:13:46<8:02:23,  1.48s/it, lr=7e-5, step_loss=0.0249]Steps:  22%|██▏       | 5349/24850 [2:13:47<8:00:24,  1.48s/it, lr=7e-5, step_loss=0.0249]Steps:  22%|██▏       | 5349/24850 [2:13:47<8:00:24,  1.48s/it, lr=7e-5, step_loss=0.0203]Steps:  22%|██▏       | 5350/24850 [2:13:49<7:59:40,  1.48s/it, lr=7e-5, step_loss=0.0203]Steps:  22%|██▏       | 5350/24850 [2:13:49<7:59:40,  1.48s/it, lr=7e-5, step_loss=0.00669]Steps:  22%|██▏       | 5351/24850 [2:13:50<7:56:41,  1.47s/it, lr=7e-5, step_loss=0.00669]Steps:  22%|██▏       | 5351/24850 [2:13:50<7:56:41,  1.47s/it, lr=7e-5, step_loss=0.00227]Steps:  22%|██▏       | 5352/24850 [2:13:51<7:57:24,  1.47s/it, lr=7e-5, step_loss=0.00227]Steps:  22%|██▏       | 5352/24850 [2:13:51<7:57:24,  1.47s/it, lr=7e-5, step_loss=0.0115] Steps:  22%|██▏       | 5353/24850 [2:13:53<7:56:18,  1.47s/it, lr=7e-5, step_loss=0.0115]Steps:  22%|██▏       | 5353/24850 [2:13:53<7:56:18,  1.47s/it, lr=7e-5, step_loss=0.0507]Steps:  22%|██▏       | 5354/24850 [2:13:54<7:55:28,  1.46s/it, lr=7e-5, step_loss=0.0507]Steps:  22%|██▏       | 5354/24850 [2:13:54<7:55:28,  1.46s/it, lr=7e-5, step_loss=0.0204]Steps:  22%|██▏       | 5355/24850 [2:13:56<7:54:49,  1.46s/it, lr=7e-5, step_loss=0.0204]Steps:  22%|██▏       | 5355/24850 [2:13:56<7:54:49,  1.46s/it, lr=7e-5, step_loss=0.0511]Steps:  22%|██▏       | 5356/24850 [2:13:57<7:53:22,  1.46s/it, lr=7e-5, step_loss=0.0511]Steps:  22%|██▏       | 5356/24850 [2:13:57<7:53:22,  1.46s/it, lr=7e-5, step_loss=0.00967]Steps:  22%|██▏       | 5357/24850 [2:13:59<7:53:34,  1.46s/it, lr=7e-5, step_loss=0.00967]Steps:  22%|██▏       | 5357/24850 [2:13:59<7:53:34,  1.46s/it, lr=7e-5, step_loss=0.0218] Steps:  22%|██▏       | 5358/24850 [2:14:00<7:54:44,  1.46s/it, lr=7e-5, step_loss=0.0218]Steps:  22%|██▏       | 5358/24850 [2:14:00<7:54:44,  1.46s/it, lr=7e-5, step_loss=0.0432]Steps:  22%|██▏       | 5359/24850 [2:14:02<8:10:02,  1.51s/it, lr=7e-5, step_loss=0.0432]Steps:  22%|██▏       | 5359/24850 [2:14:02<8:10:02,  1.51s/it, lr=7e-5, step_loss=0.0152]Steps:  22%|██▏       | 5360/24850 [2:14:03<8:05:12,  1.49s/it, lr=7e-5, step_loss=0.0152]Steps:  22%|██▏       | 5360/24850 [2:14:03<8:05:12,  1.49s/it, lr=7e-5, step_loss=0.0241]Steps:  22%|██▏       | 5361/24850 [2:14:05<8:01:06,  1.48s/it, lr=7e-5, step_loss=0.0241]Steps:  22%|██▏       | 5361/24850 [2:14:05<8:01:06,  1.48s/it, lr=7e-5, step_loss=0.00697]Steps:  22%|██▏       | 5362/24850 [2:14:06<7:59:16,  1.48s/it, lr=7e-5, step_loss=0.00697]Steps:  22%|██▏       | 5362/24850 [2:14:06<7:59:16,  1.48s/it, lr=7e-5, step_loss=0.162]  Steps:  22%|██▏       | 5363/24850 [2:14:08<7:57:28,  1.47s/it, lr=7e-5, step_loss=0.162]Steps:  22%|██▏       | 5363/24850 [2:14:08<7:57:28,  1.47s/it, lr=7e-5, step_loss=0.00411]Steps:  22%|██▏       | 5364/24850 [2:14:09<7:55:30,  1.46s/it, lr=7e-5, step_loss=0.00411]Steps:  22%|██▏       | 5364/24850 [2:14:09<7:55:30,  1.46s/it, lr=7e-5, step_loss=0.0737] Steps:  22%|██▏       | 5365/24850 [2:14:11<7:55:27,  1.46s/it, lr=7e-5, step_loss=0.0737]Steps:  22%|██▏       | 5365/24850 [2:14:11<7:55:27,  1.46s/it, lr=7e-5, step_loss=0.00141]Steps:  22%|██▏       | 5366/24850 [2:14:12<7:55:11,  1.46s/it, lr=7e-5, step_loss=0.00141]Steps:  22%|██▏       | 5366/24850 [2:14:12<7:55:11,  1.46s/it, lr=7e-5, step_loss=0.0517] Steps:  22%|██▏       | 5367/24850 [2:14:13<7:54:23,  1.46s/it, lr=7e-5, step_loss=0.0517]Steps:  22%|██▏       | 5367/24850 [2:14:13<7:54:23,  1.46s/it, lr=7e-5, step_loss=0.0123]Steps:  22%|██▏       | 5368/24850 [2:14:15<7:54:08,  1.46s/it, lr=7e-5, step_loss=0.0123]Steps:  22%|██▏       | 5368/24850 [2:14:15<7:54:08,  1.46s/it, lr=7e-5, step_loss=0.0129]Steps:  22%|██▏       | 5369/24850 [2:14:16<7:52:43,  1.46s/it, lr=7e-5, step_loss=0.0129]Steps:  22%|██▏       | 5369/24850 [2:14:16<7:52:43,  1.46s/it, lr=7e-5, step_loss=0.00937]Steps:  22%|██▏       | 5370/24850 [2:14:18<7:57:17,  1.47s/it, lr=7e-5, step_loss=0.00937]Steps:  22%|██▏       | 5370/24850 [2:14:18<7:57:17,  1.47s/it, lr=7e-5, step_loss=0.00582]mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:  22%|██▏       | 5371/24850 [2:14:19<7:56:11,  1.47s/it, lr=7e-5, step_loss=0.00582]Steps:  22%|██▏       | 5371/24850 [2:14:19<7:56:11,  1.47s/it, lr=7e-5, step_loss=0.0107] Steps:  22%|██▏       | 5372/24850 [2:14:21<7:56:04,  1.47s/it, lr=7e-5, step_loss=0.0107]Steps:  22%|██▏       | 5372/24850 [2:14:21<7:56:04,  1.47s/it, lr=7e-5, step_loss=0.0704]Steps:  22%|██▏       | 5373/24850 [2:14:22<7:58:12,  1.47s/it, lr=7e-5, step_loss=0.0704]Steps:  22%|██▏       | 5373/24850 [2:14:22<7:58:12,  1.47s/it, lr=7e-5, step_loss=0.0204]Steps:  22%|██▏       | 5374/24850 [2:14:24<7:57:49,  1.47s/it, lr=7e-5, step_loss=0.0204]Steps:  22%|██▏       | 5374/24850 [2:14:24<7:57:49,  1.47s/it, lr=7e-5, step_loss=0.0599]Steps:  22%|██▏       | 5375/24850 [2:14:25<7:57:20,  1.47s/it, lr=7e-5, step_loss=0.0599]Steps:  22%|██▏       | 5375/24850 [2:14:25<7:57:20,  1.47s/it, lr=7e-5, step_loss=0.00589]Steps:  22%|██▏       | 5376/24850 [2:14:27<7:58:42,  1.47s/it, lr=7e-5, step_loss=0.00589]Steps:  22%|██▏       | 5376/24850 [2:14:27<7:58:42,  1.47s/it, lr=7e-5, step_loss=0.0109] Steps:  22%|██▏       | 5377/24850 [2:14:28<7:57:27,  1.47s/it, lr=7e-5, step_loss=0.0109]Steps:  22%|██▏       | 5377/24850 [2:14:28<7:57:27,  1.47s/it, lr=7e-5, step_loss=0.0776]Steps:  22%|██▏       | 5378/24850 [2:14:30<7:57:08,  1.47s/it, lr=7e-5, step_loss=0.0776]Steps:  22%|██▏       | 5378/24850 [2:14:30<7:57:08,  1.47s/it, lr=7e-5, step_loss=0.00397]Steps:  22%|██▏       | 5379/24850 [2:14:31<7:55:51,  1.47s/it, lr=7e-5, step_loss=0.00397]Steps:  22%|██▏       | 5379/24850 [2:14:31<7:55:51,  1.47s/it, lr=7e-5, step_loss=0.00279]Steps:  22%|██▏       | 5380/24850 [2:14:33<7:54:20,  1.46s/it, lr=7e-5, step_loss=0.00279]Steps:  22%|██▏       | 5380/24850 [2:14:33<7:54:20,  1.46s/it, lr=7e-5, step_loss=0.00871]Steps:  22%|██▏       | 5381/24850 [2:14:34<7:53:38,  1.46s/it, lr=7e-5, step_loss=0.00871]Steps:  22%|██▏       | 5381/24850 [2:14:34<7:53:38,  1.46s/it, lr=7e-5, step_loss=0.00671]Steps:  22%|██▏       | 5382/24850 [2:14:35<7:53:36,  1.46s/it, lr=7e-5, step_loss=0.00671]Steps:  22%|██▏       | 5382/24850 [2:14:35<7:53:36,  1.46s/it, lr=7e-5, step_loss=0.0498] Steps:  22%|██▏       | 5383/24850 [2:14:37<7:53:43,  1.46s/it, lr=7e-5, step_loss=0.0498]Steps:  22%|██▏       | 5383/24850 [2:14:37<7:53:43,  1.46s/it, lr=7e-5, step_loss=0.00716]Steps:  22%|██▏       | 5384/24850 [2:14:38<7:53:36,  1.46s/it, lr=7e-5, step_loss=0.00716]Steps:  22%|██▏       | 5384/24850 [2:14:38<7:53:36,  1.46s/it, lr=7e-5, step_loss=0.148]  Steps:  22%|██▏       | 5385/24850 [2:14:40<7:52:24,  1.46s/it, lr=7e-5, step_loss=0.148]Steps:  22%|██▏       | 5385/24850 [2:14:40<7:52:24,  1.46s/it, lr=7e-5, step_loss=0.0728]Steps:  22%|██▏       | 5386/24850 [2:14:41<7:52:35,  1.46s/it, lr=7e-5, step_loss=0.0728]Steps:  22%|██▏       | 5386/24850 [2:14:41<7:52:35,  1.46s/it, lr=7e-5, step_loss=0.0122]Steps:  22%|██▏       | 5387/24850 [2:14:43<7:51:08,  1.45s/it, lr=7e-5, step_loss=0.0122]Steps:  22%|██▏       | 5387/24850 [2:14:43<7:51:08,  1.45s/it, lr=7e-5, step_loss=0.000387]Steps:  22%|██▏       | 5388/24850 [2:14:44<7:50:55,  1.45s/it, lr=7e-5, step_loss=0.000387]Steps:  22%|██▏       | 5388/24850 [2:14:44<7:50:55,  1.45s/it, lr=7e-5, step_loss=0.018]   Steps:  22%|██▏       | 5389/24850 [2:14:46<7:52:18,  1.46s/it, lr=7e-5, step_loss=0.018]Steps:  22%|██▏       | 5389/24850 [2:14:46<7:52:18,  1.46s/it, lr=7e-5, step_loss=0.0187]Steps:  22%|██▏       | 5390/24850 [2:14:48<9:21:56,  1.73s/it, lr=7e-5, step_loss=0.0187]Steps:  22%|██▏       | 5390/24850 [2:14:48<9:21:56,  1.73s/it, lr=7e-5, step_loss=0.0187]Steps:  22%|██▏       | 5391/24850 [2:14:49<8:55:03,  1.65s/it, lr=7e-5, step_loss=0.0187]Steps:  22%|██▏       | 5391/24850 [2:14:49<8:55:03,  1.65s/it, lr=7e-5, step_loss=0.0086]Steps:  22%|██▏       | 5392/24850 [2:14:51<8:35:37,  1.59s/it, lr=7e-5, step_loss=0.0086]Steps:  22%|██▏       | 5392/24850 [2:14:51<8:35:37,  1.59s/it, lr=7e-5, step_loss=0.0516]Steps:  22%|██▏       | 5393/24850 [2:14:52<8:21:54,  1.55s/it, lr=7e-5, step_loss=0.0516]Steps:  22%|██▏       | 5393/24850 [2:14:52<8:21:54,  1.55s/it, lr=7e-5, step_loss=0.0641]Steps:  22%|██▏       | 5394/24850 [2:14:54<8:13:29,  1.52s/it, lr=7e-5, step_loss=0.0641]Steps:  22%|██▏       | 5394/24850 [2:14:54<8:13:29,  1.52s/it, lr=7e-5, step_loss=0.0905]Steps:  22%|██▏       | 5395/24850 [2:14:55<8:07:04,  1.50s/it, lr=7e-5, step_loss=0.0905]Steps:  22%|██▏       | 5395/24850 [2:14:55<8:07:04,  1.50s/it, lr=7e-5, step_loss=0.0321]Steps:  22%|██▏       | 5396/24850 [2:14:57<8:02:11,  1.49s/it, lr=7e-5, step_loss=0.0321]Steps:  22%|██▏       | 5396/24850 [2:14:57<8:02:11,  1.49s/it, lr=7e-5, step_loss=0.0554]Steps:  22%|██▏       | 5397/24850 [2:14:58<7:58:37,  1.48s/it, lr=7e-5, step_loss=0.0554]Steps:  22%|██▏       | 5397/24850 [2:14:58<7:58:37,  1.48s/it, lr=7e-5, step_loss=0.000823]torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) Steps:  22%|██▏       | 5398/24850 [2:15:00<7:56:42,  1.47s/it, lr=7e-5, step_loss=0.000823]Steps:  22%|██▏       | 5398/24850 [2:15:00<7:56:42,  1.47s/it, lr=7e-5, step_loss=0.0543]  Steps:  22%|██▏       | 5399/24850 [2:15:01<7:54:49,  1.46s/it, lr=7e-5, step_loss=0.0543]Steps:  22%|██▏       | 5399/24850 [2:15:01<7:54:49,  1.46s/it, lr=7e-5, step_loss=0.035] Steps:  22%|██▏       | 5400/24850 [2:15:03<7:54:32,  1.46s/it, lr=7e-5, step_loss=0.035]Steps:  22%|██▏       | 5400/24850 [2:15:03<7:54:32,  1.46s/it, lr=7e-5, step_loss=0.01] Steps:  22%|██▏       | 5401/24850 [2:15:04<7:53:28,  1.46s/it, lr=7e-5, step_loss=0.01]Steps:  22%|██▏       | 5401/24850 [2:15:04<7:53:28,  1.46s/it, lr=7e-5, step_loss=0.0113]Steps:  22%|██▏       | 5402/24850 [2:15:05<7:51:55,  1.46s/it, lr=7e-5, step_loss=0.0113]Steps:  22%|██▏       | 5402/24850 [2:15:05<7:51:55,  1.46s/it, lr=7e-5, step_loss=0.00723]Steps:  22%|██▏       | 5403/24850 [2:15:07<7:52:38,  1.46s/it, lr=7e-5, step_loss=0.00723]Steps:  22%|██▏       | 5403/24850 [2:15:07<7:52:38,  1.46s/it, lr=7e-5, step_loss=0.0991] Steps:  22%|██▏       | 5404/24850 [2:15:08<7:52:15,  1.46s/it, lr=7e-5, step_loss=0.0991]Steps:  22%|██▏       | 5404/24850 [2:15:08<7:52:15,  1.46s/it, lr=7e-5, step_loss=0.00208]Steps:  22%|██▏       | 5405/24850 [2:15:10<7:52:39,  1.46s/it, lr=7e-5, step_loss=0.00208]Steps:  22%|██▏       | 5405/24850 [2:15:10<7:52:39,  1.46s/it, lr=7e-5, step_loss=0.00436]Steps:  22%|██▏       | 5406/24850 [2:15:11<7:53:09,  1.46s/it, lr=7e-5, step_loss=0.00436]Steps:  22%|██▏       | 5406/24850 [2:15:11<7:53:09,  1.46s/it, lr=7e-5, step_loss=0.00338]Steps:  22%|██▏       | 5407/24850 [2:15:13<7:52:12,  1.46s/it, lr=7e-5, step_loss=0.00338]Steps:  22%|██▏       | 5407/24850 [2:15:13<7:52:12,  1.46s/it, lr=7e-5, step_loss=0.013]  Steps:  22%|██▏       | 5408/24850 [2:15:14<7:52:27,  1.46s/it, lr=7e-5, step_loss=0.013]Steps:  22%|██▏       | 5408/24850 [2:15:14<7:52:27,  1.46s/it, lr=7e-5, step_loss=0.0241]Steps:  22%|██▏       | 5409/24850 [2:15:16<7:57:48,  1.47s/it, lr=7e-5, step_loss=0.0241]Steps:  22%|██▏       | 5409/24850 [2:15:16<7:57:48,  1.47s/it, lr=7e-5, step_loss=0.0548]Steps:  22%|██▏       | 5410/24850 [2:15:17<7:56:43,  1.47s/it, lr=7e-5, step_loss=0.0548]Steps:  22%|██▏       | 5410/24850 [2:15:17<7:56:43,  1.47s/it, lr=7e-5, step_loss=0.0511]Steps:  22%|██▏       | 5411/24850 [2:15:19<7:54:16,  1.46s/it, lr=7e-5, step_loss=0.0511]Steps:  22%|██▏       | 5411/24850 [2:15:19<7:54:16,  1.46s/it, lr=7e-5, step_loss=0.0364]Steps:  22%|██▏       | 5412/24850 [2:15:20<7:53:29,  1.46s/it, lr=7e-5, step_loss=0.0364]Steps:  22%|██▏       | 5412/24850 [2:15:20<7:53:29,  1.46s/it, lr=7e-5, step_loss=0.00712]Steps:  22%|██▏       | 5413/24850 [2:15:22<7:53:12,  1.46s/it, lr=7e-5, step_loss=0.00712]Steps:  22%|██▏       | 5413/24850 [2:15:22<7:53:12,  1.46s/it, lr=7e-5, step_loss=0.0143] Steps:  22%|██▏       | 5414/24850 [2:15:23<7:54:18,  1.46s/it, lr=7e-5, step_loss=0.0143]Steps:  22%|██▏       | 5414/24850 [2:15:23<7:54:18,  1.46s/it, lr=7e-5, step_loss=0.0217]Steps:  22%|██▏       | 5415/24850 [2:15:24<7:53:52,  1.46s/it, lr=7e-5, step_loss=0.0217]Steps:  22%|██▏       | 5415/24850 [2:15:24<7:53:52,  1.46s/it, lr=7e-5, step_loss=0.0221]Steps:  22%|██▏       | 5416/24850 [2:15:26<7:53:54,  1.46s/it, lr=7e-5, step_loss=0.0221]Steps:  22%|██▏       | 5416/24850 [2:15:26<7:53:54,  1.46s/it, lr=7e-5, step_loss=0.00456]Steps:  22%|██▏       | 5417/24850 [2:15:27<7:51:57,  1.46s/it, lr=7e-5, step_loss=0.00456]Steps:  22%|██▏       | 5417/24850 [2:15:27<7:51:57,  1.46s/it, lr=7e-5, step_loss=0.00545]Steps:  22%|██▏       | 5418/24850 [2:15:29<7:51:39,  1.46s/it, lr=7e-5, step_loss=0.00545]Steps:  22%|██▏       | 5418/24850 [2:15:29<7:51:39,  1.46s/it, lr=7e-5, step_loss=0.0534] Steps:  22%|██▏       | 5419/24850 [2:15:30<7:51:37,  1.46s/it, lr=7e-5, step_loss=0.0534]Steps:  22%|██▏       | 5419/24850 [2:15:30<7:51:37,  1.46s/it, lr=7e-5, step_loss=0.0768]Steps:  22%|██▏       | 5420/24850 [2:15:32<7:52:19,  1.46s/it, lr=7e-5, step_loss=0.0768]Steps:  22%|██▏       | 5420/24850 [2:15:32<7:52:19,  1.46s/it, lr=7e-5, step_loss=0.0522]Steps:  22%|██▏       | 5421/24850 [2:15:33<7:53:04,  1.46s/it, lr=7e-5, step_loss=0.0522]Steps:  22%|██▏       | 5421/24850 [2:15:33<7:53:04,  1.46s/it, lr=7e-5, step_loss=0.01]  Steps:  22%|██▏       | 5422/24850 [2:15:35<7:52:23,  1.46s/it, lr=7e-5, step_loss=0.01]Steps:  22%|██▏       | 5422/24850 [2:15:35<7:52:23,  1.46s/it, lr=7e-5, step_loss=0.0036]Steps:  22%|██▏       | 5423/24850 [2:15:36<7:52:37,  1.46s/it, lr=7e-5, step_loss=0.0036]Steps:  22%|██▏       | 5423/24850 [2:15:36<7:52:37,  1.46s/it, lr=7e-5, step_loss=0.021] Steps:  22%|██▏       | 5424/24850 [2:15:38<7:53:02,  1.46s/it, lr=7e-5, step_loss=0.021]Steps:  22%|██▏       | 5424/24850 [2:15:38<7:53:02,  1.46s/it, lr=7e-5, step_loss=0.0506]torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) Steps:  22%|██▏       | 5425/24850 [2:15:39<7:52:00,  1.46s/it, lr=7e-5, step_loss=0.0506]Steps:  22%|██▏       | 5425/24850 [2:15:39<7:52:00,  1.46s/it, lr=7e-5, step_loss=0.0636]Steps:  22%|██▏       | 5426/24850 [2:15:41<7:51:28,  1.46s/it, lr=7e-5, step_loss=0.0636]Steps:  22%|██▏       | 5426/24850 [2:15:41<7:51:28,  1.46s/it, lr=7e-5, step_loss=0.00931]Steps:  22%|██▏       | 5427/24850 [2:15:42<7:51:13,  1.46s/it, lr=7e-5, step_loss=0.00931]Steps:  22%|██▏       | 5427/24850 [2:15:42<7:51:13,  1.46s/it, lr=7e-5, step_loss=0.00182]Steps:  22%|██▏       | 5428/24850 [2:15:43<7:51:09,  1.46s/it, lr=7e-5, step_loss=0.00182]Steps:  22%|██▏       | 5428/24850 [2:15:43<7:51:09,  1.46s/it, lr=7e-5, step_loss=0.0385] Steps:  22%|██▏       | 5429/24850 [2:15:45<7:50:59,  1.46s/it, lr=7e-5, step_loss=0.0385]Steps:  22%|██▏       | 5429/24850 [2:15:45<7:50:59,  1.46s/it, lr=7e-5, step_loss=0.00608]Steps:  22%|██▏       | 5430/24850 [2:15:46<7:53:09,  1.46s/it, lr=7e-5, step_loss=0.00608]Steps:  22%|██▏       | 5430/24850 [2:15:46<7:53:09,  1.46s/it, lr=7e-5, step_loss=0.042]  Steps:  22%|██▏       | 5431/24850 [2:15:48<7:52:39,  1.46s/it, lr=7e-5, step_loss=0.042]Steps:  22%|██▏       | 5431/24850 [2:15:48<7:52:39,  1.46s/it, lr=7e-5, step_loss=0.00571]Steps:  22%|██▏       | 5432/24850 [2:15:49<7:53:15,  1.46s/it, lr=7e-5, step_loss=0.00571]Steps:  22%|██▏       | 5432/24850 [2:15:49<7:53:15,  1.46s/it, lr=7e-5, step_loss=0.0368] Steps:  22%|██▏       | 5433/24850 [2:15:51<7:51:42,  1.46s/it, lr=7e-5, step_loss=0.0368]Steps:  22%|██▏       | 5433/24850 [2:15:51<7:51:42,  1.46s/it, lr=7e-5, step_loss=0.0044]Steps:  22%|██▏       | 5434/24850 [2:15:52<7:50:43,  1.45s/it, lr=7e-5, step_loss=0.0044]Steps:  22%|██▏       | 5434/24850 [2:15:52<7:50:43,  1.45s/it, lr=7e-5, step_loss=0.00966]Steps:  22%|██▏       | 5435/24850 [2:15:54<7:51:22,  1.46s/it, lr=7e-5, step_loss=0.00966]Steps:  22%|██▏       | 5435/24850 [2:15:54<7:51:22,  1.46s/it, lr=7e-5, step_loss=0.00899]Steps:  22%|██▏       | 5436/24850 [2:15:55<7:49:35,  1.45s/it, lr=7e-5, step_loss=0.00899]Steps:  22%|██▏       | 5436/24850 [2:15:55<7:49:35,  1.45s/it, lr=7e-5, step_loss=0.143]  Steps:  22%|██▏       | 5437/24850 [2:15:57<7:50:43,  1.45s/it, lr=7e-5, step_loss=0.143]Steps:  22%|██▏       | 5437/24850 [2:15:57<7:50:43,  1.45s/it, lr=7e-5, step_loss=0.0211]Steps:  22%|██▏       | 5438/24850 [2:15:58<7:51:51,  1.46s/it, lr=7e-5, step_loss=0.0211]Steps:  22%|██▏       | 5438/24850 [2:15:58<7:51:51,  1.46s/it, lr=7e-5, step_loss=0.0135]Steps:  22%|██▏       | 5439/24850 [2:15:59<7:52:58,  1.46s/it, lr=7e-5, step_loss=0.0135]Steps:  22%|██▏       | 5439/24850 [2:15:59<7:52:58,  1.46s/it, lr=7e-5, step_loss=0.00228]Steps:  22%|██▏       | 5440/24850 [2:16:02<9:15:58,  1.72s/it, lr=7e-5, step_loss=0.00228]Steps:  22%|██▏       | 5440/24850 [2:16:02<9:15:58,  1.72s/it, lr=7e-5, step_loss=0.0559] Steps:  22%|██▏       | 5441/24850 [2:16:03<8:49:46,  1.64s/it, lr=7e-5, step_loss=0.0559]Steps:  22%|██▏       | 5441/24850 [2:16:03<8:49:46,  1.64s/it, lr=7e-5, step_loss=0.00447]Steps:  22%|██▏       | 5442/24850 [2:16:05<8:32:53,  1.59s/it, lr=7e-5, step_loss=0.00447]Steps:  22%|██▏       | 5442/24850 [2:16:05<8:32:53,  1.59s/it, lr=7e-5, step_loss=0.0222] Steps:  22%|██▏       | 5443/24850 [2:16:06<8:19:41,  1.54s/it, lr=7e-5, step_loss=0.0222]Steps:  22%|██▏       | 5443/24850 [2:16:06<8:19:41,  1.54s/it, lr=7e-5, step_loss=0.0178]Steps:  22%|██▏       | 5444/24850 [2:16:08<8:10:42,  1.52s/it, lr=7e-5, step_loss=0.0178]Steps:  22%|██▏       | 5444/24850 [2:16:08<8:10:42,  1.52s/it, lr=7e-5, step_loss=0.0416]Steps:  22%|██▏       | 5445/24850 [2:16:09<8:04:51,  1.50s/it, lr=7e-5, step_loss=0.0416]Steps:  22%|██▏       | 5445/24850 [2:16:09<8:04:51,  1.50s/it, lr=7e-5, step_loss=0.0328]Steps:  22%|██▏       | 5446/24850 [2:16:11<8:16:17,  1.53s/it, lr=7e-5, step_loss=0.0328]Steps:  22%|██▏       | 5446/24850 [2:16:11<8:16:17,  1.53s/it, lr=7e-5, step_loss=0.0068]Steps:  22%|██▏       | 5447/24850 [2:16:12<8:08:56,  1.51s/it, lr=7e-5, step_loss=0.0068]Steps:  22%|██▏       | 5447/24850 [2:16:12<8:08:56,  1.51s/it, lr=7e-5, step_loss=0.0173]Steps:  22%|██▏       | 5448/24850 [2:16:14<8:07:58,  1.51s/it, lr=7e-5, step_loss=0.0173]Steps:  22%|██▏       | 5448/24850 [2:16:14<8:07:58,  1.51s/it, lr=7e-5, step_loss=0.0128]Steps:  22%|██▏       | 5449/24850 [2:16:15<8:02:07,  1.49s/it, lr=7e-5, step_loss=0.0128]Steps:  22%|██▏       | 5449/24850 [2:16:15<8:02:07,  1.49s/it, lr=7e-5, step_loss=0.0294]Steps:  22%|██▏       | 5450/24850 [2:16:17<7:59:46,  1.48s/it, lr=7e-5, step_loss=0.0294]Steps:  22%|██▏       | 5450/24850 [2:16:17<7:59:46,  1.48s/it, lr=7e-5, step_loss=0.0454]Steps:  22%|██▏       | 5451/24850 [2:16:18<7:58:22,  1.48s/it, lr=7e-5, step_loss=0.0454]Steps:  22%|██▏       | 5451/24850 [2:16:18<7:58:22,  1.48s/it, lr=7e-5, step_loss=0.0122]Steps:  22%|██▏       | 5452/24850 [2:16:19<7:55:09,  1.47s/it, lr=7e-5, step_loss=0.0122]Steps:  22%|██▏       | 5452/24850 [2:16:19<7:55:09,  1.47s/it, lr=7e-5, step_loss=0.00876]torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
Steps:  22%|██▏       | 5453/24850 [2:16:21<7:52:50,  1.46s/it, lr=7e-5, step_loss=0.00876]Steps:  22%|██▏       | 5453/24850 [2:16:21<7:52:50,  1.46s/it, lr=7e-5, step_loss=0.00757]Steps:  22%|██▏       | 5454/24850 [2:16:22<7:52:47,  1.46s/it, lr=7e-5, step_loss=0.00757]Steps:  22%|██▏       | 5454/24850 [2:16:22<7:52:47,  1.46s/it, lr=7e-5, step_loss=0.0579] Steps:  22%|██▏       | 5455/24850 [2:16:24<7:51:39,  1.46s/it, lr=7e-5, step_loss=0.0579]Steps:  22%|██▏       | 5455/24850 [2:16:24<7:51:39,  1.46s/it, lr=7e-5, step_loss=0.0198]Steps:  22%|██▏       | 5456/24850 [2:16:25<7:52:04,  1.46s/it, lr=7e-5, step_loss=0.0198]Steps:  22%|██▏       | 5456/24850 [2:16:25<7:52:04,  1.46s/it, lr=7e-5, step_loss=0.0142]Steps:  22%|██▏       | 5457/24850 [2:16:27<7:51:23,  1.46s/it, lr=7e-5, step_loss=0.0142]Steps:  22%|██▏       | 5457/24850 [2:16:27<7:51:23,  1.46s/it, lr=7e-5, step_loss=0.0492]Steps:  22%|██▏       | 5458/24850 [2:16:28<7:51:59,  1.46s/it, lr=7e-5, step_loss=0.0492]Steps:  22%|██▏       | 5458/24850 [2:16:28<7:51:59,  1.46s/it, lr=7e-5, step_loss=0.00176]Steps:  22%|██▏       | 5459/24850 [2:16:30<7:52:34,  1.46s/it, lr=7e-5, step_loss=0.00176]Steps:  22%|██▏       | 5459/24850 [2:16:30<7:52:34,  1.46s/it, lr=7e-5, step_loss=0.0384] Steps:  22%|██▏       | 5460/24850 [2:16:31<7:50:08,  1.45s/it, lr=7e-5, step_loss=0.0384]Steps:  22%|██▏       | 5460/24850 [2:16:31<7:50:08,  1.45s/it, lr=7e-5, step_loss=9.59e-5]Steps:  22%|██▏       | 5461/24850 [2:16:33<7:50:39,  1.46s/it, lr=7e-5, step_loss=9.59e-5]Steps:  22%|██▏       | 5461/24850 [2:16:33<7:50:39,  1.46s/it, lr=7e-5, step_loss=0.00614]Steps:  22%|██▏       | 5462/24850 [2:16:34<7:50:26,  1.46s/it, lr=7e-5, step_loss=0.00614]Steps:  22%|██▏       | 5462/24850 [2:16:34<7:50:26,  1.46s/it, lr=7e-5, step_loss=0.0157] Steps:  22%|██▏       | 5463/24850 [2:16:36<7:51:50,  1.46s/it, lr=7e-5, step_loss=0.0157]Steps:  22%|██▏       | 5463/24850 [2:16:36<7:51:50,  1.46s/it, lr=7e-5, step_loss=0.012] Steps:  22%|██▏       | 5464/24850 [2:16:37<7:52:58,  1.46s/it, lr=7e-5, step_loss=0.012]Steps:  22%|██▏       | 5464/24850 [2:16:37<7:52:58,  1.46s/it, lr=7e-5, step_loss=0.0783]Steps:  22%|██▏       | 5465/24850 [2:16:38<7:51:52,  1.46s/it, lr=7e-5, step_loss=0.0783]Steps:  22%|██▏       | 5465/24850 [2:16:38<7:51:52,  1.46s/it, lr=7e-5, step_loss=0.0678]Steps:  22%|██▏       | 5466/24850 [2:16:40<7:51:52,  1.46s/it, lr=7e-5, step_loss=0.0678]Steps:  22%|██▏       | 5466/24850 [2:16:40<7:51:52,  1.46s/it, lr=7e-5, step_loss=0.0153]Steps:  22%|██▏       | 5467/24850 [2:16:41<7:52:15,  1.46s/it, lr=7e-5, step_loss=0.0153]Steps:  22%|██▏       | 5467/24850 [2:16:41<7:52:15,  1.46s/it, lr=7e-5, step_loss=0.0864]Steps:  22%|██▏       | 5468/24850 [2:16:43<7:51:06,  1.46s/it, lr=7e-5, step_loss=0.0864]Steps:  22%|██▏       | 5468/24850 [2:16:43<7:51:06,  1.46s/it, lr=7e-5, step_loss=0.0175]Steps:  22%|██▏       | 5469/24850 [2:16:44<7:52:01,  1.46s/it, lr=7e-5, step_loss=0.0175]Steps:  22%|██▏       | 5469/24850 [2:16:44<7:52:01,  1.46s/it, lr=7e-5, step_loss=0.00777]Steps:  22%|██▏       | 5470/24850 [2:16:46<7:51:36,  1.46s/it, lr=7e-5, step_loss=0.00777]Steps:  22%|██▏       | 5470/24850 [2:16:46<7:51:36,  1.46s/it, lr=7e-5, step_loss=0.00417]Steps:  22%|██▏       | 5471/24850 [2:16:47<7:51:24,  1.46s/it, lr=7e-5, step_loss=0.00417]Steps:  22%|██▏       | 5471/24850 [2:16:47<7:51:24,  1.46s/it, lr=7e-5, step_loss=0.00271]Steps:  22%|██▏       | 5472/24850 [2:16:49<7:51:49,  1.46s/it, lr=7e-5, step_loss=0.00271]Steps:  22%|██▏       | 5472/24850 [2:16:49<7:51:49,  1.46s/it, lr=7e-5, step_loss=0.0915] Steps:  22%|██▏       | 5473/24850 [2:16:50<7:50:53,  1.46s/it, lr=7e-5, step_loss=0.0915]Steps:  22%|██▏       | 5473/24850 [2:16:50<7:50:53,  1.46s/it, lr=7e-5, step_loss=0.0808]Steps:  22%|██▏       | 5474/24850 [2:16:52<7:49:14,  1.45s/it, lr=7e-5, step_loss=0.0808]Steps:  22%|██▏       | 5474/24850 [2:16:52<7:49:14,  1.45s/it, lr=7e-5, step_loss=0.0222]Steps:  22%|██▏       | 5475/24850 [2:16:53<7:50:23,  1.46s/it, lr=7e-5, step_loss=0.0222]Steps:  22%|██▏       | 5475/24850 [2:16:53<7:50:23,  1.46s/it, lr=7e-5, step_loss=0.0296]Steps:  22%|██▏       | 5476/24850 [2:16:54<7:49:47,  1.45s/it, lr=7e-5, step_loss=0.0296]Steps:  22%|██▏       | 5476/24850 [2:16:54<7:49:47,  1.45s/it, lr=7e-5, step_loss=0.0247]Steps:  22%|██▏       | 5477/24850 [2:16:56<7:49:06,  1.45s/it, lr=7e-5, step_loss=0.0247]Steps:  22%|██▏       | 5477/24850 [2:16:56<7:49:06,  1.45s/it, lr=7e-5, step_loss=0.00505]Steps:  22%|██▏       | 5478/24850 [2:16:57<7:50:19,  1.46s/it, lr=7e-5, step_loss=0.00505]Steps:  22%|██▏       | 5478/24850 [2:16:57<7:50:19,  1.46s/it, lr=7e-5, step_loss=0.0196] Steps:  22%|██▏       | 5479/24850 [2:16:59<7:50:09,  1.46s/it, lr=7e-5, step_loss=0.0196]Steps:  22%|██▏       | 5479/24850 [2:16:59<7:50:09,  1.46s/it, lr=7e-5, step_loss=0.0387](512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512)Steps:  22%|██▏       | 5480/24850 [2:17:00<7:50:24,  1.46s/it, lr=7e-5, step_loss=0.0387]Steps:  22%|██▏       | 5480/24850 [2:17:00<7:50:24,  1.46s/it, lr=7e-5, step_loss=0.0444]Steps:  22%|██▏       | 5481/24850 [2:17:02<7:49:41,  1.45s/it, lr=7e-5, step_loss=0.0444]Steps:  22%|██▏       | 5481/24850 [2:17:02<7:49:41,  1.45s/it, lr=7e-5, step_loss=0.0371]Steps:  22%|██▏       | 5482/24850 [2:17:03<7:50:14,  1.46s/it, lr=7e-5, step_loss=0.0371]Steps:  22%|██▏       | 5482/24850 [2:17:03<7:50:14,  1.46s/it, lr=7e-5, step_loss=0.0293]Steps:  22%|██▏       | 5483/24850 [2:17:05<7:50:25,  1.46s/it, lr=7e-5, step_loss=0.0293]Steps:  22%|██▏       | 5483/24850 [2:17:05<7:50:25,  1.46s/it, lr=7e-5, step_loss=0.0926]Steps:  22%|██▏       | 5484/24850 [2:17:06<7:50:20,  1.46s/it, lr=7e-5, step_loss=0.0926]Steps:  22%|██▏       | 5484/24850 [2:17:06<7:50:20,  1.46s/it, lr=7e-5, step_loss=0.0164]Steps:  22%|██▏       | 5485/24850 [2:17:08<7:51:05,  1.46s/it, lr=7e-5, step_loss=0.0164]Steps:  22%|██▏       | 5485/24850 [2:17:08<7:51:05,  1.46s/it, lr=7e-5, step_loss=0.028] Steps:  22%|██▏       | 5486/24850 [2:17:09<7:50:33,  1.46s/it, lr=7e-5, step_loss=0.028]Steps:  22%|██▏       | 5486/24850 [2:17:09<7:50:33,  1.46s/it, lr=7e-5, step_loss=0.00334]Steps:  22%|██▏       | 5487/24850 [2:17:10<7:49:01,  1.45s/it, lr=7e-5, step_loss=0.00334]Steps:  22%|██▏       | 5487/24850 [2:17:10<7:49:01,  1.45s/it, lr=7e-5, step_loss=0.0139] Steps:  22%|██▏       | 5488/24850 [2:17:12<7:47:38,  1.45s/it, lr=7e-5, step_loss=0.0139]Steps:  22%|██▏       | 5488/24850 [2:17:12<7:47:38,  1.45s/it, lr=7e-5, step_loss=0.00044]Steps:  22%|██▏       | 5489/24850 [2:17:13<7:47:59,  1.45s/it, lr=7e-5, step_loss=0.00044]04/12/2024 12:27:22 - INFO - accelerate.accelerator - Saving current state to /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-5500
Configuration saved in /root/autodl-tmp/output_var_unproj_tanks2/all/subset_all/input_3/train/class6/checkpoint-5500/unet/config.json
 torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 8, 8])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
(512, 512) torch.Size([4, 3, 1, 16, 16])
use_small_mask  mask shape: torch.Size([12, 4, 64, 64])
Traceback (most recent call last):
  File "/root/autodl-tmp/ViewDiff/viewdiff/train_pix2pix.py", line 1070, in <module>
    tyro.cli(train_and_test)
  File "/root/autodl-tmp/instructpix2pix/lib/python3.8/site-packages/tyro/_cli.py", line 177, in cli
    output = _cli_impl(
  File "/root/autodl-tmp/instructpix2pix/lib/python3.8/site-packages/tyro/_cli.py", line 431, in _cli_impl
    out, consumed_keywords = _calling.call_from_args(
  File "/root/autodl-tmp/instructpix2pix/lib/python3.8/site-packages/tyro/_calling.py", line 217, in call_from_args
    return unwrapped_f(*positional_args, **kwargs), consumed_keywords  # type: ignore
  File "/root/autodl-tmp/ViewDiff/viewdiff/train_pix2pix.py", line 402, in train_and_test
    save_checkpoint(finetune_config, accelerator, logger, global_step)
  File "/root/autodl-tmp/ViewDiff/viewdiff/train_util.py", line 809, in save_checkpoint
    accelerator.save_state(save_path)
  File "/root/autodl-tmp/instructpix2pix/lib/python3.8/site-packages/accelerate/accelerator.py", line 2793, in save_state
    hook(self._models, weights, output_dir)
  File "/root/autodl-tmp/ViewDiff/viewdiff/train_util.py", line 406, in save_model_hook
    model.save_pretrained(out_dir)
  File "/root/autodl-tmp/instructpix2pix/lib/python3.8/site-packages/diffusers/models/modeling_utils.py", line 361, in save_pretrained
    safetensors.torch.save_file(
  File "/root/autodl-tmp/instructpix2pix/lib/python3.8/site-packages/safetensors/torch.py", line 281, in save_file
    serialize_file(_flatten(tensors), filename, metadata=metadata)
safetensors_rust.SafetensorError: Error while serializing: IoError(Os { code: 28, kind: StorageFull, message: "No space left on device" })
Steps:  22%|██▏       | 5489/24850 [2:17:28<8:04:53,  1.50s/it, lr=7e-5, step_loss=0.00044]Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/runpy.py", line 194, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "/root/miniconda3/lib/python3.8/runpy.py", line 87, in _run_code
    exec(code, run_globals)
  File "/root/autodl-tmp/instructpix2pix/lib/python3.8/site-packages/accelerate/commands/launch.py", line 996, in <module>
    main()
  File "/root/autodl-tmp/instructpix2pix/lib/python3.8/site-packages/accelerate/commands/launch.py", line 992, in main
    launch_command(args)
  File "/root/autodl-tmp/instructpix2pix/lib/python3.8/site-packages/accelerate/commands/launch.py", line 986, in launch_command
    simple_launcher(args)
  File "/root/autodl-tmp/instructpix2pix/lib/python3.8/site-packages/accelerate/commands/launch.py", line 628, in simple_launcher
    raise subprocess.CalledProcessError(returncode=process.returncode, cmd=cmd)
subprocess.CalledProcessError: Command '['/root/autodl-tmp/instructpix2pix/bin/python', '/root/autodl-tmp/ViewDiff/viewdiff/train_pix2pix.py', '--finetune-config.io.pretrained_model_name_or_path', 'timbrooks/instruct-pix2pix', '--finetune-config.io.output_dir', '/root/autodl-tmp/output_var_unproj_tanks2', '--finetune-config.io.resume_from_checkpoint', 'latest', '--finetune-config.io.experiment_name', 'class6', '--finetune-config.training.mixed_precision', 'bf16', '--finetune-config.training.dataloader_num_workers', '8', '--finetune-config.training.num_train_epochs', '50', '--finetune-config.training.train_batch_size', '4', '--finetune-config.training.dreambooth_prior_preservation_loss_weight', '-1', '--finetune_config.training.noise_prediction_type', 'epsilon', '--finetune_config.training.prob_images_not_noisy', '0.25', '--finetune_config.training.max_num_images_not_noisy', '2', '--finetune_config.training.validation_epochs', '1', '--finetune_config.training.dreambooth_prior_preservation_every_nth', '-1', '--finetune-config.optimizer.learning_rate', '7e-5', '--finetune-config.optimizer.vol_rend_learning_rate', '1e-3', '--finetune-config.optimizer.vol_rend_adam_weight_decay', '0.0', '--finetune-config.optimizer.gradient_accumulation_steps', '1', '--finetune-config.optimizer.max_grad_norm', '5e-3', '--finetune-config.cross_frame_attention.to_k_other_frames', '2', '--finetune-config.cross_frame_attention.random_others', '--finetune-config.cross_frame_attention.with_self_attention', '--finetune-config.cross_frame_attention.use_temb_cond', '--finetune-config.cross_frame_attention.mode', 'pretrained', '--finetune-config.cross_frame_attention.n_cfa_down_blocks', '1', '--finetune-config.cross_frame_attention.n_cfa_up_blocks', '1', '--finetune-config.cross_frame_attention.unproj_reproj_mode', 'with_unproj_cfa', '--finetune-config.cross_frame_attention.num_3d_layers', '1', '--finetune-config.cross_frame_attention.dim_3d_latent', '16', '--finetune-config.cross_frame_attention.dim_3d_grid', '64', '--finetune-config.cross_frame_attention.n_novel_images', '0', '--finetune-config.cross_frame_attention.vol_rend_proj_in_mode', 'multiple', '--finetune-config.cross_frame_attention.vol_rend_proj_out_mode', 'multiple', '--finetune-config.cross_frame_attention.vol_rend_aggregator_mode', 'ibrnet', '--finetune-config.cross_frame_attention.last_layer_mode', 'no_residual_connection', '--finetune_config.cross_frame_attention.vol_rend_model_background', '--finetune_config.cross_frame_attention.vol_rend_background_grid_percentage', '0.5', '--finetune-config.model.pose_cond_mode', 'sa-ca', '--finetune-config.model.pose_cond_coord_space', 'absolute', '--finetune-config.model.pose_cond_lora_rank', '64', '--finetune-config.model.n_input_images', '3', '--dataset-config.root-dir', '/root/autodl-tmp/tankandtemples', '--dataset-config.threshold', '0.8', '--dataset-config.split', 'advanced', '--dataset-config.img_wh', '512', '--dataset-config.debug', '0', '--dataset-config.dataset_id', 'tanks', '--dataset-config.batch.image-width', '512', '--dataset-config.batch.image-height', '512', '--validation-dataset-config.debug', '0', '--validation-dataset-config.root-dir', '/root/autodl-tmp/tankandtemples', '--validation-dataset-config.split', 'intermediate', '--validation-dataset-config.threshold', '0.8', '--validation-dataset-config.dataset_id', 'tanks', '--validation-dataset-config.img_wh', '512', '--validation-dataset-config.batch.image-width', '512', '--validation-dataset-config.batch.image-height', '512']' returned non-zero exit status 1.
